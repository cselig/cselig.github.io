{"data":{"allFile":{"nodes":[{"fields":{"contents":"import React, {useState, useEffect} from \"react\";\n\nimport boogiemanSam from './data/boogieman_sam.json';\nimport ridealong from './data/ridealong.json';\n\nconst DATA_MAP = {\n  'boogieman_sam': boogiemanSam,\n  'ridealong': ridealong,\n}\n\nconst DEFAULT_SONG_TITLE = 'Click to edit title';\n\nconst k = {\n  svg_height: 400,\n  svg_width: 700,\n  grid_cell_size: 15,\n  colors: [\n    // https://m1.material.io/style/color.html#color-color-palette\n    // 800, 400, 100\n    ['#283593', '#5C6BC0', '#C5CAE9'], // blue\n    ['#C62828', '#EF5350', '#FFCDD2'], // red\n    ['#2E7D32', '#66BB6A','#C8E6C9'], // green\n  ],\n  color_picker_circle_radius: 20,\n};\nk.x_transform = k.grid_cell_size * 7;\nk.y_transform = k.grid_cell_size * 4\n\nconst Axes = () => {\n  return (\n    <g className=\"axes\">\n      <line\n        x1={k.x_transform} y1={0}\n        x2={k.x_transform} y2={k.svg_height}\n        stroke=\"black\" strokeWidth=\"3px\"\n      ></line>\n      <line\n        x1={0} y1={k.y_transform}\n        x2={k.svg_width} y2={k.y_transform}\n        stroke=\"black\" strokeWidth=\"3px\"\n      >\n      </line>\n  </g>\n  );\n}\n\nconst GridLines = () => {\n  let lines = [];\n  // vertical\n  for (let i = 0; i < k.svg_width; i += k.grid_cell_size) {\n    lines.push(\n      <line\n        x1={i} x2={i}\n        y1={0} y2={k.svg_height}\n        key={`vertical${i}`}\n        stroke=\"#F5F5F5\" strokeWidth=\"1px\"\n      ></line>\n    )\n  }\n  // horizontal\n  for (let i = 0; i < k.svg_height; i += k.grid_cell_size) {\n    lines.push(\n      <line\n        x1={0} x2={k.svg_width}\n        y1={i} y2={i}\n        key={`horizontal${i}`}\n        stroke=\"#F5F5F5\" strokeWidth=\"1px\"\n      ></line>\n    )\n  }\n  return <g className=\"grid-lines\">{lines}</g>;\n}\n\nconst Cells = ({cells, setCells, sections, instruments, mouseClicked, setMouseClicked, activeColor, interactable}) => {\n  let maxX = sections.reduce((total, section) => total + section.length, 0) * k.grid_cell_size;\n  let maxY = instruments.length * 4 * k.grid_cell_size;\n  let cellSvgs = [];\n  for (const [cellId, color] of Object.entries(cells)) {\n    const [i, j] = cellId.split(':');\n    const [x, y] = [j * k.grid_cell_size, i * k.grid_cell_size];\n    const [gridX, gridY] = [x - k.x_transform, y - k.y_transform];\n    const isPaintable = maxX > 0 && maxY > 0 && gridX >= 0 && gridY >= 0 && gridX < maxX && gridY < maxY;\n\n    const colorCell = () => {\n      const newCells = deepcopy(cells);\n      newCells[cellId] = activeColor || 'none';\n      setCells(newCells);\n    }\n    const mouseOver = () => {\n      if (isPaintable && mouseClicked && interactable) {\n        colorCell(cellId);\n      }\n    }\n    const mouseDown = () => {\n      if (!isPaintable || !interactable) return;\n      colorCell();\n      setMouseClicked(true);\n    }\n    const mouseUp = () => {\n      if (interactable) setMouseClicked(false);\n    }\n    cellSvgs.push(\n      <rect\n        className=\"cell\" key={cellId}\n        onMouseOver={mouseOver} onMouseDown={mouseDown} onMouseUp={mouseUp}\n        onClick={() => console.log(\"click\", i, j)}\n        x={x} y={y}\n        fill={color}\n        height={k.grid_cell_size} width={k.grid_cell_size}\n        style={{pointerEvents: 'all', cursor: isPaintable ? 'pointer' : 'auto'}}\n      ></rect>\n    )\n  }\n  return cellSvgs;\n}\n\nconst SectionLabels = ({sections, shortenSection, lengthenSection, addSection, interactable, changeSectionName}) => {\n  const lines = [];\n  const labels = [];\n  let i = 0;\n  for (const {section, length} of sections) {\n    i += length;\n    const editSection = () => {\n      if (!interactable) return;\n      const newName = window.prompt(\"Edit section name:\", section);\n      if (!newName) return;\n      changeSectionName(section, newName);\n    }\n    lines.push(\n      <line\n        x1={i * k.grid_cell_size} x2={i * k.grid_cell_size}\n        y1={-1 * k.y_transform} y2={k.svg_height}\n        key={section}\n        stroke=\"black\" strokeWidth=\"1px\"\n      ></line>\n    );\n    labels.push(\n      <text\n        x={(i - length / 2) * k.grid_cell_size} y={-1 * k.grid_cell_size}\n        fill=\"black\" style={{textAnchor: 'middle', dominantBaseline: 'middle', cursor: 'pointer'}}\n        key={section} onClick={editSection}\n      >{section}</text>\n    );\n    if (interactable) {\n      // Shorten button\n      labels.push(\n        <text\n          x={(i - length / 2) * k.grid_cell_size - 10} y={-2.5 * k.grid_cell_size}\n          fill=\"black\" key={section + \"Shorten\"} onClick={() => shortenSection(section)}\n          style={{textAnchor: 'middle', dominantBaseline: 'middle', cursor: 'pointer'}}\n        >-</text>\n      );\n      // Lengthen button\n      labels.push(\n        <text\n          x={(i - length / 2) * k.grid_cell_size + 10} y={-2.5 * k.grid_cell_size}\n          fill=\"black\" key={section + \"Lengthen\"} onClick={() => lengthenSection(section)}\n          style={{textAnchor: 'middle', dominantBaseline: 'middle', cursor: 'pointer'}}\n        >+</text>\n      );\n    }\n  }\n  const addSectionButton = <text\n      onClick={addSection}\n      x={(i + 0.5) * k.grid_cell_size} y={-2 * k.grid_cell_size}\n      style={{textAnchor: 'start', dominantBaseline: 'middle', cursor: 'pointer'}}\n    >+ Section</text>\n  return <g className=\"sections\">\n    <g>{lines}</g>\n    <g>{labels}</g>\n    {interactable && addSectionButton}\n  </g>;\n}\n\nconst InstrumentLabels = ({instruments, addInstrument, interactable, changeInstrumentName}) => {\n  const lines = [];\n  const labels = [];\n  for (let i = 0; i < instruments.length; i++) {\n    const editInstrument = () => {\n      if (!interactable) return;\n      const newName = window.prompt(\"Edit instrument name:\", instruments[i].instrument);\n      if (!newName) return;\n      changeInstrumentName(instruments[i].instrument, newName);\n    }\n    lines.push(\n      <line\n        x1={-1 * k.x_transform} x2={k.svg_width - k.x_transform}\n        y1={(i + 1) * 4 * k.grid_cell_size} y2={(i + 1) * 4 * k.grid_cell_size}\n        stroke=\"black\" strokeWidth=\"1px\"\n        key={instruments[i].instrument}\n      ></line>\n    );\n    labels.push(\n      <text\n        x={-1 * k.x_transform / 2} y={(i * 4 + 2) * k.grid_cell_size}\n        fill=\"black\" style={{textAnchor: 'middle', dominantBaseline: 'middle', cursor: 'pointer'}}\n        key={instruments[i].instrument}\n        onClick={editInstrument}\n      >{instruments[i].instrument}</text>\n    )\n  }\n  const addInstrumentButton = <text\n    x={-1 * k.x_transform / 2} y={(instruments.length * 4 + 2) * k.grid_cell_size}\n    onClick={addInstrument}\n    fill=\"black\" style={{textAnchor: 'middle', dominantBaseline: 'middle', cursor: 'pointer'}}\n  >+ Instrument</text>;\n  return <g className=\"instruments\">\n    <g>{lines}</g>\n    <g>{labels}</g>\n    {interactable && addInstrumentButton}\n  </g>;\n}\n\nconst ColorPicker = ({activeColor, onColorClick}) => {\n  const circles = [];\n  for (let i = 0; i < k.colors.length; i++) {\n    for (let j = 0; j < k.colors[i].length; j++) {\n      const cx = (j + 1) * k.color_picker_circle_radius * 1.5;\n      const cy = (i + 1) * k.color_picker_circle_radius * 1.5;\n      circles.push(\n        <circle\n          r={k.color_picker_circle_radius} style={{cursor: 'pointer'}}\n          cx={cx} cy={cy}\n          fill={k.colors[i][j]} key={k.colors[i][j]} onClick={() => onColorClick(k.colors[i][j])}\n          pointerEvents=\"all\"\n        ></circle>\n      );\n      circles.push(\n        <circle\n          r={k.color_picker_circle_radius} style={{cursor: 'pointer'}}\n          cx={cx} cy={cy}\n          fill=\"none\" stroke=\"black\"\n          strokeWidth={activeColor === k.colors[i][j] ? 5 : 1}\n          key={k.colors[i][j] + \"Ring\"}\n          onClick={() => onColorClick(k.colors[i][j])}\n        ></circle>\n      );\n    }\n  }\n  return <g>{circles}</g>;\n}\n\nconst SongTitle = ({title, setTitle, interactable}) => {\n  const editTitle = () => {\n    if (!interactable) return;\n    let newTitle;\n    if (title === DEFAULT_SONG_TITLE) {\n      newTitle = window.prompt(\"Enter song title:\");\n    } else {\n      newTitle = window.prompt(\"Edit song title:\", title);\n    }\n    if (!newTitle) return;\n    setTitle(newTitle);\n  }\n\n  return <text\n    onClick={editTitle}\n    x={k.x_transform / 2}\n    y={k.y_transform / 2}\n    style={{\n      textAnchor: 'middle',\n      dominantBaseline: 'middle',\n      cursor: 'pointer',\n      fontSize: '12',\n    }}\n  >{title}</text>;\n}\n\nconst SaveLoadControls = ({copy, load}) => {\n  const loadFromClipboard = async () => {\n    const text = await navigator.clipboard.readText();\n    let data;\n    try {\n      data = JSON.parse(text);\n    } catch (error) {\n      console.error(\"Couldn't parse JSON\");\n      return;\n    }\n    load(data);\n  }\n  return <div>\n    <button onClick={copy}>Copy data</button>\n    <button onClick={loadFromClipboard}>Load data from clipboard</button>\n  </div>\n}\n\nfunction deepcopy(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nfunction createCells() {\n  let cells = {};\n  for (let i = 0; i * k.grid_cell_size < k.svg_height; i++) {\n    for (let j = 0; j * k.grid_cell_size < k.svg_width; j++) {\n      const cellId = `${i}:${j}`;\n      cells[cellId] = 'none';\n    }\n  }\n  return cells;\n}\n\nconst BandParts = ({dataFile}) => {\n  const [instruments, setInstruments] = useState([]);\n  // [{length: int, section: string}]\n  const [sections, setSections] = useState([]);\n  const [title, setTitle] = useState(DEFAULT_SONG_TITLE);\n  const [activeColor, setActiveColor] = useState(null);\n  // { cellId: {}}, cellId: {i, j}\n  const [cells, setCells] = useState(createCells);\n  const [mouseClicked, setMouseClicked] = useState(false);\n  const [interactable, setInteractable] = useState(true);\n\n  const copy = () => {\n    const data = {title: title, sections: sections, instruments: instruments, cells: cells};\n    navigator.clipboard.writeText(JSON.stringify(data));\n  }\n\n  const load = (data) => {\n    setInstruments(data.instruments);\n    setSections(data.sections);\n    setCells(data.cells);\n    setTitle(data.title);\n  }\n\n  useEffect(() => {\n    if (dataFile) {\n      if (!DATA_MAP.hasOwnProperty(dataFile)) {\n        console.error(`Data file not found: ${dataFile}`);\n        return;\n      }\n      load(DATA_MAP[dataFile]);\n      setInteractable(false);\n    }\n  }, []);\n\n  const onColorClick = (color) => {\n    if (activeColor === color) {\n      setActiveColor('none');\n    } else {\n      setActiveColor(color);\n    }\n  }\n\n  const modifySectionLength = (section, diff) => {\n    const newSections = [];\n    for (const s of sections) {\n      const newS = deepcopy(s);\n      if (newS.section === section) {\n        newS.length += diff;\n      }\n      if (newS.length > 0) {\n        newSections.push(newS)\n      }\n    }\n    setSections(newSections);\n  }\n\n  const shortenSection = (section) => {\n    modifySectionLength(section, -1);\n  }\n\n  const lengthenSection = (section) => {\n    modifySectionLength(section, 1);\n  }\n\n  const sectionNameExists = (name) => {\n    for (const s of sections) {\n      if (s.section === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  const addSection = () => {\n    const sectionName = window.prompt(\"Enter section name:\");\n    if (!sectionName) return;\n    if (sectionNameExists(sectionName)) {\n      window.alert(\"Section name already exists!\");\n      return;\n    }\n    const newSections = deepcopy(sections);\n    newSections.push({section: sectionName, length: 4});\n    setSections(newSections);\n  }\n\n  const changeSectionName = (oldName, newName) => {\n    if (oldName === newName) return;\n    if (sectionNameExists(newName)) {\n      window.alert(\"Section name already exists!\");\n      return;\n    }\n    const newSections = deepcopy(sections);\n    for (let i = 0; i < newSections.length; i++) {\n      if (newSections[i].section === oldName) {\n        newSections[i].section = newName;\n      }\n    }\n    setSections(newSections);\n  }\n\n  const instrumentNameExists = (name) => {\n    for (const i of instruments) {\n      if (i.instrument === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  const addInstrument = () => {\n    const instrumentName = window.prompt(\"Enter instrument name:\");\n    if (!instrumentName) return;\n    if (instrumentNameExists(instrumentName)) {\n      window.alert(\"Instrument name already exists!\");\n      return;\n    }\n    const newInstruments = deepcopy(instruments);\n    newInstruments.push({instrument: instrumentName, sections: {}});\n    setInstruments(newInstruments);\n  }\n\n  const changeInstrumentName = (oldName, newName) => {\n    if (oldName === newName) return;\n    if (instrumentNameExists(newName)) {\n      window.alert(\"Instrument name already exists!\");\n      return;\n    }\n    const newInstruments = deepcopy(instruments);\n    for (let i = 0; i < newInstruments.length; i++) {\n      if (newInstruments[i].instrument === oldName) {\n        newInstruments[i].instrument = newName;\n      }\n    }\n    setInstruments(newInstruments);\n  }\n\n  return (\n    <div>\n      <svg height={k.svg_height} width={k.svg_width}\n        style={{border: '1px solid lightgrey'}}\n      >\n        <Cells\n          cells={cells}\n          setCells={setCells}\n          sections={sections}\n          instruments={instruments}\n          mouseClicked={mouseClicked}\n          setMouseClicked={setMouseClicked}\n          activeColor={activeColor}\n          interactable={interactable} />\n        <GridLines/>\n        <g style={{transform: `translate(${k.x_transform}px, ${k.y_transform}px)`}}>\n          <SectionLabels\n            sections={sections}\n            shortenSection={shortenSection}\n            lengthenSection={lengthenSection}\n            addSection={addSection}\n            interactable={interactable}\n            changeSectionName={changeSectionName} />\n          <InstrumentLabels\n            instruments={instruments}\n            addInstrument={addInstrument}\n            interactable={interactable}\n            changeInstrumentName={changeInstrumentName} />\n        </g>\n        <Axes/>\n        <SongTitle title={title} setTitle={setTitle} interactable={interactable} />\n      </svg>\n      {interactable &&\n        <>\n          <svg height={150} width={300}>\n            <ColorPicker activeColor={activeColor} onColorClick={onColorClick} />\n          </svg>\n          <SaveLoadControls\n            instruments={instruments}\n            sections={sections}\n            title={title}\n            copy={copy}\n            load={load} />\n        </>\n      }\n    </div>\n  );\n}\n\nexport default BandParts\n"},"relativePath":"band_parts/band_parts.jsx"},{"fields":{"contents":"---\ntitle: Band Notation\ndate: 2023-01-31\n---\n\nimport BandParts from \"./band_parts\"\n\nI often think about song structure visually, and this is an attempt at a such a notation tool.\nInstruments are along the Y-axis and on the X-axis are the sections of the song. Color distinguishes\ndifferent musical material: different colors are different themes, and shades represent\nvariations.\n\nBelow are notated one of my current favorite [songs](https://open.spotify.com/track/4FAxHgFeG23Igvx8jvBUtB?si=e99611e92deb4768)\nalong with a song from my band called Ridealong.\n\n<BandParts dataFile=\"boogieman_sam\" />\n\n<BandParts dataFile=\"ridealong\" />\n\nAnd here is the tool.\n\n<BandParts />\n"},"relativePath":"band_parts/band_parts.mdx"},{"fields":{"contents":"---\ntitle: Data-driven Chord Progressions\ndate: 2020-10-25\nexcerpt: What makes a good chord progression?\ntopic: music\n---\n\nimport ChordPicker from \"./chord_picker\"\n\nWhenever I listen to music I like trying to identify chord progressions and find common (or uncommon) patterns and changes.\nI recently came across the [McGill Billboard dataset](https://ddmal.music.mcgill.ca/research/The_McGill_Billboard_Project_(Chord_Analysis_Dataset)/),\nwhich is a set of Billboard Top 40 songs from the 60s, 70s, and 80s annotated with structure and chord information. This led me to build\na little widget for creating 4-chord progressions.\n\n## Chord Bigrams\n\nThe chord picker is based on chord bigrams, which are just pairs of chords that appear one after the other in a song. For example, if I have this 4-chord\nprogression:\n\n**1maj** -> **5maj** -> **6min** -> **4maj**\n\nThen I can extract the following three chord bigrams:\n- **1maj** -> **5maj**\n- **5maj** -> **6min**\n- **6min** -> **4maj**\n\nIf this progression repeated there would also be the **4maj** -> **1maj** bigram.\n\n## Counting Bigrams\n\nIn the widget, chords are sorted by the frequency of the chord bigram with that chord and the previous one. So if I chose **1maj** as my\nfirst chord, the list of possibilities for chord 2 would be sorted based on how often a chord is observed to come after **1maj** in the dataset.\n(This is true for all but the first chord, where a small set of \"seed\" chords are listed.)\n\nThis means if you're picking chords at the top of the list, your progression will sound more conventional. If you're picking chords\nnear the bottom of the list your progression could sound more distinctive, but it could also sound more disjointed.\n\nIf you don't have a great ear for chord progressions I suggest first plugging the progression above (which appears in [quite a few songs](https://www.youtube.com/watch?v=HTYrkOZ5nCs))\ninto the widget below, hearing how it sounds, and then trying to modify it.\n\nYou can check out the completed code [here](https://github.com/cselig/cselig.github.io/blob/develop/content/blog/chord_data/chord_picker.jsx).\n\n<ChordPicker />\n"},"relativePath":"chord_data/chord_data.mdx"},{"fields":{"contents":"import React, { useState } from \"react\"\nimport data from \"./chord_to_successors.json\"\nimport { CSSTransition } from \"react-transition-group\"\nimport loadable from '@loadable/component'\n\n// use loadable component because this library crashes when imported server-side\nconst MIDISounds = loadable(() => import('midi-sounds-react'))\n\n\nconst TONIC = 50\nconst TEMPO = 120\n\nconst CHORD_SHAPES = {\n  \"maj\":  [0, 4, 7],\n  \"maj7\": [0, 4, 7, 10],\n  \"min\":  [0, 3, 7],\n  \"sus\":  [0, 5, 7],\n  \"dim\":  [0, 3, 6, 9],\n  \"aug\":  [0, 4, 8],\n}\nlet CHORDS = {}\nfor (const [name, notes] of Object.entries(CHORD_SHAPES)) {\n  CHORDS[name] = notes.map(note => note + TONIC)\n}\nconst OFFSETS = {\n  \"b7\": -2,\n  \"7\":  -1,\n  \"1\":  0,\n  \"b2\": 1,\n  \"2\":  2,\n  \"b3\": 3,\n  \"3\":  4,\n  \"4\":  5,\n  \"5\":  7,\n  \"b6\": 8,\n  \"6\":  9,\n}\n\nconst TRANSITION_TIME = 300 // ms\n\nconst ChordList = ({chords, onSelect, inProp}) => {\n  const [height, setHeight] = useState(0)\n  return (\n    <CSSTransition\n      in={inProp}\n      appear={true}\n      timeout={1000}\n      onEntering={() => setHeight(40 * chords.length)}\n      onExit={() => setHeight(0)}\n    >\n      <div className=\"chords\" style={{height: height}}>\n        {/* chords *should* be unique */}\n        {chords.map((chord, i) => {\n          const [startOpacity, endOpacity] = [1, 0.3]\n          let opacity\n          if (chords.length === 2) {\n            // hack - don't want a gradient for picking the first chord\n            opacity = 1\n          } else {\n            opacity = startOpacity + (i / chords.length) * (endOpacity - startOpacity)\n          }\n\n          return (\n            <p\n              className=\"chord\"\n              chord={chord}\n              onClick={onSelect}\n              style={{opacity: opacity}}\n              key={chord}\n            >{chord}</p>)\n        })}\n      </div>\n    </CSSTransition>\n  )\n}\n\nconst NextChordPicker = ({data, onSelect, inProp}) => {\n  let chords = []\n  for (const chord in data) {\n    chords.push([chord, data[chord]])\n  }\n  chords.sort((a, b) => b[1] - a[1])\n  chords = chords.map((x) => x[0])\n  return (\n    <div className=\"next-chord-picker\">\n      <ChordList chords={chords} onSelect={onSelect} inProp={inProp} />\n    </div>\n  )\n}\n\nconst FirstChordPicker = ({onSelect, inProp}) => (\n  <div className=\"first-chord-picker\">\n    <ChordList chords={[\"1maj\", \"1min\", \"2min\", \"4maj\", \"5maj\"]} onSelect={onSelect} inProp={inProp} />\n  </div>\n)\n\nconst ProgressionDisplay = ({chords, active, onSelect, listInProp}) => {\n  chords = [...chords]\n  const active_index = chords.length\n  const pad = 4 - chords.length\n  for (let i = 0; i < pad; i++) { chords.push(\"?\") }\n\n  return (\n    <div className=\"progression-display\">\n      {chords.map((chord, i) => {\n        return (\n          <div key={i}>\n            <p className={\"progression-chord \" + (chord !== \"?\" ? \"selected\" : \"\")}>{chord}</p>\n            {active_index === 0 && i === 0 && active &&\n              <FirstChordPicker onSelect={onSelect} inProp={listInProp} />}\n            {active_index === i && i > 0 && active &&\n              <NextChordPicker data={data[chords[i - 1]]} onSelect={onSelect} inProp={listInProp} />}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nconst Text = ({clickable, text, onClick, inProp}) => {\n  return (\n    <CSSTransition\n      in={inProp}\n      appear={true}\n      timeout={TRANSITION_TIME}\n    >\n      <div\n        className={\"text \" + (clickable ? \"clickable\" : \"\")}\n        onClick={onClick}\n      >\n        <p>{text}</p>\n      </div>\n    </CSSTransition>\n  )\n}\n\nclass ChordPicker extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      chords: [],\n      started: false,\n      textInProp: true,\n      listInProp: false\n    }\n  }\n\n  componentWillUnmount() {\n    this.midiSounds.stopPlayLoop()\n  }\n\n  render() {\n    const resetChords = () => {\n      this.midiSounds.stopPlayLoop()\n      this.setState({chords: [], textInProp: true})\n    }\n\n    const chordToNotes = (chord) => {\n      let offsetLen\n      if (chord.startsWith(\"b\")) {\n        offsetLen = 2\n      } else {\n        offsetLen = 1\n      }\n      const offset = chord.substring(0, offsetLen)\n      const shape = chord.substring(offsetLen, chord.length)\n      return CHORDS[shape].map(x => x + OFFSETS[offset])\n    }\n\n    const playChords = () => {\n      if (this.state.chords.length == 0) return\n      const beat = this.state.chords.map((chord) => [\n        [], // drums\n        [\n          [3, chordToNotes(chord), 1]\n        ]\n      ])\n      this.midiSounds.startPlayLoop(beat, TEMPO, 1)\n    }\n\n    const selectChord = (e) => {\n      const chord = e.target.getAttribute(\"chord\")\n      this.setState({listInProp: false})\n      if (this.state.chords.length === 3) {\n        this.setState({textInProp: false})\n      }\n\n      setTimeout(\n        () => {\n          this.setState(\n            (oldState) => { return {chords: oldState.chords.concat([chord]), listInProp: true} },\n            () => {\n              if (this.midiSounds.loopStarted) {\n                this.midiSounds.stopPlayLoop()\n                playChords()\n              }\n            }\n          )\n        },\n        TRANSITION_TIME\n      )\n\n    }\n\n    const clear_enabled = this.state.chords.length > 0\n    const play_enabled = this.state.chords.length === 4\n    const stop_enabled = this.state.chords.length === 4\n\n    let text\n    if (!this.state.started) {\n      text = \"Click to start!\"\n    } else if (this.state.chords.length === 0) {\n      text = \"Pick your first chord\"\n    } else if (this.state.chords.length < 4) {\n      text = \"Pick your next chord\"\n    } else {\n      text = \"\"\n    }\n    let textOnClick\n    if (this.state.started) {\n      textOnClick = undefined\n    } else {\n      textOnClick = () => {\n        this.setState({textInProp: false})\n        setTimeout(\n          () => this.setState({started: true, textInProp: true, listInProp: true}),\n          TRANSITION_TIME\n        )\n      }\n    }\n\n    return (\n      <div id=\"chord-picker\">\n        <MIDISounds\n          ref={(ref) => (this.midiSounds = ref)}\n          appElementName=\"___gatsby\"\n          instruments={[3]}\n        />\n\n        <Text\n          text={text}\n          onClick={textOnClick}\n          clickable={!this.state.started}\n          inProp={this.state.textInProp}\n        />\n\n        <div className=\"controls\">\n          <span\n            className={\"button material-icons-outlined \" + (clear_enabled ? \"enabled\" : \"disabled\")}\n            onClick={clear_enabled ? resetChords : undefined}>clear</span>\n          <span\n            className={\"button material-icons-outlined \" + (play_enabled ? \"enabled\" : \"disabled\")}\n            onClick={play_enabled ? playChords : undefined}>play_arrow</span>\n          <span\n            className={\"button material-icons-outlined \" + (stop_enabled ? \"enabled\" : \"disabled\")}\n            onClick={stop_enabled ? () => this.midiSounds.stopPlayLoop() : undefined}>stop</span>\n        </div>\n\n        <ProgressionDisplay\n          chords={this.state.chords}\n          active={this.state.started}\n          onSelect={selectChord}\n          listInProp={this.state.listInProp}\n        />\n      </div>\n    )\n  }\n}\n\nexport default ChordPicker"},"relativePath":"chord_data/chord_picker.jsx"},{"fields":{"contents":"{\"6min\": {\"1maj\": 577, \"2min\": 500, \"4maj\": 1244, \"5maj\": 608, \"b7maj\": 121, \"2maj7\": 127, \"3min\": 375, \"2maj\": 118}, \"1maj\": {\"6min\": 1855, \"4maj\": 5220, \"1maj7\": 460, \"5maj7\": 671, \"b7maj\": 1133, \"5maj\": 2591, \"4sus\": 101, \"3min\": 428, \"2min\": 1370, \"5min\": 210, \"1min\": 129, \"1sus\": 288, \"5sus\": 259, \"4min\": 233, \"2maj\": 258, \"b6maj\": 162, \"b3maj\": 282, \"2maj7\": 119}, \"2maj\": {\"5maj\": 244, \"1maj\": 210}, \"5maj\": {\"1maj\": 3828, \"4maj\": 2165, \"2min\": 321, \"6min\": 557, \"1min\": 178, \"b7maj\": 167, \"2maj\": 166, \"5maj7\": 156, \"3min\": 208}, \"4maj\": {\"1maj\": 5748, \"b7maj\": 440, \"3min\": 432, \"5maj\": 3277, \"5maj7\": 398, \"2min\": 486, \"1maj7\": 212, \"6min\": 428, \"4min\": 212, \"b3maj\": 189, \"b6maj\": 103, \"1min\": 290, \"5sus\": 459, \"4sus\": 106}, \"3maj7\": {\"6min\": 176}, \"2min\": {\"5maj7\": 464, \"3min\": 255, \"1maj\": 771, \"4maj\": 613, \"5maj\": 623, \"6min\": 136, \"5sus\": 348, \"b7maj\": 169}, \"5maj7\": {\"1maj\": 1595, \"1min\": 401, \"1maj7\": 150, \"4maj7\": 165, \"4maj\": 180}, \"1maj7\": {\"4maj\": 566, \"4maj7\": 311, \"1maj\": 116, \"5maj7\": 208}, \"b7maj\": {\"4maj\": 1158, \"1min\": 886, \"1maj\": 817, \"b3maj\": 182, \"b6maj\": 425, \"4min\": 128, \"5min\": 142}, \"3min\": {\"2min\": 415, \"6min\": 390, \"4maj\": 509, \"5maj\": 100, \"1maj\": 115}, \"4sus\": {\"4maj\": 147}, \"5min\": {\"1maj\": 185, \"4min\": 132, \"4maj\": 148, \"1min\": 225, \"b6maj\": 174}, \"4maj7\": {\"1maj7\": 386, \"1maj\": 146, \"1min\": 175}, \"1min\": {\"b6maj\": 685, \"4min\": 519, \"4maj\": 377, \"b7maj\": 680, \"b3maj\": 270, \"5min\": 232, \"4maj7\": 172}, \"b6maj\": {\"b7maj\": 865, \"b2maj\": 100, \"5min\": 106, \"5maj\": 103, \"1min\": 256, \"5maj7\": 205, \"b3maj\": 221}, \"4min\": {\"b3maj\": 132, \"b6maj\": 187, \"5min\": 212, \"1min\": 309, \"1maj\": 345}, \"b3maj\": {\"b6maj\": 226, \"b7maj\": 320, \"1min\": 157, \"4min\": 126, \"4maj\": 389}, \"1sus\": {\"1maj\": 392}, \"5sus\": {\"1maj\": 737, \"4maj\": 128, \"5maj7\": 141, \"5maj\": 265}, \"6maj\": {\"2maj\": 107}, \"b7maj5\": {\"1maj5\": 115}, \"1maj5\": {\"b7maj5\": 146}, \"6maj7\": {\"2min\": 147}, \"2maj7\": {\"5maj7\": 177}, \"4maj1\": {\"1maj1\": 142}, \"1maj1\": {\"4maj1\": 155, \"b7maj1\": 143}, \"b7maj1\": {\"1maj1\": 162}}"},"relativePath":"chord_data/chord_to_successors.json"},{"fields":{"contents":"/* description: Parses the COOL language. */\n\n/* lexical grammar */\n%lex\n%%\n\n\\s+ /* skip whitespace */\n\n// puncuation\n';' return ';'\n'{' return '{'\n'}' return '}'\n'(' return '('\n')' return ')'\n',' return ','\n\n// operators\n'+' return '+'\n'-' return '-'\n'=' return '='\n\n// keywords\n\"def\" return 'DEF'\n\"if\" return 'IF'\n\"then\" return 'THEN'\n\"else\" return 'ELSE'\n\"fi\" return 'FI'\n\n// identifiers:\n[A-Z][a-zA-Z0-9_]* return 'FID' // function IDs start with uppercase\n[a-z][a-zA-Z0-9_]* return 'VID' // variable IDs start with lowercase\n\n// literals\n[0-9]+  return 'INTEGER'\n\n<<EOF>> return 'EOF'\n\n\n/lex\n\n// enable extended BNF syntax (for repetition operators)\n%ebnf\n\n/* operator associations and precedence */\n%left '+' '-'\n%left '='\n\n// start symbol\n%start program\n\n%% /* language grammar */\n\nprogram\n  : function+ EOF\n    {\n      return {nodeType: 'program', functions: $1};\n    }\n  ;\n\nfunction\n  : DEF FID '(' params? ')' '{' expr '}'\n    {\n      $$ = {nodeType: 'function', body: $7, fid: $2, params: $4 || []}\n    }\n  ;\n\nparams\n  : VID comma_params*\n    {\n      $$ = [$1].concat($2)\n    }\n  ;\n\ncomma_params\n  : ',' VID\n    {\n      $$ = $2\n    }\n  ;\n\nexpr\n  // Function invocation\n  : FID '(' args? ')'\n    {\n      $$ = {\n        nodeType: 'expression',\n        expressionType: 'invocation',\n        args: $3 || [],\n        fid: $1,\n      }\n    }\n  | IF expr '=' expr THEN expr ELSE expr FI\n    {\n      $$ = {\n        nodeType: 'expression',\n        expressionType: 'if',\n        predicateLHS: $2,\n        predicateRHS: $4,\n        trueBranch: $6,\n        falseBranch: $8,\n      }\n    }\n  | expr '+' expr\n    {\n      $$ = {nodeType: 'expression', expressionType: '+', lhs: $1, rhs: $3}\n    }\n  | expr '-' expr\n    {\n      $$ = {nodeType: 'expression', expressionType: '-', lhs: $1, rhs: $3}\n    }\n  | VID\n    {\n      $$ = {nodeType: 'expression', expressionType: 'vid', value: $1}\n    }\n  | INTEGER\n    {\n      $$ = {nodeType: 'expression', expressionType: 'literal', value: $1}\n    }\n  ;\n\nargs\n  : expr comma_args*\n    {\n      $$ = [$1].concat($2)\n    }\n  ;\n\ncomma_args\n  : ',' expr\n    {\n      $$ = $2\n    }\n  ;\n"},"relativePath":"compiler/calculator.jison"},{"fields":{"contents":"import { getParentFunction } from \"./parse_tree_utils\"\n\ntype Code = Array<[string, object]>\n\nlet code: Code = [] // [[line, nodeId]]\n\nexport default function generateCode(parseTreeRoot) {\n  code = []\n  for (const node of parseTreeRoot.functions) {\n    generateFunctionCode(node)\n  }\n  return code\n}\n\nfunction generateFunctionCode(node) {\n  code.push([`label: ${node.fid}`, node])\n  code.push([`mv $fp $sp`, node])\n  code.push([`sw $ra 0($sp)`, node])\n  code.push([`addiu $sp $sp -4`, node])\n  generateExpressionCode(node.body)\n  code.push([`lw $ra 4($sp)`, node])\n  const nParams = node.params.length\n  const nStackWords = 2 + nParams // fp + ra + params\n  code.push([`addiu $sp $sp ${nStackWords * 4}`, node])\n  code.push([`lw $fp 0($sp)`, node])\n  code.push([`jr $ra`, node])\n}\n\nfunction generateExpressionCode(node) {\n  switch (node.expressionType) {\n    case \"invocation\":\n      code.push([`sw $fp 0($sp)`, node])\n      code.push([`addiu $sp $sp -4`, node])\n      for (let i = node.args.length - 1; i >= 0; i--) {\n        generateExpressionCode(node.args[i])\n        code.push([`sw $a0 0($sp)`, node])\n        code.push([`addiu $sp $sp -4`, node])\n      }\n      code.push([`jal ${node.fid}`, node])\n      break;\n    case \"+\":\n      generateExpressionCode(node.lhs)\n      code.push([`sw $a0 0($sp)`, node])\n      code.push([`addiu $sp $sp -4`, node])\n      generateExpressionCode(node.rhs)\n      code.push([`lw $t1 4($sp)`, node])\n      code.push([`add $a0 $a0 $t1`, node])\n      code.push([`addiu $sp $sp 4`, node])\n      break\n    case \"-\":\n      generateExpressionCode(node.lhs)\n      code.push([`sw $a0 0($sp)`, node])\n      code.push([`addiu $sp $sp -4`, node])\n      generateExpressionCode(node.rhs)\n      code.push([`lw $t1 4($sp)`, node])\n      code.push([`sub $a0 $a0 $t1`, node])\n      code.push([`addiu $sp $sp 4`, node])\n      break\n    case \"literal\":\n      code.push([`li $a0 ${node.value}`, node])\n      break\n    case \"vid\":\n      const z = getParentFunction(node).params.indexOf(node.value) * 4\n      code.push([`lw $a0 ${z}($fp)`, node])\n      break\n    case \"if\":\n      generateExpressionCode(node.predicateLHS)\n      code.push([`sw $a0 0($sp)`, node])\n      code.push([`addiu $sp $sp -4`, node])\n      generateExpressionCode(node.predicateRHS)\n      code.push([`lw $t1 4($sp)`, node])\n      code.push([`addiu $sp $sp 4`, node])\n      code.push([`beq $a0 $t1 true_branch`, node])\n      code.push([`label: false_branch`, node])\n      generateExpressionCode(node.falseBranch)\n      code.push([`b end_if`, node])\n      code.push([`label: true_branch`, node])\n      generateExpressionCode(node.trueBranch)\n      code.push([`label: end_if`, node])\n  }\n}\n"},"relativePath":"compiler/calculator_code_generation.ts"},{"fields":{"contents":"export const EXAMPLE2 = `def SumTo(x) {\n  if x = 0 then\n    0\n  else\n    x + SumTo(x - 1)\n  fi\n}\n\ndef Main() {\n  SumTo(10)\n}`\n\nexport const EXAMPLE3 = `def Fun(x, x) {\n  if a = 1 then 1 else 2 fi\n}\n\ndef Fun() {\n  Fun(1)\n}`\n\nexport const EXAMPLE4 = `def Main() {\n  1 + 2\n}`\n"},"relativePath":"compiler/calculator_examples.ts"},{"fields":{"contents":"import Lexer from \"lex\"\nimport { Token, TokenClass } from \"./shared\"\n\nexport function buildCalculatorLexer(): Lexer {\n  let i = 0\n\n  const tokenFactory = (tokenClass: TokenClass) => {\n    const f = (lexeme) => {\n      const token = {\n        class: tokenClass,\n        start: i,\n        length: lexeme.length,\n        lexeme: lexeme,\n      }\n      i += lexeme.length\n      if (token.class == TokenClass.UNDEFINED) return undefined\n      return token\n    }\n    return f\n  }\n\n  const f = () => {\n    return (new Lexer)\n      .addRule(/def|if|then|else|fi/, tokenFactory(TokenClass.KEYWORD))\n      // An integer is a string of digit.\n      .addRule(/\\d+/, tokenFactory(TokenClass.INTEGER))\n      .addRule(/[a-z][a-zA-Z0-9_]*/, tokenFactory(TokenClass.VID))\n      .addRule(/[A-Z][a-zA-Z0-9_]*/, tokenFactory(TokenClass.FID))\n      .addRule(/\\+|\\-|=/, tokenFactory(TokenClass.OPERATOR))\n      .addRule(/[;{}(),]/, tokenFactory(TokenClass.PUNCTUATION))\n      .addRule(/\\s/, tokenFactory(TokenClass.WHITESPACE))\n      .addRule(/./, tokenFactory(TokenClass.UNDEFINED))\n  }\n  return f()\n}\n\nexport function lex(input: string): Array<Token> {\n  const lexer = buildCalculatorLexer()\n  lexer.input = input\n\n  let result = []\n  while (true) {\n    const token = lexer.lex()\n    if (token == undefined) break\n    result.push(token)\n  }\n  return result\n}\n"},"relativePath":"compiler/calculator_lexer.ts"},{"fields":{"contents":"import { addIds, doublyLinkTree } from \"./parse_tree_utils\"\n\nexport function parse(input: string) {\n  if (input == \"\") return\n\n  const parser = require('./generated_calculator_parser').parser\n\n  try {\n    const parseTree = parser.parse(input)\n    addIds(parseTree)\n    doublyLinkTree(parseTree)\n    return parseTree\n  } catch (e) {\n    console.log(\"%c\" + e.message, \"color: red\")\n    return {error: e.message}\n  }\n}\n"},"relativePath":"compiler/calculator_parser.ts"},{"fields":{"contents":"import { children } from \"./parse_tree_utils\"\n\ntype StaticAnalysisError = [string, string]\n\nexport function checkFunctionNamesUnique(parseTree): StaticAnalysisError {\n  let fNames = new Set()\n  for (const { fid, id } of parseTree.functions) {\n    if (fNames.has(fid)) {\n      return [`Function ${fid} redefined`, id]\n    } else {\n      fNames.add(fid)\n    }\n  }\n  return [\"\", null]\n}\n\nexport function checkMainExists(parseTree): StaticAnalysisError {\n  for (const node of parseTree.functions) {\n    if (node.fid === 'Main') {\n      if (node.params.length > 0) {\n        return [\"`Main` function must take no params.\", node.id]\n      } else {\n        return ['', null]\n      }\n    }\n  }\n  return [\"Function `Main` must be defined\", null]\n}\n\nexport function checkFunctionsInvokedProperly(parseTreeRoot): StaticAnalysisError {\n  function helper(node, root) {\n    if (node.nodeType === 'expression' && node.expressionType === 'invocation') {\n      const nExpected = getFunctionParams(root, node.fid).length\n      const nActual = node.args.length\n      if (nExpected !== nActual) {\n        const error = `Function ${node.fid} called with wrong number of arguments (expected ${nExpected}, got ${nActual})`\n        return [error, node.id]\n      }\n    }\n\n    for (const child of children(node)) {\n      const error = helper(child, root)\n      if (error != undefined) return error\n    }\n  }\n\n  return helper(parseTreeRoot, parseTreeRoot) || [\"\", null]\n}\n\nfunction getFunctionParams(parseTreeRoot, fid) {\n  for (const node of parseTreeRoot.functions) {\n    if (node.fid === fid) {\n      return node.params\n    }\n  }\n}\n\nexport function checkDuplicateParams(parseTree): StaticAnalysisError {\n  for (const { fid, params, id } of parseTree.functions) {\n    let seen = new Set()\n    for (const p of params) {\n      if (seen.has(p)) {\n        return [`Function ${fid} has duplicate param ${p}`, id]\n      } else {\n        seen.add(p)\n      }\n    }\n  }\n  return [\"\", null]\n}\n\nexport function checkNoUndefinedVars(parseTree): StaticAnalysisError {\n  function helper(node, params: string[]) {\n    if (node.nodeType === \"expression\" && node.expressionType == \"vid\") {\n      if (!params.includes(node.value)) {\n        return [`Variable ${node.value} is undefined`, node.id]\n      }\n    }\n    for (const child of children(node)) {\n      const error = helper(child, params)\n      if (error != undefined) return error\n    }\n  }\n\n  for (const node of parseTree.functions) {\n    const error = helper(node, node.params)\n    if (error != undefined) return error\n  }\n  return [\"\", null]\n}\n"},"relativePath":"compiler/calculator_static_analysis.ts"},{"fields":{"contents":"import React from \"react\"\n\nimport { isAncestor } from \"./parse_tree_utils\"\nimport generateCode from \"./calculator_code_generation\"\n\nexport default function CodeGenerationUIContainer({ parseTree, focusedNodeId, setFocusedNodeId }) {\n  if (parseTree.error) {\n    return <></>\n  }\n  const code = generateCode(parseTree)\n  return (\n    <div\n      id=\"code-generation-ui-container\"\n      className={(focusedNodeId === null ? \"\" : \"focused\")}>\n      <h2>Generated Machine Code</h2>\n      <pre>\n        {code.map(([line, node], i) => {\n          const className =\n            (isAncestor(node, focusedNodeId) ? \"focused \" : \"\") +\n            (line.startsWith(\"label:\") ? \"label \" : \"\")\n          return (\n            <span\n              className={className}\n              onMouseOver={() => setFocusedNodeId(node.id)}\n              onMouseOut={() => setFocusedNodeId(null)}\n              key={i}>\n                {line + \"\\n\"}\n            </span>\n          )\n        })}\n      </pre>\n    </div>\n  )\n}\n"},"relativePath":"compiler/code_generation_ui_container.jsx"},{"fields":{"contents":"---\ntitle: Visual Compiler\ndate: 2021-12-09\n---\n\nAfter taking [this](https://www.edx.org/course/compilers) online compilers class, I thought it would be\nfun to build compiler for a simple language that displays output of some intermediate compiler phases.\n\n## A Simple Calculator Language\n\nThe language I chose to implement is a simple one that only supports functions, if-then-else expressions,\naddition, subtraction, and integer constants. The body of each function is a single expression.\n\n## Parsing\n\nThe first step of the compiler is lexing and parsing which I implemented with [Jison](https://gerhobbelt.github.io/jison/docs/).\nJison and similar tools like Bison and Yacc require you to specify the grammar of your language.\n\nA specification for the calculator language would look something like:\n- A **program** is made of one or more **functions**\n- Each **function** may have parameters, and has a single **expression** for the body\n- An **expression** can be **addition**, subtraction, if-then-else, function invocation, parameter ID, or a constant.\n- An **addition expression** has left-hand and right-hand side expressions.\n- And so on...\n\nJison takes this specification and returns a parse tree.\n\n## Static Analysis\n\nStatic analysis is run over the parse tree to ensure that the program follows some rules of the language.\n\nThe rules are:\n- There should be one function named `Main` that takes no parameters\n- Function names should be unique\n- Parameter names for each function should be unique\n- Functions should be invoked with the correct number of arguments\n- All variables in a function should refer to one of the function's parameters\n\nYou can click on the example \"Static Analysis Errors\" below to see a program that breaks some of these rules.\n\n## Code Generation\n\nCode generation is the final step of this compiler and runs via a recursive descent of the parse tree.\n\nCode generation targets the simple instruction set of [MIPS](https://en.wikipedia.org/wiki/MIPS_architecture).\nThe following registers are used:\n- `$a0`: the accumulator\n- `$t1`: for temporary results\n- `$sp`: the stack pointer\n  - Address of next unallocated location on stack kept here\n- `$fp`: the frame pointer\n  - Pointer to currently active stack frame\n- `$ra`: the return address\n\nEvaluating an expression will always leave the stack unchanged and the result of the expression in\n`$a0`, the accumulator register.\n\nAll code can be found [here](https://github.com/cselig/cselig.github.io/tree/develop/content/blog/compiler).\n\nimport RootUIContainer from \"./root_ui_container\"\n\n<RootUIContainer />\n"},"relativePath":"compiler/compiler.mdx"},{"fields":{"contents":"/* description: Parses the COOL language. */\n\n/* lexical grammar */\n%lex\n%%\n\n\\s+ /* skip whitespace */\n\n// puncuation\n';' return ';'\n'{' return '{'\n'}' return '}'\n'(' return '('\n')' return ')'\n':' return ':'\n',' return ','\n'@' return '@'\n'.' return '.'\n\n// operators\n'+' return '+'\n'-' return '-'\n'*' return \"*\"\n'/' return '/'\n'~' return '~'\n\"<-\" return '<-'\n'<' return '<'\n\"<=\" return '<='\n'=' return '='\n\n// keywords\n\"class\" return 'CLASS'\n\"inherits\" return 'INHERITS'\n\"if\" return 'IF'\n\"then\" return 'THEN'\n\"else\" return 'ELSE'\n\"fi\" return 'FI'\n\"while\" return 'WHILE'\n\"loop\" return 'LOOP'\n\"pool\" return 'POOL'\n\"let\" return 'LET'\n\"in\" return 'IN'\n\"case\" return 'CASE'\n\"of\" return 'OF'\n\"esac\" return 'ESAC'\n\"isvoid\" return 'ISVOID'\n\"new\" return 'NEW'\n\"not\" return 'NOT'\n\n// identifiers\n[A-Z][a-zA-Z0-9_]* return 'TYPE'\n[a-z][a-zA-Z0-9_]* return 'ID'\n\n// literals\n\\\".+\\\" return 'STRING'\n[0-9]+  return 'INTEGER'\n\"true\"  return 'TRUE'\n\"false\" return 'FALSE'\n// TODO: string\n\n<<EOF>> return 'EOF'\n\n\n/lex\n\n%{\nlet allClasses = []\n%}\n\n// enable extended BNF syntax (for repetition operators)\n%ebnf\n\n/* operator associations and precedence */\n// %nonassoc ';'\n%left '+' '-'\n%left '*' '/'\n\n// start symbol\n%start program\n\n%% /* language grammar */\n\nprogram\n  : (class ';')+ EOF\n    { \n      return {nodeType: 'program', classes: $1};\n    }\n  ;\n\nclass\n  : CLASS TYPE inherits? '{' (feature ';')* '}'\n    {\n      $$ = {\n        nodeType: 'class', className: $2, features: $5, type: $2,\n        classParent: $3,\n      }\n    }\n  ;\n\ninherits\n  : INHERITS TYPE\n    {\n      $$ = $2\n    }\n  ;\n\nfeature\n  // method\n  : ID '(' formal? comma_formal* ')' ':' TYPE '{' expr '}'\n    {\n      params = []\n      if ($3 != undefined) params.push($3)\n      params = params.concat($4)\n      $$ = {nodeType: 'method', name: $1, body: $9, params: params, returnType: $7}\n    }\n  // attribute\n  | formal assignmentExpr?\n    {\n      $$ = {\n        nodeType: 'attribute',\n        name: $1.name,\n        type: $1.type,\n        assignmentExpr: $2,\n      }\n    }\n  ;\n\ncomma_formal\n  : ',' formal\n    {\n      $$ = $2\n    }\n  ;\n\nformal\n  : ID ':' TYPE\n    {\n      $$ = {nodeType: 'formal', name: $1, type: $3}\n    }\n  ;\n\nexpr\n  : ID '<-' expr\n    {\n      console.log(\"VARIABLE INIT\")\n    }\n  // dispatch\n  | expr ('@' TYPE)? '.' ID '(' expr? (',' expr)* ')'\n  | ID '(' expr? (',' expr)* ')'\n  // if statement\n  | IF expr THEN expr ELSE expr FI\n    {\n      $$ = {nodeType: 'expression', expressionType: 'if'}\n    }\n  // while loop\n  | WHILE expr LOOP expr POOL\n  // block\n  | '{' (expr ';')+ '}'\n    {\n      $$ = {nodeType: 'expression', expressionType: 'block', body: $2}\n    }\n  // let\n  // TODO: multiple let variables\n  | LET ID ':' TYPE assignmentExpr? IN expr\n    {\n      console.log(\"LET:\", $1, $2, $3, $4, $5, $6, $7)\n      let variable = {name: $2, type: $4, assignmentExpr: $5}\n      $$ = {\n        nodeType: 'expression',\n        expressionType: 'let',\n        variables: [variable],\n        body: $7,\n      }\n    }\n  // should be => or <- below?\n  | CASE expr OF (ID ':' TYPE '=>' expr ';')+ ESAC\n  | NEW TYPE\n  | ISVOID expr\n  | expr '+' expr\n    {\n      $$ = {nodeType: 'expression', expressionType: 'operation', operator: '+', lhs: $1, rhs: $3}\n    }\n  | expr '-' expr\n  | expr '*' expr\n  | expr '/' expr\n  | '~' expr\n  | expr '<' expr\n  | expr '<=' expr\n  | expr '=' expr\n  | NOT expr\n  | '(' expr ')'\n  | ID\n    {\n      $$ = {nodeType: 'identifier', value: $1}\n    }\n  | STRING\n    {\n      $$ = {nodeType: 'literal', value: $1, type: 'String'}\n    }\n  | INTEGER\n    {\n      $$ = {nodeType: 'literal', value: $1, type: 'Int'}\n    }\n  | TRUE\n    {\n      $$ = {nodeType: 'literal', value: true, type: 'Bool'}\n    }\n  | FALSE\n    {\n      $$ = {nodeType: 'literal', value: false, type: 'Bool'}\n    }\n  ;\n\nassignmentExpr\n  : '<-' expr\n    {\n      $$ = $2\n    }\n  ;\n"},"relativePath":"compiler/cool.jison"},{"fields":{"contents":"export const EXAMPLE1 = `class Example1 {\n  sayHello(language: String) : Null {\n    if language = \"en\" then\n      print(\"Hello!\")\n    else\n      print(\"¡Hola!\")\n    fi\n  };\n};`\n\nexport const EXAMPLE2 = `class B {\n  s : String <- \"Hello\";\n\n  g (y: String, x: Int) : Int {\n    y.concat(s)\n  };\n\n  f (x: Int) : Int {\n    x + 1\n  };\n};\n\nclass A inherits B {\n  a : Int;\n\n  b : B <- new B;\n\n  f(x: Int) : Int {\n    x + a\n  };\n};`\n\nexport const EXAMPLE3 = `class A inherits C {};\n\nclass B inherits A {};\n\nclass C inherits B {};`\n\nexport const EXAMPLE4 = `class A {};\n\nclass A {};`\n\nexport const EXAMPLE5 = `class C {\n  s: String;\n\n  g(y: String, x: Int) : Int {\n    let z: String <- s.concat(y) in {\n      x + 1;\n    }\n  };\n};`"},"relativePath":"compiler/cool_examples.ts"},{"fields":{"contents":"import Lexer from \"lex\"\nimport { Token, TokenClass } from \"./shared\"\n\nexport function buildCoolLexer(): Lexer {\n  let i = 0\n  let comment = false\n\n  const tokenFactory = (tokenClass: TokenClass) => {\n    const f = (lexeme) => {\n      const token = {\n        class: comment ? TokenClass.COMMENT : tokenClass,\n        start: i,\n        length: lexeme.length,\n        lexeme: lexeme,\n      }\n      i += lexeme.length\n      if (token.class == TokenClass.UNDEFINED) return undefined\n      return token\n    }\n    return f\n  }\n\n  const f = () => {\n    return (new Lexer)\n      // A double dash starts a comment for the rest of the line.\n      .addRule(/--/, function(lexeme) {\n        comment = true\n        this.reject = true\n      })\n      // Anything between ** is a comment.\n      .addRule(/\\*[\\w\\s]*\\*/, tokenFactory(TokenClass.COMMENT))\n      .addRule(/class|inherits|if|then|else|fi|while|loop|pool|let|in|case|of|esac|isvoid|new|not/, tokenFactory(TokenClass.KEYWORD))\n      // This is a simplified COOL string (no escaped quotes).\n      .addRule(/\\\"[^\\\"]+\\\"/, tokenFactory(TokenClass.STRING))\n      // An integer is a string of digit.\n      .addRule(/\\d+/, tokenFactory(TokenClass.INTEGER))\n      // An identifier starts with a letter and can contain letters, numbers, and underscores.\n      .addRule(/[a-z][a-zA-Z0-9_]*/, tokenFactory(TokenClass.IDENTIFIER))\n      .addRule(/[A-Z][a-zA-Z0-9_]*/, tokenFactory(TokenClass.TYPE))\n      .addRule(/\\n/, (lexeme) => {\n        comment = false\n        return tokenFactory(TokenClass.WHITESPACE)(lexeme)\n      })\n      .addRule(/\\+|\\-|\\*|\\/|<-|=/, tokenFactory(TokenClass.OPERATOR))\n      .addRule(/[;{}():,.@]/, tokenFactory(TokenClass.PUNCTUATION))\n      .addRule(/\\s/, tokenFactory(TokenClass.WHITESPACE))\n      .addRule(/./, tokenFactory(TokenClass.UNDEFINED))\n  }\n  return f()\n}\n\n// Only returns token class\nexport function buildJisonCoolLexer() {\n  const lexer = buildCoolLexer()\n  const f = () => ({\n    setInput: (input) => lexer.input = input,\n    lex: () => {\n      const token = lexer.lex()\n      if (token == undefined) return token\n      return token.class\n    },\n  })\n  return f()\n}\n\nexport function lex(input: string): Array<Token> {\n  const lexer = buildCoolLexer()\n  lexer.input = input\n\n  let result = []\n  while (true) {\n    const token = lexer.lex()\n    if (token == undefined) break\n    result.push(token)\n  }\n  return result\n}\n"},"relativePath":"compiler/cool_lexer.ts"},{"fields":{"contents":"import { addIds, doublyLinkTree } from \"./parse_tree_utils\"\n\nexport function parse(input: string) {\n  if (input == \"\") return\n\n  const parser = require('./generated_parser').parser\n\n  try {\n    const parseTree = parser.parse(input)\n    addIds(parseTree)\n    doublyLinkTree(parseTree)\n    return parseTree\n  } catch (e) {\n    console.log(\"%c\" + e.message, \"color: red\")\n    return {error: e.message}\n  }\n}\n"},"relativePath":"compiler/cool_parser.ts"},{"fields":{"contents":"export function buildInheritanceGraph(parseTree) {\n  let graph = {} // { name: { id, parent, children } }\n\n  for (const c of parseTree.classes) {\n    graph[c.className] = {id: c.id}\n  }\n\n  let names = new Set() // add(), has()\n  for (const c of parseTree.classes) {\n    // Check name is not redefined.\n    if (names.has(c.className)) {\n      return [null, `Class ${c.className} redefined`]\n    }\n    names.add(c.className)\n\n    // Record parent/child relationship\n    if (c.classParent != undefined) {\n      graph[c.className].parent = c.classParent\n      if (graph[c.classParent].children == undefined) {\n        graph[c.classParent].children = []\n      }\n      graph[c.classParent].children.push(c.className)\n    }\n  }\n\n  if (hasCycle(graph)) {\n    return [null, \"Inheritance graph is cyclic.\"]\n  }\n\n  return [graph, \"\"]\n}\n\nfunction hasCycle(graph) {\n  let seen = new Set()\n  let stack = []\n\n  for (const [name, node] of Object.entries(graph)) {\n    if (node.children != undefined) {\n      seen.add(name)\n      for (const child of node.children) {\n        stack.push(child)\n      }\n    }\n  }\n\n  while (stack.length > 0) {\n    const className = stack.pop()\n    if (seen.has(className)) {\n      return true\n    }\n    if (graph[className].children != undefined) {\n      for (const child of graph[className].children) {\n        seen.add(child)\n        stack.push(child)\n      }\n    }\n  }\n\n  return false\n}\n\n// Type checking\n\nfunction createTypeCheckError(msg, nodeId) {\n  return {\n    errorType: \"Type check error\",\n    msg: msg,\n    nodeId: nodeId,\n  }\n}\n\nexport function freshTypeEnv() {\n  return {\n    vars: Array(), // [[name, type], ...]\n    methods: {}, // {name: [arg1Type, arg2Type, ... , returnType]}\n  }\n}\n\nfunction copy(typeEnv) {\n  let newTypeEnv = {\n    vars: [...typeEnv.vars],\n    methods: {},\n  }\n  Object.assign(newTypeEnv.methods, typeEnv.methods)\n  return newTypeEnv\n}\n\nfunction pushVariable(typeEnv, name, type) {\n  typeEnv.vars.push([name, type])\n}\n\nfunction popVariable(typeEnv) {\n  typeEnv.vars.pop()\n}\n\nfunction addMethod(typeEnv, m) {\n  let signature = []\n  for (const p of m.params) {\n    signature.push(p.type)\n  }\n  signature.push(m.returnType)\n  typeEnv.methods[m.name] = signature\n}\n\nfunction removeMethod(typeEnv, m) {\n  delete typeEnv.methods[m.name]\n}\n\nfunction lookupVariableType(typeEnv, name) {\n  const vars = typeEnv.vars\n  for (let i = vars.length - 1; i >= 0; i--) {\n    console.log(\"->>>>>>\", vars, i)\n    if (name === vars[i][0]) return vars[i][1]\n  }\n  return -1\n}\n\nexport function typeCheck(parseTreeNode, typeEnv) {\n  if (parseTreeNode == undefined) {\n    console.warn(\"undefined\"); return;\n  }\n  switch (parseTreeNode.nodeType) {\n    case \"program\":\n      console.log(\"->> checking program\")\n      for (const c of parseTreeNode.classes) {\n        typeCheck(c, typeEnv)\n      }\n      return \"PROGRAM\"\n    case \"class\":\n      console.log(\"->> checking class\", copy(typeEnv))\n      // type check attribute assignments\n      const attrs = parseTreeNode.features.filter(x => x.nodeType === \"attribute\")\n      // An attr can be used in another attr's assignment, so add to symbol table first.\n      for (const a of attrs) {\n        pushVariable(typeEnv, a.name, a.type)\n      }\n      for (const a of attrs) {\n        typeCheck(a, typeEnv)\n      }\n\n      // type check methods\n      const methods = parseTreeNode.features.filter(x => x.nodeType === \"method\")\n      for (const m of methods) {\n        addMethod(typeEnv, m)\n      }\n      for (const m of methods) {\n        typeCheck(m, typeEnv)\n      }\n\n      for (const _ of attrs) popVariable(typeEnv)\n      for (const m of methods) removeMethod(typeEnv, m)\n\n      return parseTreeNode.className\n    case \"attribute\":\n      console.log(\"->> checking attribute\", copy(typeEnv))\n      if (parseTreeNode.assignmentExpr != undefined) {\n        const assignmentType = typeCheck(parseTreeNode.assignmentExpr, typeEnv)\n        if (assignmentType !== parseTreeNode.type) {\n          throw createTypeCheckError(\n            `Type mismatch: ${parseTreeNode.type} and ${assignmentType}`,\n            parseTreeNode.id,\n          )\n        }\n      }\n      return\n    case \"method\":\n      console.log(\"->> checking method\", copy(typeEnv))\n      for (const p of parseTreeNode.params) {\n        pushVariable(typeEnv, p.name, p.type)\n      }\n      // TODO: check computed type against signature\n      const computedType = typeCheck(parseTreeNode.body, typeEnv)\n      if (computedType !== parseTreeNode.returnType) {\n        console.warn(`Return type does not match up for method: ${parseTreeNode.name}, ${computedType}, ${parseTreeNode.returnType}`)\n      }\n\n      for (const _ of parseTreeNode.params) popVariable(typeEnv)\n    case \"literal\":\n      return parseTreeNode.type\n    case \"expression\":\n      return typeCheckExpression(parseTreeNode, typeEnv)\n    case \"identifier\":\n      console.log(\"->> checking identifier\", copy(typeEnv))\n      const type = lookupVariableType(typeEnv, parseTreeNode.value)\n      if (type === -1) {\n        throw createTypeCheckError(\n          `Variable not in scope: ${parseTreeNode.value}`,\n          parseTreeNode.id,\n        )\n      }\n      return type\n  }\n}\n\nfunction typeCheckExpression(parseTreeNode, typeEnv) {\n  switch (parseTreeNode.expressionType) {\n    case \"operation\":\n      return typeCheckExpressionOperation(parseTreeNode, typeEnv)\n    case \"let\":\n      console.log(\"->> checking let\", copy(typeEnv))\n      // TODO: check assignments for let variables\n      // TODO: add to symbol table\n      for (const v of parseTreeNode.variables) {\n        pushVariable(typeEnv, v.name, v.type)\n      }\n      const computedType = typeCheck(parseTreeNode.body, typeEnv)\n      for (const _ of parseTreeNode.variables) {\n        popVariable(typeEnv)\n      }\n      return computedType\n    case \"block\":\n      console.log(\"->> checking block\", copy(typeEnv))\n      for (const e of parseTreeNode.body) {\n        // TODO: return type of last expression\n        typeCheck(e, typeEnv)\n      }\n      return\n  }\n}\n\nfunction typeCheckExpressionOperation(parseTreeNode, typeEnv) {\n  switch (parseTreeNode.operator) {\n    case '+':\n      console.log('->> checking plus operator', copy(typeEnv))\n      const lhsType = typeCheck(parseTreeNode.lhs, typeEnv)\n      const rhsType = typeCheck(parseTreeNode.rhs, typeEnv)\n      if (lhsType != 'Int') {\n        throw createTypeCheckError(\n          `Expected Int for operator +, got ${lhsType}`,\n          parseTreeNode.id,\n        )\n      } else if (rhsType != 'Int') {\n        throw createTypeCheckError(\n          `Expected Int for operator +, got ${rhsType}`,\n          parseTreeNode.id,\n        )\n      }\n      return\n  }\n}\n"},"relativePath":"compiler/cool_static_analysis.ts"},{"fields":{"contents":"./../../../node_modules/.bin/jison calculator.jison -o generated_calculator_parser.js\n"},"relativePath":"compiler/generate_parser.sh"},{"fields":{"contents":"/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar generated_calculator_parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[5,7],$V2=[11,19],$V3=[1,18],$V4=[1,20],$V5=[1,19],$V6=[1,21],$V7=[1,24],$V8=[1,25],$V9=[11,14,19,22,23,24,25,26,27];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"program\":3,\"program_repetition_plus0\":4,\"EOF\":5,\"function\":6,\"DEF\":7,\"FID\":8,\"(\":9,\"function_option0\":10,\")\":11,\"{\":12,\"expr\":13,\"}\":14,\"params\":15,\"VID\":16,\"params_repetition0\":17,\"comma_params\":18,\",\":19,\"expr_option0\":20,\"IF\":21,\"=\":22,\"THEN\":23,\"ELSE\":24,\"FI\":25,\"+\":26,\"-\":27,\"INTEGER\":28,\"args\":29,\"args_repetition0\":30,\"comma_args\":31,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",7:\"DEF\",8:\"FID\",9:\"(\",11:\")\",12:\"{\",14:\"}\",16:\"VID\",19:\",\",21:\"IF\",22:\"=\",23:\"THEN\",24:\"ELSE\",25:\"FI\",26:\"+\",27:\"-\",28:\"INTEGER\"},\nproductions_: [0,[3,2],[6,8],[15,2],[18,2],[13,4],[13,9],[13,3],[13,3],[13,1],[13,1],[29,2],[31,2],[4,1],[4,2],[10,0],[10,1],[17,0],[17,2],[20,0],[20,1],[30,0],[30,2]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n      return {nodeType: 'program', functions: $$[$0-1]};\n    \nbreak;\ncase 2:\n\n      this.$ = {nodeType: 'function', body: $$[$0-1], fid: $$[$0-6], params: $$[$0-4] || []}\n    \nbreak;\ncase 3: case 11:\n\n      this.$ = [$$[$0-1]].concat($$[$0])\n    \nbreak;\ncase 4: case 12:\n\n      this.$ = $$[$0]\n    \nbreak;\ncase 5:\n\n      this.$ = {\n        nodeType: 'expression',\n        expressionType: 'invocation',\n        args: $$[$0-1] || [],\n        fid: $$[$0-3],\n      }\n    \nbreak;\ncase 6:\n\n      this.$ = {\n        nodeType: 'expression',\n        expressionType: 'if',\n        predicateLHS: $$[$0-7],\n        predicateRHS: $$[$0-5],\n        trueBranch: $$[$0-3],\n        falseBranch: $$[$0-1],\n      }\n    \nbreak;\ncase 7:\n\n      this.$ = {nodeType: 'expression', expressionType: '+', lhs: $$[$0-2], rhs: $$[$0]}\n    \nbreak;\ncase 8:\n\n      this.$ = {nodeType: 'expression', expressionType: '-', lhs: $$[$0-2], rhs: $$[$0]}\n    \nbreak;\ncase 9:\n\n      this.$ = {nodeType: 'expression', expressionType: 'vid', value: $$[$0]}\n    \nbreak;\ncase 10:\n\n      this.$ = {nodeType: 'expression', expressionType: 'literal', value: $$[$0]}\n    \nbreak;\ncase 13:\nthis.$ = [$$[$0]];\nbreak;\ncase 14: case 18: case 22:\n$$[$0-1].push($$[$0]);\nbreak;\ncase 17: case 21:\nthis.$ = [];\nbreak;\n}\n},\ntable: [{3:1,4:2,6:3,7:$V0},{1:[3]},{5:[1,5],6:6,7:$V0},o($V1,[2,13]),{8:[1,7]},{1:[2,1]},o($V1,[2,14]),{9:[1,8]},{10:9,11:[2,15],15:10,16:[1,11]},{11:[1,12]},{11:[2,16]},o($V2,[2,17],{17:13}),{12:[1,14]},{11:[2,3],18:15,19:[1,16]},{8:$V3,13:17,16:$V4,21:$V5,28:$V6},o($V2,[2,18]),{16:[1,22]},{14:[1,23],26:$V7,27:$V8},{9:[1,26]},{8:$V3,13:27,16:$V4,21:$V5,28:$V6},o($V9,[2,9]),o($V9,[2,10]),o($V2,[2,4]),o($V1,[2,2]),{8:$V3,13:28,16:$V4,21:$V5,28:$V6},{8:$V3,13:29,16:$V4,21:$V5,28:$V6},{8:$V3,11:[2,19],13:32,16:$V4,20:30,21:$V5,28:$V6,29:31},{22:[1,33],26:$V7,27:$V8},o($V9,[2,7]),o($V9,[2,8]),{11:[1,34]},{11:[2,20]},o($V2,[2,21],{30:35,26:$V7,27:$V8}),{8:$V3,13:36,16:$V4,21:$V5,28:$V6},o($V9,[2,5]),{11:[2,11],19:[1,38],31:37},{23:[1,39],26:$V7,27:$V8},o($V2,[2,22]),{8:$V3,13:40,16:$V4,21:$V5,28:$V6},{8:$V3,13:41,16:$V4,21:$V5,28:$V6},o($V2,[2,12],{26:$V7,27:$V8}),{24:[1,42],26:$V7,27:$V8},{8:$V3,13:43,16:$V4,21:$V5,28:$V6},{25:[1,44],26:$V7,27:$V8},o($V9,[2,6])],\ndefaultActions: {5:[2,1],10:[2,16],31:[2,20]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return ';'\nbreak;\ncase 2:return 12\nbreak;\ncase 3:return 14\nbreak;\ncase 4:return 9\nbreak;\ncase 5:return 11\nbreak;\ncase 6:return 19\nbreak;\ncase 7:return 26\nbreak;\ncase 8:return 27\nbreak;\ncase 9:return 22\nbreak;\ncase 10:return 7\nbreak;\ncase 11:return 21\nbreak;\ncase 12:return 23\nbreak;\ncase 13:return 24\nbreak;\ncase 14:return 25\nbreak;\ncase 15:return 8 // function IDs start with uppercase\nbreak;\ncase 16:return 16 // variable IDs start with lowercase\nbreak;\ncase 17:return 28\nbreak;\ncase 18:return 5\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:;)/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:,)/,/^(?:\\+)/,/^(?:-)/,/^(?:=)/,/^(?:def\\b)/,/^(?:if\\b)/,/^(?:then\\b)/,/^(?:else\\b)/,/^(?:fi\\b)/,/^(?:[A-Z][a-zA-Z0-9_]*)/,/^(?:[a-z][a-zA-Z0-9_]*)/,/^(?:[0-9]+)/,/^(?:$)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = generated_calculator_parser;\nexports.Parser = generated_calculator_parser.Parser;\nexports.parse = function () { return generated_calculator_parser.parse.apply(generated_calculator_parser, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"},"relativePath":"compiler/generated_calculator_parser.js"},{"fields":{"contents":"/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar generated_parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[5,7],$V2=[12,16],$V3=[1,22],$V4=[1,25],$V5=[20,26],$V6=[1,28],$V7=[1,34],$V8=[1,31],$V9=[1,41],$Va=[1,32],$Vb=[1,33],$Vc=[1,35],$Vd=[1,36],$Ve=[1,37],$Vf=[1,38],$Vg=[1,39],$Vh=[1,40],$Vi=[1,42],$Vj=[1,43],$Vk=[1,44],$Vl=[1,45],$Vm=[2,46],$Vn=[1,48],$Vo=[1,49],$Vp=[1,50],$Vq=[1,51],$Vr=[1,52],$Vs=[1,53],$Vt=[1,54],$Vu=[1,55],$Vv=[12,20,26,29,35,36,37,39,40,44,46,51,52,53,54,56,57,58,65,66],$Vw=[12,20,26,29,35,36,37,39,40,44,46,65],$Vx=[12,20,26,29,35,36,37,39,40,44,46,51,52,65],$Vy=[12,20,26,29,35,36,37,39,40,44,46,51,52,53,54,65],$Vz=[10,12,16,17,34,38,42,45,49,50,55,59,60,61,62,63],$VA=[16,48];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"program\":3,\"program_repetition_plus0\":4,\"EOF\":5,\"class\":6,\"CLASS\":7,\"TYPE\":8,\"class_option0\":9,\"{\":10,\"class_repetition0\":11,\"}\":12,\"inherits\":13,\"INHERITS\":14,\"feature\":15,\"ID\":16,\"(\":17,\"feature_option0\":18,\"feature_repetition0\":19,\")\":20,\":\":21,\"expr\":22,\"formal\":23,\"feature_option1\":24,\"comma_formal\":25,\",\":26,\"<-\":27,\"expr_option0\":28,\".\":29,\"expr_option1\":30,\"expr_repetition0\":31,\"expr_option2\":32,\"expr_repetition1\":33,\"IF\":34,\"THEN\":35,\"ELSE\":36,\"FI\":37,\"WHILE\":38,\"LOOP\":39,\"POOL\":40,\"expr_repetition_plus2\":41,\"LET\":42,\"expr_option3\":43,\"IN\":44,\"CASE\":45,\"OF\":46,\"expr_repetition_plus3\":47,\"ESAC\":48,\"NEW\":49,\"ISVOID\":50,\"+\":51,\"-\":52,\"*\":53,\"/\":54,\"~\":55,\"<\":56,\"<=\":57,\"=\":58,\"NOT\":59,\"STRING\":60,\"INTEGER\":61,\"TRUE\":62,\"FALSE\":63,\"assignmentExpr\":64,\";\":65,\"@\":66,\"=>\":67,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",7:\"CLASS\",8:\"TYPE\",10:\"{\",12:\"}\",14:\"INHERITS\",16:\"ID\",17:\"(\",20:\")\",21:\":\",26:\",\",27:\"<-\",29:\".\",34:\"IF\",35:\"THEN\",36:\"ELSE\",37:\"FI\",38:\"WHILE\",39:\"LOOP\",40:\"POOL\",42:\"LET\",44:\"IN\",45:\"CASE\",46:\"OF\",48:\"ESAC\",49:\"NEW\",50:\"ISVOID\",51:\"+\",52:\"-\",53:\"*\",54:\"/\",55:\"~\",56:\"<\",57:\"<=\",58:\"=\",59:\"NOT\",60:\"STRING\",61:\"INTEGER\",62:\"TRUE\",63:\"FALSE\",65:\";\",66:\"@\",67:\"=>\"},\nproductions_: [0,[3,2],[6,6],[13,2],[15,10],[15,2],[25,2],[23,3],[22,3],[22,8],[22,5],[22,7],[22,5],[22,3],[22,7],[22,5],[22,2],[22,2],[22,3],[22,3],[22,3],[22,3],[22,2],[22,3],[22,3],[22,3],[22,2],[22,3],[22,1],[22,1],[22,1],[22,1],[22,1],[64,2],[4,2],[4,3],[9,0],[9,1],[11,0],[11,3],[18,0],[18,1],[19,0],[19,2],[24,0],[24,1],[28,0],[28,2],[30,0],[30,1],[31,0],[31,3],[32,0],[32,1],[33,0],[33,3],[41,2],[41,3],[43,0],[43,1],[47,6],[47,7]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n \n      return {nodeType: 'program', classes: $$[$0-1]};\n    \nbreak;\ncase 2:\n\n      this.$ = {\n        nodeType: 'class', className: $$[$0-4], features: $$[$0-1], type: $$[$0-4],\n        classParent: $$[$0-3],\n      }\n    \nbreak;\ncase 3: case 6: case 33:\n\n      this.$ = $$[$0]\n    \nbreak;\ncase 4:\n\n      params = []\n      if ($$[$0-7] != undefined) params.push($$[$0-7])\n      params = params.concat($$[$0-6])\n      this.$ = {nodeType: 'method', name: $$[$0-9], body: $$[$0-1], params: params, returnType: $$[$0-3]}\n    \nbreak;\ncase 5:\n\n      this.$ = {\n        nodeType: 'attribute',\n        name: $$[$0-1].name,\n        type: $$[$0-1].type,\n        assignmentExpr: $$[$0],\n      }\n    \nbreak;\ncase 7:\n\n      this.$ = {nodeType: 'formal', name: $$[$0-2], type: $$[$0]}\n    \nbreak;\ncase 8:\n\n      console.log(\"VARIABLE INIT\")\n    \nbreak;\ncase 11:\n\n      this.$ = {nodeType: 'expression', expressionType: 'if'}\n    \nbreak;\ncase 13:\n\n      this.$ = {nodeType: 'expression', expressionType: 'block', body: $$[$0-1]}\n    \nbreak;\ncase 14:\n\n      console.log(\"LET:\", $$[$0-6], $$[$0-5], $$[$0-4], $$[$0-3], $$[$0-2], $$[$0-1], $$[$0])\n      let variable = {name: $$[$0-5], type: $$[$0-3], assignmentExpr: $$[$0-2]}\n      this.$ = {\n        nodeType: 'expression',\n        expressionType: 'let',\n        variables: [variable],\n        body: $$[$0],\n      }\n    \nbreak;\ncase 18:\n\n      this.$ = {nodeType: 'expression', expressionType: 'operation', operator: '+', lhs: $$[$0-2], rhs: $$[$0]}\n    \nbreak;\ncase 28:\n\n      this.$ = {nodeType: 'identifier', value: $$[$0]}\n    \nbreak;\ncase 29:\n\n      this.$ = {nodeType: 'literal', value: $$[$0], type: 'String'}\n    \nbreak;\ncase 30:\n\n      this.$ = {nodeType: 'literal', value: $$[$0], type: 'Int'}\n    \nbreak;\ncase 31:\n\n      this.$ = {nodeType: 'literal', value: true, type: 'Bool'}\n    \nbreak;\ncase 32:\n\n      this.$ = {nodeType: 'literal', value: false, type: 'Bool'}\n    \nbreak;\ncase 34: case 56:\nthis.$ = [$$[$0-1]];\nbreak;\ncase 35: case 39: case 51: case 55: case 57:\n$$[$0-2].push($$[$0-1]);\nbreak;\ncase 38: case 42: case 50: case 54:\nthis.$ = [];\nbreak;\ncase 43:\n$$[$0-1].push($$[$0]);\nbreak;\ncase 60:\nthis.$ = [$$[$0-5]];\nbreak;\ncase 61:\n$$[$0-6].push($$[$0-5]);\nbreak;\n}\n},\ntable: [{3:1,4:2,6:3,7:$V0},{1:[3]},{5:[1,5],6:6,7:$V0},{65:[1,7]},{8:[1,8]},{1:[2,1]},{65:[1,9]},o($V1,[2,34]),{9:10,10:[2,36],13:11,14:[1,12]},o($V1,[2,35]),{10:[1,13]},{10:[2,37]},{8:[1,14]},o($V2,[2,38],{11:15}),{10:[2,3]},{12:[1,16],15:17,16:[1,18],23:19},{65:[2,2]},{65:[1,20]},{17:[1,21],21:$V3},{24:23,27:$V4,64:24,65:[2,44]},o($V2,[2,39]),o($V5,[2,40],{18:26,23:27,16:$V6}),{8:[1,29]},{65:[2,5]},{65:[2,45]},{10:$V7,16:$V8,17:$V9,22:30,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},o($V5,[2,42],{19:46}),o($V5,[2,41]),{21:$V3},o([20,26,27,65],[2,7]),o([44,65],[2,33],{28:47,29:$Vm,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),o($Vv,[2,28],{17:[1,57],27:[1,56]}),{10:$V7,16:$V8,17:$V9,22:58,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{10:$V7,16:$V8,17:$V9,22:59,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{10:$V7,16:$V8,17:$V9,22:61,34:$Va,38:$Vb,41:60,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{16:[1,62]},{10:$V7,16:$V8,17:$V9,22:63,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{8:[1,64]},{10:$V7,16:$V8,17:$V9,22:65,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{10:$V7,16:$V8,17:$V9,22:66,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{10:$V7,16:$V8,17:$V9,22:67,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{10:$V7,16:$V8,17:$V9,22:68,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},o($Vv,[2,29]),o($Vv,[2,30]),o($Vv,[2,31]),o($Vv,[2,32]),{20:[1,69],25:70,26:[1,71]},{29:[1,72]},{10:$V7,16:$V8,17:$V9,22:73,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{10:$V7,16:$V8,17:$V9,22:74,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{10:$V7,16:$V8,17:$V9,22:75,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{10:$V7,16:$V8,17:$V9,22:76,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{10:$V7,16:$V8,17:$V9,22:77,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{10:$V7,16:$V8,17:$V9,22:78,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{10:$V7,16:$V8,17:$V9,22:79,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{8:[1,80]},{10:$V7,16:$V8,17:$V9,22:81,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},o($V5,[2,52],{32:82,22:83,10:$V7,16:$V8,17:$V9,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl}),{28:47,29:$Vm,35:[1,84],51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu},{28:47,29:$Vm,39:[1,85],51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu},{10:$V7,12:[1,86],16:$V8,17:$V9,22:87,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{28:47,29:$Vm,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,65:[1,88],66:$Vu},{21:[1,89]},{28:47,29:$Vm,46:[1,90],51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu},o($Vv,[2,16]),o($Vw,[2,17],{28:47,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),o($Vw,[2,22],{28:47,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),o($Vw,[2,26],{28:47,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),{20:[1,91],28:47,29:$Vm,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu},{21:[1,92]},o($V5,[2,43]),{16:$V6,23:93},{16:[1,94]},o($Vx,[2,18],{28:47,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),o($Vx,[2,19],{28:47,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),o($Vy,[2,20],{28:47,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),o($Vy,[2,21],{28:47,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),o($Vw,[2,23],{28:47,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),o($Vw,[2,24],{28:47,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),o($Vw,[2,25],{28:47,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),{29:[2,47]},o($Vw,[2,8],{28:47,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),o($V5,[2,54],{33:95}),o($V5,[2,53],{28:47,29:$Vm,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),{10:$V7,16:$V8,17:$V9,22:96,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{10:$V7,16:$V8,17:$V9,22:97,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},o($Vv,[2,13]),{28:47,29:$Vm,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,65:[1,98],66:$Vu},o($Vz,[2,56]),{8:[1,99]},{16:[1,101],47:100},o($Vv,[2,27]),{8:[1,102]},o($V5,[2,6]),{17:[1,103]},{20:[1,104],26:[1,105]},{28:47,29:$Vm,36:[1,106],51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu},{28:47,29:$Vm,40:[1,107],51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu},o($Vz,[2,57]),{27:$V4,43:108,44:[2,58],64:109},{16:[1,111],48:[1,110]},{21:[1,112]},{10:[1,113]},o($V5,[2,48],{30:114,22:115,10:$V7,16:$V8,17:$V9,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl}),o($Vv,[2,10]),{10:$V7,16:$V8,17:$V9,22:116,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{10:$V7,16:$V8,17:$V9,22:117,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},o($Vv,[2,12]),{44:[1,118]},{44:[2,59]},o($Vv,[2,15]),{21:[1,119]},{8:[1,120]},{10:$V7,16:$V8,17:$V9,22:121,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},o($V5,[2,50],{31:122}),o($V5,[2,49],{28:47,29:$Vm,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),o($V5,[2,55],{28:47,29:$Vm,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),{28:47,29:$Vm,37:[1,123],51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu},{10:$V7,16:$V8,17:$V9,22:124,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{8:[1,125]},{67:[1,126]},{12:[1,127],28:47,29:$Vm,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu},{20:[1,128],26:[1,129]},o($Vv,[2,11]),o($Vw,[2,14],{28:47,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),{67:[1,130]},{10:$V7,16:$V8,17:$V9,22:131,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{65:[2,4]},o($Vv,[2,9]),{10:$V7,16:$V8,17:$V9,22:132,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{10:$V7,16:$V8,17:$V9,22:133,34:$Va,38:$Vb,42:$Vc,45:$Vd,49:$Ve,50:$Vf,55:$Vg,59:$Vh,60:$Vi,61:$Vj,62:$Vk,63:$Vl},{28:47,29:$Vm,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,65:[1,134],66:$Vu},o($V5,[2,51],{28:47,29:$Vm,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,66:$Vu}),{28:47,29:$Vm,51:$Vn,52:$Vo,53:$Vp,54:$Vq,56:$Vr,57:$Vs,58:$Vt,65:[1,135],66:$Vu},o($VA,[2,60]),o($VA,[2,61])],\ndefaultActions: {5:[2,1],11:[2,37],14:[2,3],16:[2,2],23:[2,5],24:[2,45],80:[2,47],109:[2,59],127:[2,4]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\nlet allClasses = []\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return 65\nbreak;\ncase 2:return 10\nbreak;\ncase 3:return 12\nbreak;\ncase 4:return 17\nbreak;\ncase 5:return 20\nbreak;\ncase 6:return 21\nbreak;\ncase 7:return 26\nbreak;\ncase 8:return 66\nbreak;\ncase 9:return 29\nbreak;\ncase 10:return 51\nbreak;\ncase 11:return 52\nbreak;\ncase 12:return \"*\"\nbreak;\ncase 13:return 54\nbreak;\ncase 14:return 55\nbreak;\ncase 15:return 27\nbreak;\ncase 16:return 56\nbreak;\ncase 17:return 57\nbreak;\ncase 18:return 58\nbreak;\ncase 19:return 7\nbreak;\ncase 20:return 14\nbreak;\ncase 21:return 34\nbreak;\ncase 22:return 35\nbreak;\ncase 23:return 36\nbreak;\ncase 24:return 37\nbreak;\ncase 25:return 38\nbreak;\ncase 26:return 39\nbreak;\ncase 27:return 40\nbreak;\ncase 28:return 42\nbreak;\ncase 29:return 44\nbreak;\ncase 30:return 45\nbreak;\ncase 31:return 46\nbreak;\ncase 32:return 48\nbreak;\ncase 33:return 50\nbreak;\ncase 34:return 49\nbreak;\ncase 35:return 59\nbreak;\ncase 36:return 8\nbreak;\ncase 37:return 16\nbreak;\ncase 38:return 60\nbreak;\ncase 39:return 61\nbreak;\ncase 40:return 62\nbreak;\ncase 41:return 63\nbreak;\ncase 42:return 5\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:;)/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\()/,/^(?:\\))/,/^(?::)/,/^(?:,)/,/^(?:@)/,/^(?:\\.)/,/^(?:\\+)/,/^(?:-)/,/^(?:\\*)/,/^(?:\\/)/,/^(?:~)/,/^(?:<-)/,/^(?:<)/,/^(?:<=)/,/^(?:=)/,/^(?:class\\b)/,/^(?:inherits\\b)/,/^(?:if\\b)/,/^(?:then\\b)/,/^(?:else\\b)/,/^(?:fi\\b)/,/^(?:while\\b)/,/^(?:loop\\b)/,/^(?:pool\\b)/,/^(?:let\\b)/,/^(?:in\\b)/,/^(?:case\\b)/,/^(?:of\\b)/,/^(?:esac\\b)/,/^(?:isvoid\\b)/,/^(?:new\\b)/,/^(?:not\\b)/,/^(?:[A-Z][a-zA-Z0-9_]*)/,/^(?:[a-z][a-zA-Z0-9_]*)/,/^(?:\".+\")/,/^(?:[0-9]+)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:$)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = generated_parser;\nexports.Parser = generated_parser.Parser;\nexports.parse = function () { return generated_parser.parse.apply(generated_parser, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"},"relativePath":"compiler/generated_parser.js"},{"fields":{"contents":"import React, { useState } from \"react\"\n\nimport \"./styles.scss\"\n\nexport default function LexingUIContainer({ tokens, input }) {\n  const [hoveredToken, setHoveredToken] = useState(null)\n  const [tooltipLoc, setTooltipLoc] = useState(null)\n\n  let lexedInput = []\n  let inputInd = 0\n  let tokenInd = 0\n\n  const onMouseOver = (e, token) => {\n    const spanRect = e.target.getBoundingClientRect()\n    const codeRect = e.target.parentElement.getBoundingClientRect()\n    setTooltipLoc({\n      x: spanRect.x - codeRect.x + spanRect.width + 10,\n      y: spanRect.y - codeRect.y - spanRect.height - 4\n    })\n    setHoveredToken(token)\n  }\n  const onMouseOut = () => {\n    setHoveredToken(null)\n    setTooltipLoc(null)\n  }\n\n  while (inputInd < input.length) {\n    if (tokenInd < tokens.length && inputInd === tokens[tokenInd].start) {\n      const token = tokens[tokenInd]\n      lexedInput.push(\n        <span\n          key={inputInd}\n          onMouseOver={(e) => onMouseOver(e, token)}\n          onMouseOut={onMouseOut}\n          className={token.class}>\n          {token.lexeme}\n        </span>\n      )\n      inputInd += token.length\n      tokenInd += 1\n    } else {\n      lexedInput.push(\n        <span\n          className=\"UNIDENTIFIED\"\n          onMouseOver={(e) => onMouseOver(e, {class: \"ERROR: unrecognized token\"})}\n          onMouseOut={onMouseOut}\n          key={inputInd}>{\n          input[inputInd]}\n        </span>)\n      inputInd += 1\n    }\n  }\n\n  return (\n    <div id=\"lexing-ui-container\">\n      <p>\n        Below is the lexed code with coloring to distinguish different token classes.\n        Hover over a token to see its class.\n      </p>\n      <pre className=\"lexed-input\">\n        {lexedInput}\n        {hoveredToken && hoveredToken.class !== \"WHITESPACE\" &&\n          <p\n            style={{top: tooltipLoc.y, left: tooltipLoc.x}}\n            className=\"tooltip\">{hoveredToken.class}</p>}\n      </pre>\n    </div>\n  )\n}\n"},"relativePath":"compiler/lexing_ui_container.jsx"},{"fields":{"contents":"import { v4 as uuidv4 } from 'uuid';\n\nexport function isAncestor(node, parentNodeId) {\n  if (node.id === parentNodeId) return true\n  if (!node.parent) return false\n  return isAncestor(node.parent, parentNodeId)\n}\n\nexport function getParentFunction(node) {\n  if (node.nodeType === \"function\") return node\n  if (!node.parent) {\n    console.error(\"Incorrect use of getParentFunction()\")\n    return null\n  }\n  return getParentFunction(node.parent)\n}\n\nfunction expressionChildren(parseTreeNode) {\n  switch (parseTreeNode.expressionType) {\n    case \"invocation\": return parseTreeNode.args\n    case \"if\": return [\n      parseTreeNode.predicateLHS,\n      parseTreeNode.predicateRHS,\n      parseTreeNode.trueBranch,\n      parseTreeNode.falseBranch,\n    ]\n    case \"+\":\n    case \"-\":\n      return [parseTreeNode.lhs, parseTreeNode.rhs]\n    case \"vid\":\n    case \"literal\":\n      return []\n    default:\n      console.error(`Unknown expression type: ${parseTreeNode.expressionType}`)\n      return []\n  }\n}\n\nexport function children(parseTreeNode) {\n  switch (parseTreeNode.nodeType) {\n    case \"program\": return parseTreeNode.functions\n    case \"function\": return [parseTreeNode.body]\n    case \"expression\": return expressionChildren(parseTreeNode)\n    default:\n      console.error(\"Unknown node type in children: \" + parseTreeNode.nodeType)\n      return []\n  }\n}\n\nexport function addIds(parseTreeNode) {\n  parseTreeNode.id = uuidv4()\n  for (const child of children(parseTreeNode)) {\n    addIds(child)\n  }\n}\n\nexport function doublyLinkTree(parseTreeNode) {\n  for (const child of children(parseTreeNode)) {\n    child.parent = parseTreeNode\n    doublyLinkTree(child)\n  }\n}\n"},"relativePath":"compiler/parse_tree_utils.js"},{"fields":{"contents":"import React from \"react\"\nimport { isAncestor } from './parse_tree_utils'\n\nfunction ProgramNode({ node, focusedNodeId }) {\n  const children = node.functions.map((n, i) => (\n    <FunctionNode\n      node={n}\n      focusedNodeId={focusedNodeId}\n      key={i} />\n  ))\n  const focused = isAncestor(node, focusedNodeId)\n  return (\n    <div\n      className={\"parse-tree-node program \" + (focused ? \"focused\" : \"\")}\n      data-id={node.id}>\n      <p className=\"node-type\">{node.nodeType}</p>\n      {children}\n    </div>\n  )\n}\n\nfunction FunctionNode({ node, focusedNodeId }) {\n  const focused = isAncestor(node, focusedNodeId)\n  return (\n    <div\n      className={\"parse-tree-node function \" + (focused ? \"focused\" : \"\")}\n      data-id={node.id}\n    >\n      <p className=\"node-type\">{node.nodeType}</p>\n      <p>{`Function name: ${node.fid}`}</p>\n      <p>Function body:</p>\n      <ExpressionNode node={node.body} focusedNodeId={focusedNodeId} />\n    </div>\n  )\n}\n\nfunction ExpressionNode({ node, focusedNodeId }) {\n  let Type\n  switch (node.expressionType) {\n    case \"invocation\": Type = InvocationExpressionNode; break;\n    case \"if\": Type = IfExpressionNode; break;\n    case \"+\": Type = AdditionExpressionNode; break;\n    case \"-\": Type = SubtractionExpressionNode; break;\n    case \"vid\": Type = VidExpressionNode; break;\n    case \"literal\": Type = LiteralExpressionNode; break;\n    default: Type = UnknownExpressionNode;\n  }\n  return <Type node={node} focusedNodeId={focusedNodeId} />\n}\n\nfunction UnknownExpressionNode({ node, focusedNodeId }) {\n  const focused = isAncestor(node, focusedNodeId)\n  return (\n    <div\n      className={\"parse-tree-node expression \" + (focused ? \"focused\" : \"\")}\n      data-id={node.id}>\n      <p style={{color: 'red'}}>Unknown</p>\n      <p className=\"node-type\">expression</p>\n      <p>{`Expression type: ${node.expressionType}`}</p>\n    </div>\n  )\n}\n\nfunction InvocationExpressionNode({ node, focusedNodeId }) {\n  const args = node.args.map((arg) => (\n    <ExpressionNode node={arg} focusedNodeId={focusedNodeId} key={arg.id} />\n  ))\n\n  const focused = isAncestor(node, focusedNodeId)\n  return (\n    <div\n      className={\"parse-tree-node expression \" + (focused ? \"focused\" : \"\")}\n      data-id={node.id}>\n      <p className=\"node-type\">Function Invocation</p>\n      <p>{`Invoked function: ${node.fid}`}</p>\n      <p>Arguments:</p>\n      {args}\n    </div>\n  )\n}\n\nfunction IfExpressionNode({ node, focusedNodeId }) {\n  const focused = isAncestor(node, focusedNodeId)\n  return (\n    <div\n      className={\"parse-tree-node expression \" + (focused ? \"focused\" : \"\")}\n      data-id={node.id}>\n      <p className=\"node-type\">If-then-else</p>\n      <p>Predicate LHS:</p>\n      <ExpressionNode node={node.predicateLHS} focusedNodeId={focusedNodeId} />\n      <p>Predicate RHS:</p>\n      <ExpressionNode node={node.predicateRHS} focusedNodeId={focusedNodeId} />\n      <p>True branch:</p>\n      <ExpressionNode node={node.trueBranch} focusedNodeId={focusedNodeId} />\n      <p>False branch:</p>\n      <ExpressionNode node={node.falseBranch} focusedNodeId={focusedNodeId} />\n    </div>\n  )\n}\n\nfunction AdditionExpressionNode({ node, focusedNodeId }) {\n  const focused = isAncestor(node, focusedNodeId)\n  return (\n    <div\n      className={\"parse-tree-node expression \" + (focused ? \"focused\" : \"\")}\n      data-id={node.id}>\n      <p className=\"node-type\">Addition</p>\n      <p>LHS:</p>\n      <ExpressionNode node={node.lhs} focusedNodeId={focusedNodeId} />\n      <p>RHS:</p>\n      <ExpressionNode node={node.rhs} focusedNodeId={focusedNodeId} />\n    </div>\n  )\n}\n\nfunction SubtractionExpressionNode({ node, focusedNodeId }) {\n  const focused = isAncestor(node, focusedNodeId)\n  return (\n    <div\n      className={\"parse-tree-node expression \" + (focused ? \"focused\" : \"\")}\n      data-id={node.id}>\n      <p className=\"node-type\">Subtraction</p>\n      <p>LHS:</p>\n      <ExpressionNode node={node.lhs} focusedNodeId={focusedNodeId} />\n      <p>RHS:</p>\n      <ExpressionNode node={node.rhs} focusedNodeId={focusedNodeId} />\n    </div>\n  )\n}\n\nfunction VidExpressionNode({ node, focusedNodeId }) {\n  const focused = isAncestor(node, focusedNodeId)\n  return (\n    <div\n      className={\"parse-tree-node expression \" + (focused ? \"focused\" : \"\")}\n      data-id={node.id}>\n      <p className=\"node-type\">Variable reference</p>\n      <p>{`Variable name: ${node.value}`}</p>\n    </div>\n  )\n}\n\nfunction LiteralExpressionNode({ node, focusedNodeId }) {\n  const focused = isAncestor(node, focusedNodeId)\n  return (\n    <div\n      className={\"parse-tree-node expression \" + (focused ? \"focused\" : \"\")}\n      data-id={node.id}>\n      <p className=\"node-type\">Literal</p>\n      <p>{`Value: ${node.value}`}</p>\n    </div>\n  )\n}\n\nexport default function ParsingUIContainer({ parseTree, focusedNodeId, setFocusedNodeId }) {\n  const onMouseOver = (e) => {\n    if (!e.target.classList.contains(\"parse-tree-node\")) return\n    const nodeId = e.target.getAttribute(\"data-id\")\n    setFocusedNodeId(nodeId)\n  }\n  const onMouseOut = (e) => {\n    // unset if we've moused out of the tree UI\n    if (e.target.id === \"parsing-ui-container\") {\n      setFocusedNodeId(null)\n    }\n  }\n\n  return (\n    <div\n      id=\"parsing-ui-container\"\n      onMouseOver={onMouseOver}\n      onMouseOut={onMouseOut}\n    >\n      <h2>Parse Tree:</h2>\n      {parseTree &&\n        parseTree.error ?\n          <div className=\"parse-error\">\n            <pre>{parseTree.error}</pre>\n          </div>\n          :\n          <ProgramNode node={parseTree} focusedNodeId={focusedNodeId} />}\n    </div>\n  )\n}\n"},"relativePath":"compiler/parsing_ui_container.jsx"},{"fields":{"contents":"import React, { useState } from \"react\"\nimport LexingUIContainer from \"./lexing_ui_container\"\nimport ParsingUIContainer from \"./parsing_ui_container\"\nimport StaticAnalysisUIContainer from \"./static_analysis_ui_container\"\nimport CodeGenerationUIContainer from \"./code_generation_ui_container\"\n\nimport { lex } from \"./calculator_lexer\"\nimport { parse } from \"./calculator_parser\"\nimport * as examples from \"./calculator_examples\"\n\nimport \"./styles.scss\"\n\nfunction Example({ selected, setInput, code, name }) {\n  return (\n    <div className={\"example \" + (selected? \"selected\" : \"\")} onClick={() => setInput(code)}>\n      <p>{name}</p>\n    </div>\n  )\n}\n\nfunction FocusManager({ parseTree, tokens, input }) {\n  const [focusedNodeId, setFocusedNodeId] = useState(null)\n  return (\n    <div>\n      <StaticAnalysisUIContainer\n        parseTree={parseTree}\n        setFocusedNodeId={setFocusedNodeId} />\n      <div className=\"compiler-phases\">\n        {/* <LexingUIContainer tokens={tokens} input={input} /> */}\n        <ParsingUIContainer\n          parseTree={parseTree}\n          focusedNodeId={focusedNodeId}\n          setFocusedNodeId={setFocusedNodeId} />\n        <CodeGenerationUIContainer\n          parseTree={parseTree}\n          focusedNodeId={focusedNodeId}\n          setFocusedNodeId={setFocusedNodeId} />\n      </div>\n    </div>\n  )\n}\n\nexport default function RootUIContainer() {\n  const [input, setInput] = useState(examples.EXAMPLE4)\n\n  const tokens = lex(input)\n  const parseTree = parse(input)\n  console.log(\"parse tree:\", parseTree)\n\n  const onChange = (e) => setInput(e.target.value)\n\n  return (\n    <div id=\"root-ui-container\">\n      <div className=\"input-container\">\n        <div className=\"examples\">\n          {/* <Example\n            selected={input === examples.EXAMPLE1}\n            setInput={setInput}\n            code={examples.EXAMPLE1}\n            name=\"Example 1\" key=\"1\" /> */}\n          <Example\n            selected={input === examples.EXAMPLE4}\n            setInput={setInput}\n            code={examples.EXAMPLE4}\n            name=\"Simple Example\" key=\"4\" />\n          <Example\n            selected={input === examples.EXAMPLE2}\n            setInput={setInput}\n            code={examples.EXAMPLE2}\n            name=\"Sum To\" key=\"2\" />\n          <Example\n            selected={input === examples.EXAMPLE3}\n            setInput={setInput}\n            code={examples.EXAMPLE3}\n            name=\"Static Analysis Errors\" key=\"3\" />\n          {/* <Example\n            selected={input === examples.EXAMPLE5}\n            setInput={setInput}\n            code={examples.EXAMPLE5}\n            name=\"Test\" key=\"5\" /> */}\n        </div>\n        <textarea\n          value={input}\n          onChange={onChange}></textarea>\n      </div>\n      <FocusManager tokens={tokens} parseTree={parseTree} input={input} />\n    </div>\n  )\n}\n"},"relativePath":"compiler/root_ui_container.jsx"},{"fields":{"contents":"// export enum CoolTokenClass {\n//   COMMENT = \"COMMENT\",\n//   IDENTIFIER = \"IDENTIFIER\",\n//   TYPE = \"TYPE\",\n//   STRING = \"STRING\",\n//   INTEGER = \"INTEGER\",\n//   WHITESPACE = \"WHITESPACE\",\n//   UNDEFINED = \"UNDEFINED\",\n//   OPERATOR = \"OPERATOR\",\n//   PUNCTUATION = \"PUNCTUATION\",\n//   KEYWORD = \"KEYWORD\",\n// }\n\nexport enum TokenClass {\n  VID = \"VID\",\n  FID = \"FID\",\n  INTEGER = \"INTEGER\",\n  WHITESPACE = \"WHITESPACE\",\n  UNDEFINED = \"UNDEFINED\",\n  OPERATOR = \"OPERATOR\",\n  PUNCTUATION = \"PUNCTUATION\",\n  KEYWORD = \"KEYWORD\",\n}\n\nexport type Token = {\n  class: TokenClass,\n  start: number,\n  length: number\n}\n"},"relativePath":"compiler/shared.tsx"},{"fields":{"contents":"import React from \"react\"\nimport {\n  checkFunctionNamesUnique,\n  checkMainExists,\n  checkDuplicateParams,\n  checkFunctionsInvokedProperly,\n  checkNoUndefinedVars,\n} from './calculator_static_analysis'\n\nexport default function StaticAnalysisUIContainer({ parseTree, setFocusedNodeId }) {\n  if (parseTree.error) {\n    return <></>\n  }\n\n  return (\n    <div id=\"static-analysis-ui-container\">\n      {\n        [\n          checkFunctionNamesUnique(parseTree),\n          checkMainExists(parseTree),\n          checkDuplicateParams(parseTree),\n          checkFunctionsInvokedProperly(parseTree),\n          checkNoUndefinedVars(parseTree),\n        ].map(([error, nodeId]) => {\n          if (error === \"\") {\n            return null\n          } else {\n            return (\n              <p\n                key={error}\n                onMouseOver={() => setFocusedNodeId(nodeId)}\n                onMouseOut={() => setFocusedNodeId(null)}\n              >\n                <span>❌</span> Error: {error}\n              </p>\n            )\n          }\n        })\n      }\n    </div>\n  )\n}\n"},"relativePath":"compiler/static_analysis_ui_container.jsx"},{"fields":{"contents":".input-container {\n  // width: 50%;\n  // margin: 0 auto;\n  overflow-y: scroll;\n\n  .examples {\n    display: flex;\n\n    .example {\n      padding-right: 10px;\n      margin-right: 10px;\n      margin-bottom: 10px;\n      cursor: pointer;\n      border: 2px solid grey;\n      p {\n        margin: 5px;\n      }\n\n      &.selected {\n        color: green;\n      }\n    }\n  }\n\n  textarea {\n    width: 99%;\n    height: 200px;\n    font-family: monospace;\n    font-size: 13px;\n  }\n}\n\n#root-ui-container {\n  .compiler-phases {\n    display: flex;\n\n    #parsing-ui-container {\n      max-height: 800px;\n      overflow-y: scroll;\n    }\n  }\n}\n\n#lexing-ui-container {\n  $BG: #1E1E1E;\n  $BLUE: #389EDB;\n  $WHITE: #D4D4D4;\n  $ORANGE: #D98E73;\n  $GREEN: #5B9B4C;\n  $LIGHTGREEN: #AFCFA4;\n  $GREY: grey;\n  $RED: red;\n\n  .lexed-input {\n    width: 80%;\n    margin: 0 auto;\n    padding: 5px;\n    font-family: monospace;\n    font-size: 16px;\n    background: $BG;\n    overflow-x: scroll;\n    line-height: 1.3;\n    position: relative;\n\n    .STRING { color: $ORANGE; }\n    .INTEGER { color: $ORANGE; }\n    .COMMENT { color: $GREY; }\n    .VID { color: $LIGHTGREEN; }\n    .FID { color: $GREEN; }\n    .OPERATOR { color: $WHITE; }\n    .PUNCTUATION { color: $WHITE; }\n    .KEYWORD { color: $BLUE; }\n    .UNIDENTIFIED { color: $RED; }\n\n    &:hover {\n      span {\n        transition: opacity 150ms;\n        opacity: 0.3;\n\n        &:hover {\n          opacity: 1;\n        }\n      }\n    }\n\n    .tooltip {\n      background: grey;\n      width: fit-content;\n      border-radius: 5px;\n      padding: 5px;\n      position: absolute;\n      z-index: 1;\n\n      &::before {\n        content: \"\";\n        position: absolute;\n        width: 0;\n        height: 0;\n        border-width: 6px;\n        border-style: solid;\n        border-color: transparent grey transparent transparent;\n        top: 9px;\n        left: -12px;\n      }\n    }\n  }\n}\n\n#parsing-ui-container {\n  padding: 5px;\n\n  .parse-error pre {\n    color: red;\n  }\n\n  .parse-tree-node {\n    padding: 5px;\n    margin: 5px;\n    border: 2px solid grey;\n\n    &.focused {\n      background: lightblue;\n    }\n\n    .node-type {\n      font-weight: 700;\n    }\n  }\n}\n\n#static-analysis-ui-container {\n  .error {\n    color: red;\n  }\n}\n\n#code-generation-ui-container {\n  &.focused {\n    span {\n      transition: opacity 150ms;\n      opacity: 0.3;\n    }\n\n    span.focused {\n      opacity: 1;\n    }\n  }\n\n  .label {\n    color: blue;\n  }\n}\n"},"relativePath":"compiler/styles.scss"},{"fields":{"contents":"---\ntitle: Solving Cryptograms\ndate: 2021-01-02\nexcerpt: Xucmfgma dglc epiyx zp xpvlc k uinnvc zekz xepivf zkqc dglc ogmizcx.\ntopic: programming\n---\n\nFor Christmas my dad gave me a book of cryptograms. While I thought it would be fun to do these by hand,\nI thought it would also be fun to write a program to solve them.\n\n## Cryptograms\n\nEvery puzzle in the book uses a substitution cipher where every letter in the decoded space is represented\nby another letter in the encoded space. An example puzzle would be:\n\n<div class=\"cryptogram\"><p>APPF VIBQ KMF EKLC DIM!</p></div>\n\nYou can try solving it for yourself, or you can hover over the solution below.\n\n<div class=\"solution\"><p>GOOD LUCK AND HAVE FUN!</p></div>\n\nThe cipher (the map from encoded to decoded characters) is what the program solves for.\n\n## The Algorithm\n\nThe main part of the program is a brute force search that recurses through all possible word combinations and looks for\nreasonable solutions. However just a naive brute force search would be very slow; it would have nothing to narrow down\nthe possibilities with.\n\nThere needs to be another part of the program that makes some educated guesses. For this\nI used some simple intuitions about the English language that humans would use when solving a cryptogram (and that would\nbe easy to code). Examples of these intuitions include:\n- A single letter word is almost always \"I\" or \"a\".\n- Words containing apostrophes are probably contractions, which there are a relatively small number of.\n- The solution will probably follow an expected distribution of letters, starting letters, double letters, etc.\n\nThe program uses a list of English words to solve the cipher. It works by guessing a word and doing a recursive\nsearch with the new cipher that comes from that word. For example, consider the earlier cryptogram and a partially\ncompleted solution:\n\n<div class=\"cryptogram\"><p>APPF VIBQ KMF EKLC DIM!</p></div>\n<div class=\"cryptogram\"><p>-OOD ---- --D ---- ---!</p></div>\n\nWe know all but the first letter of the first word, so we can \"guess and check\" by plugging in all words in the dictionary that match\nthe pattern \"-OOD\" (good, hood, wood, etc.). After plugging in a word we have a new cipher that includes the letter that\nwas previously encoded. We can recurse with this new cipher and try to guess other words until we find a solution (or not).\n\n## Indexing\n\nTo do the pattern matching described above, I needed a quick way to look up words that match a certain pattern. I did\nthis by preprocessing the dictionary and keeping an index of character ngrams (I used 1, 2, and 3-grams).\n\n```py\n# Ngrams is a dictionary of the triple (ngram, len, i) mapped to a set of\n# words of length `len` where the character ngram `ngram` appears at index `i`.\n# By including the word length and index in the key we can narrow down word matches.\nngrams: 'Dict[Tuple[str, int, int], Set[str]]' = defaultdict(set)\n\n# words_by_length is a dictionary of length to set of words with that length.\nwords_by_length: 'Dict[int, Set[str]]' = defaultdict(set)\n\nfor word in dictionary:\n    words_by_length[len(word)].add(word)\n    for i in range(0, len(word)):\n        ngrams[(word[i], len(word), i)].add(word)\n        if i < len(word) - 1:\n            ngrams[(word[i:i+2], len(word), i)].add(word)\n        if i < len(word) - 2:\n            ngrams[(word[i:i+3], len(word), i)].add(word)\n```\n\nThe code to do the pattern matching looks at each decoded ngram in the word, gets the set of words associated with that\nngram, and returns the intersection of the sets. For example, to pattern match the word \"ap-le\", we would would find the set of\nwords that have length 5 with \"ap\" appearing at index 0 and intersect it with the set of words of length 5 that have \"le\" appearing\nat index 3. If the word is completely encoded, the best we can do is return the set of words with the same length.\nCaching the results of this function is useful since it gets called with the same arguments many times.\n\n```py\n@lru_cache(maxsize=None)\ndef find_words_matching_pattern(template: str) -> 'Set[str]':\n    # Given a pattern, return words from dictionary that match. \"-\" is a wildcard.\n    # E.g. \"-ood\" -> {\"good\", \"hood\", ...}\n    if template.isalpha():\n        return set([template])\n\n    ngram_word_matches: 'List[set]' = []\n    # look for decoded ngrams\n    for i in range(0, len(template)):\n        if template[i].isalpha():\n            ngram_word_matches.append(ngrams[(template[i], len(template), i)])\n        if i < len(template) - 1 and template[i:i+2].isalpha():\n            ngram_word_matches.append(ngrams[(template[i:i+2], len(template), i)])\n        if i < len(template) - 2 and template[i:i+3].isalpha():\n            ngram_word_matches.append(ngrams[(template[i:i+3], len(template), i)])\n\n    ngram_word_matches = [s for s in ngram_word_matches if len(s) > 0]\n    if ngram_word_matches:\n        return reduce(lambda a, b: a & b, ngram_word_matches)\n    else:\n        return words_by_length[len(template)]\n```\n\n## Cipher Evaluation\n\nFor many cryptograms there are a number of possible solutions. I ran into this when I first coded up the search and got\nsome gibberish results that clearly weren't right but technically were solutions because they were valid ciphers and the\ndecoded message was composed of dictionary words.\n\nWhen I first ran the algorithm on the puzzle `PPF VIBQ KMF EKLC DIM!`, I got solutions like:\n- \"wood luck ind aims fun\"\n- \"wood luck ind hist fun\"\n- \"wood luck ind tier fun\"\n- and so on...\n\nI could probably have guessed the actual solution from this, but I wanted the program to be able to rank the solutions\nby how English-like they were.\n\nMy first approach used word frequency (which was included in the [dictionary](https://github.com/first20hours/google-10000-english)\nI was using). I thought scoring the solution by how common its words were would penalize solutions with the weird words I was seeing.\nThis didn't work great; the top results were:\n- \"good luck ind five run\"\n- \"good luck ind fits run\"\n- \"good luck ind five jun\"\n- and so on...\n\nMy next idea was score the solutions by the frequency of their word bigrams. This was done pretty easily using a corpus from\nthe Python `nltk` package, and put the correct solution much closer to the top:\n- \"good luck and have run\"\n- \"good luck and have sun\"\n- \"good luck and have fun\"\n\nThe completed code is [here](https://github.com/cselig/puzzles/blob/main/notebooks/cryptograms.ipynb).\n\n## More Puzzles\n\nA quote from Sonia Sotomayor:\n\n<div class=\"cryptogram\"><p>X WK DBKZ KBF NRXBM HYKTN CF: X WKB'N CFHVTQF CJVFPA YJ KNRFQV' FEUFONHNXKBV KQ PFN KNRFQV WFAXBF CJ ZKQNR.</p></div>\n\n<div class=\"solution\"><p>I do know one thing about me: I don't measure myself by others' expectations or let others define my worth.</p></div>\n\nIt turns out that the only guess the program needs to solve this one in a reasonable amount of time is what the single letter word is.\nAfter that guess is provided it runs in around 10 seconds.\n\n<!-- blank lines in markdown remains a mystery... -->\n<div style=\"margin-top: 3em;\"></div>\n\nA quote from Gerald Ford:\n\n<div class=\"cryptogram\"><p>G NQPBSDKBDX TUN BDQLNR XQ NUPB VQL BPBSVXRUDN VQL FGDX UJ G NQPBSDKBDX TUN BDQLNR XQ XGHB YSQK VQL BPBSVXRUDN VQL RGPB</p></div>\n<div class=\"solution\"><p>A government big enough to give you everything you want is a government big enough to take from you everything you have.</p></div>\n\nThis one has a number of solutions, the first four of which are:\n<div class=\"solution\">\n  <ul>\n    <li>A government big enough to give you everything you want is a government big enough to take from you everything you have.</li>\n    <li>A government pig enough to give you everything you want is a government pig enough to take from you everything you have.</li>\n    <li>A government dig enough to give you everything you want is a government dig enough to take from you everything you have.</li>\n    <li>A government big enough to give you everything you cant is a government big enough to take from you everything you have.</li>\n  </ul>\n</div>\n\nThis shows quite nicely how the bigram ranking of the solutions put them in a logical order.\n"},"relativePath":"cryptograms/cryptograms.mdx"},{"fields":{"contents":"import React from \"react\"\nimport * as d3 from \"d3\"\nimport { colors } from \"./utils\"\n\nclass BubbleChart extends React.Component {\n  render() {\n    return (\n      <div id=\"bubble-chart\" className=\"canvas\">\n        <svg width=\"200\" height=\"200\"></svg>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    let center_x = 100;\n    let center_y = 165;\n    let circleData = [50, 25, 15, 10];\n    let radius = d3.scaleSqrt()\n      .domain([0, d3.max(circleData)])\n      .range([0, 80]);\n\n    let svg = d3.select(\"#bubble-chart svg\");\n\n    const handleMouseover = function(d, i) {\n      d3.select(this).style(\"stroke\", \"black\");\n      svg.append(\"text\")\n        .attr(\"id\", \"tooltip\")\n        .attr(\"x\", center_x - 65)\n        .attr(\"y\", center_y + 20)\n        .text(\"Circle area: \" + d);\n    }\n\n    const handleMouseout = function(d, i) {\n      d3.select(this).style(\"stroke\", \"none\");\n      svg.select(\"#tooltip\").remove();\n    }\n\n    svg.append(\"g\")\n      .selectAll(\"circle\")\n        .data(circleData)\n      .enter().append(\"circle\")\n        .attr(\"cy\", (d) => { return center_y - radius(d); })\n        .attr(\"cx\", center_x)\n        .attr(\"r\", radius)\n        .style(\"fill\", (d, i) => { return colors[i]; })\n        .style(\"stroke-width\", \"3px\")\n        .on(\"mouseover\", handleMouseover)\n        .on(\"mouseout\", handleMouseout);\n  }\n}\n\nexport default BubbleChart"},"relativePath":"d3/bubble_chart.jsx"},{"fields":{"contents":"---\ntitle: Messing Around with D3\ndate: 2020-03-18\nexcerpt: I'm using some of my \"shelter in place\" free time to learn D3 and create some toy visualizations.\ntopic: programming\n---\n\nimport BubbleChart from \"./bubble_chart\"\nimport VolumeCalendar from \"./volume_calendar\"\nimport SunburstChart from \"./sunburst_chart\"\nimport EditDistance from \"./edit_distance\"\nimport TechViz from \"./tech_viz\"\n\nI'm using some of my shelter in place free time to learn D3 and create some toy visualizations.\n\n### Bubble Chart (?)\n\nI'm not sure what this chart would be called, but something like this could be used for visualizing a single variable.\n\n<BubbleChart />\n\n### Volume Calendar\n\nMy take on a nice Strava visualization that shows how much you ran/biked/swam on given days over the past month, along with a weekly aggregation.\nThe original version displays the calendar day on hover, which I think could be easy to confuse with distance ran on that day.\n\n<VolumeCalendar />\n\n### Sunburst Chart\n\nThis chart (in conjunction with some informative text/tooltips) could be used to visualize data that breaks up into two sets of hierarchical categories.\n\n<SunburstChart />\n\n### Edit Distance\n\nI thought it would be cool to visualize the shortest edit distance between two words with the below animation.\nHowever, it isn't completely correct - the key function I'm providing to `.data()` is just the letter itself,\nwhich means that repeat letters aren't keyed properly. To solve this I'd have to write a more sophisticated key\nfunction.\n\nType a new word or phrase and hit \"Update\".\n\n<EditDistance />\n\n### Tech Viz\n\nA cool way of displaying technologies I've worked with, with the detail that a technology can be in multiple categories.\n\n<TechViz />\n\nCode for all the above is [here](https://github.com/cselig/cselig.github.io/tree/develop/content/blog/d3).\n"},"relativePath":"d3/d3.mdx"},{"fields":{"contents":"import React from \"react\"\nimport * as d3 from \"d3\"\n\nclass EditDistance extends React.Component {\n  render() {\n    return (\n      <div id=\"edit-distance\" className=\"canvas\" style={{flexDirection: \"column\"}}>\n        <div>\n          <input id=\"text-update-input\" style={{width:\"200px\"}}/>\n          <button id=\"text-update-submit\" style={{width:\"100px\"}}>Update</button>\n        </div>\n        <svg></svg>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    let group = d3.select(\"#edit-distance svg\")\n      .attr(\"width\", 800)\n      .attr(\"height\", 60)\n      .append(\"g\")\n        .style(\"transform\", \"translate(20px, 40px)\")\n        .style(\"font-family\", \"Menlo\");\n\n    const update = (letters) => {\n      const t = group.transition().duration(750);\n\n      group.selectAll(\"text\")\n        .data(letters, d => d)\n        .join(\n          enter => enter.append(\"text\")\n            .attr(\"fill\", \"green\")\n            .attr(\"y\", -50)\n            .attr(\"x\", (d, i) => i * 16)\n            .style(\"pointer-events\", \"none\")\n            .text(d => d)\n            .call(enter => enter.transition(t).attr(\"y\", 0)),\n          update => update\n            .attr(\"fill\", \"black\")\n            .call(update => update.transition(t)\n              .attr(\"x\", (d, i) => i * 16)),\n          exit => exit.attr(\"fill\", \"red\")\n            .call(exit => exit.transition(t)\n              .attr(\"y\", 50)\n              .remove())\n      );\n    }\n\n    document.getElementById(\"text-update-submit\").onclick = () => {\n      let text = document.getElementById(\"text-update-input\").value;\n      update(text.split(\"\"));\n    };\n\n    // set initial value\n    update(\"the quick brown fox\".split(\"\"));\n    group.selectAll(\"text\")\n      .attr(\"fill\", \"black\");\n  }\n}\n\nexport default EditDistance"},"relativePath":"d3/edit_distance.jsx"},{"fields":{"contents":"import React from \"react\"\nimport * as d3 from \"d3\"\nimport { colors, arr_sum } from \"./utils\"\n\nclass SunburstChart extends React.Component {\n  render() {\n    return (\n      <div id=\"sunburst-chart\" className=\"canvas\">\n        <svg></svg>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    let height = 300;\n    let width = 300;\n    let radius = 80;\n    let transitionDuration = 300;\n\n    let svg = d3.select(\"#sunburst-chart svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    let pie = d3.pie().sort(null);\n\n    let data = [\n      [1, 1],\n      [3, 1, 2],\n      [4, 2, 1, 2],\n      [1, 3],\n    ];\n\n    const calcGroup = (ind) => {\n      let bins = data.map((arr) => arr.length);\n      for (let i = 1; i < bins.length; i++) {\n        bins[i] = bins[i - 1] + bins[i];\n      }\n      for (const [i, x] of bins.entries()) {\n        if (ind < x) {\n          return i;\n        }\n      }\n    }\n\n    let arcOuter = d3.arc()\n      .innerRadius(0)\n      .outerRadius(radius);\n    let largeArcOuter = d3.arc()\n      .innerRadius(0)\n      .outerRadius(radius * 1.5)\n\n    const transitionArcGroup = (ind, newArc) => {\n      svg.selectAll(\".outer .group\" + ind).transition()\n        .delay(100)\n        .duration(transitionDuration)\n        .attr(\"d\", newArc);\n    }\n\n    // draw outer pie first so it can hide under the inner one\n    let gOuter = svg.append(\"g\")\n      .attr(\"class\", \"outer\")\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n    let outerData = data.reduce((arr1, arr2) => arr1.concat(arr2));\n\n    let arcsOuter = gOuter.selectAll(\"arc\")\n      .data(pie(outerData))\n      .enter().append(\"g\")\n        .attr(\"class\", \"arc\");\n\n    arcsOuter.append(\"path\")\n      .attr(\"class\", (d, i) => \"group\" + calcGroup(i))\n      .attr(\"fill\", (d, i) => colors[calcGroup(i) * 4 + i % 4])\n      .attr(\"stroke-width\", 2)\n      .style(\"opacity\", 0.8)\n      .attr(\"d\", arcOuter)\n      .on(\"mouseover\", (d, i, nodes) => {\n        d3.select(nodes[i])\n          .attr(\"stroke\", \"black\")\n          .style(\"opacity\", 1);\n        // include arc group transition handler here as well as on the\n        // inner sections so we can mouseover the expanded sections\n        transitionArcGroup(calcGroup(i), largeArcOuter);\n      })\n      .on(\"mouseout\", (d, i, nodes) => {\n        d3.select(nodes[i])\n          .attr(\"stroke\", \"none\")\n          .style(\"opacity\", 0.8);\n        transitionArcGroup(calcGroup(i), arcOuter);\n      });\n\n    // inner pie\n    let dataInner = data.map(arr_sum);\n\n    let gInner = svg.append(\"g\")\n      .attr(\"class\", \"inner\")\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n    let arcInner = d3.arc()\n      .innerRadius(0)\n      .outerRadius(radius);\n\n    let arcsInner = gInner.selectAll(\"arc\")\n      .data(pie(dataInner))\n      .enter().append(\"g\")\n        .attr(\"class\", \"arc\");\n\n    arcsInner.append(\"path\")\n      .attr(\"class\", (d, i) => \"group\" + i)\n      .attr(\"fill\", (d, i) => colors[i * 4])\n      .attr(\"d\", arcInner)\n      .on(\"mouseover\", (d, i) => transitionArcGroup(i, largeArcOuter))\n      .on(\"mouseout\", (d, i) => transitionArcGroup(i, arcOuter));\n  }\n}\n\nexport default SunburstChart"},"relativePath":"d3/sunburst_chart.jsx"},{"fields":{"contents":"import React from \"react\"\nimport * as d3 from \"d3\"\n\nconst identity = (x) => x\n\nexport default class TechViz extends React.Component {\n  render() {\n    return (\n      <div id=\"tech-viz\" className=\"canvas\">\n        <svg></svg>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    let svg = d3.select(\"#tech-viz svg\")\n      .attr(\"height\", 300)\n      .attr(\"width\", 350)\n\n    let data = [\n      {\n        \"category\": \"languages\",\n        \"items\": [\"js\", \"rb\", \"py\", \"c++\", \"cljs\"]\n      },\n      {\n        \"category\": \"frontend\",\n        \"items\": [\"js\", \"react\", \"cljs\", \"d3\"]\n      },\n      {\n        \"category\": \"backend\",\n        \"items\": [\"postgres\", \"rails\", \"c++\", \"rb\", \"flask\", \"aws\", \"redis\"]\n      },\n      {\n        \"category\": \"data\",\n        \"items\": [\"d3\", \"py\", \"tableau\", \"spark\", \"airflow\", \"sql\"]\n      },\n    ]\n\n    let _categories = []\n    let _techs = []\n    let categories_lkup = {}\n    for (const { category, items } of data) {\n      _categories.push(category)\n      for (const item of items) {\n        _techs.push(item)\n        // an item can be in multiple categories\n        if (categories_lkup.hasOwnProperty(item)) {\n          categories_lkup[item].push(category)\n        } else {\n          categories_lkup[item] = [category]\n        }\n      }\n    }\n    _techs = [...new Set(_techs)]\n\n    // layout doesn't work when M != N\n    const M = 4,\n          N = 4;\n\n    // index of current category\n    let ind = 0\n\n    let techsGroup = svg.append(\"g\")\n      .attr(\"class\", \"techs\")\n\n\n    const updateCategory = function() {\n      const category = _categories[ind % _categories.length]\n\n      _techs.sort((d1, d2) => {\n        const isMember = (item) => (+ categories_lkup[item].includes(category))\n        return isMember(d2) - isMember(d1)\n      })\n\n      const t = techsGroup.transition().duration(500)\n\n      const xFn = (d, i) => 70 * (i % M) + 50\n      const yFn = (d, i) => 50 * (Math.floor(i / N)) + 80\n      const opacityFn = (d) => categories_lkup[d].includes(category) ? 1 : 0.7\n      const fontWeightFn = (d) => categories_lkup[d].includes(category) ? 500 : 300\n\n      techsGroup.selectAll(\"text\")\n        .data(_techs, identity)\n        .join(\n          enter => enter.append(\"text\")\n            .attr(\"class\", (d) => categories_lkup[d].join(\" \"))\n            .text(identity)\n            .style(\"opacity\", opacityFn)\n            .style(\"font-weight\", fontWeightFn)\n            .style(\"cursor\", \"default\")\n            .attr(\"x\", xFn)\n            .attr(\"y\", yFn)\n            // TODO center by calculating width\n            .style(\"transform\", (d) => `translate(-${d.length / 4}em)`),\n          update => update\n            .call(update => update.transition(t)\n              .attr(\"x\", xFn)\n              .attr(\"y\", yFn)\n              .style(\"opacity\", opacityFn)\n              .style(\"font-weight\", fontWeightFn)\n            ),\n          exit => exit.remove(),\n        )\n\n      svg.selectAll(\".categories text\")\n        .style(\"font-weight\", (d, i) => i === ind ? 500 : 300)\n        .transition().duration(500)\n          .style(\"opacity\", (d, i) => i === ind ? 1 : 0.7)\n\n      ind++\n    }\n\n    const handleMouseover = function(d, i) {\n      // use index so this is composable with setting an interval\n      // to cycle categories\n      ind = i\n      updateCategory()\n    }\n\n    svg.append(\"g\")\n      .attr(\"class\", \"categories\")\n      .selectAll(\"text\")\n      .data(_categories, identity)\n      .enter().append(\"text\")\n        .attr(\"class\", identity)\n        .text(identity)\n        .attr(\"x\", (d, i) => 100 * i)\n        .attr(\"y\", 20)\n        .style(\"cursor\", \"default\")\n        .style(\"font-size\", \"18px\")\n        .style(\"font-weight\", (d, i) => i === ind ? 500 : 300)\n        .style(\"opacity\", (d, i) => i === ind ? 1 : 0.7)\n        .on(\"mouseover\", handleMouseover)\n\n    updateCategory()\n  }\n}\n"},"relativePath":"d3/tech_viz.jsx"},{"fields":{"contents":"export const colors = [\"#3182bd\", \"#6baed6\", \"#9ecae1\", \"#c6dbef\", \"#e6550d\", \"#fd8d3c\", \"#fdae6b\", \"#fdd0a2\", \"#31a354\", \"#74c476\", \"#a1d99b\", \"#c7e9c0\", \"#756bb1\", \"#9e9ac8\", \"#bcbddc\", \"#dadaeb\", \"#636363\", \"#969696\", \"#bdbdbd\", \"#d9d9d9\"];\nexport const arr_sum = (arr) => arr.reduce((a,b) => a + b, 0);\n"},"relativePath":"d3/utils.js"},{"fields":{"contents":"import React from \"react\"\nimport * as d3 from \"d3\"\nimport { arr_sum } from \"./utils\"\n\nclass VolumeCalendar extends React.Component {\n  render() {\n    return (\n      <div id=\"volume-calendar\" className=\"canvas\">\n        <svg width=\"450\" height=\"200\"></svg>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    let svg = d3.select(\"#volume-calendar svg\")\n    let cell_width = 32;\n    let cell_height = 32;\n    let width = 7 * cell_width; // 7 days a week\n    let height = 4 * cell_height; // display 4 weeks\n    let calendar_top_x = 20;\n    let calendar_top_y = 20;\n\n    let data = [\n      [0, 4, 0, 5, 0, 0, 3],\n      [0, 6, 7, 4, 0, 0, 2],\n      [3, 0, 0, 4, 0, 2, 0],\n      [0, 4, 4, 0, 6, 0, 0],\n    ]\n    let daily_max = d3.max(data.map((arr) => d3.max(arr)));\n    let weekly_max = d3.max(data.map((arr) => arr_sum(arr)));\n\n    let x_scale = d3.scaleLinear()\n      .domain([0, 7])\n      .range([0, width]);\n    let y_scale = d3.scaleLinear()\n      .domain([0, 4])\n      .range([0, height]);\n    let r_scale = d3.scaleSqrt()\n      .domain([0, daily_max])\n      .range([0, 8]);\n    let bar_scale = d3.scaleLinear()\n      .domain([0, weekly_max])\n      .range([0, 150]);\n\n    let day_names = [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"]\n\n    const renderRow = function(d) {\n      let day_cell = d3.select(this).selectAll(\"g.day\")\n        .data(d)\n        .enter().append(\"g\")\n          .attr(\"class\", \"day\")\n          .style(\"transform\", (d, i) => \"translate(\" + x_scale(i) + \"px,0)\");\n      // make uniformly sized area to capture mouseover\n      day_cell.append(\"rect\")\n        .attr(\"class\", \"event-capture\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"none\")\n        .style(\"pointer-events\", \"all\")\n        .style(\"x\", -cell_width / 2)\n        .style(\"y\", -cell_height / 2)\n        .style(\"width\", cell_width)\n        .style(\"height\", cell_height)\n        .on(\"mouseover\", handleMouseover)\n        .on(\"mouseout\", handleMouseout);\n      day_cell.append(\"circle\")\n        .style(\"shape-rendering\", \"geometricPrecision\")\n        .style(\"pointer-events\", \"none\")\n        .attr(\"r\", (d) => (d === 0) ? 1 : r_scale(d))\n        .attr(\"fill\", (d) => (d === 0) ? \"#a1a1aa\" : \"black\");\n      day_cell.append(\"text\")\n        .style(\"pointer-events\", \"none\")\n        .attr(\"x\", -5)\n        .attr(\"y\", 6)\n        .style(\"opacity\", 0)\n        .style(\"font-weight\", 500)\n        .text((d) => (d === 0) ? \"\" : d);\n    }\n\n    const handleMouseover = function(d) {\n      if (d > 0) {\n        let g = d3.select(this.parentNode);\n        opacityTransition(g.select(\"circle\"), 0);\n        opacityTransition(g.select(\"text\"), 1);\n      }\n    }\n\n    const handleMouseout = function(d) {\n      if (d > 0) {\n        let g = d3.select(this.parentNode);\n        opacityTransition(g.select(\"circle\"), 1);\n        opacityTransition(g.select(\"text\"), 0);\n      }\n    }\n\n    const opacityTransition = function(d3_node, opacity) {\n      d3_node.transition()\n        .style(\"opacity\", opacity)\n        .duration(300);\n    }\n\n\n    let frame = svg.append(\"g\")\n      .style(\"transform\", \"translate(\" + calendar_top_x + \"px,\" + calendar_top_y + \"px)\");\n\n    let calendar = frame.append(\"g\")\n      .attr(\"class\", \"calendar\")\n\n    // draw calendar week rows\n    calendar.selectAll(\"g.row\")\n      .data(data)\n      .enter().append(\"g\")\n        .attr(\"class\", \"row\")\n        .style(\"transform\", (d, i) => \"translate(0,\" + y_scale(i + 1) + \"px)\")\n      .each(renderRow);\n\n    // display weekday names above calendar\n    frame.append(\"g\")\n      .attr(\"class\", \"header\")\n      .selectAll(\".day-label\")\n        .data(day_names)\n        .enter().append(\"text\")\n          .attr(\"class\", \"day-label\")\n          .style(\"font-size\", 15)\n          .attr(\"fill\", \"#212529\")\n          .text((d) => d)\n          // include fudge factor to make text line up\n          .attr(\"x\", (d, i) => x_scale(i) - 4);\n\n    // draw bar chart for weekly volume\n    let weekly_volumes = frame.append(\"g\")\n      .attr(\"class\", \"weekly_volumes\")\n      .style(\"transform\", \"translate(\" + (cell_width * 7) + \"px,\" + cell_height + \"px)\");\n\n    let weekly_row = weekly_volumes.selectAll(\"g.row\")\n      .data(data)\n      .enter().append(\"g\")\n        .attr(\"class\", \"row\")\n        .style(\"transform\", (d, i) => \"translate(\" + (-cell_width / 3) + \"px,\" + (y_scale(i) - cell_height / 4) + \"px)\")\n\n    weekly_row.append(\"rect\")\n      .attr(\"fill\", \"darkgray\")\n      .attr(\"stroke\", \"black\")\n      .style(\"width\", (d) => bar_scale(arr_sum(d)))\n      .style(\"height\", cell_height / 2);\n\n    weekly_row.append(\"text\")\n      .text((d) => arr_sum(d) + \"mi\")\n      .attr(\"fill\", \"#212529\")\n      .attr(\"x\", (d) => bar_scale(arr_sum(d)) + 7)\n      .attr(\"y\", 13);\n  }\n}\n\nexport default VolumeCalendar"},"relativePath":"d3/volume_calendar.jsx"},{"fields":{"contents":"import React, { useEffect } from 'react'\nimport * as d3 from 'd3'\n\nconst [CHART_WIDTH, CHART_HEIGHT] = [300, 300]\nconst margin = { right: 20, left: 60, top: 20, bottom: 40 }\n\nfunction difficultyIndex(d, w) {\n  return Math.log2(2 * d / w)\n}\n\nfunction lineOfBestFitConstants(xVals, yVals) {\n  const xMean = d3.mean(xVals)\n  const yMean = d3.mean(yVals)\n  const m = d3.sum(xVals.map((x, i) => (x - xMean) * (yVals[i] - yMean))) / d3.sum(xVals.map(x => Math.pow(x - xMean, 2)))\n  const b = yMean - m * xMean\n  return [m, b]\n}\n\nfunction Chart({ data }) {\n  const xVals = data.map(({ d, w }) => difficultyIndex(d, w))\n  const yVals = data.map(({ t }) => t)\n  const xMin = 0\n  const yMin = 0\n  const xMax = data.length > 0 ? d3.max(xVals) : 5\n  const yMax = data.length > 0 ? d3.max(yVals) : 1000\n  const xPad = (xMax - xMin) * 0.2\n  const yPad = (yMax - yMin) * 0.2\n\n  const xScale = d3.scaleLinear()\n    .domain([xMin, xMax + xPad])\n    .range([margin.left, CHART_WIDTH - margin.right])\n  const yScale = d3.scaleLinear()\n    .domain([yMin, yMax + yPad])\n    .range([CHART_HEIGHT - margin.bottom, margin.top])\n\n  // Compute line of best fit.\n  const [m, b] = lineOfBestFitConstants(xVals, yVals)\n  const p1 = [0, b]\n  const p2 = [(xMax + xPad), m * (xMax + xPad) + b]\n  const linePath = d3.line()([p1, p2].map(([x, y]) => [xScale(x), yScale(y)]))\n\n  const circles = data.map(({ d, t, w }, i) => {\n    const cx = xScale(difficultyIndex(d, w))\n    const cy = yScale(t)\n    return <circle cx={cx} cy={cy} r={5} key={i}></circle>\n  })\n\n  useEffect(\n    () => {\n      const svg = d3.select(\"#chart svg\")\n      svg.select(\"g.x-axis\").remove()\n      svg.select(\"g.y-axis\").remove()\n      const xAxis = d3.axisBottom().scale(xScale)\n      const yAxis = d3.axisLeft().scale(yScale)\n      const xAxisGroup = svg.append(\"g\")\n        .attr(\"class\", \"x-axis\")\n        .style(\"transform\", `translate(0, ${CHART_HEIGHT - margin.bottom}px)`)\n        .call(xAxis)\n      const yAxisGroup = svg.append(\"g\")\n        .attr(\"class\", \"y-axis\")\n        .style(\"transform\", `translate(${margin.left}px, 0)`)\n        .call(yAxis)\n      xAxisGroup.append(\"text\")\n        .style(\"transform\", `translate(${(CHART_WIDTH - margin.right + margin.left) / 2}px, 33px)`)\n        .style(\"fill\", \"black\")\n        .style(\"font-size\", 12)\n        .text(\"Difficulty Index\")\n      yAxisGroup.append(\"text\")\n        .style(\"fill\", \"black\")\n        .style(\"font-size\", 12)\n        .attr(\"x\", (CHART_HEIGHT - margin.bottom + margin.top) / 2 + 40) // guessing here\n        .attr(\"y\", -40)\n        .style(\"transform\", \"rotate(-90deg)\")\n        .style(\"transform-origin\", \"center\")\n        .text(\"Time (ms)\")\n    },\n    [data])\n\n  return (\n    <div id=\"chart\">\n      <svg width={CHART_WIDTH} height={CHART_HEIGHT}>\n        {circles}\n        {circles.length > 1 &&\n          <path d={linePath} stroke=\"black\"></path>}\n      </svg>\n    </div>\n  )\n}\n\nexport default Chart\n"},"relativePath":"fitts_law/chart.jsx"},{"fields":{"contents":"import React, { useState } from 'react'\n\nconst [FIELD_WIDTH, FIELD_HEIGHT] = [500, 500]\n\nfunction distanceBetween(p1, p2) {\n  return Math.pow(\n    Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2),\n    0.5\n  )\n}\n\nfunction randomBetween(lower, upper) {\n  return Math.random() * (upper - lower) + lower\n}\n\nfunction ClickingField({ recordDataPoint, finished, circleWidthRange }) {\n  const [currPos, setCurrPos] = useState([100, 100])\n  const [currWidth, setCurrWidth] = useState(10)\n  const [prevPos, setPrevPos] = useState()\n  const [prevClickTime, setPrevClickTime] = useState(Date.now())\n\n  const onClick = () => {\n    if (prevPos != undefined) {\n      const now = Date.now()\n      const t = now - prevClickTime\n      const d = distanceBetween(currPos, prevPos)\n      recordDataPoint({t, d, w: currWidth})\n    }\n    const newW = randomBetween(...circleWidthRange)\n    const newX = randomBetween(newW, FIELD_WIDTH - newW)\n    const newY = randomBetween(newW, FIELD_HEIGHT - newW)\n    setCurrWidth(newW)\n    setPrevPos(currPos)\n    setCurrPos([newX, newY]) // race condition?\n    setPrevClickTime(Date.now())\n  }\n\n  return (\n    <div id=\"clicking-field\">\n      <svg width={FIELD_WIDTH} height={FIELD_HEIGHT}>\n        {!finished &&\n          <circle\n            cx={currPos[0]}\n            cy={currPos[1]}\n            r={currWidth/2}\n            onClick={onClick}\n          />\n        }\n      </svg>\n    </div>\n  )\n}\n\nexport default ClickingField\n"},"relativePath":"fitts_law/clicking_field.jsx"},{"fields":{"contents":"import React from 'react'\n\n// Can't figure out how to render SVG images in MDX :(\nconst Image = () => {\n  return (\n    <div style={{width: \"100%\", display: \"flex\", justifyContent: \"center\"}}>\n    <svg width=\"200\" height=\"125\" viewBox=\"0 0 121 75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0)\">\n        <path d=\"M637.055 -699H-863V301.037H637.055V-699Z\" fill=\"white\"/>\n        <path d=\"M19.6193 18.8221L19.6461 19.0801L19.6491 19.1366L19.656 19.6446V19.6525L19.659 21.1248L19.7483 22.9225L19.8386 24.3531L19.8396 24.367V24.368L19.8803 25.1914V25.2162L19.8812 25.2172L19.9418 28.1578L19.9428 28.1776L19.9398 28.2421L19.9011 28.764L19.8505 30.0071L19.8217 30.0716L19.7146 30.4307L19.5955 30.6142L19.0072 30.9307L18.5082 30.7244L18.4665 30.6222L18.4 30.5845L18.2919 30.4019L18.1729 29.9714L18.1738 29.9446L18.2125 28.7243L18.1857 28.2263L18.1848 28.1776V28.1727L18.2006 25.2341L18.1957 24.4126V24.4077L18.1967 22.9642V22.9413L18.2522 21.1198H18.2532V21.104L18.3356 19.6158L18.3395 19.6128L18.3494 19.5146L18.4576 19.0136L18.4655 19.0077L18.4735 18.9581L18.5548 18.7051L19.0747 18.3311L19.6193 18.8221Z\" fill=\"black\"/>\n        <path d=\"M22.478 16.4641L23.7737 16.4889L23.7746 16.4899L23.8719 16.4978L24.6794 16.6308L24.6983 16.6536L24.8709 16.6973L25.0783 16.8104L25.0803 16.8143L25.0872 16.8163L25.1973 16.8798L25.2509 16.9721L25.363 17.0296L25.4076 17.0901L25.5128 17.4145L25.5009 17.5267L25.4781 17.6378L25.4295 17.6774L25.3451 17.8937L25.2033 18.0465L24.8015 18.2221L24.4364 17.857L23.7826 17.864L22.5187 17.9324L21.7706 18.0039L20.8728 18.1308L19.0919 18.4354L18.2248 18.6269L18.204 18.6289L18.202 18.6318L16.5522 18.9592L15.1206 19.3839L15.0501 19.3948L15.0432 19.4027L14.4043 19.5198L13.9092 19.6488L13.4578 19.8124L13.2842 19.8432L12.7852 19.3442L13.0669 18.8948L13.5223 18.6745L13.5263 18.6735L13.5272 18.6725L14.0183 18.4374L14.5868 18.1259L14.6949 18.0981L14.7148 18.0723L16.1722 17.6149L16.1801 17.614L16.1811 17.613L17.8141 17.112L17.8816 17.102L17.8885 17.0921L18.7794 16.9066L18.8082 16.9026L18.8112 16.9006L20.6168 16.5871L20.6912 16.5812L20.6942 16.5772L21.6218 16.5048L21.6446 16.5038L21.6456 16.5028L22.4264 16.4651L22.4641 16.4641H22.478Z\" fill=\"black\"/>\n        <path d=\"M13.5647 30.1956L14.1044 30.2452L14.6451 30.2859L15.9617 30.274H15.9696L16.0063 30.275L17.6661 30.3434L19.3695 30.396H19.3725L22.2218 30.5012L23.0443 30.5289H23.4203L23.4421 30.527L23.5026 30.4664L24.0473 30.9595L24.0532 31.0141L24.0562 31.0706L23.9411 31.406L23.9004 31.4585L23.6663 31.5726L23.6008 31.659L23.208 31.7691L23.1028 31.784L23.0968 31.7909L22.2674 31.8752L22.2268 31.8772L22.2258 31.8782L19.3804 32.0052H19.3685H19.3675L17.6621 32.0588H17.6393L15.9765 32.0707H15.9696L15.8724 32.0657L14.538 31.9199L13.9656 31.8742L13.9646 31.8732H13.9556L13.409 31.8207L13.3723 31.8018L13.1907 31.7671L12.8356 31.6272L11.9437 31.4278L11.4883 30.8553L12.0756 30.268H12.0845L12.9735 30.2809L13.3217 30.2095L13.4913 30.1926L13.5647 30.1956Z\" fill=\"black\"/>\n        <path d=\"M28.5744 18.3235L28.5466 18.4961L28.5327 18.5368L28.5119 18.7749L28.5883 19.0964L28.5992 19.1886L28.6031 19.1926L28.6696 20.0964L28.8403 21.0131L29.1547 22.0697L29.8304 24.0559L29.8314 24.0638L29.8324 24.0648L30.2808 25.4012L30.2986 25.5083L30.3115 25.5182L30.5516 26.8566L30.5576 26.924L30.5615 26.927L30.6697 28.1284L30.6727 28.1999L30.6687 28.2822L30.5715 29.1582L30.5625 29.1662L30.5447 29.2862L30.3711 29.8547L30.2024 29.9787L30.0308 30.2654L29.881 30.3458L29.7024 30.3914L29.6825 30.4142L29.5327 30.44L29.4306 30.448L29.2996 30.4341L29.1538 30.4013L29.0069 30.2158L28.742 30.0234L28.7043 29.9103L28.6795 29.7555L29.0278 29.4073L29.1468 28.9737L29.1607 28.2217L29.0734 27.1125L28.7658 25.8565L28.3859 24.5212L27.74 22.5251L27.7281 22.4516L27.7182 22.4437L27.4821 21.3236L27.4731 21.2403L27.4692 21.2363L27.3829 20.2383L27.3799 20.1797L27.3819 20.1331L27.4503 19.1906L27.4543 19.1866L27.4642 19.1003L27.5416 18.7749L27.5208 18.5368L27.5079 18.4991L27.4791 18.3235L28.0267 17.7759L28.5744 18.3235Z\" fill=\"black\"/>\n        <path d=\"M29.407 17.5936L30.4855 17.7186L30.5033 17.7285L30.5996 17.7404L31.8516 18.0638L31.8585 18.0718L31.9032 18.0787L33.3655 18.5609L33.3764 18.5758L33.432 18.5867L35.0809 19.2891L35.0948 19.3099L35.1553 19.3258L36.6484 20.1393L36.6831 20.1978L36.7912 20.2365L37.9421 21.178L38.0036 21.308L38.1197 21.3675L38.5522 21.9747L38.5899 22.0918L38.6405 22.1235L38.9302 22.7217L38.9669 22.8805L39.0106 22.9499L39.1723 23.6781L39.1892 23.8289L39.1951 23.8418L39.2318 24.451L39.2338 24.5125L39.2298 24.5948L39.1743 25.2764L39.1663 25.2923L39.1524 25.4133L38.9947 26.0979L38.959 26.1544L38.9312 26.2824L38.5869 27.0404L38.5235 27.08L38.4748 27.2259L37.444 28.59L37.3815 28.6208L37.3498 28.6982L36.694 29.349L36.6216 29.3787L36.5928 29.4373L35.8507 30.0048L35.8011 30.0216L35.7853 30.0514L34.9301 30.608L34.808 30.6447L34.7783 30.6903L33.9588 31.0475L33.8993 31.0603L33.8884 31.0752L32.2593 31.6477L32.1611 31.6645L32.1492 31.6784L31.3307 31.859L31.1383 31.8808H31.1363L30.5251 31.8788L30.4775 31.8768L29.8892 31.8401L29.8852 31.8362L29.788 31.8263L29.2285 31.7102L29.2116 31.6893L29.0747 31.6586L28.6531 31.4612L28.6104 31.3937L28.4765 31.3411L28.1451 31.0296L28.1183 30.9661L28.0667 30.9403L27.8425 30.6278L27.8108 30.5276L27.774 30.5028L27.6203 30.1149L27.5846 29.9323L27.5816 29.9284L27.5687 29.5087V29.4928L27.5697 29.4591L27.5965 29.0752L28.0479 28.6555L28.4983 29.0504L28.5429 29.3976L28.6243 29.6992L28.7562 29.9204L28.914 30.0603L29.2057 30.2002L29.5261 30.3044L29.9438 30.345L30.3922 30.3083L30.9081 30.1704L30.916 30.1694L30.917 30.1685L31.675 29.969L33.1423 29.3539L33.8259 28.9184L34.6156 28.3866L35.2634 27.837L35.8557 27.2705L36.7962 26.0711L37.072 25.5016L37.2099 25.0254L37.2357 24.5224L37.204 24.071L37.0492 23.5055L36.8498 23.0372L36.5561 22.5948L35.6206 21.7515L34.2892 20.9776L32.7217 20.304L31.3307 19.796L30.169 19.4488L29.2066 19.2643L28.0756 19.2018L27.5627 19.2296L27.1996 19.2891L27.147 19.294L27.1272 19.302L26.8484 19.548L26.3008 19.0004L26.3047 18.9349L26.3216 18.791L26.3623 18.7553L26.4883 18.4617L26.5478 18.4061L26.5726 18.3644L26.7095 18.2871L26.7849 18.1541L27.1332 17.9488L27.279 17.9081L27.3038 17.8753L27.8703 17.7196L28.0072 17.6997L28.0141 17.6928L29.2374 17.5916L29.3108 17.5886L29.407 17.5936Z\" fill=\"black\"/>\n        <path d=\"M45.849 22.3691L46.3302 22.385L46.3331 22.388L46.5097 22.4148L46.8193 22.508L47.2399 23.0805L47.229 23.0954L47.2369 23.1033L47.1804 23.2848L47.234 23.1648L47.232 23.1827L47.1685 23.3245L47.1397 23.4148L47.1109 23.4565L47.106 23.4585L47.1 23.4664L47.102 23.4605L46.8679 23.5825L46.8153 23.6539L46.5147 23.7452L46.3679 23.768L46.3619 23.7749L45.8857 23.8126L45.8649 23.8136H45.8639L44.2428 23.9L43.3062 23.9783L43.2507 23.9803L43.2199 23.9793L43.0165 23.9704L43.0056 23.9585L42.711 23.8702L42.6544 23.8335L42.3965 23.3523L42.4957 23.0279L42.5899 22.89L43.0413 22.6519L43.0999 22.7114L43.1237 22.7074L43.1287 22.7015L44.0592 22.5219L44.1327 22.515L44.1366 22.511L45.7617 22.3721L45.8262 22.3691H45.849Z\" fill=\"black\"/>\n        <path d=\"M46.2104 24.7481L46.6549 24.7928L46.7908 24.7898L46.8126 24.7888L47.2898 24.9545L47.4922 25.1142L47.5577 25.2491L47.648 25.3047L47.6648 25.3374L47.7273 25.5934L47.6648 25.6559L47.4754 26.0299L47.27 26.1797L46.9118 26.2978L46.8851 26.3266L46.771 26.3375L46.3702 26.4535L46.1985 26.4783L46.1787 26.4873L45.9564 26.5012L44.9812 26.6311L44.8661 26.6391L44.8274 26.6381L44.0873 26.6043L44.0695 26.5964L43.881 26.5657L43.4564 26.4277L43.4236 26.3821L43.2708 26.3335L42.9742 26.1232L42.9573 26.0904L42.9127 26.0726L42.6766 25.8533L42.626 25.7382L42.377 25.4237L42.9246 24.8761L43.0456 24.89L43.1746 24.9188L43.1806 24.9267L43.2282 24.9346L43.4633 25.016L43.7133 25.0388L44.0725 25.0358L44.755 24.9515L45.7243 24.8077L45.9376 24.763L46.1221 24.7432L46.2104 24.7481Z\" fill=\"black\"/>\n        <path d=\"M55.2495 17.2908L55.2475 17.3354L55.2019 17.892V17.894L55.184 18.0944L55.2465 18.653L55.2485 18.6916L55.2495 18.6926L55.3834 21.1322L55.555 23.9795V23.9805L55.6106 24.8089L55.6126 24.8585V24.8595L55.6503 27.2416V27.2574V27.2773L55.6344 28.0323L55.6334 28.0343L55.6295 28.1097L55.4886 29.4659L55.4846 29.4748L55.4797 29.5313L55.4102 29.9202L55.2892 30.7238L55.0828 31.0959L55.0064 31.2804L54.9727 31.2943L54.9528 31.33L54.2941 31.5751L53.5828 31.2804L53.2871 30.5681L53.3189 30.3181L53.5173 29.5442L53.5788 29.2228L53.7048 27.9281L53.7534 27.2237L53.7564 24.8804L53.7455 24.05V24.0371V24.0361L53.7474 21.1779L53.7504 21.1114L53.9518 18.6718L53.9558 18.6688L53.9647 18.5875L54.0917 18.015L54.1115 17.7948L54.1562 17.2442L54.7018 16.7432L55.2495 17.2908Z\" fill=\"black\"/>\n        <path d=\"M58.722 25.7922H59.0504L59.095 25.7942L59.7647 25.8408L59.7746 25.8508L59.983 25.8914L60.2925 26.0174L60.3153 26.0522L60.4115 26.0809L60.9413 26.4331L60.98 26.5065L61.0703 26.5472L61.4116 26.9381L61.4761 27.1097L61.5336 27.1514L61.6576 27.5215L61.6884 27.7119L61.6864 27.7625L61.6586 28.085L61.6477 28.0949L61.609 28.2685L61.5118 28.4788L61.4622 28.5106L61.4235 28.6118L61.3064 28.7398L61.1358 28.8152L61.4255 29.1039L61.3659 29.3539L61.2509 29.5821L61.1507 29.8063L61.0038 29.9005L60.8937 30.1009L60.4125 30.4055L60.2211 30.4621L60.1943 30.4958L59.5802 30.6248L59.4522 30.6386H58.717H58.716L58.598 30.6267L57.9085 30.4829L57.8926 30.4621L57.7676 30.4323L57.4313 30.2616L57.4045 30.219L57.3221 30.1882L57.085 29.9868L57.0473 29.9035L56.9818 29.8678L56.8112 29.6079L56.7854 29.5235L56.7576 29.5047L56.6624 29.2557L56.6396 29.1326L56.6297 29.1237L56.586 28.7626L56.582 28.6971L56.583 28.6614L56.6068 28.2983L56.6108 28.2953L56.6197 28.2169L56.6862 27.9322L56.7586 27.5522L56.7666 27.5453L56.7775 27.4818L56.9045 27.1197L56.9303 27.1008L56.9561 27.0145L57.1366 26.7308L57.1961 26.698L57.2309 26.6196L57.6823 26.2159L57.7735 26.1811L57.8033 26.1335L58.1118 25.9778L58.1684 25.9639L58.1793 25.948L58.5017 25.8319L58.722 25.7922ZM58.4859 27.073L58.3252 27.1276L57.9849 27.3965L57.8599 27.5721L57.7289 27.8389L57.6426 28.1167L57.6346 28.3419L57.6356 28.6455L57.6892 28.9233L57.7279 29.0394L57.8241 29.1455L57.9759 29.2566L58.2111 29.3569L58.7627 29.4779L59.3163 29.4442L59.727 29.2755L60.1089 28.9818L60.1883 28.9541L60.2121 28.9154L60.357 28.841L60.3679 28.8291L59.9968 28.459L60.4492 27.9203L60.5286 27.9054L60.5276 27.8965L60.4463 27.7477L60.2032 27.5363L59.7687 27.3211L59.5097 27.2467L59.5077 27.2447L59.4988 27.2437L58.9422 27.0701L58.725 27.0621L58.4859 27.073Z\" fill=\"black\"/>\n        <path d=\"M62.4645 26.8504L63.2403 26.8831L63.2423 26.8841L63.2999 26.8881L64.0142 26.9823L64.0241 26.9942L64.156 27.017L64.8753 27.275L64.8971 27.3067L64.9993 27.3355L65.4874 27.6371L65.541 27.7323L65.6581 27.7889L65.9577 28.1619L66.0172 28.3326L66.0698 28.3712L66.1244 28.5419L66.1571 28.7443L66.1373 28.8951L66.5807 28.9645L66.5946 28.9804L66.7355 29.0082L67.0083 29.1193L67.0421 29.1699L67.171 29.2135L67.3833 29.3772L67.43 29.4725L67.5212 29.5181L67.6701 29.7185L67.7316 29.903L67.7822 29.9407L67.9766 30.5747L68.0054 30.7632L68.0094 30.7672L68.0391 31.6204V31.6472L68.0272 31.7811L67.8258 32.8714L67.8129 32.8813L67.7951 32.9815L67.3724 34.1532L67.3526 34.1671L67.3357 34.2355L66.7603 35.3507L66.7345 35.3665L66.7166 35.4231L65.925 36.5809L65.8863 36.6017L65.8644 36.6573L64.9884 37.6216L64.92 37.6523L64.8902 37.7119L63.8743 38.4817L63.7751 38.5155L63.7473 38.5591L63.2195 38.8131L63.1421 38.831L63.1282 38.8498L62.6907 38.9937L62.6094 39.0076L62.6004 39.0175L62.0617 39.1246L61.9526 39.1355L61.9506 39.1395L61.4764 39.1623L61.4397 39.1633L61.3266 39.1544L60.8722 39.083L60.8652 39.075L60.7889 39.0641L60.4109 38.955L60.3871 38.9232L60.2551 38.8875L59.8444 38.6474L59.8037 38.576L59.6966 38.5304L59.3453 38.1692L59.2977 38.0522L59.2303 38.0125L58.9872 37.5631L58.9703 37.4976L58.9505 37.4847L58.7719 37.0313L58.762 36.9767L58.7511 36.9678L58.5943 36.4311L58.5794 36.3289L58.5715 36.3219L58.5001 35.7217L58.4951 35.6433L58.4961 35.6017L58.5328 35.0471L58.5358 35.0441L58.5427 34.9697L58.6469 34.4409L58.6747 34.4181L58.7213 34.2504L58.9991 33.7921L59.0289 33.7752L59.0467 33.7256L59.4019 33.306L59.7749 33.1333L60.265 33.6224L60.1936 33.8774L59.9446 34.2852L59.8265 34.6969L59.7531 35.1324L59.764 35.5719L59.8642 36.0719L60.022 36.5333L60.1896 36.8993L60.4089 37.2277L60.647 37.4738L60.894 37.6166L61.1103 37.6791L61.4476 37.7019L61.8266 37.6841L62.271 37.5968L62.6252 37.4767L63.0508 37.2734L63.9586 36.5898L64.7582 35.7158L65.4954 34.6463L66.0133 33.6085L66.4031 32.545L66.5649 31.5916L66.552 30.9051L66.424 30.4735L66.4081 30.4507L66.3535 30.407L66.2494 30.3614L65.8376 30.283L63.9854 30.2533H63.9844L63.9507 30.2513L62.6312 30.165L62.6282 30.162L62.5528 30.155L61.7571 30.0082L61.7413 29.9894L61.6024 29.9586L61.2789 29.8128L61.2532 29.7721L61.1589 29.7403L60.9426 29.5796L60.899 29.4923L60.8107 29.4487L60.6857 29.284L60.6371 29.1421L60.5884 29.1084L60.518 28.9159L60.4763 28.6877L60.4783 28.6441L60.4932 28.4228L60.4972 28.4189L60.5091 28.3206L60.5617 28.0984L60.5884 28.0786L60.6222 27.9456L60.8246 27.5776L60.8771 27.5458L60.9129 27.4536L61.0875 27.2621L61.272 27.1807L61.3335 27.0875L61.5647 26.9893L61.7313 26.9545L61.7452 26.9387L62.3375 26.8563L62.4357 26.8494L62.4645 26.8504ZM62.0657 28.2968L61.9417 28.3593L61.8554 28.4089L61.78 28.5101L61.7958 28.526L61.8921 28.5965L62.0716 28.6669L62.7482 28.783L64.0181 28.8197L64.2453 28.8256L64.286 28.785L64.3693 28.7919L64.659 28.8355L64.8009 28.8395L64.7205 28.7601L64.3614 28.5607L63.7384 28.3623L63.1312 28.2383L62.4873 28.2185L62.0657 28.2968Z\" fill=\"black\"/>\n        <path d=\"M70.3214 29.895L71.1706 29.9069L71.1736 29.9079L71.2926 29.9188L71.8055 30.0151L71.8303 30.0468L72.0307 30.0994L72.2917 30.2492L72.3929 30.4238L72.5655 30.524L72.6885 30.7383L72.7689 31.0369L72.7857 31.0528L72.8095 31.3683L72.8115 31.4258L72.7768 31.6481L72.6697 31.9844L72.629 32.0141L72.5843 32.158L72.3264 32.54L72.2718 32.5687L72.2411 32.6421L71.992 32.8852L72.5923 32.8554L72.631 32.8545L72.6935 32.8574L73.4623 32.9199L73.6627 32.916H73.6786L73.9405 32.9676L74.012 32.9973L74.2322 32.9993L74.7312 33.5033L74.4584 33.9507L74.1945 34.0876L74.0705 34.172L73.7471 34.2732L73.7292 34.292L73.4981 34.3099L72.7074 34.3853L72.631 34.3892L72.5943 34.3882L71.5139 34.3357L71.5129 34.3337L71.4722 34.3317L70.7182 34.2484L70.6924 34.2196L70.4057 34.1253L70.2995 34.046L70.0535 33.5539L70.0981 33.3247L70.1676 33.1501L70.2192 33.1154L70.2658 32.9904L70.8005 32.3584L71.1954 31.8118L71.3264 31.5508L71.3452 31.4219V31.4189L71.0505 31.3355L70.2916 31.3157L70.2906 31.3147L70.2301 31.3117L69.6636 31.2463L69.6467 31.2284L69.4384 31.1768L69.3193 31.1143L69.0078 30.5945L69.4096 30.0349L69.5287 29.9952L69.6576 29.9734L69.6666 29.9635L70.2271 29.9L70.3114 29.895H70.3214Z\" fill=\"black\"/>\n        <path d=\"M84.3672 12.6617L84.3354 12.8442L84.2888 12.9792L84.2213 13.0258L84.1519 13.1954L83.8681 13.4782L83.8225 13.497L83.8046 13.5337L82.502 14.5229L81.5377 15.3304L80.492 16.2412L79.9791 16.7233L79.4959 17.268L79.0326 17.8791L78.5386 18.646L78.0901 19.4169L77.7022 20.2989L77.3619 21.2721L77.0802 22.3347L76.8768 23.4627L76.7161 24.7435L76.6337 25.9697L76.6318 27.2217L76.7587 28.5908L76.9224 29.6931L77.1774 30.8122L77.5326 31.9203L77.9294 32.8162L78.3788 33.599L78.8828 34.2835L79.3819 34.8788L80.4642 35.855L80.4672 35.86L80.4732 35.8619L81.1528 36.4959L81.6339 36.8491L81.8968 37.3719L81.247 38.0217L80.8769 37.9057L80.3551 37.5436L79.5594 37.0019L79.5247 36.9364L79.4404 36.8997L78.4106 35.8054L78.3967 35.7717L78.3699 35.7588L77.851 35.0941L77.8381 35.0564L77.8153 35.0445L77.3252 34.2845L77.3173 34.2587L77.3044 34.2518L76.8282 33.4095L76.8153 33.3628L76.7984 33.3529L76.3758 32.4005L76.3629 32.343L76.35 32.333L75.978 31.1713L75.967 31.1048L75.9581 31.0979L75.726 29.9272L75.721 29.8796L75.718 29.8766L75.5821 28.7347L75.5791 28.6881L75.5781 28.6871L75.5166 27.2723V27.2475L75.5146 25.9519V25.9509L75.5156 25.9181L75.5891 24.6542L75.59 24.6532L75.592 24.6185L75.7567 23.3029L75.7587 23.301L75.7607 23.2762L75.97 22.1065L75.973 22.1035L75.977 22.0747L76.2498 20.9586L76.2557 20.9546L76.2617 20.9209L76.598 19.8941L76.605 19.8891L76.6099 19.8614L76.9929 18.9119L77.0018 18.907L77.0078 18.8802L77.4165 18.0289L77.4393 18.0151L77.4552 17.9615L77.9721 17.1618L77.988 17.1539L77.9969 17.1271L78.49 16.4743L78.5019 16.4684L78.5068 16.4525L79.0078 15.8493L79.0158 15.8453L79.0187 15.8354L79.5138 15.2739L79.5436 15.26L79.5565 15.2292L80.5773 14.2629L80.6269 14.2431L80.6458 14.2064L81.6746 13.4474L81.6974 13.4395L81.7044 13.4266L83.0774 12.5158L83.0794 12.5149L83.0804 12.5139L83.378 12.3164L83.4485 12.2529L83.8165 12.1121L84.3672 12.6617Z\" fill=\"black\"/>\n        <path d=\"M85.7505 16.3784L86.2754 16.4181L86.3021 16.4469L86.6891 16.5918L86.7952 16.684L86.8061 16.7078L86.8319 16.7177L87.0462 17.2346L87.0373 17.3448L86.9996 17.5928L86.9609 17.6265L86.8706 17.9093L86.6047 18.2783L86.5958 18.2833L86.5908 18.2972L85.3487 19.9024L84.933 20.6792L84.8219 21.0502L84.8239 21.2149L84.9003 21.2705L85.195 21.3786L85.6454 21.457L86.6811 21.5225L87.4252 21.5602L88.8211 21.581L88.8231 21.583L88.9868 21.6058L89.4342 21.7328L89.8003 22.2209L89.4421 22.7071L89.0056 22.842L88.8578 22.8648L88.8518 22.8708L87.448 22.96L87.4272 22.961H87.4262L86.6653 22.9878L86.6375 22.9888L86.6067 22.9878L85.5243 22.9422L85.5164 22.9392L85.4013 22.9273L84.8438 22.8082L84.8319 22.7934L84.7346 22.7755L84.2842 22.5989L84.2396 22.5324L84.0749 22.4709L83.7862 22.2189L83.6344 21.8836L83.556 21.8201L83.4945 21.5046L83.4816 21.3717L83.4886 21.2745L83.5491 20.8627L83.556 20.8568L83.5659 20.7854L83.7157 20.2536L83.7386 20.2357L83.7644 20.1316L84.2346 19.2436L84.2574 19.2297L84.2733 19.1801L85.1335 17.943L84.0511 18.0214L84.0005 18.0234H83.186H83.185L83.0917 18.0164L82.93 17.9896L82.4736 17.4499L82.8963 16.9172L83.0491 16.8805H83.05L83.8288 16.684L83.8824 16.6771L83.8864 16.6711L85.561 16.3874L85.693 16.3765L85.7505 16.3784Z\" fill=\"black\"/>\n        <path d=\"M93.4262 16.3946L93.4401 16.4363L93.4698 16.6139L93.4609 16.6228L93.4708 16.7339L93.5938 17.1923L93.5958 17.2081L93.5978 17.2101L93.7903 18.0008L93.7922 18.0127L93.7942 18.0147L94.0323 19.0544L94.5324 20.7956L94.5373 20.8273L94.5423 20.8303L94.7764 21.8015L94.7883 21.9067L94.833 21.9504L94.8151 22.1061L94.8062 22.1428L94.1276 22.6766L93.6603 22.497L93.6414 22.4801L93.5333 22.2381L93.445 22.1726L93.1494 21.2192L93.1424 21.1755L93.1365 21.1696L92.7049 19.3888V19.3868L92.44 18.3471L92.4271 18.2409L92.4212 18.2349L92.3448 17.4234L92.3418 17.3609L92.3438 17.3024L92.3904 16.8024V16.6297L92.3745 16.6139L92.4033 16.4402L92.4192 16.3906L92.9222 16.0315L93.4262 16.3946Z\" fill=\"black\"/>\n        <path d=\"M92.9776 15.3118L93.7316 15.3237L93.7336 15.3247L93.8546 15.3376L94.7128 15.5151L94.7178 15.5221L94.7654 15.529L96.195 15.9546L96.2069 15.9705L96.2783 15.9854L97.0065 16.3049L97.0214 16.3277L97.0829 16.3445L97.7734 16.7503L97.8092 16.8118L97.9084 16.8515L98.4282 17.3327L98.4907 17.4755L98.586 17.5301L98.8995 18.0758L98.9263 18.177L98.957 18.1978L99.0642 18.4835L99.1108 18.7355L99.1167 18.7494L99.1227 18.9944L99.1902 19.4468L99.1991 19.5609L99.1882 19.6859L99.0939 20.2385L99.0661 20.2614L99.0155 20.4608L98.8796 20.7108L98.835 20.7366L98.8062 20.8179L98.4094 21.3011L98.2844 21.3596L98.2298 21.4568L97.6911 21.7842L97.6256 21.8031L97.6097 21.8259L97.078 22.0571L96.9788 22.0779L96.9659 22.0938L96.5016 22.1969L96.3696 22.2118H96.3379L95.9936 22.193L95.9688 22.1672L95.5948 21.9896L95.5164 21.8944L95.4886 21.816L95.4529 21.7941L95.3964 21.6731L95.3765 21.5848L95.3636 21.5739L95.3398 21.4519L95.3319 21.3725L95.7248 20.9786L95.9569 21.0878L95.9579 21.0868L96.2466 21.0521L96.5859 20.9449L96.9609 20.7227L97.332 20.3606L97.6316 19.9984L97.6603 19.923L97.7119 19.5461L97.6861 19.2802L97.6207 19.1641L97.6018 19.0887L97.577 19.0728L97.4956 18.8754L97.206 18.4776L96.818 18.05L96.2982 17.6749L95.6742 17.3783L94.3249 16.8684L93.5481 16.6114L92.8764 16.4695L92.3804 16.417L92.3744 16.411L92.2782 16.3951L92.2137 16.3753L92.0232 16.5658L91.4756 16.0181V15.9616L92.0232 15.414L92.0808 15.4715L92.1135 15.4735L92.1284 15.4755L92.2306 15.4318L92.3506 15.407L92.3605 15.3951L92.8804 15.3177L92.9687 15.3118H92.9776Z\" fill=\"black\"/>\n        <path d=\"M102.061 22.826L102.071 22.827L102.436 23.2427L102.386 23.4421L102.364 23.4818L102.271 23.5373L102.214 23.6415L101.939 23.8111L101.852 23.8359L101.835 23.8598L101.531 23.9619L101.509 23.9649L101.506 23.9689L101.195 24.0582H101.193L100.733 24.1911L100.71 24.1951L100.708 24.1981L100.177 24.327L100.145 24.33L100.143 24.334L97.7769 24.7626L97.76 24.7646L97.7581 24.7655L95.4911 25.1138L95.4752 25.1158V25.1167L94.1042 25.2973H94.0972L92.9464 25.4422H92.9394H92.9384L91.6824 25.59L91.6636 25.591V25.592L89.1179 25.8271L89.0712 25.8301H89.0702L87.2716 25.8826L87.2507 25.8836H87.2468L83.9758 25.8678L83.952 25.8668L82.2902 25.7953L82.2873 25.7924L82.1603 25.7745L82.0521 25.7428L81.6979 25.2675L81.6543 25.2239L81.8011 25.0771L82.0561 24.7378L82.1563 24.708L82.1722 24.706L82.2019 24.6763L82.2238 24.6991L82.2882 24.6892L82.2912 24.6862L83.951 24.6147H83.9609L87.223 24.5195L89.0117 24.4253L91.5574 24.2774L92.8055 24.1772L93.9474 24.0512H93.9484L95.3205 23.8925H95.3215L97.5944 23.6088L99.9625 23.2705L100.488 23.1762H100.489L100.947 23.0879L101.246 23.0115H101.25L101.251 23.0105L101.562 22.9331L101.576 22.9312L101.577 22.9302L101.891 22.8597L101.925 22.8558L101.957 22.8438L102.01 22.822L102.061 22.826Z\" fill=\"black\"/>\n        <path d=\"M95.5914 27.261L95.5537 27.4376L95.3692 27.8513L95.2204 28.262L94.9832 29.1628L94.8632 29.6202L94.3929 31.7254L94.389 31.7284L94.386 31.7502L94.1727 32.5449L94.1618 32.5528L94.1529 32.6054L93.9078 33.2771L93.8334 33.3287L93.761 33.531L93.4098 33.9586L93.2848 34.0172L93.2292 34.1233L92.8373 34.3922L92.378 34.536L92.3333 34.5559L92.13 34.5599H92.1121L91.876 34.5281L91.4434 34.41L91.4067 34.3614L91.2053 34.3019L90.7827 34.0251L90.741 33.9467L90.6369 33.9011L90.2102 33.4437L90.1805 33.3683L90.1299 33.3406L89.3709 32.1679L88.9761 31.6728L88.8818 31.5845L88.4572 32.1719L88.4175 32.1917L88.3977 32.2433L88.0832 32.5786L87.9969 32.6163L87.9612 32.6848L87.6387 32.9149L87.1149 33.0836L87.0236 33.0786L86.6883 33.0449L86.5484 32.9735L86.2647 32.8802L86.0176 32.6997L85.9343 32.533L85.7964 32.4556L85.6129 32.15L85.5722 32.0042L85.5335 31.9754L85.2071 30.9615L85.1912 30.8613L85.1803 30.8524L85.0255 29.9535L85.0146 29.8305L85.0156 29.7928L85.0622 28.9198L84.8916 28.7491L84.9839 28.4455L85.0642 28.3245L85.1049 28.3027L85.1376 28.1539L85.6942 27.7094L86.2508 28.1578L86.2845 28.3096L86.2934 28.388L86.2974 28.392L86.4095 29.6986L86.6367 30.4605L87.0097 31.2879L87.1625 31.2552L87.351 31.1272L88.113 30.3712L88.3669 30.267L88.4215 30.1976L88.6407 30.142L88.8064 30.1212L89.0991 30.1897L89.3957 30.3365L89.4483 30.4218L89.5892 30.4853L89.9007 30.8375L89.9156 30.8782L89.9444 30.893L90.3233 31.4318L91.2361 32.3693L91.6151 32.6332L91.879 32.7384L92.0387 32.7532L92.1567 32.6937L92.3572 32.4368L92.7084 31.9308L93.0159 31.28L93.7491 29.2749L93.9058 28.8255L93.9148 28.8186L93.9217 28.7848L94.3106 27.9138L94.3175 27.9088L94.3225 27.888L94.5447 27.4653L94.5477 27.4634L94.5497 27.4574L94.7779 27.0467L95.1569 26.8254L95.5914 27.261Z\" fill=\"black\"/>\n        <path d=\"M103.381 10.7129L103.692 10.82L103.695 10.824L103.708 10.826L104.013 10.9441L104.352 11.0542L104.463 11.2089L104.794 11.3756L105.893 12.8588L105.922 12.9431L105.964 12.9679L106.826 14.5642L106.843 14.6327L106.866 14.6476L107.222 15.5018L107.235 15.5653L107.249 15.5762L107.817 17.3481L107.829 17.4245L107.84 17.4334L108.077 18.5049L108.082 18.5535L108.087 18.5574L108.244 19.5108L108.246 19.5337L108.248 19.5376L108.506 21.4077L108.509 21.4593L108.512 21.4643L108.663 23.4564L108.664 23.4872V23.4892L108.733 25.2085V25.2412V25.2551L108.716 26.2849L108.715 26.2859L108.714 26.3216L108.659 27.1659L108.657 27.1669L108.655 27.2066L108.466 28.7483L108.461 28.7523L108.453 28.8177L108.259 29.6719L108.251 29.6779L108.243 29.7285L108.003 30.4676L107.998 30.4706L107.995 30.4904L107.715 31.2394L107.706 31.2464L107.699 31.2771L107.415 31.9071L107.407 31.9131L107.401 31.9349L107.118 32.4855L107.107 32.4925L107.099 32.5183L106.729 33.1373L106.713 33.1463L106.703 33.177L106.06 34.0838L106.018 34.1056L105.997 34.1602L105.245 34.9311L105.208 34.9469L105.193 34.9787L104.558 35.4956L104.474 35.5263L104.448 35.568L103.846 35.8745L103.686 35.9132L103.669 35.9321L103.41 35.9737L103.315 35.9817H103.288L102.558 35.947L102.037 35.4003L102.568 34.8527L103.229 34.8318L103.342 34.8011L103.815 34.5183L104.372 34.057L105.02 33.3119L105.607 32.4528L105.93 31.8625L106.189 31.3397L106.445 30.7464L106.692 30.0479L106.869 29.3584L107.005 28.5528L107.16 27.0687L107.172 26.276L107.144 25.2759L107.045 23.5923L106.816 21.6379L106.546 19.7956L106.372 18.8809L106.123 17.853L105.602 16.1308L105.284 15.3609L104.443 13.8856L103.346 12.4818L103.266 12.2526L103.196 12.202L103.115 11.952L103.03 11.834L102.845 11.6871L102.631 11.2457L103.196 10.6812L103.381 10.7129Z\" fill=\"black\"/>\n        <path d=\"M20.923 49.5767L20.93 49.6352L20.9508 49.6997L20.9806 49.8882V49.8902L20.9776 50.4348L20.9825 51.1878L21.0887 52.3734L21.3268 54.0213L21.3298 54.054L21.3318 54.059L21.6304 56.815L21.6324 56.8537L21.6334 56.8577L21.7723 58.9223L21.7742 58.9887L21.7713 59.0612L21.6939 60.081L21.676 60.836L21.6711 60.8479L21.6334 61.0821L21.4548 61.6128L20.8585 62.0384L20.2732 61.6426L20.0688 61.1317L20.0172 60.8697L20.0073 60.8469L19.9795 60.0999L19.8704 59.0969L19.8674 59.0383L19.8654 59.0344L19.7672 56.9847L19.5162 54.2435L19.5142 54.2108L19.5132 54.2078L19.418 52.5202L19.416 52.4706L19.417 52.4409L19.4607 51.1958L19.4626 51.1918L19.4686 51.1124L19.5857 50.3277L19.5966 50.3188L19.6134 50.2126L19.789 49.6898L19.8069 49.6769L19.8228 49.6094L19.8347 49.5876L19.8357 49.5747L19.8456 49.5658L19.8813 49.4953L20.0212 49.41L20.3793 49.0925L20.923 49.5767Z\" fill=\"black\"/>\n        <path d=\"M23.7624 48.0537L24.2584 48.0706H24.2674L25.8656 48.147H25.8756L26.1801 48.1678L26.444 48.1579L26.4659 48.1569L27.0135 48.7045L26.4867 49.2512L26.2833 49.2591L26.0601 49.3454L25.9887 49.3583L25.9797 49.3702L24.4321 49.7433L24.3765 49.7492L24.3715 49.7552L23.8894 49.8385L23.8695 49.8405L23.8656 49.8425L23.313 49.9258L23.311 49.9268L22.6423 50.033H22.6413L19.7126 50.5419L19.6749 50.5449L19.669 50.5489L17.655 50.8266L17.1262 50.9209L16.9596 50.9358L16.9546 50.9378L16.0111 50.9536L15.2512 51.0538L15.1321 51.0618L14.9267 51.037L14.6132 50.9616L14.391 50.9268L14.145 50.914L14.141 50.909L14.018 50.8931L13.8007 50.8346L13.3453 50.779L13.1132 50.7522L12.7104 50.7195L12.3711 50.3514L12.7124 49.9824L13.0953 49.9516L13.3066 49.907H13.3076L13.7412 49.8038L13.9416 49.7224L14.014 49.7076L14.0239 49.6947L14.2541 49.6351L14.4406 49.5597L14.7005 49.4149L14.9396 49.3524L14.9694 49.3177L15.7234 49.1748L16.6103 48.8911L16.7324 48.8722L16.7641 48.8534L17.3167 48.7621L17.3177 48.7611L19.3128 48.392L19.41 48.3831L19.4219 48.3772L22.3953 48.1123L22.428 48.1113L22.43 48.1103L23.1116 48.0706L23.1393 48.0696H23.1403L23.7039 48.0537L23.7316 48.0527L23.7624 48.0537Z\" fill=\"black\"/>\n        <path d=\"M32.8999 53.2324L33.397 53.3891L33.6837 53.784L33.4337 54.164L32.9615 54.3683L32.7988 54.4021L32.7868 54.416L30.7878 54.6501H30.7868L28.6667 54.91L28.6012 54.914L28.6002 54.915L27.9057 54.9319L27.8898 54.9328L27.8631 54.9319L27.4077 54.911L27.0019 54.4864L26.8799 54.3644L26.9305 54.3138L27.368 53.8207L27.7877 53.7701L28.4266 53.6183L28.5059 53.6084L28.5109 53.6034L30.635 53.3683L30.6568 53.3663H30.6578L32.6658 53.2056L32.7164 53.2036L32.8999 53.2324Z\" fill=\"black\"/>\n        <path d=\"M27.8054 55.9132L28.3749 55.7971L28.4433 55.7902L28.4463 55.7872L29.0683 55.7297L29.115 55.7267L30.7093 55.687H30.7271H30.7281L31.8671 55.688L31.9524 55.6939L33.1092 55.8418L33.1131 55.8477L33.1756 55.8547L33.7808 56.0055L33.7878 56.0154L33.8413 56.0253L34.0675 56.1116L34.2372 56.3616L34.39 56.4817L34.3959 56.5025L34.3989 56.5134L34.4237 56.6583L34.3225 56.7972L34.1856 57.0412L34.1499 57.062L34.1251 57.069L34.1211 57.074L34.0904 57.0849L34.0408 57.0928L33.8731 57.1394L33.7898 57.1325L33.5794 57.0988L33.002 57.062L31.8532 57.0412L30.7222 57.0204L29.1497 57.0253L28.5505 57.0571L27.9086 57.1156L27.8729 57.1176H27.8719L27.4939 57.1305L27.474 57.1315L27.3917 57.1255L27.3153 57.1146L26.8242 56.5452L26.8292 56.4698L26.8361 56.4182L26.8708 56.3874L26.9264 56.2386L26.9393 56.184L26.9671 56.1305L26.9681 56.1265L26.9701 56.1245L26.974 56.1166L26.977 56.0948L26.9919 56.0819L27.0127 56.0392L27.105 55.9836L27.5187 55.6255L27.8054 55.9132Z\" fill=\"black\"/>\n        <path d=\"M42.1087 56.3638L42.7992 56.3886L42.8071 56.3925L42.942 56.4074L43.8974 56.6287L43.9113 56.6465L44.0145 56.6674L44.4937 56.8757L44.5314 56.9322L44.6584 56.9799L44.9282 57.215L44.9738 57.3142L45.0443 57.3549L45.1266 57.4928L45.205 57.7765L45.203 57.8172L45.1931 57.9482L45.1762 57.964L45.0969 58.2061L45.3697 58.2408L45.3836 58.2567L45.5542 58.2914L46.0582 58.5027L46.08 58.5355L46.1693 58.5623L46.6495 58.8758L46.6832 58.9383L46.7686 58.974L47.1852 59.3976L47.2031 59.4413L47.2388 59.4581L47.3926 59.6536L47.4253 59.7478L47.4729 59.7756L47.718 60.2429L47.7249 60.2707L47.7339 60.2766L47.9402 60.7141L48.1287 60.9016L48.2408 61.1715L48.4571 61.4642L48.2388 61.9929L47.7091 62.2122L47.471 62.1735L47.3589 62.1358L47.2864 62.0336L47.0424 61.9235L46.7824 61.6279L46.7437 61.5247L46.6872 61.4909L46.4054 60.9711L46.1386 60.5445L46.1326 60.5217L46.1217 60.5147L46.0354 60.3649L45.7427 60.0355L45.4243 59.7984L45.0988 59.6714L44.7853 59.6367L44.5939 59.6744L43.0541 60.482L42.9986 60.4959L42.9857 60.5137L42.4212 60.7489L42.2962 60.7737L42.2813 60.7925L41.6424 60.9304L41.4945 60.9463L41.4896 60.9483L40.7852 60.9631H40.7683L40.6562 60.9552L39.9479 60.851L39.932 60.8322L39.7594 60.7965L39.2216 60.5613L39.1651 60.474L38.9905 60.4006L38.798 60.2042L38.7405 60.0623L38.6641 60.0157L38.5778 59.8411L38.5421 59.6873L38.5182 59.6675L38.428 59.2329L38.4131 59.0841L38.424 58.9581L38.5073 58.4948L38.5182 58.4859L38.5302 58.4065L38.679 57.9541L38.7167 57.9263L38.7554 57.7944L39.048 57.341L39.1691 57.2745L39.2375 57.1396L39.43 56.9997L39.5044 56.9749L39.5252 56.9392L40.0262 56.6753L40.1532 56.6435L40.1741 56.6158L40.7872 56.4431L40.9548 56.4193L40.9598 56.4144L42.0462 56.3648L42.0819 56.3638H42.1087ZM41.1037 57.8946L40.6652 58.0107L40.3328 58.214L40.2286 58.3083L39.9637 58.5871L39.8665 58.8063L39.8387 59.0524L39.8665 59.1893L39.8973 59.2111L40.2574 59.3579L40.7931 59.4244L41.3646 59.3907L41.8785 59.2756L42.3686 59.0712L44.0165 58.2865L44.0264 58.2835L43.9083 58.1654L43.9381 58.0761L43.6216 58.0107L42.697 57.9095L42.066 57.8599L41.1037 57.8946Z\" fill=\"black\"/>\n        <path d=\"M53.3722 54.5743L53.3821 54.6239L53.4248 54.738L53.4575 54.9166L53.4664 54.9255L53.5041 55.3918L53.5071 55.4592L53.5061 55.49L53.4644 56.5882V56.5972L53.4307 57.242L53.4496 58.0754L53.7393 59.1836L53.771 59.4237L53.769 59.4842L53.7472 59.8076L53.77 59.879L53.8027 60.0814L53.8037 60.0824V60.0864L53.8156 60.1112L53.8672 60.3314L53.3712 60.8275L53.2174 60.8037L53.1113 60.769L53.0249 60.7561L52.9694 60.6906L52.6172 60.5289L52.4912 60.382L52.1846 60.0685L52.1043 59.8701L51.9307 59.5477L51.764 58.3125L51.757 58.2064L51.756 58.2044L51.7441 57.241V57.2301V57.2172L51.7551 56.5396L51.756 56.5376L51.763 56.4374L51.9118 55.3461L51.9307 55.3303L51.9703 55.1418L52.1578 54.7052L52.2134 54.6695L52.259 54.5425L52.3384 54.4473L52.3632 54.4036L52.8355 54.1338L53.3722 54.5743Z\" fill=\"black\"/>\n        <path d=\"M55.5928 56.8321L55.5859 56.9204L55.5402 57.2001L55.5303 57.2081L55.5154 57.2934L55.446 57.4859L55.3825 57.5305L55.317 57.6952L55.1791 57.843L55.0333 57.9065L54.9817 57.9879L54.4261 58.2537L54.3229 58.2776L54.3071 58.2994L53.564 58.5107L53.4241 58.5305L53.4052 58.5395L52.3635 58.6228L52.3179 58.6248H52.3169L51.2861 58.6486H51.2673L51.1889 58.6446L50.6254 58.5871L50.6214 58.5821L50.545 58.5742L49.5757 58.3589L49.5678 58.35L49.5093 58.3401L49.1075 58.2081L48.6064 57.5087L48.8227 56.9868L49.3446 56.7706L49.5916 56.8132L49.9438 56.9382L50.7772 57.1237L51.2474 57.1128L52.2425 57.0811L53.2485 56.965H53.2624V56.964L53.9816 56.8916L54.4827 56.7616L54.5035 56.7527L54.5055 56.7408L55.0452 56.2844L55.5928 56.8321Z\" fill=\"black\"/>\n        <path d=\"M62.7448 48.6765L62.7419 48.7351L62.724 48.8948L62.7181 48.9018L62.7032 48.997L62.4661 49.7589L62.2478 50.7848L62.096 51.7679L61.9631 52.9098L61.9045 54.3295H61.9035V54.3454L61.852 55.1123L61.7716 56.788L61.7369 57.665V57.666L61.714 58.1908L62.2319 58.2315L62.2418 58.2364L62.3242 58.2444L63.4165 58.4577L63.4274 58.4715L63.5286 58.4894L64.3342 58.7781L64.3699 58.8297L64.5227 58.8793L64.7975 59.0777L64.858 59.1968L64.9741 59.2563L65.1566 59.5142L65.2181 59.7067L65.2687 59.7444L65.3382 59.9766L65.3719 60.2018L65.3709 60.2236L65.3551 60.8L65.3471 60.8169L65.2975 61.0649L65.0237 61.7227L64.9741 61.7564L64.9314 61.8804L64.4532 62.5015L64.4245 62.5153L64.4106 62.5511L63.7647 63.2356L63.7201 63.2545L63.7012 63.2941L62.982 63.8894L62.8748 63.9281L62.8421 63.9817L62.4938 64.1612L62.4036 64.1831L62.3867 64.2059L61.8182 64.4003L61.5712 64.442L61.4968 64.438L61.1287 64.4013L61.091 64.3597L60.6942 64.1989L60.59 64.0987L60.5533 64.0124L60.4898 63.9777L60.3995 63.8418L60.3082 63.5422L60.2785 63.5164L60.1783 62.6781L60.1723 62.5868L60.1733 62.553L60.1951 62.0749L60.211 60.9528H60.212V60.9349L60.2428 60.1889L60.2616 59.7008L60.2348 59.6978L59.9551 59.67L59.9372 59.6502L59.6773 59.5887L59.2239 59.3605L58.8965 58.8257L59.3191 58.2523L59.7953 58.1055L60.0374 58.0688L60.084 58.0697L60.3271 58.0836L60.3459 57.6074V57.6064L60.3469 57.5925L60.4015 56.7205L60.466 55.0498L60.4819 54.2829L60.4829 54.2819L60.4838 54.2502L60.5811 52.8057H60.5821L60.5831 52.7908L60.6932 51.6022L60.6981 51.5973L60.7081 51.5149L60.9352 50.509L60.9491 50.497L60.967 50.4097L61.3777 49.3938L61.6436 48.7043L61.6535 48.616L62.1972 48.1289L62.7448 48.6765ZM61.6267 60.2405L61.6119 60.9716L61.6059 62.0739L61.6357 62.5074L61.6853 62.8417L61.8162 62.7902L62.1039 62.6324L62.8192 62.188L63.3867 61.6522L63.7042 61.1403L63.849 60.679L63.8332 60.3417L63.8262 60.3198L63.7935 60.2752L63.7231 60.2286L63.0861 60.0291L62.0583 59.9022L61.6426 59.8555L61.6267 60.2405Z\" fill=\"black\"/>\n        <path d=\"M68.7421 54.6978L68.7659 54.6919L68.7708 54.6859L69.2084 54.672H69.2312L69.3721 54.6879L69.9197 54.807L69.9346 54.8258L70.0447 54.8486L70.6658 55.1195L70.7054 55.181L70.8443 55.2326L71.3533 55.6661L71.3771 55.7187L71.4307 55.7435L71.6836 56.0391L71.7015 56.0897L71.7342 56.1066L71.9505 56.433L72.0616 56.8001L72.0606 56.8427L72.0507 56.9866L71.5428 57.4618H71.5368L71.394 57.4598L71.387 57.4529L70.8979 57.2267L70.6697 56.9568L70.4525 56.7544L69.9614 56.4181L69.4673 56.1185L69.0744 55.9806L68.7044 55.931L68.6875 55.9112L68.505 55.8675L68.4434 55.8358L68.126 55.3109L68.1587 55.2574V55.2058L68.2391 55.1254L68.4464 54.7851L68.501 54.7574L68.6468 54.7216L68.7064 54.6621L68.7421 54.6978Z\" fill=\"black\"/>\n        <path d=\"M72.0448 54.8523L71.9674 55.1321L71.8881 55.266L71.8742 55.274L71.8662 55.2988L71.6381 55.6242L71.6083 55.6401L71.5924 55.6817L71.1668 56.153L71.1162 56.1758L71.0934 56.2224L70.5299 56.6887L70.4743 56.7095L70.4555 56.7433L70.0527 57.0012L69.8513 57.0607L69.8195 57.1014L69.4435 57.1897L69.1935 57.2731L68.9941 57.3058L68.3721 56.6847L68.7213 56.1272L68.9088 56.0349L69.1489 55.8196L69.2213 55.7918L69.2471 55.7452L69.6499 55.4883L70.261 55.0924L70.27 55.0904L70.2729 55.0855L70.7759 54.77L71.014 54.5726L71.0865 54.4902L71.4972 54.3047L72.0448 54.8523Z\" fill=\"black\"/>\n        <path d=\"M81.8176 49.2703V49.2832L81.8018 49.9479L81.8692 50.314L81.8782 50.4082L81.8801 50.4102L81.9407 51.8765L81.9416 51.8924L81.9744 53.4163L82.027 53.9709V53.9719L82.0905 54.5691L82.0915 54.583V54.584L82.2889 56.7458L82.2909 56.7944L82.2919 56.7964L82.3107 57.4273L82.4744 59.9036V59.9165V59.9175L82.4942 60.3273L82.4952 60.361L82.4923 60.4235L82.396 61.4573L81.8504 61.9523L81.3077 61.4791L81.1678 60.4552L81.1648 60.4215L81.1638 60.4205L81.1281 60.0207L80.8216 57.5682L80.7214 56.9521L80.7164 56.8906L80.7134 56.8886L80.5269 54.7259L80.5259 54.6901L80.5249 54.6882L80.4991 54.08V54.077L80.4753 53.4917V53.4818H80.4743L80.4297 51.9321V51.9093L80.4327 51.8379L80.5716 50.3725L80.5795 50.3656L80.5993 50.2376L80.7075 49.9003L80.7224 49.2564L81.27 48.7227L81.8176 49.2703Z\" fill=\"black\"/>\n        <path d=\"M81.0429 48.4199L84.0301 48.4636H84.0321L84.0926 48.4666L85.4826 48.6035L85.4964 48.6193L85.7038 48.6679L85.8506 48.7424L85.8725 48.7384L85.9588 48.7314L86.4717 49.1451L86.4935 49.2444L86.5064 49.3634L85.9588 49.911L85.8139 49.7662L85.6681 49.8267L85.4617 49.8694L85.4548 49.8773L84.0648 49.9577L84.045 49.9587H84.044L81.0687 50.0579L80.3544 50.1005L79.7085 50.173L79.1391 50.2523L79.0974 50.2553L79.0924 50.2573L77.8999 50.3595L77.4059 50.4289L76.9991 50.4924L76.881 50.5013L76.7987 50.4974L76.515 50.4656L76.1955 50.4904L75.627 50.5817L75.5705 50.5857L75.5695 50.5877L75.386 50.5976L75.0665 50.7047L74.9901 50.7573L74.9117 50.8585L74.6191 51.0024L74.25 50.6323L74.3264 50.4061L74.4395 50.2593L74.4554 50.2513L74.4623 50.2325L74.6042 50.0817L74.6339 50.0688L74.6468 50.043L75.002 49.7612L75.0189 49.7553L75.0238 49.7444L75.2242 49.6035L75.3284 49.5698L75.3522 49.536L75.9147 49.3307L75.9376 49.3257L75.9405 49.3217L76.2927 49.2076L76.5695 49.0826L76.7392 49.0449L76.757 49.0251L77.1688 48.9547L77.1916 48.9527L77.1936 48.9517L77.6946 48.8803L78.8623 48.6521L78.9149 48.6461L78.9188 48.6422L79.5012 48.5668L79.524 48.5648L79.526 48.5638L80.1986 48.4933L80.2105 48.4923H80.2125L80.9516 48.4239L81.031 48.4199H81.0429Z\" fill=\"black\"/>\n        <path d=\"M79.8384 59.9124L80.5606 59.9332H80.5636L81.269 59.957H81.2719L82.6311 60.0096L82.6341 60.0106L82.6867 60.0135L86.1035 60.3717V60.3727H86.1074L86.8981 60.464L87.1184 60.4679L87.6551 61.0156L87.1918 61.5563L86.9507 61.594L86.9339 61.5959L86.9329 61.5969L86.1203 61.7021L86.035 61.7081L82.6053 61.7289L81.2511 61.7477L80.5497 61.7596H80.5328H80.517L79.7937 61.7467L79.7907 61.7458L79.6806 61.7378L79.1945 61.6684L78.6667 61.6237L78.6359 61.6088L78.4534 61.5771L78.0982 61.4471L77.4484 61.2943H77.4474L77.1994 61.2338L77.1498 61.1703L76.9117 61.0731L76.6954 60.8628L76.6934 60.8578L76.6884 60.8558L76.6269 60.7933L76.5039 60.4907L76.8829 60.1128L76.9077 60.08L76.9176 60.078L76.9355 60.0602L76.9692 60.0612L76.9811 60.0622L77.1954 60.0086L77.3531 59.9887L77.4295 59.9937L77.6478 60.0205L78.244 60.0344L78.5734 59.9699L78.7401 59.953H78.755L79.258 59.962L79.7163 59.9173L79.8116 59.9124H79.8384Z\" fill=\"black\"/>\n        <path d=\"M89.7719 50.005L90.0427 50.1628L90.0953 50.256L90.1023 50.2818L90.1122 50.2878L90.1737 50.4148L90.1985 50.5259L90.2154 50.5398L90.2521 50.7144V50.7193H90.2531L90.6965 52.9129L90.6985 52.9327L90.7005 52.9347L91.3583 56.6987L91.3632 56.7582L91.3672 56.7612L91.5368 58.544L91.5388 58.5936L91.5398 58.5956L91.5974 60.3893V60.4131V60.427L91.5894 60.812L91.6251 60.8467L91.6172 60.9419L91.5944 61.0828L91.5726 61.1007L91.5289 61.2733L91.515 61.2991L90.9713 61.6195L90.4475 61.3308L90.3791 61.2227L90.3255 61.0382L90.2918 61.0104L90.1945 60.5699L90.1846 60.4836L90.1797 60.4796L90.012 58.6948L90.011 58.678V58.677L89.8781 56.9081L89.3899 53.1371L89.388 53.1113L89.387 53.1103L89.1786 50.8801L89.1776 50.8523H89.1766L89.1687 50.6717L89.1677 50.6469L89.1697 50.6112L89.1737 50.5467L89.0596 50.4326V50.388L89.6072 49.8403L89.7719 50.005Z\" fill=\"black\"/>\n        <path d=\"M92.2823 49.447L93.5135 49.4946L93.5184 49.4966L93.5968 49.5026L95.1653 49.7179L95.1832 49.7268L95.2626 49.7367L96.8916 50.1593L96.9005 50.1713L96.967 50.1832L98.6089 50.7893L98.6248 50.8112L98.6982 50.829L99.3956 51.1882L99.4214 51.2308L99.5087 51.2596L100.154 51.7388L100.173 51.7785L100.225 51.7983L100.688 52.2318L100.714 52.2904L100.767 52.3152L101.195 52.846L101.219 52.9134L101.259 52.9352L101.628 53.5384L101.651 53.6198L101.68 53.6396L101.926 54.1962L101.947 54.2914L101.967 54.3063L102.113 54.8083L102.133 54.9502L102.144 54.972L102.207 55.6288L102.211 55.7141L102.208 55.7806L102.155 56.477L102.147 56.4939L102.131 56.6219L101.963 57.2757L101.938 57.2945L101.91 57.4225L101.332 58.6507L101.295 58.6755L101.266 58.7658L100.781 59.4752L100.721 59.5069L100.687 59.5893L100.061 60.2331L100.014 60.254L99.9939 60.2956L98.7538 61.3215L98.7002 61.3413L98.6823 61.375L97.9928 61.8314L97.9115 61.8562L97.8906 61.8899L97.1346 62.253L97.0583 62.2709L97.0434 62.2907L96.464 62.4902L96.2884 62.5209L96.2785 62.5318L95.6247 62.5953L95.5532 62.5993L95.5304 62.5983L94.9897 62.5814L94.9877 62.5794L94.9034 62.5725L94.3736 62.4842L94.3617 62.4693L94.2377 62.4445L93.8081 62.264L93.7655 62.2005L93.6256 62.1439L93.3161 61.8483L93.2912 61.7897L93.2456 61.7669L93.0075 61.4266L92.9887 61.3651L92.9639 61.3492L92.8101 61.0219L92.7654 60.8224L93.2307 60.3581L93.6057 60.5496L93.7913 60.8036L94.0036 60.999L94.2754 61.133L94.5998 61.2332L94.9897 61.26L95.3836 61.2054L95.9283 61.008L96.4402 60.8066L97.1049 60.4345L97.724 60.0298L98.8371 59.0406L99.3639 58.4186L99.8143 57.8293L100.314 56.7648L100.438 56.2647L100.485 55.7171L100.436 55.1853L100.348 54.7776L100.18 54.3272L99.8937 53.843L99.5276 53.4224L99.1367 53.0722L98.5514 52.6783L97.963 52.3549L96.4303 51.8152L94.8707 51.463L93.3815 51.2268L92.2168 51.1544L91.1295 51.1405L89.8189 51.2011L88.9171 51.3161L88.9111 51.3221L88.8903 51.3191L88.8625 51.3211L88.8605 51.3231L88.5312 51.3509L88.4716 51.3528L88.3575 51.3439L88.3059 51.335L87.7891 50.7179L87.799 50.6058L87.8079 50.5532L87.9468 50.4391L88.176 50.072L88.4716 49.9282L88.6066 49.8964L88.6254 49.8716L89.561 49.6464L89.6522 49.6355L89.6572 49.6296L91.0124 49.4679L91.1037 49.4619L91.1047 49.4609L92.2376 49.447H92.2495H92.2823Z\" fill=\"black\"/>\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width=\"1500\" height=\"1000\" fill=\"white\" transform=\"translate(-863 -699)\"/>\n        </clipPath>\n      </defs>\n      </svg>\n    </div>\n\n  )\n}\n\nexport default Image"},"relativePath":"fitts_law/equation.jsx"},{"fields":{"contents":"import React, { useState } from 'react'\nimport * as d3 from 'd3'\n\nimport ClickingField from './clicking_field'\nimport Chart from './chart'\n\nimport './styles.scss'\n\nconst MAX_CLICKS = 15\nconst CIRCLE_WIDTH_RANGE = [10, 50]\n\nfunction Container() {\n  const [data, setData] = useState([])\n  const [clicksRemaining, setClicksRemaining] = useState(MAX_CLICKS)\n\n  const recordDataPoint = (dataPoint) => {\n    setData(data.concat([dataPoint]))\n    setClicksRemaining(clicksRemaining - 1)\n  }\n\n  const meanClickTime = d3.mean(data.map(({ t }) => t))\n\n  return (\n    <div id=\"fitts\">\n      <p>Clicks remaining: {clicksRemaining}</p>\n      <ClickingField\n        recordDataPoint={recordDataPoint}\n        finished={clicksRemaining === 0}\n        circleWidthRange={CIRCLE_WIDTH_RANGE}\n      />\n      <Chart data={data}  />\n      {clicksRemaining === 0 &&\n        <p>Average time between target clicks: {Math.round(meanClickTime)} ms</p>}\n    </div>\n  )\n}\n\nexport default Container\n"},"relativePath":"fitts_law/fitts.jsx"},{"fields":{"contents":"---\ntitle: Fitts' Law\ndate: 2021-04-06\n---\n\nimport Fitts from './fitts'\nimport Image from './equation'\n\nFitts' Law is a mathematical model of human movement that was proposed in a 1954 paper by pyschology researcher\nPaul Fitts. The law is now a commonly known principle in UX design, as it predicts the difficulty of users\nclicking on certain UI elements.\nThe law expesses the time required to move a pointer to a target as a function of the distance\nto the target and the size of the target:\n\n<Image />\n\n**D** is the distance to the target, **W** is the size of the target, **T** is time, and **ID** is the\ndifficulty index of a specific movement to a target. The law predicts that time is a linear function of difficulty\nindex, which you can check for yourself by clicking on the circles below and building a plot of your data points.\n\n<Fitts />\n"},"relativePath":"fitts_law/fitts_law.mdx"},{"fields":{"contents":"#fitts {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#clicking-field {\n  svg {\n    outline: 3px solid grey;\n    margin: 10px;\n\n    circle {\n      fill: black;\n      cursor: pointer;\n\n      &:hover {\n        fill: green;\n      }\n    }\n  }\n}\n\n#chart {\n  svg {\n    margin: 10px;\n  }\n}\n"},"relativePath":"fitts_law/styles.scss"},{"fields":{"contents":"import React from \"react\"\nimport * as d3 from \"d3\"\nimport * as graphUtils from \"../../../src/js/graphs.js\"\n\nclass Graph extends React.Component {\n  // TODO: maybe cleaner to have React handle the SVG objects\n  drawD3() {\n    if (this.props.svg) {\n      const svg = d3.select(this.props.svg)\n      const { edges, nodes, nodeOpts, edgeOpts } = this.props\n      graphUtils.renderEdgesD3({\n        svg: svg,\n        edgeData: edges,\n        nodeData: nodes,\n        directed: this.props.directed,\n        opts: edgeOpts\n      })\n      graphUtils.renderNodesD3({\n        svg: svg,\n        nodeData: nodes,\n        opts: nodeOpts\n      })\n    }\n  }\n\n  render() {\n    this.drawD3()\n\n    return (\n      <div className=\"graph-container\">\n        <svg ref={this.props.svgRef}></svg>\n      </div>\n    )\n  }\n}\n\nexport default Graph\n"},"relativePath":"graph_builder/graph.jsx"},{"fields":{"contents":"---\ntitle: Connected Graph Components\ndate: 2021-03-10\ndraft: false\n---\n\nIn the process of making the \"ski graph\" component for [this post](/blog/ski-graphs) I built a graph editor so I could\neasily lay out the nodes and edges. That editor is displayed separately here because it's neat, and I also implemented the algorithm\nfor computing the connected components of a graph with some visual flair.\n\nYou can check out the completed code [here](https://github.com/cselig/cselig.github.io/tree/develop/content/blog/graph_builder).\n\nimport GraphUIContainer from \"./graph_ui_container\"\n\n<GraphUIContainer />\n"},"relativePath":"graph_builder/graph_builder.mdx"},{"fields":{"contents":"import React from \"react\"\nimport * as d3 from \"d3\"\n\nimport * as graphUtils from \"../../../src/js/graphs.js\"\n\nclass GraphEditor extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      edgeStart: null,\n    }\n\n    this.clearGhosts = this.clearGhosts.bind(this)\n  }\n\n  clearGhosts() {\n    let svg = d3.select(this.props.svg)\n    svg.select(\"g.ghost-edge\").remove()\n    svg.select(\"g.ghost-node\").remove()\n  }\n\n  componentDidMount() {\n    const handleSvgClick = (_, i, elems) => {\n      if (this.props.mode !== \"add-nodes\") return\n\n      const [x, y] = d3.mouse(elems[i])\n      this.props.addNode({x: x, y: y})\n    }\n\n    const drawGhostEdge = (elem, nodes) => {\n      let svg = d3.select(this.props.svg)\n      const x1 = nodes[this.state.edgeStart].x,\n            y1 = nodes[this.state.edgeStart].y\n      const [x2, y2] = d3.mouse(elem)\n      // only drawing a partial path helps with weird mouseover conflicts I think\n      const path = graphUtils.generatePartialPath(x1, y1, x2, y2, 0.99)\n\n      svg.append(\"g\")\n        .attr(\"class\", \"ghost-edge\")\n        .append(\"path\")\n          .attr(\"d\", path)\n          .attr(\"stroke\", \"grey\")\n          .attr(\"stroke-width\", 5)\n          .style(\"opacity\", 0.3)\n    }\n\n    const drawGhostNode = (elem) => {\n      let svg = d3.select(this.props.svg)\n      const [x, y] = d3.mouse(elem)\n      svg.append(\"g\")\n        .attr(\"class\", \"ghost-node\")\n        .style(\"transform\", `translate(${x}px,${y}px)`)\n        .append(\"circle\")\n          .attr(\"r\", 7)\n          .attr(\"fill\", \"green\")\n          .style(\"opacity\", 0.3)\n    }\n\n    const handleSvgMouseMove = (i, elems, nodes) => {\n      this.clearGhosts()\n\n      if (this.props.mode === \"add-nodes\") {\n        drawGhostNode(elems[i])\n      } else if (this.props.mode === \"add-edges\" && this.state.edgeStart != null) {\n        drawGhostEdge(elems[i], nodes)\n      }\n    }\n\n    const handleNodeClick = (_, i) => {\n      console.log(\"editor node click\")\n      if (this.props.mode !== \"add-edges\") return\n\n      if (this.state.edgeStart == null) {\n        this.setState({edgeStart: i})\n      } else if (this.state.edgeStart !== i) {\n        this.props.addEdge({start: this.state.edgeStart, end: i})\n        this.setState({edgeStart: null})\n        this.clearGhosts()\n      }\n    }\n\n    this.props.setSvgClickHandler(handleSvgClick)\n    this.props.setSvgMouseMoveHandler(handleSvgMouseMove)\n    this.props.setSvgMouseLeaveHandler(this.clearGhosts)\n    this.props.setNodeClickHandler(handleNodeClick)\n  }\n\n  componentWillUnmount() {\n    this.props.setSvgClickHandler(() => null)\n    this.props.setSvgMouseMoveHandler(() => null)\n    this.props.setNodeClickHandler(() => null)\n    this.clearGhosts()\n  }\n\n  render() {\n    const toggleAddMode = (addMode) => {\n      this.props.setMode(addMode)\n      this.setState({edgeStart: null})\n      this.clearGhosts()\n    }\n\n    const clearGraph = () => {\n      this.props.setNodes([])\n      this.props.setEdges([])\n    }\n\n    return (\n      <div className=\"graph-editor\">\n        <div className={\"add-modes\"}>\n          <p>Add:</p>\n          <p\n            onClick={() => toggleAddMode(\"add-nodes\")}\n            className={\"add-mode \" + (this.props.mode === \"add-nodes\" ? \"selected\" : \"\")}\n          >Nodes</p>\n          <p\n            onClick={() => toggleAddMode(\"add-edges\")}\n            className={\"add-mode \" + (this.props.mode === \"add-edges\" ? \"selected\" : \"\")}\n          >Edges</p>\n        </div>\n        <button onClick={clearGraph}>Clear Graph</button>\n      </div>\n    )\n  }\n}\n\nexport default GraphEditor\n"},"relativePath":"graph_builder/graph_editor.jsx"},{"fields":{"contents":"import React from \"react\"\nimport * as graphUtils from \"../../../src/js/graphs.js\"\n\nimport defaultNodes from \"./data/default/nodes.json\"\nimport defaultEdges from \"./data/default/edges.json\"\nimport heavenlyNodes from \"../ski_graphs/data/heavenly/nodes.json\"\nimport heavenlyEdges from \"../ski_graphs/data/heavenly/edges.json\"\nimport gridNodes from \"./data/grid/nodes.json\"\nimport gridEdges from \"./data/grid/edges.json\"\nimport islandsNodes from \"./data/islands/nodes.json\"\nimport islandsEdges from \"./data/islands/edges.json\"\n\nconst presetsMap = {\n  \"default\": {\"nodes\": defaultNodes, \"edges\": defaultEdges},\n  \"heavenly\": {\"nodes\": heavenlyNodes, \"edges\": heavenlyEdges},\n  \"grid\": {\"nodes\": gridNodes, \"edges\": gridEdges},\n  \"islands\": {\"nodes\": islandsNodes, \"edges\": islandsEdges},\n}\n\nclass GraphPresetSelector extends React.Component {\n  componentDidMount() {\n    this.props.setPreset(\n      graphUtils.scaleNodeData(islandsNodes, this.props.svgWidth, this.props.svgHeight),\n      islandsEdges,\n    )\n  }\n\n  render() {\n    const selectPreset = (preset) => {\n      const { nodes, edges } = presetsMap[preset]\n      // TODO: there should be some sort of interface for getting this data\n      // so we don't have to care about scaling it up or where it is.\n      this.props.setPreset(\n        graphUtils.scaleNodeData(nodes, this.props.svgWidth, this.props.svgHeight),\n        edges,\n      )\n    }\n\n    return (\n      <div className=\"preset-selector\">\n        <p>Select </p>\n        {/* <p onClick={() => selectPreset(\"default\")}>Default</p> */}\n        {/* <p onClick={() => selectPreset(\"heavenly\")}>Heavenly Ski Resort</p> */}\n        <p onClick={() => selectPreset(\"grid\")}>Grid</p>\n        <p onClick={() => selectPreset(\"islands\")}>Islands</p>\n      </div>\n    )\n  }\n}\n\nexport default GraphPresetSelector\n"},"relativePath":"graph_builder/graph_preset_selector.jsx"},{"fields":{"contents":"import React from \"react\"\nimport * as d3 from \"d3\"\n\nimport Graph from \"./graph.jsx\"\nimport GraphEditor from \"./graph_editor.jsx\"\nimport ConnectedComponentsUI from \"./algorithm_uis/connected_components_ui.jsx\"\n\nimport * as graphUtils from \"../../../src/js/graphs.js\"\n\nimport islandsNodes from \"./data/islands/nodes.json\"\nimport islandsEdges from \"./data/islands/edges.json\"\n\nconst SVG_WIDTH  = 500,\n      SVG_HEIGHT = 500\n\nconst defaultNodeOpts = {\n  radius: 8,\n  mouseoverRadius: 10,\n  fill: \"black\",\n}\n\nconst defaultEdgeOpts = {}\n\nconst AlgorithmCard = ({ name, setMode, value }) => (\n  <div className=\"algorithm-card\" onClick={() => setMode(value)}>\n    <p>{name}</p>\n  </div>\n)\n\nfunction AlgorithmContainer({ mode, setMode, algorithmInputs }) {\n  return (\n    <div className=\"algorithm-container\">\n      {mode === \"connected-components\" ?\n        <ConnectedComponentsUI\n          nodes={algorithmInputs.nodes}\n          edges={algorithmInputs.edges}\n          nodeOpts={algorithmInputs.nodeOpts}\n          resetHighlighting={algorithmInputs.resetHighlighting}\n        />\n        :\n        <AlgorithmCard name=\"Connected Components\" setMode={setMode} value=\"connected-components\" />\n      }\n    </div>\n  )\n}\n\n// used to create presets\nconst Debug = ({ nodes, edges }) => {\n  // serialize node position data as percent of width/height\n  const scaledNodes = nodes.map(({ x, y }) => ({ x: x/SVG_WIDTH, y: y/SVG_HEIGHT }))\n  return (\n    <div className=\"debug\">\n      <p>Nodes:</p>\n      <pre>{JSON.stringify(scaledNodes, null, 2)}</pre>\n      <hr></hr>\n      <p>Edges:</p>\n      <pre>{JSON.stringify(edges, null, 2)}</pre>\n    </div>\n  )\n}\n\nclass GraphUIContainer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      nodes: graphUtils.scaleNodeData(islandsNodes, SVG_WIDTH, SVG_HEIGHT),\n      edges: islandsEdges,\n      mode: null, // null || \"add-nodes\" || \"add-edges\" || \"algorithm\"\n      svg: null, // DOM node\n      svgClickHandler: null,\n      svgMouseMoveHandler: null,\n      svgMouseLeaveHandler: null,\n      nodeClickHandler: null,\n    }\n\n    // Doing it this way because I think member functions lead to stable\n    // references as opposed to constructing arrow functions in render().\n    this.addNode = this.addNode.bind(this)\n    this.addEdge = this.addEdge.bind(this)\n    this.setSvgClickHandler = this.setSvgClickHandler.bind(this)\n    this.setSvgMouseMoveHandler = this.setSvgMouseMoveHandler.bind(this)\n    this.setSvgMouseLeaveHandler = this.setSvgMouseLeaveHandler.bind(this)\n    this.setNodeClickHandler = this.setNodeClickHandler.bind(this)\n    this.setNodes = this.setNodes.bind(this)\n    this.setEdges = this.setEdges.bind(this)\n    this.setMode = this.setMode.bind(this)\n    this.setPreset = this.setPreset.bind(this)\n  }\n\n  // node is { x, y }\n  addNode(node) {\n    this.setState((oldState) => ({nodes: oldState.nodes.concat(node)}))\n  }\n\n  // edge is { start, end }\n  addEdge(edge) {\n    this.setState((oldState) => ({edges: oldState.edges.concat(edge)}))\n  }\n\n  setNodes(nodes) {\n    this.resetHighlighting()\n    this.setState({nodes: nodes})\n  }\n\n  setEdges(edges) {\n    this.resetHighlighting()\n    this.setState({edges: edges})\n  }\n\n  setMode(mode) {\n    this.setState({mode: mode})\n  }\n\n  setPreset(nodes, edges) {\n    this.setState({nodes: nodes, edges: edges, mode: null})\n  }\n\n  setSvgClickHandler(handler) {\n    this.setState({svgClickHandler: handler})\n  }\n\n  setSvgMouseMoveHandler(handler) {\n    this.setState({svgMouseMoveHandler: handler})\n  }\n\n  setSvgMouseLeaveHandler(handler) {\n    this.setState({svgMouseLeaveHandler: handler})\n  }\n\n  setNodeClickHandler(handler) {\n    this.setState({nodeClickHandler: handler})\n  }\n\n  resetHighlighting() {\n    // anything that an algorithm UI does should be undone here\n    const t = d3.transition().duration(500)\n    d3.selectAll(\"g.node\").transition(t)\n      .style(\"opacity\", 1)\n      .select(\"circle\")\n        .style(\"fill\", defaultNodeOpts.fill)\n        .attr(\"r\", defaultNodeOpts.radius)\n    d3.selectAll(\"g.edge\").transition(t)\n      .style(\"opacity\", 1)\n  }\n\n  render() {\n    if (this.state.svg) {\n      // Might be cleanest to pass these functions into an `updateSVG` function in graphUtils\n      const svgD3 = d3.select(this.state.svg)\n      svgD3.on(\"click\", this.state.svgClickHandler)\n      // TODO: bad code\n      svgD3.on(\"mousemove\", (_, i, elems) => this.state.svgMouseMoveHandler ? this.state.svgMouseMoveHandler(i, elems, this.state.nodes) : null)\n      svgD3.on(\"mouseleave\", this.state.svgMouseLeaveHandler)\n    }\n\n    const nodeOpts = {\n      onClick: this.state.nodeClickHandler,\n    }\n\n    return (\n      <div className=\"graph-ui-container\">\n        <div className=\"editor-panel\">\n          <div className=\"edit-container\">\n            {this.state.mode === \"add-nodes\" || this.state.mode === \"add-edges\" ?\n              <GraphEditor\n                addNode={this.addNode}\n                addEdge={this.addEdge}\n                svg={this.state.svg}\n                setSvgClickHandler={this.setSvgClickHandler}\n                setSvgMouseMoveHandler={this.setSvgMouseMoveHandler}\n                setSvgMouseLeaveHandler={this.setSvgMouseLeaveHandler}\n                setNodeClickHandler={this.setNodeClickHandler}\n                setNodes={this.setNodes}\n                setEdges={this.setEdges}\n                mode={this.state.mode}\n                setMode={this.setMode}\n              /> :\n              <p className=\"edit-button\" onClick={() => this.setMode(\"add-nodes\")}>Click to edit graph</p>\n            }\n          </div>\n          <hr></hr>\n          <div className=\"algorithm-container\">\n            {this.state.mode === \"algorithm\" ?\n              <ConnectedComponentsUI\n                nodes={this.state.nodes}\n                edges={this.state.edges}\n                nodeOpts={{...defaultNodeOpts, ...nodeOpts}}\n                resetHighlighting={this.resetHighlighting}\n                setMode={this.setMode}\n              /> :\n              <p\n                className=\"start-button\"\n                onClick={() => this.setState({mode: \"algorithm\"})}>\n                Click to compute connected components\n              </p>\n            }\n          </div>\n        </div>\n        <Graph\n          nodes={this.state.nodes}\n          edges={this.state.edges}\n          nodeOpts={{...defaultNodeOpts, ...nodeOpts}}\n          edgeOpts={defaultEdgeOpts}\n          directed={false}\n          // https://reactjs.org/docs/refs-and-the-dom.html#callback-refs\n          svgRef={(el) => {\n            const svg = d3.select(el)\n              .attr(\"width\", SVG_WIDTH)\n              .attr(\"height\", SVG_HEIGHT)\n            graphUtils.setUpSvg(svg)\n            if (this.state.svg == null) this.setState({svg: el})\n          }}\n          svg={this.state.svg}\n        />\n      </div>\n    )\n  }\n}\n\nexport default GraphUIContainer\n"},"relativePath":"graph_builder/graph_ui_container.jsx"},{"fields":{"contents":"import React, { useState } from 'react';\n\nimport \"./styles.scss\";\n\nconst COLOR_PALLETES = [\n  [\"#3949AB\", \"#5C6BC0\", \"#9FA8DA\"],\n  [\"#43A047\", \"#66BB6A\", \"#A5D6A7\"],\n]\n\nconst LOCATIONS = [\n  {\n    value: 'US',\n    children: [\n      {\n        value: 'California',\n        children: [\n          {value: 'San Francisco'}, {value: 'Los Angeles'}, {value: 'San Diego'},\n        ]\n      },\n      {\n        value: 'Washington',\n        children: [{value: 'Seattle'}],\n      },\n      {\n        value: 'Remote'\n      },\n    ]\n  },\n  {\n    value: 'Europe',\n    children: [\n      {\n        value: 'UK',\n        children: [{value: 'London'}]\n      },\n      {\n        value: 'Germany',\n        children: [{value: 'Berlin'}, {value: 'Hamburg'}, {value: 'Remote'}]\n      }\n    ]\n  },\n  {\n    value: 'Asia',\n    children: [\n      {\n        value: 'Japan',\n        children: [{value: 'Tokyo'}, {value: 'Osaka'}]\n      },\n      {\n        value: 'Korea',\n        children: [{value: 'Seoul'}]\n      },\n      {value: 'Singapore'},\n    ]\n  }\n]\n\nconst JOB_CATEGORIES = [\n  {\n    value: 'Software Engineering',\n    children: [\n      {value: 'Backend'},\n      {value: 'Frontend'},\n      {value: 'Infra'},\n      {value: 'SRE'},\n    ]\n  },\n  {\n    value: 'User Experience',\n    children: [{value: 'Eng'}, {value: 'Design'}, {value: 'Research'}],\n  },\n  {\n    value: 'Marketing',\n    children: [{value: 'SEO'}, {value: 'Copywriting'}, {value: 'Social Media'}]\n  }\n]\n\nconst LOREM_IPSUM = `Lorem ipsum dolor sit amet, consectetur adipiscing elit.\nSed ligula elit, dapibus a justo sed, finibus ornare metus.\nClass aptent taciti sociosqu ad litora torquent per conubia\nnostra, per inceptos himenaeos. Nunc consequat aliquam pulvinar.\nQuisque eu ex mi. Sed suscipit nisi ac imperdiet scelerisque.\nSed facilisis mauris purus, ultrices dignissim ex facilisis quis.\nAenean vel lectus nunc`.split(\".\");\n\nconst generateIpsum = () => {\n  const cutPoint = 0.5 + Math.random() / 2;\n  const sentances = Math.ceil(cutPoint * LOREM_IPSUM.length);\n  return LOREM_IPSUM.slice(0, sentances).join(\". \") + \".\";\n}\n\nconst JOBS = [\n  {\n    title: 'Senior Software Engineer',\n    location: ['US', 'Remote'],\n    category: ['Software Engineering', 'Backend'],\n  },\n  {\n    title: 'UX Engineer, Payments',\n    location: ['Europe', 'Germany', 'Berlin'],\n    category: ['User Experience', 'Eng'],\n  },\n  {\n    title: 'Lead Copywriter',\n    location: ['US', 'California', 'San Diego'],\n    category: ['Marketing', 'Copywriting']\n  },\n  {\n    title: 'UX Research Program Manager',\n    location: ['US', 'Washington', 'Seattle'],\n    category: ['User Experience', 'Research'],\n  },\n  {\n    title: 'UX Researcher (new grad)',\n    location: ['US', 'Washington', 'Seattle'],\n    category: ['User Experience', 'Research'],\n  },\n  {\n    title: 'UX Researcher II',\n    location: ['US', 'Washington', 'Seattle'],\n    category: ['User Experience', 'Research'],\n  },\n  {\n    title: 'Software Engineer II, Frontend',\n    location: ['US', 'California', 'San Francisco'],\n    category: ['Software Engineering', 'Frontend'],\n  },\n  {\n    title: 'Infrastructure Software Engineer',\n    location: ['US', 'California', 'San Francisco'],\n    category: ['Software Engineering', 'Infra'],\n  },\n  {\n    title: 'Site Reliability Engineer',\n    location: ['Europe', 'Germany', 'Hamburg'],\n    category: ['Software Engineering', 'SRE'],\n  },\n  {\n    title: 'Senior Site Reliability Engineer',\n    location: ['Europe', 'Germany', 'Hamburg'],\n    category: ['Software Engineering', 'SRE'],\n  },\n  {\n    title: 'Social Media Manager',\n    location: ['Europe', 'UK', 'London'],\n    category: ['Marketing', 'Social Media'],\n  },\n]\n\nfor (let job of JOBS) {\n  job.description = generateIpsum();\n}\n\nfunction Chip({value, index, remove, color}) {\n  return (\n    <div className=\"chip\" style={{zIndex: 10 - index, backgroundColor: color}}>\n      <p>{value}{' '}\n        {remove && <span className=\"remove\" onClick={() => remove(value)}>x</span>}\n      </p>\n    </div>\n  )\n}\n\nfunction Options({options, select}) {\n  const optionsHtml = options.map((node) => {\n    return <p key={node.value} onClick={() => select(node)}>{node.value}</p>\n  })\n  return (\n    <div className=\"options\">\n      {optionsHtml}\n    </div>\n  )\n}\n\nfunction Chips({path, setPath, vals, colors}) {\n  const [options, setOptions] = useState(vals)\n\n  const select = (node) => {\n    const newPath = path.concat([node.value])\n    setPath(newPath)\n    setOptions(node.children)\n  }\n\n  const remove = (value) => {\n    const newPath = path.splice(0, path.indexOf(value))\n    setPath(newPath)\n\n    let current = vals\n    for (const val of newPath) {\n      current = current.filter(node => node.value === val)[0].children\n    }\n    setOptions(current)\n  }\n\n  const chips = path.map((value, i) => {\n    return <Chip key={value} value={value} remove={remove} index={i} color={colors[i]} />\n  })\n  return (\n    <div className=\"filter-chip\">\n      <div className=\"chips\">\n        {chips}\n      </div>\n      <Options options={options || []} select={select} />\n    </div>\n  );\n}\n\nfunction ValueChips({path, colors}) {\n  const chips = path.map((value, i) => {\n    return <Chip key={value} value={value} index={i} color={colors[i]} />\n  });\n  return (\n    <div className=\"value-chip\">\n      <div className=\"chips\">\n        {chips}\n      </div>\n    </div>\n  );\n}\n\nconst objEqual = (obj1, obj2) => JSON.stringify(obj1) === JSON.stringify(obj2);\n\nfunction JobList({locationFilter, categoryFilter}) {\n  const jobId = (job) => job.title + JSON.stringify(job.location) + JSON.stringify(job.category);\n\n  const jobHtml = (job) => (\n    <div key={jobId(job)} className=\"job-card\">\n      <h3 className=\"title\">{job.title}</h3>\n      <p className=\"description\">{job.description}</p>\n      <div className=\"value-chips\">\n        <ValueChips path={job.location} colors={COLOR_PALLETES[0]} />\n        <ValueChips path={job.category} colors={COLOR_PALLETES[1]} />\n      </div>\n    </div>\n  );\n\n  const filteredJobs = JOBS.filter(job => {\n    return objEqual(locationFilter, job.location.slice(0, locationFilter.length)) &&\n      objEqual(categoryFilter, job.category.slice(0, categoryFilter.length));\n  }).map(job => jobHtml(job));\n\n  if (filteredJobs.length === 0) {\n    return <div className=\"job-list empty\">\n      <p>No jobs found! Please broaden your filters.</p>\n    </div>\n  }\n\n  return <div className=\"job-list\">{filteredJobs}</div>;\n}\n\nfunction Component() {\n  const [location, setLocation] = useState([]);\n  const [category, setCategory] = useState([]);\n\n  return (\n    <div id=\"categories\">\n      <div className=\"filters\">\n        <h3>Location</h3>\n        <Chips path={location} setPath={setLocation}\n          vals={LOCATIONS} colors={COLOR_PALLETES[0]} />\n        <h3>Job Type</h3>\n        <Chips path={category} setPath={setCategory}\n          vals={JOB_CATEGORIES} colors={COLOR_PALLETES[1]} />\n      </div>\n      <JobList locationFilter={location} categoryFilter={category} />\n    </div>\n  );\n}\n\nexport default Component;\n"},"relativePath":"heirarchical_search/heirarchical_search.jsx"},{"fields":{"contents":"---\ntitle: Heirarchical Categories\ndate: 2023-08-12\n---\n\nimport Component from \"./heirarchical_search\";\nimport Sketch from \"./sketch\";\n\nHeirarchical categories are a common data type to encouter on the web. For example on a\njobs posting website you often see options for searching by job\ncategory and location.\n\nOften the relevance of search results to a user follows the structure of these categories.\nI might be particularly keen on UX engineering positions, but I also might be\ninterested in UX design or research which are neighboring categories in the job type\nheirarchy. On the other hand I'm probably not at all interested in marketing positions,\na distant category in the job type heirarchy.\n\nUsually these fields are represented by drop-down menus, which do not reflect the\nnested structure of the values.\nAn alternate representation I thought of is a series of stacked chips.\n\n<Sketch scale={1.5} />\n\nHere's an implementation of a job listing site with chip filters for location and\njob category.\n\n<Component />\n\nNow remember the user from above.\nAs a second example imagine a user lives in Berlin and would like to find a new job there,\nbut is open to relocacting within Germany.\nI think this system allows both these users to browse results for their preferences more\nefficiently and intuitively than a flat drop-down would.\n"},"relativePath":"heirarchical_search/heirarchical_search.mdx"},{"fields":{"contents":"#categories {\n  border: 3px solid lightgrey;\n  border-radius: 10px;\n  padding: 15px;\n\n  .chip {\n    position: relative;\n    width: fit-content;\n    height: fit-content;\n    border-radius: 10px;\n    padding: 8px;\n\n    p {\n      color: white;\n      margin: 0;\n      font-size: 20px;\n    }\n  }\n\n  .filter-chip {\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n\n    .chip {\n      padding-right: 15px;\n      &:last-child { margin-right: 8px; }\n    }\n  }\n\n  .value-chip  {\n    margin-right: 8px;\n    .chip {\n      padding: 6px;\n      p {\n        font-size: 12px;\n      }\n    }\n  }\n\n  .chips {\n\n    display: flex;\n    margin: 0;\n\n    .chip {\n      &:not(:first-child) {\n        padding-left: 22px;\n        margin-left: -16px;\n      }\n\n      .remove {\n        cursor: pointer;\n        font-size: 14px;\n        position: absolute;\n        top: 0;\n        right: 8px;\n      }\n    }\n  }\n\n  .options {\n    display: flex;\n    align-items: center;\n\n    p {\n      background-color: lightgrey;\n      width: fit-content;\n      height: fit-content;\n      padding: 5px;\n      margin: 0;\n      margin-right: 5px;\n      border-radius: 5px;\n      cursor: pointer;\n    }\n  }\n\n  .job-list {\n    height: 400px;\n    overflow-y: scroll;\n    padding-top: 10px;\n\n    &.empty {\n      text-align: center;\n\n      p {\n        font-weight: 500;\n      }\n    }\n\n    .job-card {\n      border: 1px solid lightgrey;\n      border-radius: 5px;\n      padding: 5px;\n      margin-bottom: 10px;\n\n      .title {\n        font-size: 18px;\n      }\n\n      .description {\n        font-size: 12px;\n      }\n\n      .value-chips {\n        display: flex;\n      }\n    }\n  }\n}\n"},"relativePath":"heirarchical_search/styles.scss"},{"fields":{"contents":"import React, { useState } from 'react'\n\nimport './styles.scss'\n\nvar $ = require('jquery')\n\nconst TEXT = \"The path of the righteous man is beset on all sides by the inequities of the selfish and the tyranny of evil men. Blessed is he who, in the name of charity and good will, shepherds the weak through the valley of the darkness, for he is truly his brother's keeper and the finder of lost children. And I will strike down upon thee with great vengeance and furious anger those who attempt to poison and destroy My brothers. And you will know I am the Lord when I lay My vengeance upon you.\"\n\nconst currTime = () => (new Date().getTime()) / 1000 // seconds\n\nexport default function InputContainer({ registerKeyPress, typedText, setTypedText, clearOnce }) {\n  const [textInd, setTextInd] = useState(0)\n  const [showText, setShowText] = useState(false)\n  const [startTimestamp, setStartTimestamp] = useState(0)\n  const [wpm, setWpm] = useState(0)\n\n  const onChange = (e) => {\n    const text = e.target.value\n    if (text === TEXT[textInd]) {\n      $(`#input-container .text span:nth-child(${textInd + 1})`).addClass(\"complete\")\n      setTextInd(textInd + 1)\n    } else {\n      $(`#input-container .text span:nth-child(${textInd + 1})`).addClass(\"failed\")\n    }\n    e.target.value = \"\"\n\n    // WPM\n    if (textInd === 0 && startTimestamp === 0) {\n      setStartTimestamp(currTime())\n    } else if (textInd === TEXT.length - 1) {\n      $(\"#input-container .wpm\").removeClass(\"hidden\")\n      const elapsedMinutes = (currTime() - startTimestamp) / 60\n      setWpm(TEXT.split(\" \").length / elapsedMinutes)\n    }\n  }\n\n  const onKeyPress = (e) => {\n    registerKeyPress(e.key)\n    setTypedText(typedText + e.key.toLowerCase())\n  }\n\n  const onFocus = () => {\n    setShowText(true)\n    clearOnce()\n  }\n\n  return (\n    <div id=\"input-container\">\n      <input\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n        onFocus={onFocus}\n      ></input>\n\n      {showText &&\n        <blockquote className=\"text\">\n          {[...TEXT].map((c, i) => <span key={i}>{c}</span>)}\n        </blockquote>\n      }\n\n      <p className=\"wpm hidden\">Nice! Your words per minute: {Math.round(wpm)}</p>\n    </div>\n  )\n}\n"},"relativePath":"keyboard_frequencies/input.jsx"},{"fields":{"contents":"import React from 'react'\nimport * as d3 from 'd3'\n\nimport './styles.scss'\n\nconst KEY_HEIGHT = 35 // px\nconst X_OFFSET = KEY_HEIGHT\nconst Y_OFFSET = KEY_HEIGHT\n\nconst STANDARD_ROWS = [\n  ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n  ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'],\n  ['z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.'],\n]\nconst STANDARD_ROW_X_OFFSETS = [0, KEY_HEIGHT / 3, KEY_HEIGHT * 2 / 3]\n\nconst DVORAK_ROWS = [\n  [',', '.', 'p', 'y', 'f', 'g', 'c', 'r', 'l'],\n  ['a', 'o', 'e', 'u', 'i', 'd', 'h', 't', 'n', 's'],\n  ['q', 'j', 'k', 'x', 'b', 'm', 'w', 'v', 'z']\n]\nconst DVORAK_ROW_X_OFFSETS = [2 / 3 * KEY_HEIGHT, 0, 3 / 2 * KEY_HEIGHT]\n\nconst COLEMAK_ROWS = [\n  ['q', 'w', 'f', 'p', 'g', 'j', 'l', 'u', 'y'],\n  ['a', 'r', 's', 't', 'd', 'h', 'n', 'e', 'i', 'o'],\n  ['z', 'x', 'c', 'v', 'b', 'k', 'm', ',', '.']\n]\nconst COLEMAK_ROW_X_OFFSETS = [0, KEY_HEIGHT / 3, 2 * KEY_HEIGHT / 3]\n\nconst sumMapValues = map => {\n  let result = 0\n  map.forEach(val => result += val)\n  return result\n}\n\nexport default function Keyboard({ keyFreqs, lastPressedKey, keyboardLayout }) {\n  let rows\n  let rowXOffsets\n  if (keyboardLayout === \"qwerty\") {\n    rows = STANDARD_ROWS\n    rowXOffsets = STANDARD_ROW_X_OFFSETS\n  } else if (keyboardLayout === \"dvorak\") {\n    rows = DVORAK_ROWS\n    rowXOffsets = DVORAK_ROW_X_OFFSETS\n  } else if (keyboardLayout === \"colemak\") {\n    rows = COLEMAK_ROWS\n    rowXOffsets = COLEMAK_ROW_X_OFFSETS\n  }\n\n  const computeFill = key => {\n    const total = sumMapValues(keyFreqs)\n    const n = keyFreqs.get(key)\n    if (n == undefined) return \"white\"\n    const proportion = total === 0 ? 0 : n / total\n    // This power function gives a better distributed range of color shades\n    return d3.interpolateYlOrRd(Math.pow(proportion, 1/5))\n  }\n\n  const createKey = (key, i, rowInd) => {\n    const xOffset = i * KEY_HEIGHT + X_OFFSET + rowXOffsets[rowInd]\n    const yOffset = rowInd * KEY_HEIGHT + Y_OFFSET\n    const transform = `translate(${xOffset}px, ${yOffset}px)`\n\n    const fill = computeFill(key)\n\n    const pressed = key === lastPressedKey\n    const fontWeight = pressed ? 900 : 400\n    const fontSize = pressed ? \"20px\" : \"16px\"\n    const textX = pressed ? -6 : -4\n    return (\n      <g className=\"key\" id={key} style={{ transform }} key={key}>\n        <rect\n          x={-KEY_HEIGHT / 2}\n          y={-KEY_HEIGHT / 2}\n          height={KEY_HEIGHT}\n          width={KEY_HEIGHT}\n          style={{ fill }}\n        />\n        <text x={textX} y={4} style={{ fontWeight, fontSize }}>{key}</text>\n      </g>\n    )\n  }\n\n  let keys = []\n  rows.forEach((row, rowInd) => {\n    row.forEach((key, keyInd) => {\n      keys.push(createKey(key, keyInd, rowInd))\n    })\n  })\n\n  return (\n    <svg\n      id=\"keyboard\"\n      width={KEY_HEIGHT * 10 + X_OFFSET * 2}\n      height={KEY_HEIGHT * 3 + Y_OFFSET}\n    >\n      {keys}\n    </svg>\n  )\n}\n"},"relativePath":"keyboard_frequencies/keyboard.jsx"},{"fields":{"contents":"---\ntitle: Keyboard Frequencies\ndate: 2021-03-17\n---\n\nEver wondered where your fingers spend the most time on a keyboard? Below you can see a heat map\nshowing the relative frequency of each letter on the keyboard (the frequencies are computed from the\ntext of Hamlet). The completed code is [here](https://github.com/cselig/cselig.github.io/blob/develop/content/blog/keyboard_frequencies).\n\nYou can toggle between the standard English Qwerty keyboard layout, the Dvorak layout,\nand the Colemak layout (the latter is a layout that attempts to balance efficiency with similarity\nto Qwerty).\n\nIf you want to type for yourself, click into the input field below the keyboard and you can\ntype along to a certain famous movie as the keyboard updates.\n\nimport Keyboard from './keyboard_ui_container'\n\n<Keyboard />\n"},"relativePath":"keyboard_frequencies/keyboard_frequencies.mdx"},{"fields":{"contents":"import React, { useState } from 'react'\n\nimport Input from './input'\nimport Keyboard from './keyboard'\n\nimport { hamletText } from './hamlet'\n\nimport './styles.scss'\n\ntype KeyboardLayout = \"qwerty\" | \"dvorak\" | \"colemak\"\n\nfunction textToLetterFreqs(text) {\n  let result = new Map()\n  for (const c of text) {\n    if (result.has(c)) {\n      result.set(c, result.get(c) + 1)\n    } else {\n      result.set(c, 1)\n    }\n  }\n  return result\n}\n\nfunction LayoutSelector({ keyboardLayout, setKeyboardLayout }) {\n  return (\n    <div className=\"keyboard-layouts\">\n      <p\n        className={keyboardLayout === \"dvorak\" ? \"selected\" : \"\"}\n        onClick={() => setKeyboardLayout(\"dvorak\")}\n      >Dvorak</p>\n      <p\n        className={keyboardLayout === \"qwerty\" ? \"selected\" : \"\"}\n        onClick={() => setKeyboardLayout(\"qwerty\")}\n      >Qwerty</p>\n      <p\n        className={keyboardLayout === \"colemak\" ? \"selected\" : \"\"}\n        onClick={() => setKeyboardLayout(\"colemak\")}\n      >Colemak</p>\n    </div>\n  )\n}\n\nexport default function KeyboardUIContainer() {\n  const [lastPressedKey, setLastPressedKey] = useState(\"\")\n  const [keyboardLayout, setKeyboardLayout] = useState<KeyboardLayout>(\"qwerty\")\n  const [timeoutId, setTimeoutId] = useState(null)\n  const [typedText, setTypedText] = useState(hamletText)\n  const [cleared, setCleared] = useState(false)\n\n  function registerKeyPress(key) {\n    key = key.toLowerCase()\n    setLastPressedKey(key)\n    clearTimeout(timeoutId)\n    setTimeoutId(\n      setTimeout(\n        () => setLastPressedKey(\"\"),\n        500\n      )\n    )\n  }\n\n  function clearOnce() {\n    if (!cleared) {\n      setTypedText(\"\")\n      setCleared(true)\n    }\n  }\n\n  return (\n    <div id=\"keyboard-ui-container\">\n      <LayoutSelector\n        keyboardLayout={keyboardLayout}\n        setKeyboardLayout={setKeyboardLayout}\n      />\n      <Keyboard\n        keyFreqs={textToLetterFreqs(typedText)}\n        lastPressedKey={lastPressedKey}\n        keyboardLayout={keyboardLayout}\n      />\n      <Input\n        typedText={typedText}\n        setTypedText={setTypedText}\n        registerKeyPress={registerKeyPress}\n        clearOnce={clearOnce}\n      />\n    </div>\n  )\n}\n"},"relativePath":"keyboard_frequencies/keyboard_ui_container.tsx"},{"fields":{"contents":"@mixin center {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n#keyboard-ui-container {\n  @include center();\n\n  margin-top: 30px;\n\n  .keyboard-layouts {\n    display: flex;\n\n    p {\n      cursor: pointer;\n      margin: 0 10px;\n      font-size: 18px;\n      opacity: 0.5;\n\n      &.selected {\n        opacity: 1;\n        font-weight: 700;\n      }\n    }\n  }\n}\n\n#keyboard {\n  .key {\n    rect {\n      fill: none;\n      transition: fill 300ms;\n      stroke: grey;\n    }\n  }\n}\n\n#input-container {\n  @include center();\n\n  input {\n    width: 20px;\n  }\n\n  .text {\n    background: #f9f9f9;\n    border-left: 10px solid #ccc;\n    margin: 1.5em 10px;\n    padding: 0.5em 10px;\n      // quotes: \"\\201C\"\"\\201D\"\"\\2018\"\"\\2019\";\n\n    .failed {\n      background-color: lightcoral;\n    }\n\n    .complete {\n      background-color: lightblue;\n    }\n  }\n\n  .wpm {\n    transition: opacity 2s;\n\n    &.hidden {\n      opacity: 0;\n    }\n  }\n}"},"relativePath":"keyboard_frequencies/styles.scss"},{"fields":{"contents":"import React, {useState} from \"react\";\n\nimport './styles.scss'\n\nenum People {\n  ALISON,\n  BRAD,\n  CHARLIE,\n  CHRISTIAN,\n  DANNVER,\n  DEREK,\n  DREW,\n  HANYU,\n  JOE,\n  JONATHAN,\n  KAREN,\n  SETH,\n  ZHIMIN,\n};\n\nenum Locations {\n  SODA_SPRINGS_CABIN,\n  DONNER_PASS_CABIN,\n  PALISADES,\n  TRUCKEE,\n  HOTEL,\n  BAY_AREA,\n};\n\nenum CovidStatus {\n  HEALTHY,\n  INFECTED,\n  TESTED_POSITIVE,\n}\n\nconst INITIAL_PEOPLE_STATE = {\n  [People.ALISON]: {\n    covidStatus: CovidStatus.HEALTHY,\n    location: Locations.BAY_AREA,\n  },\n  [People.BRAD]: {\n    covidStatus: CovidStatus.HEALTHY,\n    location: Locations.BAY_AREA,\n  },\n  [People.CHARLIE]: {\n    covidStatus: CovidStatus.HEALTHY,\n    location: Locations.BAY_AREA,\n  },\n  [People.CHRISTIAN]: {\n    covidStatus: CovidStatus.HEALTHY,\n    location: Locations.BAY_AREA,\n  },\n  [People.DANNVER]: {\n    covidStatus: CovidStatus.HEALTHY,\n    location: Locations.BAY_AREA,\n  },\n  [People.DEREK]: {\n    covidStatus: CovidStatus.INFECTED,\n    location: Locations.BAY_AREA,\n  },\n  [People.DREW]: {\n    covidStatus: CovidStatus.HEALTHY,\n    location: Locations.BAY_AREA,\n  },\n  [People.HANYU]: {\n    covidStatus: CovidStatus.HEALTHY,\n    location: Locations.BAY_AREA,\n  },\n  [People.JOE]: {\n    covidStatus: CovidStatus.HEALTHY,\n    location: Locations.BAY_AREA,\n  },\n  [People.JONATHAN]: {\n    covidStatus: CovidStatus.HEALTHY,\n    location: Locations.BAY_AREA,\n  },\n  [People.KAREN]: {\n    covidStatus: CovidStatus.HEALTHY,\n    location: Locations.BAY_AREA,\n  },\n  [People.SETH]: {\n    covidStatus: CovidStatus.HEALTHY,\n    location: Locations.BAY_AREA,\n  },\n  [People.ZHIMIN]: {\n    covidStatus: CovidStatus.HEALTHY,\n    location: Locations.BAY_AREA,\n  },\n};\n\nenum EventType {\n  TRAVEL,\n  COVID_STATUS_CHANGE,\n  HIGHWAY_STATUS_CHANGE,\n}\n\nconst EVENTS = [\n  {\n    type: EventType.TRAVEL,\n    people: [People.ZHIMIN, People.BRAD, People.KAREN],\n    destination: Locations.SODA_SPRINGS_CABIN,\n    time: 'Friday morning',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.DEREK, People.DANNVER, People.DREW, People.JONATHAN],\n    destination: Locations.DONNER_PASS_CABIN,\n    time: 'Friday night',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.CHRISTIAN, People.CHARLIE, People.JOE],\n    destination: Locations.DONNER_PASS_CABIN,\n    time: 'Friday night',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.SETH, People.ALISON, People.HANYU],\n    destination: Locations.DONNER_PASS_CABIN,\n    time: 'Friday night',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.SETH, People.ALISON, People.JOE, People.DANNVER, People.DEREK],\n    destination: Locations.PALISADES,\n    time: 'Saturday morning',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.CHRISTIAN, People.DREW, People.JONATHAN],\n    destination: Locations.SODA_SPRINGS_CABIN,\n    time: 'Saturday morning',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.CHRISTIAN, People.DREW, People.JONATHAN, People.BRAD],\n    destination: Locations.PALISADES,\n    time: 'Saturday morning',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.KAREN, People.ZHIMIN],\n    destination: Locations.DONNER_PASS_CABIN,\n    time: 'Saturday morning',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.CHRISTIAN, People.DREW, People.JONATHAN, People.BRAD, People.DEREK],\n    destination: Locations.TRUCKEE,\n    time: 'Saturday afternoon',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.SETH, People.ALISON, People.JOE, People.DANNVER],\n    destination: Locations.TRUCKEE,\n    time: 'Saturday afternoon',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.CHRISTIAN, People.DREW, People.JONATHAN, People.BRAD, People.DEREK],\n    destination: Locations.HOTEL,\n    time: 'Saturday evening',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.SETH, People.ALISON, People.JOE, People.DANNVER],\n    destination: Locations.HOTEL,\n    time: 'Saturday evening',\n  },\n  {\n    type: EventType.COVID_STATUS_CHANGE,\n    people: [People.CHRISTIAN, People.BRAD],\n    status: CovidStatus.INFECTED,\n    time: 'Saturday night',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.SETH, People.ALISON, People.BRAD, People.DEREK, People.JONATHAN],\n    destination: Locations.DONNER_PASS_CABIN,\n    time: 'Sunday night',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.CHRISTIAN, People.JOE, People.DREW, People.DANNVER],\n    destination: Locations.DONNER_PASS_CABIN,\n    time: 'Monday morning',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.DEREK, People.DANNVER, People.JONATHAN, People.DREW],\n    destination: Locations.BAY_AREA,\n    time: 'Monday afternoon',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.CHRISTIAN, People.CHARLIE],\n    destination: Locations.BAY_AREA,\n    time: 'Monday afternoon',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.ZHIMIN, People.KAREN, People.BRAD],\n    destination: Locations.BAY_AREA,\n    time: 'Monday afternoon',\n  },\n  {\n    type: EventType.TRAVEL,\n    people: [People.SETH, People.ALISON, People.JOE, People.HANYU],\n    destination: Locations.BAY_AREA,\n    time: 'Monday afternoon',\n  },\n  {\n    type: EventType.COVID_STATUS_CHANGE,\n    people: [People.BRAD, People.DEREK],\n    status: CovidStatus.TESTED_POSITIVE,\n    time: 'Monday night',\n  },\n  {\n    type: EventType.COVID_STATUS_CHANGE,\n    people: [People.CHRISTIAN],\n    status: CovidStatus.TESTED_POSITIVE,\n    time: 'Tuesday morning',\n  },\n]\n\nconst deepcopy = (data) => JSON.parse(JSON.stringify(data));\n\ninterface PersonState {\n  covidStatus: CovidStatus;\n  location: Locations;\n}\n\ninterface PeopleState {\n  [person: number]: PersonState;\n}\n\ninterface State {\n  eventIndex: number;\n  peopleState: PeopleState;\n}\n\nexport default function CovidTracker() {\n  const [history, setHistory] = useState<[State]>([{eventIndex: -1, peopleState: INITIAL_PEOPLE_STATE}]);\n  const {eventIndex, peopleState} = history[history.length - 1];\n\n  let currentLocations = []\n  for (const location in Locations) {\n    if (!isNaN(Number(location))) {\n      let peopleAtLocation = [];\n      for (const [person, {location: personLocation, covidStatus}] of Object.entries(peopleState)) {\n        if (location == String(personLocation)) {\n          peopleAtLocation.push(<li key={person}\n            className={covidStatus === CovidStatus.HEALTHY ? 'healthy' : '' +\n            (covidStatus === CovidStatus.INFECTED ? 'infected' : '') +\n            (covidStatus === CovidStatus.TESTED_POSITIVE ? 'tested-positive' : '')}>\n              {People[person]}</li>);\n        }\n      }\n      currentLocations.push(\n        <div key={location}>\n          <h4>{Locations[location]}</h4>\n          <ul>\n            {peopleAtLocation}\n          </ul>\n        </div>);\n    }\n  }\n\n  const updatePeopleLocations = (people, newLocation) => {\n    const newPeopleState = deepcopy(peopleState);\n    for (const person of people) {\n      newPeopleState[person].location = newLocation;\n    }\n    return newPeopleState;\n  }\n\n  const updatePeopleCovidStatus = (people, status) => {\n    const newPeopleState = deepcopy(peopleState);\n    for (const person of people) {\n      newPeopleState[person].covidStatus = status;\n    }\n    return newPeopleState;\n  }\n\n  const handleEvent = (event) => {\n    switch (event.type) {\n      case EventType.TRAVEL:\n        return updatePeopleLocations(event.people, event.destination);\n      case EventType.COVID_STATUS_CHANGE:\n        return updatePeopleCovidStatus(event.people, event.status);\n      default:\n        console.error(`Unhandled event type ${event.type}`)\n        return {}\n    }\n  }\n\n  const advance = () => {\n    if (eventIndex >= EVENTS.length - 1) return;\n    const newEventIndex = eventIndex + 1;\n    const newPeopleState = handleEvent(EVENTS[newEventIndex]);\n    const newHistory = deepcopy(history);\n    newHistory.push({eventIndex: newEventIndex, peopleState: newPeopleState});\n    setHistory(newHistory);\n  }\n\n  const back = () => {\n    if (eventIndex == -1) return;\n    const newHistory = deepcopy(history);\n    newHistory.pop();\n    const {eventIndex: newEventIndex, peopleState: newPeopleState} = newHistory[newHistory.length - 1];\n    setHistory(newHistory);\n  }\n\n  const restart = () => {\n    setHistory([{eventIndex: -1, peopleState: INITIAL_PEOPLE_STATE}]);\n  }\n\n  return (\n    <div>\n      <h2>Covid Tracker</h2>\n      <button disabled={eventIndex > -1 ? null : true} onClick={back}>Back</button>\n      <button disabled={eventIndex >= EVENTS.length - 1 ? true : null} onClick={advance}>Advance</button>\n      <button onClick={restart}>Restart</button>\n      <p>Current time: {eventIndex >= 0 ? EVENTS[eventIndex].time : 'Friday morning'}</p>\n      <p><b>Key:</b> COVID Status:{' '}\n        <span style={{color: 'green'}}>healthy</span>{' '}\n        <span style={{color: 'orange'}}>likely infected</span>{' '}\n        <span style={{color: 'red'}}>tested positive</span>{' '}\n      </p>\n      <div className=\"current-locations\">\n        <h3>Locations:</h3>\n        {currentLocations}\n      </div>\n    </div>\n  );\n}\n"},"relativePath":"motm_covid_tracker/covid_tracker.tsx"},{"fields":{"contents":"---\ntitle: MotM COVID Tracker\ndate: 2023-03-07\ndraft: true\n---\n\nimport CovidTracker from './covid_tracker';\n\n<CovidTracker/>\n"},"relativePath":"motm_covid_tracker/motm_covid_tracker.mdx"},{"fields":{"contents":".current-locations {\n  ul > li {\n    &.healthy { color: green; }\n    &.infected { color: orange; }\n    &.tested-positive { color: red; }\n  }\n}\n"},"relativePath":"motm_covid_tracker/styles.scss"},{"fields":{"contents":"import React, { useState } from 'react'\nimport * as Tone from 'tone'\n\nimport './styles.scss'\n\nvar $ = require('jquery')\n\nconst TEXT = `Type this text above and hear a nice scale being played. \\\nFor each correct character you'll hear a note from the pentatonic scale, \\\nand for each incorrect character you'll hear a \\\"wrong\\\" note. The most \\\ninteresting thing about this idea is that it uses multiple senses to \\\ninform the user of incorrect input.`\n\nconst SCALE = [\"C4\", \"D4\", \"E4\", \"G4\", \"A4\", \"C5\", \"D5\", \"E5\", \"G5\", \"A5\", \"C6\"]\nconst WRONG_NOTES = [\"C#4\", \"D#4\", \"D#4\", \"F#4\", \"Ab4\", \"C#5\", \"D#5\", \"D#5\", \"F#5\", \"Ab5\", \"C#6\"]\n\nconst SYNTH = new Tone.Synth().toDestination()\n\nconst currTime = () => (new Date().getTime()) / 1000 // seconds\n\nexport default function Input() {\n  const [textInd, setTextInd] = useState(0)\n  const [startTimestamp, setStartTimestamp] = useState(0)\n  const [wpm, setWpm] = useState(0)\n  const [scaleInd, setScaleInd] = useState(0)\n\n  const onChange = (e) => {\n    const text = e.target.value\n    if (text === TEXT[textInd]) {\n      $(`#input-container .text span:nth-child(${textInd + 1})`).addClass(\"complete\")\n      setTextInd(textInd + 1)\n\n      SYNTH.triggerAttackRelease(SCALE[scaleInd], \"64n\")\n      // update scale ind\n      if (scaleInd == 0) {\n        setScaleInd(scaleInd + 1)\n      } else if (scaleInd == SCALE.length - 1) {\n        setScaleInd(scaleInd - 1)\n      } else if (Math.random() < 0.5) {\n        setScaleInd(scaleInd + 1)\n      } else {\n        setScaleInd(scaleInd - 1)\n      }\n    } else {\n      $(`#input-container .text span:nth-child(${textInd + 1})`).addClass(\"failed\")\n      SYNTH.triggerAttackRelease(WRONG_NOTES[scaleInd], \"64n\")\n    }\n    e.target.value = \"\"\n\n    // WPM\n    if (textInd === 0 && startTimestamp === 0) {\n      setStartTimestamp(currTime())\n    } else if (textInd === TEXT.length - 1) {\n      $(\"#input-container .wpm\").removeClass(\"hidden\")\n      const elapsedMinutes = (currTime() - startTimestamp) / 60\n      setWpm(TEXT.split(\" \").length / elapsedMinutes)\n    }\n  }\n\n  return (\n    <div id=\"input-container\">\n      <input\n        autoFocus\n        onChange={onChange}\n      ></input>\n\n    <blockquote className=\"text\">\n      {[...TEXT].map((c, i) => <span key={i}>{c}</span>)}\n    </blockquote>\n\n      <p className=\"wpm hidden\">Nice! Your words per minute: {Math.round(wpm)}</p>\n    </div>\n  )\n}\n"},"relativePath":"musical_typing/input.jsx"},{"fields":{"contents":"import React from 'react'\nimport loadable from \"@loadable/component\"\n\nconst LoadableInput = loadable(() => import('./input'))\n\nexport default function MusicalTyping() {\n  return <LoadableInput />\n}\n"},"relativePath":"musical_typing/musical_typing.jsx"},{"fields":{"contents":"---\ntitle: Musical Typing\ndate: 2021-12-02\n---\n\nimport MusicalTyping from './musical_typing'\n\n<MusicalTyping />\n"},"relativePath":"musical_typing/musical_typing.mdx"},{"fields":{"contents":"@mixin center {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n#keyboard-ui-container {\n  @include center();\n\n  margin-top: 30px;\n\n  .keyboard-layouts {\n    display: flex;\n\n    p {\n      cursor: pointer;\n      margin: 0 10px;\n      font-size: 18px;\n      opacity: 0.5;\n\n      &.selected {\n        opacity: 1;\n        font-weight: 700;\n      }\n    }\n  }\n}\n\n#keyboard {\n  .key {\n    rect {\n      fill: none;\n      transition: fill 300ms;\n      stroke: grey;\n    }\n  }\n}\n\n\n#input-container {\n  @include center();\n\n  input {\n    width: 20px;\n  }\n\n  .text {\n    background: #f9f9f9;\n    border-left: 10px solid #ccc;\n    margin: 1.5em 10px;\n    padding: 0.5em 10px;\n      // quotes: \"\\201C\"\"\\201D\"\"\\2018\"\"\\2019\";\n\n    .failed {\n      background-color: lightcoral;\n    }\n\n    .complete {\n      background-color: lightblue;\n    }\n  }\n\n  .wpm {\n    transition: opacity 2s;\n\n    &.hidden {\n      opacity: 0;\n    }\n  }\n}"},"relativePath":"musical_typing/styles.scss"},{"fields":{"contents":"import * as utils from './utils.js'\n\n// searchTreeNode = {\n//   board\n//   colorToPlay\n//   children: List[searchTreeNode]\n//   minimaxScore\n// }\n\nconst SEARCH_DEPTH = 10\n\nexport function buildSearchTree(board, colorToPlay) {\n  let searchTreeRoot = {board: board, colorToPlay: colorToPlay, children: []}\n\n  // populate children\n  buildSearchTreeHelper(searchTreeRoot, SEARCH_DEPTH)\n\n  // run minimax to populate scores\n  populateMinimaxScore(searchTreeRoot)\n\n  return searchTreeRoot\n}\n\nfunction buildSearchTreeHelper(node, levelsToBuild) {\n  if (levelsToBuild === 0) return\n\n  if (utils.isCheckmate(node.board, node.colorToPlay) ||\n      utils.isStalemate(node.board, node.colorToPlay) ||\n      utils.isDraw(node.board)) {\n    return\n  }\n\n  const moves = utils.legalMovesForColor(node.board, node.colorToPlay)\n  const boards = moves.map(move => utils.makeMove(node.board, move))\n  node.children = boards.map(board => ({\n    board: board,\n    colorToPlay: utils.other(node.colorToPlay),\n    children: [],\n  }))\n  node.children.forEach(child => buildSearchTreeHelper(child, levelsToBuild - 1))\n}\n\nfunction populateMinimaxScore(node) {\n  node.children.forEach(child => populateMinimaxScore(child))\n\n  if (node.children.length === 0) {\n    node.minimaxScore = utils.scoreBoard(node.board)\n  } else {\n    const childrenScores = node.children.map(child => child.minimaxScore)\n    if (node.colorToPlay === \"white\") {\n      node.minimaxScore = Math.max(...childrenScores)\n    } else {\n      node.minimaxScore = Math.min(...childrenScores)\n    }\n  }\n}\n\nexport function computeNextMove(board, colorToPlay) {\n  const gameState = utils.serializeGameState(board, colorToPlay)\n  if (hardcodedMoves.has(gameState)) {\n    return hardcodedMoves.get(gameState)\n  }\n\n  if (utils.isCheckmate(board, colorToPlay) ||\n      utils.isStalemate(board, colorToPlay) ||\n      utils.isDraw(board)) {\n    return\n  }\n\n  const searchTreeRoot = buildSearchTree(board, colorToPlay)\n\n  if (searchTreeRoot.children.length === 0) {\n    console.error(\"Error in `computeNextMove`\")\n    return null\n  }\n\n  // this could be done cleaner with array.sort\n  const scores = searchTreeRoot.children.map(child => child.minimaxScore)\n  const scoreToPick = colorToPlay === \"white\" ? Math.max(...scores) : Math.min(...scores)\n  for (const { board: newBoard, minimaxScore } of searchTreeRoot.children) {\n    if (minimaxScore === scoreToPick) {\n      return utils.moveBetween(board, newBoard)\n    }\n  }\n}\n\n// Hard-code some moves that are stronger than what miniMax comes up with.\nlet hardcodedMoves = new Map()\n{\n  const moves = [\n    {\n      board: [\n        utils.WHITE_KING,\n        null,\n        utils.WHITE_ROOK,\n        utils.WHITE_KNIGHT,\n        null,\n        utils.BLACK_ROOK,\n        utils.BLACK_KNIGHT,\n        utils.BLACK_KING,\n      ],\n      colorToMove: \"black\",\n      move: [6, 4],\n    },\n    {\n      board: [\n        null,\n        utils.WHITE_KING,\n        utils.BLACK_KNIGHT,\n        utils.WHITE_ROOK,\n        null,\n        utils.WHITE_KNIGHT,\n        utils.BLACK_KING,\n        null\n      ],\n      colorToMove: \"black\",\n      move: [2, 4],\n    },\n  ]\n\n  for (const { board, colorToMove, move } of moves) {\n    hardcodedMoves.set(utils.serializeGameState(board, colorToMove), move)\n  }\n}\n"},"relativePath":"one_d_chess/ai.js"},{"fields":{"contents":"import React from 'react'\n\nimport * as ai from './ai'\nimport * as utils from './utils'\n\nimport Reset from '../../../src/images/handwriting/reset.jsx'\n\nvar $ = require(\"jquery\")\n\nconst MAX_SQUARE_SIDE_LENGTH = 70 // px\n\nfunction Board({ board, onSquareClick, highlightedSquares, clickableSquares, squareSideLength }) {\n  // Transform board state to svg elements\n  let squares = []\n  for (let i = 0; i < 8; i++) {\n    let className = \"square \"\n    className += (i % 2 == 0 ? \"dark \" : \"light \")\n    squares.push([\n        <rect\n          width={squareSideLength}\n          height={squareSideLength}\n          className={className}\n          key=\"rect\"\n        />\n    ])\n  }\n\n  // add piece SVGs\n  for (let i = 0; i < board.length; i++) {\n    if (board[i] == null) continue\n    const { color, piece } = board[i]\n    const style = {height: squareSideLength, width: squareSideLength}\n    squares[i].push(\n      <image\n        href={utils.PIECE_SVG_MAP[`${color}_${piece}`]}\n        style={style}\n        key=\"image\"\n      />)\n  }\n\n  // add dots for legal moves\n  for (let i = 0; i < board.length; i++) {\n    if (highlightedSquares.includes(i)) {\n      squares[i].push(\n        <circle\n          className=\"legal-move-dot\"\n          r={squareSideLength / 8}\n          cx={squareSideLength / 2}\n          cy={squareSideLength / 2}\n          key=\"dot\"\n        ></circle>\n      )\n    }\n  }\n\n  squares = squares.map((elems, i) => {\n    const style = {\n      transform: `translate(${squareSideLength*i}px,0)`,\n      cursor: clickableSquares.includes(i) || highlightedSquares.includes(i) ? \"pointer\" : \"auto\",\n    }\n    return (\n      <g style={style} onClick={() => onSquareClick(i)} key={i}>\n        {elems}\n      </g>\n    )\n  })\n\n  return (\n    <svg className=\"board\" width={squareSideLength * 8} height={squareSideLength}>\n      {squares}\n    </svg>\n  )\n}\n\nfunction DebugPanel({ board, whosTurn, selectedPiece }) {\n  const isCheck = utils.isCheck(board, whosTurn)\n  const isCheckmate = utils.isCheckmate(board, whosTurn)\n  const isStalemate = utils.isStalemate(board, whosTurn)\n  const legalMoves = utils.legalMovesForColor(board, whosTurn)\n  const legalMovesForPiece = utils.legalMovesForPiece(board, selectedPiece)\n  const score = utils.scoreBoard(board)\n  const aiNextMove = ai.computeNextMove(board, whosTurn)\n\n  const searchTree = ai.buildSearchTree(board, whosTurn)\n  console.log(\"search tree:\", searchTree)\n\n  return (\n    <div className=\"debug-panel\">\n      <p>Turn: {whosTurn}</p>\n      <p>Selected piece: {selectedPiece}</p>\n      <p>Is check: {`${isCheck}`}</p>\n      <p>Is checkmate: {`${isCheckmate}`}</p>\n      <p>Is stalemate: {`${isStalemate}`}</p>\n      <p>Legal moves: {JSON.stringify(legalMoves)}</p>\n      <p>Legal moves for piece: {JSON.stringify(legalMovesForPiece)}</p>\n      <p>Score: {score}</p>\n      <p>AI's next move: {JSON.stringify(aiNextMove)}</p>\n    </div>\n  )\n}\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = utils.initialState()\n    this.state.squareSideLength = MAX_SQUARE_SIDE_LENGTH\n\n    this.currBoard = this.currBoard.bind(this)\n    this.whosTurn = this.whosTurn.bind(this)\n    this.reset = this.reset.bind(this)\n    this.onSquareClick = this.onSquareClick.bind(this)\n    this.makeMove = this.makeMove.bind(this)\n    this.makeAIMove = this.makeAIMove.bind(this)\n    this.isDraw = this.isDraw.bind(this)\n    this.isStalemate = this.isStalemate.bind(this)\n    this.isCheckmate = this.isCheckmate.bind(this)\n    this.isCheck = this.isCheck.bind(this)\n    this.gameOver = this.gameOver.bind(this)\n    this.getHighlightedSquares = this.getHighlightedSquares.bind(this)\n    this.getClickableSquares = this.getClickableSquares.bind(this)\n  }\n\n  currBoard() {\n    return this.state.timeline[this.state.timelineInd]\n  }\n\n  whosTurn() {\n    return (this.state.timelineInd % 2 === 0) ? \"white\" : \"black\"\n  }\n\n  reset() {\n    this.setState(utils.initialState())\n  }\n\n  onSquareClick(i) {\n    if (this.whosTurn() === \"black\" || this.gameOver()) return\n\n    if (this.state.selectedPiece === i) {\n      // de-select piece\n      this.setState({selectedPiece: null})\n    } else if (utils.isColorsPiece(this.currBoard()[i], this.whosTurn())) {\n      // select piece\n      this.setState({selectedPiece: i})\n    } else if (this.state.selectedPiece != null) {\n      if (!utils.isLegalMove(this.currBoard(), [this.state.selectedPiece, i])) {\n        return\n      }\n      this.makeMove([this.state.selectedPiece, i])\n    }\n  }\n\n  makeMove(move) {\n    this.setState(({ timeline, timelineInd }) => {\n      const newBoard = utils.makeMove(timeline[timelineInd], move)\n      let newTimeline = timeline.slice(0, timelineInd + 1)\n      newTimeline.push(newBoard)\n      return {\n        timeline: newTimeline,\n        timelineInd: timelineInd + 1,\n        selectedPiece: null,\n      }\n    })\n  }\n\n  makeAIMove() {\n    const move = ai.computeNextMove(this.currBoard(), this.whosTurn())\n    this.makeMove(move)\n  }\n\n  getHighlightedSquares() {\n    if (this.whosTurn() === \"black\") return []\n\n    let result = []\n    if (this.state.selectedPiece != null) {\n      for (const [_, dest] of utils.legalMovesForPiece(this.currBoard(), this.state.selectedPiece)) {\n        result.push(dest)\n      }\n    }\n    return result\n  }\n\n  getClickableSquares() {\n    if (this.whosTurn() === \"black\") return []\n\n    let result = []\n    for (let i = 0; i < this.currBoard().length; i++) {\n      if (this.currBoard()[i] != null && this.currBoard()[i].color === this.whosTurn()) {\n        result.push(i)\n      }\n    }\n    return result\n  }\n\n  isDraw() {\n    return utils.isDraw(this.currBoard())\n  }\n\n  isStalemate() {\n    return utils.isStalemate(this.currBoard(), this.whosTurn())\n  }\n\n  isCheckmate() {\n    return utils.isCheckmate(this.currBoard(), this.whosTurn())\n  }\n\n  isCheck() {\n    return utils.isCheck(this.currBoard(), this.whosTurn())\n  }\n\n  gameOver() {\n    return this.isStalemate() || this.isCheckmate() || this.isDraw()\n  }\n\n  componentDidMount() {\n    const recalcWidth = () => {\n      const w = $(\"#one-d-chess\").width()\n      const squareSideLength = Math.min(MAX_SQUARE_SIDE_LENGTH, w / 8)\n      this.setState({squareSideLength: squareSideLength})\n    }\n    recalcWidth()\n    $(window).on(\"resize\", recalcWidth)\n  }\n\n  componentDidUpdate() {\n    if (!this.gameOver() && this.whosTurn() === \"black\") {\n      setTimeout(this.makeAIMove, 500)\n    }\n\n    if (utils.isCheckmate(this.currBoard(), \"black\")) {\n      // kind of hacky\n      $(\"#unlockable-text\").removeClass(\"hidden\")\n      setTimeout(\n        () => $(\"#unlockable-text\").addClass(\"visible\"),\n        300\n      )\n    }\n  }\n\n  render() {\n    const highlightedSquares = this.getHighlightedSquares()\n    const clickableSquares = this.getClickableSquares()\n\n    return (\n      <div className=\"chess-ui\">\n        <div className=\"control-panel\">\n          <Reset className=\"reset\" onClick={this.reset} />\n        </div>\n        <Board\n          board={this.currBoard()}\n          onSquareClick={this.gameOver() ? () => null : this.onSquareClick}\n          highlightedSquares={this.gameOver() ? [] : highlightedSquares}\n          clickableSquares={this.gameOver() ? [] : clickableSquares}\n          squareSideLength={this.state.squareSideLength}\n        />\n        <div className=\"game-state-display\">\n          {this.isDraw() && <h2>Draw - neither side can win without rooks!</h2>}\n          {this.isStalemate() && <h2>Stalemate - {this.whosTurn()} has no legal moves!</h2>}\n          {this.isCheckmate() && <h2>Checkmate - {utils.other(this.whosTurn())} wins!</h2>}\n          {this.isCheck() && !this.isCheckmate() && !this.isStalemate() &&!this.isDraw() &&\n            <h2>{utils.capitalize(this.whosTurn())} is in check!</h2>}\n        </div>\n        {/* <DebugPanel\n          board={this.currBoard()}\n          selectedPiece={this.state.selectedPiece}\n          whosTurn={this.whosTurn()}\n        /> */}\n      </div>\n    )\n  }\n}\n\nexport default Container\n"},"relativePath":"one_d_chess/one_d_chess.jsx"},{"fields":{"contents":"---\ntitle: 1D Chess\ndate: 2021-03-11\n---\n\nimport OneDChess from './one_d_chess.jsx'\n\nI was recently watching a YouTube video about a one-dimensional chess variant and thought it would be fun to implement.\nYou can check out the completed code [here](https://github.com/cselig/cselig.github.io/blob/develop/content/blog/one_d_chess).\n\nIt turns out there are a number of different 1D chess variants, but in this specific one the board is 8 squares long and each side\nonly has a king, knight, and rook.\nPiece movement is similar to regular chess except for the knight, which can move two squares in either direction (and hop\nover pieces). Capturing pieces, stalemate, check, and checkmate all work the same as in normal chess.\n\nBelow you can play as the white pieces against an AI I programmed. Click on a piece and grey dots will appear to show\nthat piece's legal moves. Clicking on a square with a grey dot will move the piece to that square.\n\nIt turns out that white has a forced win from the very beginning - can you find it? Be careful not to concede a stalemate!\n\n<OneDChess />\n\n<div id=\"unlockable-text\" className=\"hidden\">\nWell done - you're now a 1D chess master! 🎉\n</div>\n"},"relativePath":"one_d_chess/one_d_chess.mdx"},{"fields":{"contents":"import black_king from './icons/black_king.svg'\nimport white_king from './icons/white_king.svg'\nimport black_rook from './icons/black_rook.svg'\nimport white_rook from './icons/white_rook.svg'\nimport black_knight from './icons/black_knight.svg'\nimport white_knight from './icons/white_knight.svg'\n\nexport const PIECE_SVG_MAP = {\n  black_king,\n  white_king,\n  black_rook,\n  white_rook,\n  black_knight,\n  white_knight,\n}\n\nexport const WHITE_KING   = {color: 'white', piece: 'king'},\n             WHITE_KNIGHT = {color: 'white', piece: 'knight'},\n             WHITE_ROOK   = {color: 'white', piece: 'rook'},\n             BLACK_KING   = {color: 'black', piece: 'king'},\n             BLACK_KNIGHT = {color: 'black', piece: 'knight'},\n             BLACK_ROOK   = {color: 'black', piece: 'rook'}\n\nconst INITIAL_BOARD_STATE = [\n  WHITE_KING,\n  WHITE_KNIGHT,\n  WHITE_ROOK,\n  null,\n  null,\n  BLACK_ROOK,\n  BLACK_KNIGHT,\n  BLACK_KING\n]\n\nexport function initialState() {\n  return {\n    timeline: [INITIAL_BOARD_STATE.slice()],\n    timelineInd: 0,\n    selectedPiece: null, // index in this.state.board\n  }\n}\n\nexport function other(color) {\n  return color === \"white\" ? \"black\" : \"white\"\n}\n\nexport function isColorsPiece(piece, color) {\n  return piece != null && piece.color === color\n}\n\nfunction kingFor(color) {\n  return color === \"white\" ? WHITE_KING : BLACK_KING\n}\n\n// This name is a little misleading, so use with caution\nfunction samePiece(p1, p2) {\n  return p1 != null && p2 != null && p1.color === p2.color && p1.piece === p2.piece\n}\n\nexport function capitalize(str) {\n  if (str === \"\") return \"\"\n  return str[0].toUpperCase() + str.slice(1).toLowerCase()\n}\n\nfunction destinationSquaresForKing(board, pieceInd) {\n  let squares = []\n  if (pieceInd > 0) squares.push(pieceInd - 1)\n  if (pieceInd < board.length - 1) squares.push(pieceInd + 1)\n  return squares\n}\n\nfunction destinationSquaresForKnight(board, pieceInd) {\n  let squares = []\n  if (pieceInd > 1) squares.push(pieceInd - 2)\n  if (pieceInd < board.length - 2) squares.push(pieceInd + 2)\n  return squares\n}\n\nfunction destinationSquaresForRook(board, pieceInd) {\n  let squares = []\n  const { color } = board[pieceInd]\n  // explore backwards and forwards until end of board or piece\n  // TODO: clean up\n  for (let i = pieceInd - 1; i >= 0; i--) {\n    if (board[i] == null) {\n      squares.push(i)\n    } else if (isColorsPiece(board[i], other(color))) {\n      squares.push(i)\n      break\n    } else {\n      break\n    }\n  }\n  for (let i = pieceInd + 1; i < board.length; i++) {\n    if (board[i] == null) {\n      squares.push(i)\n    } else if (isColorsPiece(board[i], other(color))) {\n      squares.push(i)\n      break\n    } else {\n      break\n    }\n  }\n  return squares\n}\n\nfunction destinationSquaresForPiece(board, pieceInd) {\n  let destSquares\n  const { piece, color } = board[pieceInd]\n  if (piece === \"king\") {\n    destSquares = destinationSquaresForKing(board, pieceInd)\n  } else if (piece === \"knight\") {\n    destSquares = destinationSquaresForKnight(board, pieceInd)\n  } else if (piece === \"rook\") {\n    destSquares = destinationSquaresForRook(board, pieceInd)\n  } else {\n    console.warn(\"Unknown piece\")\n  }\n\n  // can't move to a square occupied by your own piece\n  return destSquares.filter(dest => !isColorsPiece(board[dest], color))\n}\n\n// Returns List[Move], Move: [src, dest]\nexport function legalMovesForPiece(board, pieceInd) {\n  if (pieceInd == null) return []\n\n  let destSquares = destinationSquaresForPiece(board, pieceInd)\n  // can't make a move that would put your king in check\n  destSquares = destSquares.filter(dest => !isCheck(makeMove(board, [pieceInd, dest]), board[pieceInd].color))\n\n  return destSquares.map(dest => [pieceInd, dest])\n}\n\nexport function isLegalMove(board, move) {\n  const legalMoves = legalMovesForPiece(board, move[0])\n  let legalMove = false\n  for (const [_, dest] of legalMoves) {\n    if (dest === move[1]) legalMove = true\n  }\n  return legalMove\n}\n\n// Apply `fn` to each piece of a given color and return the accumulated results.\nfunction generateForEachPieceOfColor(fn, board, color) {\n  let result = []\n  for (let i = 0; i < board.length; i++) {\n    if (board[i] != null && board[i].color === color) {\n      result = result.concat(fn(board, i))\n    }\n  }\n  return result\n}\n\nexport function legalMovesForColor(board, color) {\n  return generateForEachPieceOfColor(legalMovesForPiece, board, color)\n}\n\nfunction destinationSquaresForColor(board, color) {\n  return generateForEachPieceOfColor(destinationSquaresForPiece, board, color)\n}\n\n// Does not check that a move is legal\nexport function makeMove(board, move) {\n  const [src, dest] = move\n  board = board.slice()\n  board[dest] = board[src]\n  board[src] = null\n  return board\n}\n\nexport function isCheck(board, color) {\n  const moves = destinationSquaresForColor(board, other(color))\n  for (const dest of moves) {\n    if (samePiece(board[dest], kingFor(color))) {\n      return true\n    }\n  }\n  return false\n}\n\nexport function hasNoLegalMoves(board, color) {\n  return legalMovesForColor(board, color).length == 0\n}\n\nexport function isDraw(board) {\n  // If the rooks are off the board, no checkmates exist.\n  for (const piece of board) {\n    if (samePiece(piece, WHITE_ROOK) || samePiece(piece, BLACK_ROOK)) {\n      return false\n    }\n  }\n  return true\n}\n\nexport function isStalemate(board, color) {\n  return hasNoLegalMoves(board, color) && !isCheck(board, color)\n}\n\nexport function isCheckmate(board, color) {\n  return hasNoLegalMoves(board, color) && isCheck(board, color)\n}\n\nfunction scorePieceValues(board) {\n  let result = 0\n\n  for (const pieceData of board) {\n    if (pieceData == null) continue\n    const { color, piece } = pieceData\n\n    let score\n    if (piece === \"king\") score = 100\n    else if (piece === \"rook\") score = 10\n    else score = 5\n\n    score = color === \"white\" ? score : -score\n    result += score\n  }\n\n  return result\n}\n\n// Scores the board from the perspective of the given color.\n// Takes into account stalemate and checkmate\nexport function scoreBoard(board) {\n  if (isStalemate(board, \"white\") || isStalemate(board, \"black\") || isDraw(board)) return 0\n  if (isCheckmate(board, \"white\")) return -100\n  if (isCheckmate(board, \"black\")) return 100\n\n  return scorePieceValues(board)\n}\n\nfunction positionOf(piece, board) {\n  for (let i = 0; i < board.length; i++) {\n    if (samePiece(piece, board[i])) {\n      return i\n    }\n  }\n  return -1\n}\n\n// Given two boards, return the move that must have been played in between.\nexport function moveBetween(board1, board2) {\n  // the move will be a piece on both boards in a different place\n  for (const piece of board2) {\n    // don't have to check if positionOf returns -1 because we're iterating through board2,\n    // so we'll find capturing pieces and not captured pieces\n    if (positionOf(piece, board1) != positionOf(piece, board2)) {\n      return [positionOf(piece, board1), positionOf(piece, board2)]\n    }\n  }\n  return null\n}\n\nfunction serializePiece(piece) {\n  if (piece == null) return \"null\"\n  return piece.color + piece.piece\n}\n\n// Not meant to be human readable.\nexport function serializeGameState(board, colorToMove) {\n  let result = \"\"\n  for (const piece of board) {\n    result += serializePiece(piece)\n  }\n  result += colorToMove\n  return result\n}\n"},"relativePath":"one_d_chess/utils.js"},{"fields":{"contents":"import React from \"react\"\nimport * as d3 from \"d3\"\n\nimport * as graphUtils from \"../../../src/js/graphs.js\"\n\nimport nodesData from \"./data/heavenly/nodes.json\"\nimport edgesData from \"./data/heavenly/edges.json\"\n\nconst SVG_WIDTH = 500,\n      SVG_HEIGHT = 500\n\nconst colorMap = {\n  \"blue\": \"#1E88E5\",\n  \"green\": \"#229954\"\n}\n\nconst delay = 500\nconst fadeInText  = () => d3.select(\"#ski-graph .text\").transition().duration(delay).style(\"opacity\", 1)\nconst fadeOutText = () => d3.select(\"#ski-graph .text\").transition().duration(delay).style(\"opacity\", 0)\n\n// moving these functions out of graphUtils for now.\nfunction makeAdjacencyList(edges, nodes) {\n  let adjacencyList = new Map()\n  for (const {start, end} of edges) {\n    if (adjacencyList.has(start)) {\n      adjacencyList.get(start).push(end)\n    } else {\n      adjacencyList.set(start, [end])\n    }\n  }\n  for (let i = 0; i < nodes.length; i++) {\n    if (!adjacencyList.has(i)) adjacencyList.set(i, [])\n  }\n  return adjacencyList\n}\n\n// takes start and end nodes and returns [path_exists, path]\nfunction bfs(start, end, edges, nodes) {\n  if (start === end) return [true, [start]]\n\n  const adjacencyList = makeAdjacencyList(edges, nodes)\n\n  let q = [[start]]\n  let seen = new Set([start])\n\n  while (!(q.length === 0)) {\n    const q_length = q.length\n    for (let i = 0; i < q_length; i++) {\n      const path = q[i]\n      const curr_node = path[path.length - 1]\n      for (const neighbor of adjacencyList.get(curr_node)) {\n        if (neighbor === end) {\n          return [true, path.concat(neighbor)]\n        }\n        if (!seen.has(neighbor)) {\n          seen.add(neighbor)\n          q.push(path.concat(neighbor))\n        }\n      }\n    }\n    q = q.slice(q_length)\n  }\n  return [false, []]\n}\n\nfunction highlightPath(path, onAnimationFinish = () => {}, transitionLength = 500, delayUnit = 100) {\n  // TODO: it might look better if animation duration depended on edge length\n  d3.selectAll(\"g.node, g.edge\").transition().duration(300).style(\"opacity\", 0.3)\n\n  d3.selectAll(\"g.node\")\n    .each((_, i, nodes) => {\n      if (path.includes(i)) {\n        d3.select(nodes[i])\n          .transition()\n          .duration(transitionLength)\n          .delay(path.indexOf(i) * 2 * delayUnit + 3 * delayUnit)\n            .style(\"opacity\", 1)\n      }\n    })\n\n  d3.selectAll(\"g.edge\")\n    .each((_, i, nodes) => {\n      d3.select(nodes[i])\n        .transition()\n        .duration(transitionLength)\n        .delay((d) => {\n          for (let j = 0; j < path.length - 1; j++) {\n            if (path[j] === d.start && path[j + 1] === d.end) {\n              return (j * 2 + 1)* delayUnit + 3 * delayUnit\n            }\n          }\n        })\n          .style(\"opacity\", 1)\n    })\n\n  const animationLength = (path.length * 2 + 3) * delayUnit\n  setTimeout(onAnimationFinish, animationLength)\n}\n\nclass SkiGraph extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      start: null,\n      end: null,\n    }\n  }\n\n  render() {\n    const reset = () => {\n      this.setState({start: null, end: null})\n      d3.selectAll(\"g.node circle\").classed(\"selected\", false)\n      d3.selectAll(\"g.node\").transition().duration(500).style(\"opacity\", 1)\n      d3.selectAll(\"g.edge\").transition().duration(500).style(\"opacity\", 1)\n    }\n\n    let displayText\n    let onTextClick\n    let textClass = \"text\"\n    if (this.state.start === null) {\n      displayText = \"Pick start\"\n    } else if (this.state.end === null) {\n      displayText = \"Pick end\"\n    } else {\n      // on this graph there should be a path between every pair of nodes\n      const [_, path] = bfs(this.state.start, this.state.end, edgesData, nodesData)\n      highlightPath(path, () => setTimeout(fadeInText, 500))\n      displayText = \"Reset\"\n      onTextClick = reset\n      textClass += \" reset-button\"\n    }\n\n    return (\n      <div id=\"ski-graph\">\n        <p\n          onClick={onTextClick}\n          className={textClass}\n        >{displayText}</p>\n\n        <svg width={SVG_WIDTH} height={SVG_HEIGHT}></svg>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    let svg = d3.select(\"#ski-graph svg\")\n    graphUtils.setUpSvg(svg)\n\n    const onNodeClick = (_, i, nodes) => {\n      if (this.state.start != null && this.state.end != null) return\n\n      // this is a pretty clumsy way to do animations but it's simple enough in this case.\n      if (this.state.start == null) {\n        fadeOutText()\n        setTimeout(\n          () => {\n            this.setState({start: i})\n            fadeInText()\n          },\n          delay\n        )\n      } else if (this.state.end == null) {\n        fadeOutText()\n        setTimeout(\n          // fading the text back in is handled in a callback after the animation is finished\n          () => this.setState({end: i}),\n          delay\n        )\n      }\n      d3.select(nodes[i]).classed(\"selected\", true)\n    }\n\n    const nodeOpts = {\n      onClick: onNodeClick,\n    }\n\n    const edgeOpts = {\n      strokeFn: (d) => d.level ? colorMap[d.level] : \"grey\"\n    }\n\n    const scaledNodes = graphUtils.scaleNodeData(nodesData, SVG_WIDTH, SVG_HEIGHT)\n    graphUtils.renderEdgesD3({svg: svg, edgeData: edgesData, nodeData: scaledNodes, directed: true, opts: edgeOpts})\n    graphUtils.renderNodesD3({svg: svg, nodeData: scaledNodes, opts: nodeOpts})\n  }\n}\n\nexport default SkiGraph\n"},"relativePath":"ski_graphs/ski_graph.jsx"},{"fields":{"contents":"---\ntitle: Ski Graphs\ndate: 2021-01-28\nexcerpt: Shredding the fresh powder and directed edges.\ntopic: misc\n---\n\nI recently went skiing, and the process of studying the trail map and picking\nout routes got me thinking about how a ski resort is basically a big directed graph.\n\nThis inspired me to make a little widget that would find shortest paths between two points in the resort. The result\nis a simplified version of Heavenly that doesn't include the parts that were closed when I was there and\nalso doesn't include advanced terrain that I can't ski down (yet). The grey edges are the chairlifts, and the other edges\nare the runs color-coded by level.\n\nTo find a path, click on a start and end node. You can check out the completed code\n[here](https://github.com/cselig/cselig.github.io/blob/develop/content/blog/ski_graphs/ski_graph.jsx).\n\n\nimport SkiGraph from \"./ski_graph\"\n\n<SkiGraph />\n\n"},"relativePath":"ski_graphs/ski_graphs.mdx"},{"fields":{"contents":"import React from \"react\"\nimport * as THREE from \"three\"\n\nvar $ = require(\"jquery\")\n\nclass Pipes extends React.Component {\n  render() {\n    return (\n      <div id=\"pipes-container\" className=\"container\">\n        <button name=\"start\">Start/Reset</button>\n        <div style={{display: \"flex\", alignItems: \"center\"}}>\n          <p>Rotate Camera:</p>\n          <input type=\"checkbox\" name=\"toggle-rotate\"/>\n        </div>\n        <div className=\"canvas\"></div>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    let container = $(\"#pipes-container .canvas\")[0],\n    bbox = container.getBoundingClientRect();\n\n    let scene, camera;\n\n    let renderer = new THREE.WebGLRenderer();\n    renderer.setPixelRatio(window.devicePixelRatio);\n\n    renderer.setSize(bbox.width, bbox.height);\n    container.appendChild(renderer.domElement);\n\n    const SPEED = 3, // units/frame\n          R = 1, // cylinder radius\n          L = 80, // size of cube boundary\n          RADIAL_SEGMENTS = 32,\n          MAX_SEGMENTS = 70, // max segments per pipe\n          MIN_LENGTH = 5, // min length of a pipe segment\n          MAX_LENGTH = 20,\n          CUBE_CENTER = [L/2, L/2, L/2];\n\n    const initialPositions = [\n      [L/2, 0, L/2],\n      [3/4*L, 3/4*L, 0],\n      [L/2, L, L/2],\n    ];\n    const colors = [\n      0x3182bd, // blue\n      0x229954, // green\n      0xF08080, // coral\n    ];\n    const MAX_PIPES = colors.length;\n    let materials = [];\n    for (const color of colors) {\n      materials.push(new THREE.MeshStandardMaterial({color: color}));\n    }\n\n    const bounds = new THREE.Box3(new THREE.Vector3(0, 0, 0), new THREE.Vector3(L, L, L));\n\n    // utils\n    const randInt = function(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    const randChoice = function(arr) {\n      return arr[Math.floor(Math.random()*arr.length)];\n    }\n\n    const newDirection = function(old_dir, position) {\n      // return a new direction vector such that:\n      //   - new direction is orthogonal to old direction\n      //   - a pipe going in new_direction with MAX_LENGTH will stay in bounds\n      let validDirs = directions.filter((new_dir) => {\n        return (vector_dot(old_dir, new_dir) === 0) &&\n              willBeInBounds(new_dir, position)\n      });\n      return randChoice(validDirs);\n    }\n\n    const willBeInBounds = function(dir, position) {\n      const end_position = vector_add(position, vector_scale(dir, MAX_LENGTH + 2));\n      return bounds.containsPoint(new THREE.Vector3(...end_position));\n    }\n\n    // utility functions for working with vectors\n    // could probably make this cleaner by not converting between\n    // js lists and THREE.Vector3's\n    const pos_to_vec = function(pos) {\n      return [pos.x, pos.y, pos.z];\n    }\n\n    const vector_scale = function(v, s) {\n      let result = [];\n      for (let i = 0; i < v.length; i++) {\n        result.push(v[i] * s);\n      }\n      return result;\n    }\n\n    const vector_add = function(v1, v2) {\n      let result = [];\n      for (let i = 0; i < v1.length; i++) {\n        result.push(v1[i] + v2[i]);\n      }\n      return result;\n    }\n\n    const vector_dot = function(v1, v2) {\n      let result = 0;\n      for (let i = 0; i < v1.length; i++) {\n        result += v1[i] * v2[i];\n      }\n      return result;\n    }\n\n    const createCylinder = function() {\n      let geometry = new THREE.CylinderGeometry(R, R, 0, RADIAL_SEGMENTS);\n      let material = materials[numPipes];\n      let mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n      return mesh;\n    }\n\n    const createSphere = function() {\n      let geometry = new THREE.SphereGeometry(R * 1.2, RADIAL_SEGMENTS, RADIAL_SEGMENTS);\n      let material = new THREE.MeshStandardMaterial({color: colors[numPipes]});\n      let mesh = new THREE.Mesh(geometry, material);\n      scene.add(mesh);\n      return mesh;\n    }\n\n    const rotateCylinder = function(c) {\n      if (Math.abs(c.direction[0]) === 1) {\n        c.mesh.rotateZ(Math.PI / 2);\n      } else if (Math.abs(c.direction[2]) === 1) {\n        c.mesh.rotateX(Math.PI / 2);\n      }\n    }\n\n    const computeCameraPos = function() {\n      const x = L * 1.5 * Math.sin(theta);\n      const y = L * 1.5 * (Math.cos(theta) + 1);\n      return [x, L/2, y];\n    }\n\n    const updateCamera = function() {\n      camera.position.set(...computeCameraPos())\n      camera.lookAt(...CUBE_CENTER)\n    }\n\n    const directions = [\n      [1, 0, 0],\n      [0, 1, 0],\n      [0, 0, 1],\n      [-1, 0, 0],\n      [0, -1, 0],\n      [0, 0, -1],\n    ]\n\n    let numSegments; // number of pipe segments that have been created\n    let numPipes; // number of pipes that have been created\n    let c; // keeps track of the current cylinder segment\n    let theta = 8; // current camera rotation\n    let omega = 0.01; // rotational speed\n    let rotateCamera = false;\n\n    let animationRequestId;\n\n    const animate = function() {\n      animationRequestId = requestAnimationFrame(animate);\n\n      if (c.length < c.max_length) {\n        c.length += SPEED;\n        c.mesh.geometry.dispose();\n        c.mesh.geometry = new THREE.CylinderGeometry(R, R, c.length, RADIAL_SEGMENTS);\n        // need to make sure cylinder only grows in one direction\n        const old_pos = pos_to_vec(c.mesh.position);\n        const new_pos = vector_add(old_pos, vector_scale(c.direction, SPEED/2));\n        c.mesh.position.set(...new_pos);\n      } else if (numSegments++ < MAX_SEGMENTS) {\n        // new pipe segment\n        const end_position = vector_add(pos_to_vec(c.mesh.position), vector_scale(c.direction, c.length/2));\n        const old_pos = pos_to_vec(c.mesh.position);\n        const new_pos = vector_add(old_pos, vector_scale(c.direction, c.length/2));\n        c = {\n          length: 0,\n          direction: newDirection(c.direction, end_position),\n          max_length: randInt(MIN_LENGTH, MAX_LENGTH),\n          mesh: createCylinder(),\n        }\n        c.mesh.position.set(...new_pos);\n        rotateCylinder(c);\n        // create sphere at junction\n        let sphere = createSphere();\n        sphere.position.set(...new_pos);\n      } else if (numPipes < MAX_PIPES) {\n        // finish the old pipe with a sphere\n        const position = vector_add(pos_to_vec(c.mesh.position), vector_scale(c.direction, c.length/2));\n        let sphere = createSphere();\n        sphere.position.set(...position);\n\n        if (numPipes < MAX_PIPES - 1) {\n          numPipes++;\n          numSegments = 0;\n          newPipe(initialPositions[numPipes]);\n        } else {\n          init();\n        }\n      }\n\n      if (rotateCamera) {\n        theta += omega;\n        updateCamera();\n      }\n\n      renderer.render(scene, camera);\n    }\n\n    const newPipe = function(position) {\n      c = {\n        length: 0,\n        direction: newDirection([0, 0, 0], position),\n        max_length: randInt(3, 5),\n        mesh: createCylinder(),\n      };\n      rotateCylinder(c);\n      c.mesh.position.set(...position);\n\n      let s = createSphere();\n      s.position.set(...position);\n    }\n\n    const setScene = function() {\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(75, bbox.width/bbox.height, 0.1, 1000);\n\n      updateCamera();\n\n      let light = new THREE.AmbientLight(0x404040, 3);\n      scene.add(light);\n\n      let pointLight = new THREE.PointLight(0x404040, 3, 0);\n      pointLight.position.set(L, L, L);\n      scene.add(pointLight);\n\n      renderer.render(scene, camera);\n    }\n\n    const init = function() {\n      setScene();\n\n      numSegments = 0;\n      numPipes = 0;\n\n      newPipe(initialPositions[0]);\n\n      cancelAnimationFrame(animationRequestId);\n\n      animate();\n    }\n\n    setScene();\n\n    $(\"#pipes-container button[name=start]\").click(init);\n    $(\"#pipes-container input[name=toggle-rotate\").change(() => rotateCamera = !rotateCamera)\n  }\n}\n\nexport default Pipes\n"},"relativePath":"three_js/pipes.jsx"},{"fields":{"contents":"import React from \"react\"\nimport * as THREE from \"three\"\n\nvar $ = require(\"jquery\")\n\nclass SineWave extends React.Component {\n  render() {\n    return (\n      <div id=\"sine-wave-container\" className=\"container\">\n        <div className=\"selectors\">\n          <div className=\"selector\">\n            <p>Frequency:</p>\n            <input name=\"frequency\" type=\"range\"/>\n          </div>\n          <div className=\"selector\">\n            <p>Number of cubes:</p>\n            <input name=\"ncubes\" type=\"range\" min=\"4\" max=\"14\"/>\n          </div>\n        </div>\n        <div className=\"canvas\"></div>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    let container = $(\"#sine-wave-container .canvas\")[0],\n    bbox = container.getBoundingClientRect();\n\n    let scene, camera;\n\n    let renderer = new THREE.WebGLRenderer();\n    renderer.setClearColor (0xffffff, 1);\n\n    renderer.setSize(bbox.width, bbox.height);\n    container.appendChild(renderer.domElement);\n\n    const R = 3, // radius\n          MIN_HEIGHT = 1,\n          AMPLITUDE = 1,\n          TAU = 2 * Math.PI;\n\n    let FREQUENCY,\n        N; // number of cubes\n\n    const get_selector = function(name) {\n      return $(`#sine-wave-container input[name=${name}]`);\n    }\n\n    const set_inputs = function() {\n      // input range default is [0, 100]\n      const frequency_input = get_selector(\"frequency\")[0].value;\n      const [frequency_min, frequency_max] = [0.01, 0.15];\n      FREQUENCY = frequency_input / 100 * (frequency_max - frequency_min) + frequency_min;\n\n      N = get_selector(\"ncubes\")[0].value;\n    }\n\n    let cubes, edges;\n\n    // returns [x, z] coordinates for ith rectangle\n    const coordinates = function(i) {\n      let theta = TAU / N * i;\n      return [R * Math.cos(theta), R * Math.sin(theta)];\n    }\n\n    const init = function() {\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(75, bbox.width/bbox.height, 0.1, 1000);\n\n      cubes = [];\n      edges = [];\n\n      for (let i = 0; i < N; i++) {\n        const [x, z] = coordinates(i);\n\n        let cubeGeo = new THREE.BoxGeometry(1, 1, 1),\n            cubeMaterial = new THREE.MeshBasicMaterial({color: 0x3182bd}),\n            cube = new THREE.Mesh(cubeGeo, cubeMaterial);\n\n        cube.position.x = x;\n        cube.position.z = z;\n\n        scene.add(cube);\n        cubes.push(cube);\n\n        let edgeGeo = new THREE.EdgesGeometry(cube.geometry),\n            edgeMaterial = new THREE.LineBasicMaterial({color: 0x000000}),\n            edge = new THREE.LineSegments(edgeGeo, edgeMaterial);\n\n        cube.add(edge);\n        edges.push(edge);\n      }\n\n      camera.position.z = R * 2;\n      camera.position.y = MIN_HEIGHT + AMPLITUDE * 4;\n      camera.position.x = 2;\n      camera.lookAt(0, 0, 0);\n    }\n\n    let t = 0;\n\n    const animate = function() {\n      requestAnimationFrame(animate);\n\n      for (let i = 0; i < N; i++) {\n        let cube = cubes[i];\n        let edge = edges[i];\n\n        let height = MIN_HEIGHT + AMPLITUDE + AMPLITUDE * Math.sin(FREQUENCY * t + TAU / N * i);\n        let newGeo = new THREE.CubeGeometry(1, height, 1);\n        cube.position.y = height / 2;\n\n        cube.geometry.dispose();\n        cube.geometry = newGeo;\n\n        edge.geometry.dispose();\n        edge.geometry = newGeo;\n      }\n\n      renderer.render(scene, camera);\n      t++;\n    }\n\n    get_selector(\"frequency\").change(() => {\n      set_inputs();\n      init();\n    });\n\n    get_selector(\"ncubes\").change(() => {\n      set_inputs();\n      init();\n    })\n\n    set_inputs();\n    init();\n    animate();\n  }\n}\n\nexport default SineWave"},"relativePath":"three_js/sine_wave.jsx"},{"fields":{"contents":"import React from \"react\"\nimport * as THREE from \"three\"\n\nclass SpinningBox extends React.Component {\n  render() {\n    return <div id=\"spinning-box-container\" className=\"canvas\"></div>\n  }\n\n  componentDidMount() {\n    let container = document.getElementById(\"spinning-box-container\"),\n    bbox = container.getBoundingClientRect();\n\n    let scene = new THREE.Scene();\n    let camera = new THREE.PerspectiveCamera(75, bbox.width/bbox.height, 0.1, 1000);\n\n    let renderer = new THREE.WebGLRenderer();\n    renderer.setClearColor (0xffffff, 1);\n\n    renderer.setSize(bbox.width, bbox.height);\n    container.appendChild(renderer.domElement);\n\n    let cubeGeo = new THREE.BoxGeometry(2, 2, 2),\n      cubeMaterial = new THREE.MeshBasicMaterial({color: 0x3182bd}),\n      cube = new THREE.Mesh(cubeGeo, cubeMaterial);\n    scene.add(cube);\n\n    let edgeGeo = new THREE.EdgesGeometry(cubeGeo),\n      edgeMaterial = new THREE.LineBasicMaterial({color: 0x000000, linewidth: 2}),\n      edges = new THREE.LineSegments(edgeGeo, edgeMaterial);\n    cube.add(edges);\n\n    camera.position.z = 5;\n    cube.rotation.x = 1;\n    cube.rotation.y = 1;\n\n    const animate = function () {\n      requestAnimationFrame(animate);\n\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n}\n\nexport default SpinningBox"},"relativePath":"three_js/spinning_box.jsx"},{"fields":{"contents":"---\ntitle: The Windows \"Pipes\" Screensaver\ndate: 2020-04-23\nexcerpt: Making some 3D stuff.\ntopic: programming\n---\n\nimport Pipes from \"./pipes\"\n\nI came across a GIF of the old \"pipes\" screensaver from Windows '95 and thought it would be fun to recreate using [three.js](https://threejs.org/).\nIt ended up being a fun challenge! I haven't yet gotten around\nto the hardest part though, which is making sure the pipes don't intersect themselves.\nYou can check out the completed code [here](https://github.com/cselig/cselig.github.io/blob/develop/content/blog/three_js/pipes.jsx).\n\n<Pipes />\n"},"relativePath":"three_js/three_js.mdx"},{"fields":{"contents":"#bitonic-array-max {\n  display: flex;\n  flex-direction: column;\n  background-color: #f5f5f5;\n  border-radius: 10px;\n  padding: 20px;\n\n  button {\n    margin: 10px;\n  }\n\n  button[name=advance] {\n    font-size: 20px;\n  }\n\n  button[name=advance], button[name=reset] {\n    width: fit-content;\n    margin: 10px auto;\n  }\n}\n\n#code {\n  background-color: #ffecb3;\n  border-radius: 10px;\n  padding: 10px;\n}\n\n#array-viz {\n  background-color: #bbdefb;\n  border-radius: 10px;\n  padding: 10px;\n}\n\n.dot {\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  display: inline-block;\n\n  &.start {\n    background-color: green;\n  }\n\n  &.mid {\n    background-color: yellow;\n  }\n\n  &.end {\n    background-color: red;\n  }\n}\n"},"relativePath":"visual_bin_search/bitonic_array_max.scss"},{"fields":{"contents":"import React, { useState } from \"react\"\nimport * as d3 from \"d3\"\n\nimport \"./bitonic_array_max.scss\"\n\n/*\ndef find_bitonic_max(arr):\n  start = 0                           # INIT_START\n  end = len(arr) - 1                  # INIT_END\n  while start < end:                  # LOOP\n    mid = start + (end - start) // 2  # CALCULATE_MID\n    if arr[mid] > arr[mid + 1]:       # BRANCH\n      end = mid                       # MOVE_END\n    else:\n      start = mid + 1                 # MOVE_START\n  return arr[start]                   # RETURN\n\nINITIAL -> INIT_START -> INIT_END -> LOOP\nLOOP -> CALCULATE_MID | RETURN\nCALCULATE_MID -> BRANCH -> MOVE_END | MOVE_START -> LOOP\n*/\n\nenum State {\n  INITIAL = \"INITIAL\",\n  INIT_START = \"INIT_START\",\n  INIT_END = \"INIT_END\",\n  LOOP = \"LOOP\",\n  CALCULATE_MID = \"CALCULATE_MID\",\n  BRANCH = \"BRANCH\",\n  MOVE_END = \"MOVE_END\",\n  MOVE_START = \"MOVE_START\",\n  RETURN = \"RETURN\",\n}\n\nfunction Code({ state }) {\n  const stateToLine = new Map([\n    [State.INITIAL, 0],\n    [State.INIT_START, 1],\n    [State.INIT_END, 2],\n    [State.LOOP, 3],\n    [State.CALCULATE_MID, 4],\n    [State.BRANCH, 5],\n    [State.MOVE_END, 6],\n    [State.MOVE_START, 8],\n    [State.RETURN, 9],\n  ])\n  const lines = [\n    `  def find_bitonic_max(arr):`,\n    `    start = 0`,\n    `    end = len(arr) - 1`,\n    `    while start < end:`,\n    `      mid = start + (end - start) // 2`,\n    `      if arr[mid] > arr[mid + 1]:`,\n    `        end = mid`,\n    `      else:`,\n    `        start = mid + 1`,\n    `    return arr[start]`,\n  ]\n  const comments = [\n    ``,\n    `initialize start`,\n    `initialize end`,\n    `if start < end, we keep searching`,\n    `calculate the mid point`,\n    `is the midpoint in the decreasing half?`,\n    `if in the decreasing half, adjust end`,\n    ``,\n    `if in the increasing half, adjust start`,\n    `we found the answer and start == end`,\n  ]\n  return (\n    <div id=\"code\">\n      <pre>\n        {\n          lines.map((line, i) => {\n            if (stateToLine.get(state) === i) {\n              let firstChar = 0\n              while (line[firstChar] === \" \") firstChar ++\n              console.log(line, firstChar, line[firstChar], line[firstChar] === \" \")\n              line = line.slice(0, firstChar - 2) + \">\" + line.slice(firstChar - 1, line.length)\n              if (comments[i] !== \"\") {\n                line = line + \" # \" + comments[i]\n              }\n            }\n            return <span key={i}>{line + \"\\n\"}</span>\n          })\n        }\n      </pre>\n    </div>\n  )\n}\n\nfunction Chart({ arr, start, end, mid }) {\n  const WIDTH = 450\n  const HEIGHT = 200\n  const PADDING = 50\n  const X_MIN = PADDING\n  const X_MAX = WIDTH - PADDING\n  const Y_MAX = HEIGHT - PADDING\n  const Y_MIN = 25\n  const BAR_WIDTH = (X_MAX - X_MIN) / arr.length\n\n  let xScale = d3.scaleLinear()\n    .domain([0, arr.length])\n    .range([X_MIN, X_MAX])\n  let yScale = d3.scaleLinear()\n    .domain([0, d3.max(arr)])\n    .range([Y_MIN, Y_MAX])\n\n  return (\n    <svg id=\"chart\" width={WIDTH} height={HEIGHT}>\n      {\n        [\n          [start, \"green\"],\n          [mid, \"yellow\"],\n          [end, \"red\"],\n        ].map(([num, color]) => {\n          if (num === null) return null\n          let yAdjust = 0\n          if (color === \"yellow\" && start === mid) {\n            yAdjust = -20\n          } else if (color === \"red\" && end === start) {\n            yAdjust = -20\n          }\n          return <circle\n            r=\"7\"\n            cx={xScale(num) + BAR_WIDTH / 2}\n            cy={Y_MAX - 12 + yAdjust}\n            fill={color}\n            stroke=\"none\"\n            key={color}\n          />\n        })\n      }\n      {\n        arr.map((element, i) => {\n          const style = {\n            x: xScale(i),\n            y: Y_MAX - yScale(element) + Y_MIN,\n            width: BAR_WIDTH,\n            height: yScale(element) - Y_MIN,\n          }\n          return (\n            <g key={i}>\n              <rect\n                fill=\"none\"\n                stroke=\"black\"\n                style={style}\n                key={i}\n              />\n              <text x={xScale(i) + BAR_WIDTH / 3} y={Y_MAX - yScale(element) + Y_MIN - 10}>\n                {element}\n              </text>\n              <text x={xScale(i) + BAR_WIDTH / 3} y={Y_MAX + 20}>\n                {i}\n              </text>\n            </g>\n          )\n        })\n      }\n    </svg>\n  )\n}\n\nconst arrayIsBitonic = (arr) => {\n  if (arr.length < 3) {\n    return false\n  }\n\n  let decreasing = false\n  for (let i = 1; i < arr.length; i++) {\n    if (decreasing) {\n      if (arr[i] > arr[i - 1]) {\n        return false\n      }\n    } else if ((arr[i] < arr[i - 1])) {\n      if (i == 1) {\n        return false\n      } else {\n        decreasing = true\n      }\n    }\n  }\n  return decreasing\n}\n\nfunction ArrayInput({ arr, setArr, reset, setError }) {\n  const [input, setInput] = useState(arr.join(\",\"))\n  const setArray = () => {\n    const newArr = input.replaceAll(\" \", \"\").split(\",\").map((x) => parseInt(x))\n    console.log(input, newArr)\n    setArr(newArr)\n    reset()\n    if (newArr.includes(NaN)) {\n      setError(\"Array is invalid\")\n    } else if (!arrayIsBitonic(newArr)) {\n      setError(\"Array is not a mountain array\")\n    } else {\n      setError(null)\n    }\n  }\n  return (\n    <div id=\"array-input\">\n      <input\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <button onClick={setArray}>Set Array</button>\n    </div>\n  )\n}\n\nexport default function UI() {\n  const [arr, setArr] = useState([1, 2, 3, 4, 5, 4, 3, 2])\n  const [error, setError] = useState(null)\n  const [state, setState] = useState(State.INITIAL)\n  const [start, setStart] = useState(null)\n  const [mid, setMid] = useState(null)\n  const [end, setEnd] = useState(null)\n\n  const advance = () => {\n    switch (state) {\n      case State.INITIAL:\n        setState(State.INIT_START)\n        break;\n      case State.INIT_START:\n        setStart(0)\n        setState(State.INIT_END)\n        break;\n      case State.INIT_END:\n        setEnd(arr.length - 1)\n        setState(State.LOOP)\n        break;\n      case State.LOOP:\n        if (start < end) {\n          setState(State.CALCULATE_MID)\n        } else {\n          setState(State.RETURN)\n        }\n        break;\n      case State.CALCULATE_MID:\n        setMid(start + Math.floor((end - start) / 2))\n        setState(State.BRANCH)\n        break;\n      case State.BRANCH:\n        if (arr[mid] > arr[mid + 1]) {\n          setState(State.MOVE_END)\n        } else {\n          setState(State.MOVE_START)\n        }\n        break;\n      case State.MOVE_END:\n        setEnd(mid)\n        setMid(null)\n        setState(State.LOOP)\n        break;\n      case State.MOVE_START:\n        setStart(mid + 1)\n        setMid(null)\n        setState(State.LOOP)\n        break;\n      case State.RETURN:\n        break;\n      default:\n        console.error(`unknown state: ${state}`)\n        break;\n    }\n  }\n\n  const reset = () => {\n    setState(State.INITIAL)\n    setStart(null)\n    setMid(null)\n    setEnd(null)\n  }\n\n  return (\n    <div id=\"bitonic-array-max\">\n      <button name=\"advance\" onClick={advance}>{state === State.INITIAL ? \"Start\" : \"Advance\"}</button>\n      <button name=\"reset\" onClick={reset}>Reset</button>\n      <h3>Input Array</h3>\n      <ArrayInput\n        arr={arr}\n        setArr={setArr}\n        reset={reset}\n        setError={setError}\n      />\n      <h3>Solution Code</h3>\n      <Code state={state} />\n      {error &&\n        <p><span>❌</span> Error: {error}</p>\n      }\n      {!error &&\n        <>\n          <h3>Array Visualization</h3>\n          <div id=\"array-viz\">\n            <Chart\n              arr={arr}\n              start={start}\n              end={end}\n              mid={mid}\n            />\n            <div>\n              <p><span className=\"dot start\"></span>Start: {start}</p>\n              <p><span className=\"dot mid\"></span>Mid: {mid}</p>\n              <p><span className=\"dot end\"></span>End: {end}</p>\n            </div>\n          </div>\n        </>\n      }\n    </div>\n  )\n}\n"},"relativePath":"visual_bin_search/bitonic_array_max.tsx"},{"fields":{"contents":"---\ntitle: Visual Binary Search\ndate: 2022-02-18\n---\n\nI volunteer for an organization called [Manara](https://manara.tech/), which helps CS graduates (primarily women) in the Middle\nEast get high-paying jobs at big tech companies. I'm doing some question and answer sessions\non common types of technical interview problems. In one of the recent sessions we\ncovered some binary search questions. I find it useful to visualize these problems when I'm\nsolving them myself, so I built something that shows the input data and solution code. The\ngoal is to help the viewer understand how the solution algorithm works.\n\n## Peak Index in a Mountain Array\n\nA mountain array is one where the values increase for some first portion of the array, and\nare decreasing in the second portion. The goal of this problem is to find the maximum value,\nor \"peak\", of a mountain array.\n\nSee the Leetcode question [here](https://leetcode.com/problems/peak-index-in-a-mountain-array/).\n\nimport BitonicArrayMax from './bitonic_array_max'\n\n<BitonicArrayMax />\n"},"relativePath":"visual_bin_search/visual_bin_search.mdx"},{"fields":{"contents":"{\n  \"instruments\": [\n    {\n      \"instrument\": \"Rhythm\",\n      \"sections\": {}\n    },\n    {\n      \"instrument\": \"Guitar\",\n      \"sections\": {}\n    },\n    {\n      \"instrument\": \"Harmonica\",\n      \"sections\": {}\n    },\n    {\n      \"instrument\": \"Vocals\",\n      \"sections\": {}\n    },\n    {\n      \"instrument\": \"Keys\",\n      \"sections\": {}\n    }\n  ],\n  \"sections\": [\n    {\n      \"section\": \"Intro\",\n      \"length\": 4\n    },\n    {\n      \"section\": \"Riff\",\n      \"length\": 4\n    },\n    {\n      \"section\": \"Verse\",\n      \"length\": 6\n    },\n    {\n      \"section\": \"R2\",\n      \"length\": 2\n    },\n    {\n      \"section\": \"Verse 2\",\n      \"length\": 8\n    },\n    {\n      \"section\": \"Jam\",\n      \"length\": 7\n    },\n    {\n      \"section\": \"Outro\",\n      \"length\": 8\n    }\n  ],\n  \"title\": \"Boogieman Sam\",\n  \"cells\": {\n    \"0:0\": \"none\",\n    \"0:1\": \"none\",\n    \"0:2\": \"none\",\n    \"0:3\": \"none\",\n    \"0:4\": \"none\",\n    \"0:5\": \"none\",\n    \"0:6\": \"none\",\n    \"0:7\": \"none\",\n    \"0:8\": \"none\",\n    \"0:9\": \"none\",\n    \"0:10\": \"none\",\n    \"0:11\": \"none\",\n    \"0:12\": \"none\",\n    \"0:13\": \"none\",\n    \"0:14\": \"none\",\n    \"0:15\": \"none\",\n    \"0:16\": \"none\",\n    \"0:17\": \"none\",\n    \"0:18\": \"none\",\n    \"0:19\": \"none\",\n    \"0:20\": \"none\",\n    \"0:21\": \"none\",\n    \"0:22\": \"none\",\n    \"0:23\": \"none\",\n    \"0:24\": \"none\",\n    \"0:25\": \"none\",\n    \"0:26\": \"none\",\n    \"0:27\": \"none\",\n    \"0:28\": \"none\",\n    \"0:29\": \"none\",\n    \"0:30\": \"none\",\n    \"0:31\": \"none\",\n    \"0:32\": \"none\",\n    \"0:33\": \"none\",\n    \"0:34\": \"none\",\n    \"0:35\": \"none\",\n    \"0:36\": \"none\",\n    \"0:37\": \"none\",\n    \"0:38\": \"none\",\n    \"0:39\": \"none\",\n    \"0:40\": \"none\",\n    \"0:41\": \"none\",\n    \"0:42\": \"none\",\n    \"0:43\": \"none\",\n    \"0:44\": \"none\",\n    \"0:45\": \"none\",\n    \"0:46\": \"none\",\n    \"1:0\": \"none\",\n    \"1:1\": \"none\",\n    \"1:2\": \"none\",\n    \"1:3\": \"none\",\n    \"1:4\": \"none\",\n    \"1:5\": \"none\",\n    \"1:6\": \"none\",\n    \"1:7\": \"none\",\n    \"1:8\": \"none\",\n    \"1:9\": \"none\",\n    \"1:10\": \"none\",\n    \"1:11\": \"none\",\n    \"1:12\": \"none\",\n    \"1:13\": \"none\",\n    \"1:14\": \"none\",\n    \"1:15\": \"none\",\n    \"1:16\": \"none\",\n    \"1:17\": \"none\",\n    \"1:18\": \"none\",\n    \"1:19\": \"none\",\n    \"1:20\": \"none\",\n    \"1:21\": \"none\",\n    \"1:22\": \"none\",\n    \"1:23\": \"none\",\n    \"1:24\": \"none\",\n    \"1:25\": \"none\",\n    \"1:26\": \"none\",\n    \"1:27\": \"none\",\n    \"1:28\": \"none\",\n    \"1:29\": \"none\",\n    \"1:30\": \"none\",\n    \"1:31\": \"none\",\n    \"1:32\": \"none\",\n    \"1:33\": \"none\",\n    \"1:34\": \"none\",\n    \"1:35\": \"none\",\n    \"1:36\": \"none\",\n    \"1:37\": \"none\",\n    \"1:38\": \"none\",\n    \"1:39\": \"none\",\n    \"1:40\": \"none\",\n    \"1:41\": \"none\",\n    \"1:42\": \"none\",\n    \"1:43\": \"none\",\n    \"1:44\": \"none\",\n    \"1:45\": \"none\",\n    \"1:46\": \"none\",\n    \"2:0\": \"none\",\n    \"2:1\": \"none\",\n    \"2:2\": \"none\",\n    \"2:3\": \"none\",\n    \"2:4\": \"none\",\n    \"2:5\": \"none\",\n    \"2:6\": \"none\",\n    \"2:7\": \"none\",\n    \"2:8\": \"none\",\n    \"2:9\": \"none\",\n    \"2:10\": \"none\",\n    \"2:11\": \"none\",\n    \"2:12\": \"none\",\n    \"2:13\": \"none\",\n    \"2:14\": \"none\",\n    \"2:15\": \"none\",\n    \"2:16\": \"none\",\n    \"2:17\": \"none\",\n    \"2:18\": \"none\",\n    \"2:19\": \"none\",\n    \"2:20\": \"none\",\n    \"2:21\": \"none\",\n    \"2:22\": \"none\",\n    \"2:23\": \"none\",\n    \"2:24\": \"none\",\n    \"2:25\": \"none\",\n    \"2:26\": \"none\",\n    \"2:27\": \"none\",\n    \"2:28\": \"none\",\n    \"2:29\": \"none\",\n    \"2:30\": \"none\",\n    \"2:31\": \"none\",\n    \"2:32\": \"none\",\n    \"2:33\": \"none\",\n    \"2:34\": \"none\",\n    \"2:35\": \"none\",\n    \"2:36\": \"none\",\n    \"2:37\": \"none\",\n    \"2:38\": \"none\",\n    \"2:39\": \"none\",\n    \"2:40\": \"none\",\n    \"2:41\": \"none\",\n    \"2:42\": \"none\",\n    \"2:43\": \"none\",\n    \"2:44\": \"none\",\n    \"2:45\": \"none\",\n    \"2:46\": \"none\",\n    \"3:0\": \"none\",\n    \"3:1\": \"none\",\n    \"3:2\": \"none\",\n    \"3:3\": \"none\",\n    \"3:4\": \"none\",\n    \"3:5\": \"none\",\n    \"3:6\": \"none\",\n    \"3:7\": \"none\",\n    \"3:8\": \"none\",\n    \"3:9\": \"none\",\n    \"3:10\": \"none\",\n    \"3:11\": \"none\",\n    \"3:12\": \"none\",\n    \"3:13\": \"none\",\n    \"3:14\": \"none\",\n    \"3:15\": \"none\",\n    \"3:16\": \"none\",\n    \"3:17\": \"none\",\n    \"3:18\": \"none\",\n    \"3:19\": \"none\",\n    \"3:20\": \"none\",\n    \"3:21\": \"none\",\n    \"3:22\": \"none\",\n    \"3:23\": \"none\",\n    \"3:24\": \"none\",\n    \"3:25\": \"none\",\n    \"3:26\": \"none\",\n    \"3:27\": \"none\",\n    \"3:28\": \"none\",\n    \"3:29\": \"none\",\n    \"3:30\": \"none\",\n    \"3:31\": \"none\",\n    \"3:32\": \"none\",\n    \"3:33\": \"none\",\n    \"3:34\": \"none\",\n    \"3:35\": \"none\",\n    \"3:36\": \"none\",\n    \"3:37\": \"none\",\n    \"3:38\": \"none\",\n    \"3:39\": \"none\",\n    \"3:40\": \"none\",\n    \"3:41\": \"none\",\n    \"3:42\": \"none\",\n    \"3:43\": \"none\",\n    \"3:44\": \"none\",\n    \"3:45\": \"none\",\n    \"3:46\": \"none\",\n    \"4:0\": \"none\",\n    \"4:1\": \"none\",\n    \"4:2\": \"none\",\n    \"4:3\": \"none\",\n    \"4:4\": \"none\",\n    \"4:5\": \"none\",\n    \"4:6\": \"none\",\n    \"4:7\": \"none\",\n    \"4:8\": \"none\",\n    \"4:9\": \"none\",\n    \"4:10\": \"#5C6BC0\",\n    \"4:11\": \"#5C6BC0\",\n    \"4:12\": \"#5C6BC0\",\n    \"4:13\": \"#5C6BC0\",\n    \"4:14\": \"#5C6BC0\",\n    \"4:15\": \"#EF5350\",\n    \"4:16\": \"#EF5350\",\n    \"4:17\": \"#EF5350\",\n    \"4:18\": \"#EF5350\",\n    \"4:19\": \"#66BB6A\",\n    \"4:20\": \"#66BB6A\",\n    \"4:21\": \"#5C6BC0\",\n    \"4:22\": \"#5C6BC0\",\n    \"4:23\": \"#EF5350\",\n    \"4:24\": \"#EF5350\",\n    \"4:25\": \"#EF5350\",\n    \"4:26\": \"#EF5350\",\n    \"4:27\": \"#66BB6A\",\n    \"4:28\": \"#66BB6A\",\n    \"4:29\": \"#66BB6A\",\n    \"4:30\": \"#66BB6A\",\n    \"4:31\": \"none\",\n    \"4:32\": \"none\",\n    \"4:33\": \"#5C6BC0\",\n    \"4:34\": \"#5C6BC0\",\n    \"4:35\": \"#EF5350\",\n    \"4:36\": \"#EF5350\",\n    \"4:37\": \"#66BB6A\",\n    \"4:38\": \"#5C6BC0\",\n    \"4:39\": \"#5C6BC0\",\n    \"4:40\": \"#5C6BC0\",\n    \"4:41\": \"#5C6BC0\",\n    \"4:42\": \"#5C6BC0\",\n    \"4:43\": \"#5C6BC0\",\n    \"4:44\": \"#5C6BC0\",\n    \"4:45\": \"#5C6BC0\",\n    \"4:46\": \"none\",\n    \"5:0\": \"none\",\n    \"5:1\": \"none\",\n    \"5:2\": \"none\",\n    \"5:3\": \"none\",\n    \"5:4\": \"none\",\n    \"5:5\": \"none\",\n    \"5:6\": \"none\",\n    \"5:7\": \"none\",\n    \"5:8\": \"none\",\n    \"5:9\": \"none\",\n    \"5:10\": \"#5C6BC0\",\n    \"5:11\": \"#5C6BC0\",\n    \"5:12\": \"#5C6BC0\",\n    \"5:13\": \"#5C6BC0\",\n    \"5:14\": \"#5C6BC0\",\n    \"5:15\": \"#EF5350\",\n    \"5:16\": \"#EF5350\",\n    \"5:17\": \"#EF5350\",\n    \"5:18\": \"#EF5350\",\n    \"5:19\": \"#66BB6A\",\n    \"5:20\": \"#66BB6A\",\n    \"5:21\": \"#5C6BC0\",\n    \"5:22\": \"#5C6BC0\",\n    \"5:23\": \"#EF5350\",\n    \"5:24\": \"#EF5350\",\n    \"5:25\": \"#EF5350\",\n    \"5:26\": \"#EF5350\",\n    \"5:27\": \"#66BB6A\",\n    \"5:28\": \"#66BB6A\",\n    \"5:29\": \"#66BB6A\",\n    \"5:30\": \"#66BB6A\",\n    \"5:31\": \"none\",\n    \"5:32\": \"none\",\n    \"5:33\": \"#5C6BC0\",\n    \"5:34\": \"#5C6BC0\",\n    \"5:35\": \"#EF5350\",\n    \"5:36\": \"#EF5350\",\n    \"5:37\": \"#66BB6A\",\n    \"5:38\": \"#5C6BC0\",\n    \"5:39\": \"#5C6BC0\",\n    \"5:40\": \"#5C6BC0\",\n    \"5:41\": \"#5C6BC0\",\n    \"5:42\": \"#5C6BC0\",\n    \"5:43\": \"#5C6BC0\",\n    \"5:44\": \"#5C6BC0\",\n    \"5:45\": \"#5C6BC0\",\n    \"5:46\": \"none\",\n    \"6:0\": \"none\",\n    \"6:1\": \"none\",\n    \"6:2\": \"none\",\n    \"6:3\": \"none\",\n    \"6:4\": \"none\",\n    \"6:5\": \"none\",\n    \"6:6\": \"none\",\n    \"6:7\": \"none\",\n    \"6:8\": \"none\",\n    \"6:9\": \"none\",\n    \"6:10\": \"#5C6BC0\",\n    \"6:11\": \"#5C6BC0\",\n    \"6:12\": \"#5C6BC0\",\n    \"6:13\": \"#5C6BC0\",\n    \"6:14\": \"#5C6BC0\",\n    \"6:15\": \"#EF5350\",\n    \"6:16\": \"#EF5350\",\n    \"6:17\": \"#EF5350\",\n    \"6:18\": \"#EF5350\",\n    \"6:19\": \"#66BB6A\",\n    \"6:20\": \"#66BB6A\",\n    \"6:21\": \"#5C6BC0\",\n    \"6:22\": \"#5C6BC0\",\n    \"6:23\": \"#EF5350\",\n    \"6:24\": \"#EF5350\",\n    \"6:25\": \"#EF5350\",\n    \"6:26\": \"#EF5350\",\n    \"6:27\": \"#66BB6A\",\n    \"6:28\": \"#66BB6A\",\n    \"6:29\": \"#66BB6A\",\n    \"6:30\": \"#66BB6A\",\n    \"6:31\": \"none\",\n    \"6:32\": \"none\",\n    \"6:33\": \"#5C6BC0\",\n    \"6:34\": \"#5C6BC0\",\n    \"6:35\": \"#EF5350\",\n    \"6:36\": \"#EF5350\",\n    \"6:37\": \"#66BB6A\",\n    \"6:38\": \"#5C6BC0\",\n    \"6:39\": \"#5C6BC0\",\n    \"6:40\": \"#5C6BC0\",\n    \"6:41\": \"#5C6BC0\",\n    \"6:42\": \"#5C6BC0\",\n    \"6:43\": \"#5C6BC0\",\n    \"6:44\": \"#5C6BC0\",\n    \"6:45\": \"#5C6BC0\",\n    \"6:46\": \"none\",\n    \"7:0\": \"none\",\n    \"7:1\": \"none\",\n    \"7:2\": \"none\",\n    \"7:3\": \"none\",\n    \"7:4\": \"none\",\n    \"7:5\": \"none\",\n    \"7:6\": \"none\",\n    \"7:7\": \"none\",\n    \"7:8\": \"none\",\n    \"7:9\": \"none\",\n    \"7:10\": \"#5C6BC0\",\n    \"7:11\": \"#5C6BC0\",\n    \"7:12\": \"#5C6BC0\",\n    \"7:13\": \"#5C6BC0\",\n    \"7:14\": \"#5C6BC0\",\n    \"7:15\": \"#EF5350\",\n    \"7:16\": \"#EF5350\",\n    \"7:17\": \"#EF5350\",\n    \"7:18\": \"#EF5350\",\n    \"7:19\": \"#66BB6A\",\n    \"7:20\": \"#66BB6A\",\n    \"7:21\": \"#5C6BC0\",\n    \"7:22\": \"#5C6BC0\",\n    \"7:23\": \"#EF5350\",\n    \"7:24\": \"#EF5350\",\n    \"7:25\": \"#EF5350\",\n    \"7:26\": \"#EF5350\",\n    \"7:27\": \"#66BB6A\",\n    \"7:28\": \"#66BB6A\",\n    \"7:29\": \"#66BB6A\",\n    \"7:30\": \"#66BB6A\",\n    \"7:31\": \"none\",\n    \"7:32\": \"none\",\n    \"7:33\": \"#5C6BC0\",\n    \"7:34\": \"#5C6BC0\",\n    \"7:35\": \"#EF5350\",\n    \"7:36\": \"#EF5350\",\n    \"7:37\": \"#66BB6A\",\n    \"7:38\": \"#5C6BC0\",\n    \"7:39\": \"#5C6BC0\",\n    \"7:40\": \"#5C6BC0\",\n    \"7:41\": \"#5C6BC0\",\n    \"7:42\": \"#5C6BC0\",\n    \"7:43\": \"#5C6BC0\",\n    \"7:44\": \"#5C6BC0\",\n    \"7:45\": \"#5C6BC0\",\n    \"7:46\": \"none\",\n    \"8:0\": \"none\",\n    \"8:1\": \"none\",\n    \"8:2\": \"none\",\n    \"8:3\": \"none\",\n    \"8:4\": \"none\",\n    \"8:5\": \"none\",\n    \"8:6\": \"none\",\n    \"8:7\": \"#5C6BC0\",\n    \"8:8\": \"#5C6BC0\",\n    \"8:9\": \"#5C6BC0\",\n    \"8:10\": \"#5C6BC0\",\n    \"8:11\": \"#5C6BC0\",\n    \"8:12\": \"#5C6BC0\",\n    \"8:13\": \"#5C6BC0\",\n    \"8:14\": \"#5C6BC0\",\n    \"8:15\": \"#EF5350\",\n    \"8:16\": \"#EF5350\",\n    \"8:17\": \"#EF5350\",\n    \"8:18\": \"#EF5350\",\n    \"8:19\": \"#66BB6A\",\n    \"8:20\": \"#66BB6A\",\n    \"8:21\": \"#5C6BC0\",\n    \"8:22\": \"#5C6BC0\",\n    \"8:23\": \"none\",\n    \"8:24\": \"none\",\n    \"8:25\": \"none\",\n    \"8:26\": \"none\",\n    \"8:27\": \"none\",\n    \"8:28\": \"none\",\n    \"8:29\": \"#5C6BC0\",\n    \"8:30\": \"#5C6BC0\",\n    \"8:31\": \"#5C6BC0\",\n    \"8:32\": \"#5C6BC0\",\n    \"8:33\": \"#283593\",\n    \"8:34\": \"#283593\",\n    \"8:35\": \"#C62828\",\n    \"8:36\": \"#C62828\",\n    \"8:37\": \"#2E7D32\",\n    \"8:38\": \"#5C6BC0\",\n    \"8:39\": \"#5C6BC0\",\n    \"8:40\": \"#5C6BC0\",\n    \"8:41\": \"#5C6BC0\",\n    \"8:42\": \"#5C6BC0\",\n    \"8:43\": \"#5C6BC0\",\n    \"8:44\": \"none\",\n    \"8:45\": \"none\",\n    \"8:46\": \"none\",\n    \"9:0\": \"none\",\n    \"9:1\": \"none\",\n    \"9:2\": \"none\",\n    \"9:3\": \"none\",\n    \"9:4\": \"none\",\n    \"9:5\": \"none\",\n    \"9:6\": \"none\",\n    \"9:7\": \"#5C6BC0\",\n    \"9:8\": \"#5C6BC0\",\n    \"9:9\": \"#5C6BC0\",\n    \"9:10\": \"#5C6BC0\",\n    \"9:11\": \"#5C6BC0\",\n    \"9:12\": \"#5C6BC0\",\n    \"9:13\": \"#5C6BC0\",\n    \"9:14\": \"#5C6BC0\",\n    \"9:15\": \"#EF5350\",\n    \"9:16\": \"#EF5350\",\n    \"9:17\": \"#EF5350\",\n    \"9:18\": \"#EF5350\",\n    \"9:19\": \"#66BB6A\",\n    \"9:20\": \"#66BB6A\",\n    \"9:21\": \"#5C6BC0\",\n    \"9:22\": \"#5C6BC0\",\n    \"9:23\": \"none\",\n    \"9:24\": \"none\",\n    \"9:25\": \"none\",\n    \"9:26\": \"none\",\n    \"9:27\": \"none\",\n    \"9:28\": \"none\",\n    \"9:29\": \"#5C6BC0\",\n    \"9:30\": \"#5C6BC0\",\n    \"9:31\": \"#5C6BC0\",\n    \"9:32\": \"#5C6BC0\",\n    \"9:33\": \"#283593\",\n    \"9:34\": \"#283593\",\n    \"9:35\": \"#C62828\",\n    \"9:36\": \"#C62828\",\n    \"9:37\": \"#2E7D32\",\n    \"9:38\": \"#5C6BC0\",\n    \"9:39\": \"#5C6BC0\",\n    \"9:40\": \"#5C6BC0\",\n    \"9:41\": \"#5C6BC0\",\n    \"9:42\": \"#5C6BC0\",\n    \"9:43\": \"#5C6BC0\",\n    \"9:44\": \"none\",\n    \"9:45\": \"none\",\n    \"9:46\": \"none\",\n    \"10:0\": \"none\",\n    \"10:1\": \"none\",\n    \"10:2\": \"none\",\n    \"10:3\": \"none\",\n    \"10:4\": \"none\",\n    \"10:5\": \"none\",\n    \"10:6\": \"none\",\n    \"10:7\": \"#5C6BC0\",\n    \"10:8\": \"#5C6BC0\",\n    \"10:9\": \"#5C6BC0\",\n    \"10:10\": \"#5C6BC0\",\n    \"10:11\": \"#5C6BC0\",\n    \"10:12\": \"#5C6BC0\",\n    \"10:13\": \"#5C6BC0\",\n    \"10:14\": \"#5C6BC0\",\n    \"10:15\": \"#EF5350\",\n    \"10:16\": \"#EF5350\",\n    \"10:17\": \"#EF5350\",\n    \"10:18\": \"#EF5350\",\n    \"10:19\": \"#66BB6A\",\n    \"10:20\": \"#66BB6A\",\n    \"10:21\": \"#5C6BC0\",\n    \"10:22\": \"#5C6BC0\",\n    \"10:23\": \"none\",\n    \"10:24\": \"none\",\n    \"10:25\": \"none\",\n    \"10:26\": \"none\",\n    \"10:27\": \"none\",\n    \"10:28\": \"none\",\n    \"10:29\": \"#5C6BC0\",\n    \"10:30\": \"#5C6BC0\",\n    \"10:31\": \"#5C6BC0\",\n    \"10:32\": \"#5C6BC0\",\n    \"10:33\": \"#283593\",\n    \"10:34\": \"#283593\",\n    \"10:35\": \"#C62828\",\n    \"10:36\": \"#C62828\",\n    \"10:37\": \"#2E7D32\",\n    \"10:38\": \"#5C6BC0\",\n    \"10:39\": \"#5C6BC0\",\n    \"10:40\": \"#5C6BC0\",\n    \"10:41\": \"#5C6BC0\",\n    \"10:42\": \"#5C6BC0\",\n    \"10:43\": \"#5C6BC0\",\n    \"10:44\": \"none\",\n    \"10:45\": \"none\",\n    \"10:46\": \"none\",\n    \"11:0\": \"none\",\n    \"11:1\": \"none\",\n    \"11:2\": \"none\",\n    \"11:3\": \"none\",\n    \"11:4\": \"none\",\n    \"11:5\": \"none\",\n    \"11:6\": \"none\",\n    \"11:7\": \"#5C6BC0\",\n    \"11:8\": \"#5C6BC0\",\n    \"11:9\": \"#5C6BC0\",\n    \"11:10\": \"#5C6BC0\",\n    \"11:11\": \"#5C6BC0\",\n    \"11:12\": \"#5C6BC0\",\n    \"11:13\": \"#5C6BC0\",\n    \"11:14\": \"#5C6BC0\",\n    \"11:15\": \"#EF5350\",\n    \"11:16\": \"#EF5350\",\n    \"11:17\": \"#EF5350\",\n    \"11:18\": \"#EF5350\",\n    \"11:19\": \"#66BB6A\",\n    \"11:20\": \"#66BB6A\",\n    \"11:21\": \"#5C6BC0\",\n    \"11:22\": \"#5C6BC0\",\n    \"11:23\": \"none\",\n    \"11:24\": \"none\",\n    \"11:25\": \"none\",\n    \"11:26\": \"none\",\n    \"11:27\": \"none\",\n    \"11:28\": \"none\",\n    \"11:29\": \"#5C6BC0\",\n    \"11:30\": \"#5C6BC0\",\n    \"11:31\": \"#5C6BC0\",\n    \"11:32\": \"#5C6BC0\",\n    \"11:33\": \"#283593\",\n    \"11:34\": \"#283593\",\n    \"11:35\": \"#C62828\",\n    \"11:36\": \"#C62828\",\n    \"11:37\": \"#2E7D32\",\n    \"11:38\": \"#5C6BC0\",\n    \"11:39\": \"#5C6BC0\",\n    \"11:40\": \"#5C6BC0\",\n    \"11:41\": \"#5C6BC0\",\n    \"11:42\": \"#5C6BC0\",\n    \"11:43\": \"#5C6BC0\",\n    \"11:44\": \"none\",\n    \"11:45\": \"none\",\n    \"11:46\": \"none\",\n    \"12:0\": \"none\",\n    \"12:1\": \"none\",\n    \"12:2\": \"none\",\n    \"12:3\": \"none\",\n    \"12:4\": \"none\",\n    \"12:5\": \"none\",\n    \"12:6\": \"none\",\n    \"12:7\": \"none\",\n    \"12:8\": \"none\",\n    \"12:9\": \"none\",\n    \"12:10\": \"none\",\n    \"12:11\": \"none\",\n    \"12:12\": \"none\",\n    \"12:13\": \"#C5CAE9\",\n    \"12:14\": \"#C5CAE9\",\n    \"12:15\": \"none\",\n    \"12:16\": \"none\",\n    \"12:17\": \"none\",\n    \"12:18\": \"none\",\n    \"12:19\": \"none\",\n    \"12:20\": \"none\",\n    \"12:21\": \"none\",\n    \"12:22\": \"none\",\n    \"12:23\": \"none\",\n    \"12:24\": \"none\",\n    \"12:25\": \"none\",\n    \"12:26\": \"none\",\n    \"12:27\": \"none\",\n    \"12:28\": \"none\",\n    \"12:29\": \"none\",\n    \"12:30\": \"none\",\n    \"12:31\": \"none\",\n    \"12:32\": \"none\",\n    \"12:33\": \"none\",\n    \"12:34\": \"none\",\n    \"12:35\": \"none\",\n    \"12:36\": \"none\",\n    \"12:37\": \"none\",\n    \"12:38\": \"#C5CAE9\",\n    \"12:39\": \"#C5CAE9\",\n    \"12:40\": \"none\",\n    \"12:41\": \"none\",\n    \"12:42\": \"#C5CAE9\",\n    \"12:43\": \"#C5CAE9\",\n    \"12:44\": \"#283593\",\n    \"12:45\": \"#283593\",\n    \"12:46\": \"none\",\n    \"13:0\": \"none\",\n    \"13:1\": \"none\",\n    \"13:2\": \"none\",\n    \"13:3\": \"none\",\n    \"13:4\": \"none\",\n    \"13:5\": \"none\",\n    \"13:6\": \"none\",\n    \"13:7\": \"none\",\n    \"13:8\": \"none\",\n    \"13:9\": \"none\",\n    \"13:10\": \"none\",\n    \"13:11\": \"none\",\n    \"13:12\": \"none\",\n    \"13:13\": \"#C5CAE9\",\n    \"13:14\": \"#C5CAE9\",\n    \"13:15\": \"none\",\n    \"13:16\": \"none\",\n    \"13:17\": \"none\",\n    \"13:18\": \"none\",\n    \"13:19\": \"none\",\n    \"13:20\": \"none\",\n    \"13:21\": \"none\",\n    \"13:22\": \"none\",\n    \"13:23\": \"none\",\n    \"13:24\": \"none\",\n    \"13:25\": \"none\",\n    \"13:26\": \"none\",\n    \"13:27\": \"none\",\n    \"13:28\": \"none\",\n    \"13:29\": \"none\",\n    \"13:30\": \"none\",\n    \"13:31\": \"none\",\n    \"13:32\": \"none\",\n    \"13:33\": \"none\",\n    \"13:34\": \"none\",\n    \"13:35\": \"none\",\n    \"13:36\": \"none\",\n    \"13:37\": \"none\",\n    \"13:38\": \"#C5CAE9\",\n    \"13:39\": \"#C5CAE9\",\n    \"13:40\": \"none\",\n    \"13:41\": \"none\",\n    \"13:42\": \"#C5CAE9\",\n    \"13:43\": \"#C5CAE9\",\n    \"13:44\": \"#283593\",\n    \"13:45\": \"#283593\",\n    \"13:46\": \"none\",\n    \"14:0\": \"none\",\n    \"14:1\": \"none\",\n    \"14:2\": \"none\",\n    \"14:3\": \"none\",\n    \"14:4\": \"none\",\n    \"14:5\": \"none\",\n    \"14:6\": \"none\",\n    \"14:7\": \"none\",\n    \"14:8\": \"none\",\n    \"14:9\": \"none\",\n    \"14:10\": \"none\",\n    \"14:11\": \"none\",\n    \"14:12\": \"none\",\n    \"14:13\": \"#C5CAE9\",\n    \"14:14\": \"#C5CAE9\",\n    \"14:15\": \"none\",\n    \"14:16\": \"none\",\n    \"14:17\": \"none\",\n    \"14:18\": \"none\",\n    \"14:19\": \"none\",\n    \"14:20\": \"none\",\n    \"14:21\": \"none\",\n    \"14:22\": \"none\",\n    \"14:23\": \"none\",\n    \"14:24\": \"none\",\n    \"14:25\": \"none\",\n    \"14:26\": \"none\",\n    \"14:27\": \"none\",\n    \"14:28\": \"none\",\n    \"14:29\": \"none\",\n    \"14:30\": \"none\",\n    \"14:31\": \"none\",\n    \"14:32\": \"none\",\n    \"14:33\": \"none\",\n    \"14:34\": \"none\",\n    \"14:35\": \"none\",\n    \"14:36\": \"none\",\n    \"14:37\": \"none\",\n    \"14:38\": \"#C5CAE9\",\n    \"14:39\": \"#C5CAE9\",\n    \"14:40\": \"none\",\n    \"14:41\": \"none\",\n    \"14:42\": \"#C5CAE9\",\n    \"14:43\": \"#C5CAE9\",\n    \"14:44\": \"#283593\",\n    \"14:45\": \"#283593\",\n    \"14:46\": \"none\",\n    \"15:0\": \"none\",\n    \"15:1\": \"none\",\n    \"15:2\": \"none\",\n    \"15:3\": \"none\",\n    \"15:4\": \"none\",\n    \"15:5\": \"none\",\n    \"15:6\": \"none\",\n    \"15:7\": \"none\",\n    \"15:8\": \"none\",\n    \"15:9\": \"none\",\n    \"15:10\": \"none\",\n    \"15:11\": \"none\",\n    \"15:12\": \"none\",\n    \"15:13\": \"#C5CAE9\",\n    \"15:14\": \"#C5CAE9\",\n    \"15:15\": \"none\",\n    \"15:16\": \"none\",\n    \"15:17\": \"none\",\n    \"15:18\": \"none\",\n    \"15:19\": \"none\",\n    \"15:20\": \"none\",\n    \"15:21\": \"none\",\n    \"15:22\": \"none\",\n    \"15:23\": \"none\",\n    \"15:24\": \"none\",\n    \"15:25\": \"none\",\n    \"15:26\": \"none\",\n    \"15:27\": \"none\",\n    \"15:28\": \"none\",\n    \"15:29\": \"none\",\n    \"15:30\": \"none\",\n    \"15:31\": \"none\",\n    \"15:32\": \"none\",\n    \"15:33\": \"none\",\n    \"15:34\": \"none\",\n    \"15:35\": \"none\",\n    \"15:36\": \"none\",\n    \"15:37\": \"none\",\n    \"15:38\": \"#C5CAE9\",\n    \"15:39\": \"#C5CAE9\",\n    \"15:40\": \"none\",\n    \"15:41\": \"none\",\n    \"15:42\": \"#C5CAE9\",\n    \"15:43\": \"#C5CAE9\",\n    \"15:44\": \"#283593\",\n    \"15:45\": \"#283593\",\n    \"15:46\": \"none\",\n    \"16:0\": \"none\",\n    \"16:1\": \"none\",\n    \"16:2\": \"none\",\n    \"16:3\": \"none\",\n    \"16:4\": \"none\",\n    \"16:5\": \"none\",\n    \"16:6\": \"none\",\n    \"16:7\": \"none\",\n    \"16:8\": \"none\",\n    \"16:9\": \"none\",\n    \"16:10\": \"none\",\n    \"16:11\": \"none\",\n    \"16:12\": \"none\",\n    \"16:13\": \"none\",\n    \"16:14\": \"none\",\n    \"16:15\": \"#EF5350\",\n    \"16:16\": \"#EF5350\",\n    \"16:17\": \"#EF5350\",\n    \"16:18\": \"#EF5350\",\n    \"16:19\": \"#66BB6A\",\n    \"16:20\": \"#66BB6A\",\n    \"16:21\": \"none\",\n    \"16:22\": \"none\",\n    \"16:23\": \"#EF5350\",\n    \"16:24\": \"#EF5350\",\n    \"16:25\": \"#EF5350\",\n    \"16:26\": \"#EF5350\",\n    \"16:27\": \"#66BB6A\",\n    \"16:28\": \"#66BB6A\",\n    \"16:29\": \"#66BB6A\",\n    \"16:30\": \"#66BB6A\",\n    \"16:31\": \"none\",\n    \"16:32\": \"none\",\n    \"16:33\": \"none\",\n    \"16:34\": \"none\",\n    \"16:35\": \"none\",\n    \"16:36\": \"none\",\n    \"16:37\": \"none\",\n    \"16:38\": \"none\",\n    \"16:39\": \"none\",\n    \"16:40\": \"none\",\n    \"16:41\": \"none\",\n    \"16:42\": \"none\",\n    \"16:43\": \"none\",\n    \"16:44\": \"#283593\",\n    \"16:45\": \"#283593\",\n    \"16:46\": \"none\",\n    \"17:0\": \"none\",\n    \"17:1\": \"none\",\n    \"17:2\": \"none\",\n    \"17:3\": \"none\",\n    \"17:4\": \"none\",\n    \"17:5\": \"none\",\n    \"17:6\": \"none\",\n    \"17:7\": \"none\",\n    \"17:8\": \"none\",\n    \"17:9\": \"none\",\n    \"17:10\": \"none\",\n    \"17:11\": \"none\",\n    \"17:12\": \"none\",\n    \"17:13\": \"none\",\n    \"17:14\": \"none\",\n    \"17:15\": \"#EF5350\",\n    \"17:16\": \"#EF5350\",\n    \"17:17\": \"#EF5350\",\n    \"17:18\": \"#EF5350\",\n    \"17:19\": \"#66BB6A\",\n    \"17:20\": \"#66BB6A\",\n    \"17:21\": \"none\",\n    \"17:22\": \"none\",\n    \"17:23\": \"#EF5350\",\n    \"17:24\": \"#EF5350\",\n    \"17:25\": \"#EF5350\",\n    \"17:26\": \"#EF5350\",\n    \"17:27\": \"#66BB6A\",\n    \"17:28\": \"#66BB6A\",\n    \"17:29\": \"#66BB6A\",\n    \"17:30\": \"#66BB6A\",\n    \"17:31\": \"none\",\n    \"17:32\": \"none\",\n    \"17:33\": \"none\",\n    \"17:34\": \"none\",\n    \"17:35\": \"none\",\n    \"17:36\": \"none\",\n    \"17:37\": \"none\",\n    \"17:38\": \"none\",\n    \"17:39\": \"none\",\n    \"17:40\": \"none\",\n    \"17:41\": \"none\",\n    \"17:42\": \"none\",\n    \"17:43\": \"none\",\n    \"17:44\": \"#283593\",\n    \"17:45\": \"#283593\",\n    \"17:46\": \"none\",\n    \"18:0\": \"none\",\n    \"18:1\": \"none\",\n    \"18:2\": \"none\",\n    \"18:3\": \"none\",\n    \"18:4\": \"none\",\n    \"18:5\": \"none\",\n    \"18:6\": \"none\",\n    \"18:7\": \"none\",\n    \"18:8\": \"none\",\n    \"18:9\": \"none\",\n    \"18:10\": \"none\",\n    \"18:11\": \"none\",\n    \"18:12\": \"none\",\n    \"18:13\": \"none\",\n    \"18:14\": \"none\",\n    \"18:15\": \"#EF5350\",\n    \"18:16\": \"#EF5350\",\n    \"18:17\": \"#EF5350\",\n    \"18:18\": \"#EF5350\",\n    \"18:19\": \"#66BB6A\",\n    \"18:20\": \"#66BB6A\",\n    \"18:21\": \"none\",\n    \"18:22\": \"none\",\n    \"18:23\": \"#EF5350\",\n    \"18:24\": \"#EF5350\",\n    \"18:25\": \"#EF5350\",\n    \"18:26\": \"#EF5350\",\n    \"18:27\": \"#66BB6A\",\n    \"18:28\": \"#66BB6A\",\n    \"18:29\": \"#66BB6A\",\n    \"18:30\": \"#66BB6A\",\n    \"18:31\": \"none\",\n    \"18:32\": \"none\",\n    \"18:33\": \"none\",\n    \"18:34\": \"none\",\n    \"18:35\": \"none\",\n    \"18:36\": \"none\",\n    \"18:37\": \"none\",\n    \"18:38\": \"none\",\n    \"18:39\": \"none\",\n    \"18:40\": \"none\",\n    \"18:41\": \"none\",\n    \"18:42\": \"none\",\n    \"18:43\": \"none\",\n    \"18:44\": \"#283593\",\n    \"18:45\": \"#283593\",\n    \"18:46\": \"none\",\n    \"19:0\": \"none\",\n    \"19:1\": \"none\",\n    \"19:2\": \"none\",\n    \"19:3\": \"none\",\n    \"19:4\": \"none\",\n    \"19:5\": \"none\",\n    \"19:6\": \"none\",\n    \"19:7\": \"none\",\n    \"19:8\": \"none\",\n    \"19:9\": \"none\",\n    \"19:10\": \"none\",\n    \"19:11\": \"none\",\n    \"19:12\": \"none\",\n    \"19:13\": \"none\",\n    \"19:14\": \"none\",\n    \"19:15\": \"#EF5350\",\n    \"19:16\": \"#EF5350\",\n    \"19:17\": \"#EF5350\",\n    \"19:18\": \"#EF5350\",\n    \"19:19\": \"#66BB6A\",\n    \"19:20\": \"#66BB6A\",\n    \"19:21\": \"none\",\n    \"19:22\": \"none\",\n    \"19:23\": \"#EF5350\",\n    \"19:24\": \"#EF5350\",\n    \"19:25\": \"#EF5350\",\n    \"19:26\": \"#EF5350\",\n    \"19:27\": \"#66BB6A\",\n    \"19:28\": \"#66BB6A\",\n    \"19:29\": \"#66BB6A\",\n    \"19:30\": \"#66BB6A\",\n    \"19:31\": \"none\",\n    \"19:32\": \"none\",\n    \"19:33\": \"none\",\n    \"19:34\": \"none\",\n    \"19:35\": \"none\",\n    \"19:36\": \"none\",\n    \"19:37\": \"none\",\n    \"19:38\": \"none\",\n    \"19:39\": \"none\",\n    \"19:40\": \"none\",\n    \"19:41\": \"none\",\n    \"19:42\": \"none\",\n    \"19:43\": \"none\",\n    \"19:44\": \"#283593\",\n    \"19:45\": \"#283593\",\n    \"19:46\": \"none\",\n    \"20:0\": \"none\",\n    \"20:1\": \"none\",\n    \"20:2\": \"none\",\n    \"20:3\": \"none\",\n    \"20:4\": \"none\",\n    \"20:5\": \"none\",\n    \"20:6\": \"none\",\n    \"20:7\": \"none\",\n    \"20:8\": \"none\",\n    \"20:9\": \"none\",\n    \"20:10\": \"none\",\n    \"20:11\": \"none\",\n    \"20:12\": \"none\",\n    \"20:13\": \"none\",\n    \"20:14\": \"none\",\n    \"20:15\": \"none\",\n    \"20:16\": \"none\",\n    \"20:17\": \"none\",\n    \"20:18\": \"none\",\n    \"20:19\": \"none\",\n    \"20:20\": \"none\",\n    \"20:21\": \"none\",\n    \"20:22\": \"none\",\n    \"20:23\": \"none\",\n    \"20:24\": \"none\",\n    \"20:25\": \"none\",\n    \"20:26\": \"none\",\n    \"20:27\": \"none\",\n    \"20:28\": \"none\",\n    \"20:29\": \"none\",\n    \"20:30\": \"none\",\n    \"20:31\": \"none\",\n    \"20:32\": \"none\",\n    \"20:33\": \"none\",\n    \"20:34\": \"none\",\n    \"20:35\": \"none\",\n    \"20:36\": \"none\",\n    \"20:37\": \"none\",\n    \"20:38\": \"none\",\n    \"20:39\": \"none\",\n    \"20:40\": \"#283593\",\n    \"20:41\": \"#283593\",\n    \"20:42\": \"none\",\n    \"20:43\": \"none\",\n    \"20:44\": \"none\",\n    \"20:45\": \"none\",\n    \"20:46\": \"none\",\n    \"21:0\": \"none\",\n    \"21:1\": \"none\",\n    \"21:2\": \"none\",\n    \"21:3\": \"none\",\n    \"21:4\": \"none\",\n    \"21:5\": \"none\",\n    \"21:6\": \"none\",\n    \"21:7\": \"none\",\n    \"21:8\": \"none\",\n    \"21:9\": \"none\",\n    \"21:10\": \"none\",\n    \"21:11\": \"none\",\n    \"21:12\": \"none\",\n    \"21:13\": \"none\",\n    \"21:14\": \"none\",\n    \"21:15\": \"none\",\n    \"21:16\": \"none\",\n    \"21:17\": \"none\",\n    \"21:18\": \"none\",\n    \"21:19\": \"none\",\n    \"21:20\": \"none\",\n    \"21:21\": \"none\",\n    \"21:22\": \"none\",\n    \"21:23\": \"none\",\n    \"21:24\": \"none\",\n    \"21:25\": \"none\",\n    \"21:26\": \"none\",\n    \"21:27\": \"none\",\n    \"21:28\": \"none\",\n    \"21:29\": \"none\",\n    \"21:30\": \"none\",\n    \"21:31\": \"none\",\n    \"21:32\": \"none\",\n    \"21:33\": \"none\",\n    \"21:34\": \"none\",\n    \"21:35\": \"none\",\n    \"21:36\": \"none\",\n    \"21:37\": \"none\",\n    \"21:38\": \"none\",\n    \"21:39\": \"none\",\n    \"21:40\": \"#283593\",\n    \"21:41\": \"#283593\",\n    \"21:42\": \"none\",\n    \"21:43\": \"none\",\n    \"21:44\": \"none\",\n    \"21:45\": \"none\",\n    \"21:46\": \"none\",\n    \"22:0\": \"none\",\n    \"22:1\": \"none\",\n    \"22:2\": \"none\",\n    \"22:3\": \"none\",\n    \"22:4\": \"none\",\n    \"22:5\": \"none\",\n    \"22:6\": \"none\",\n    \"22:7\": \"none\",\n    \"22:8\": \"none\",\n    \"22:9\": \"none\",\n    \"22:10\": \"none\",\n    \"22:11\": \"none\",\n    \"22:12\": \"none\",\n    \"22:13\": \"none\",\n    \"22:14\": \"none\",\n    \"22:15\": \"none\",\n    \"22:16\": \"none\",\n    \"22:17\": \"none\",\n    \"22:18\": \"none\",\n    \"22:19\": \"none\",\n    \"22:20\": \"none\",\n    \"22:21\": \"none\",\n    \"22:22\": \"none\",\n    \"22:23\": \"none\",\n    \"22:24\": \"none\",\n    \"22:25\": \"none\",\n    \"22:26\": \"none\",\n    \"22:27\": \"none\",\n    \"22:28\": \"none\",\n    \"22:29\": \"none\",\n    \"22:30\": \"none\",\n    \"22:31\": \"none\",\n    \"22:32\": \"none\",\n    \"22:33\": \"none\",\n    \"22:34\": \"none\",\n    \"22:35\": \"none\",\n    \"22:36\": \"none\",\n    \"22:37\": \"none\",\n    \"22:38\": \"none\",\n    \"22:39\": \"none\",\n    \"22:40\": \"#283593\",\n    \"22:41\": \"#283593\",\n    \"22:42\": \"none\",\n    \"22:43\": \"none\",\n    \"22:44\": \"none\",\n    \"22:45\": \"none\",\n    \"22:46\": \"none\",\n    \"23:0\": \"none\",\n    \"23:1\": \"none\",\n    \"23:2\": \"none\",\n    \"23:3\": \"none\",\n    \"23:4\": \"none\",\n    \"23:5\": \"none\",\n    \"23:6\": \"none\",\n    \"23:7\": \"none\",\n    \"23:8\": \"none\",\n    \"23:9\": \"none\",\n    \"23:10\": \"none\",\n    \"23:11\": \"none\",\n    \"23:12\": \"none\",\n    \"23:13\": \"none\",\n    \"23:14\": \"none\",\n    \"23:15\": \"none\",\n    \"23:16\": \"none\",\n    \"23:17\": \"none\",\n    \"23:18\": \"none\",\n    \"23:19\": \"none\",\n    \"23:20\": \"none\",\n    \"23:21\": \"none\",\n    \"23:22\": \"none\",\n    \"23:23\": \"none\",\n    \"23:24\": \"none\",\n    \"23:25\": \"none\",\n    \"23:26\": \"none\",\n    \"23:27\": \"none\",\n    \"23:28\": \"none\",\n    \"23:29\": \"none\",\n    \"23:30\": \"none\",\n    \"23:31\": \"none\",\n    \"23:32\": \"none\",\n    \"23:33\": \"none\",\n    \"23:34\": \"none\",\n    \"23:35\": \"none\",\n    \"23:36\": \"none\",\n    \"23:37\": \"none\",\n    \"23:38\": \"none\",\n    \"23:39\": \"none\",\n    \"23:40\": \"#283593\",\n    \"23:41\": \"#283593\",\n    \"23:42\": \"none\",\n    \"23:43\": \"none\",\n    \"23:44\": \"none\",\n    \"23:45\": \"none\",\n    \"23:46\": \"none\",\n    \"24:0\": \"none\",\n    \"24:1\": \"none\",\n    \"24:2\": \"none\",\n    \"24:3\": \"none\",\n    \"24:4\": \"none\",\n    \"24:5\": \"none\",\n    \"24:6\": \"none\",\n    \"24:7\": \"none\",\n    \"24:8\": \"none\",\n    \"24:9\": \"none\",\n    \"24:10\": \"none\",\n    \"24:11\": \"none\",\n    \"24:12\": \"none\",\n    \"24:13\": \"none\",\n    \"24:14\": \"none\",\n    \"24:15\": \"none\",\n    \"24:16\": \"none\",\n    \"24:17\": \"none\",\n    \"24:18\": \"none\",\n    \"24:19\": \"none\",\n    \"24:20\": \"none\",\n    \"24:21\": \"none\",\n    \"24:22\": \"none\",\n    \"24:23\": \"none\",\n    \"24:24\": \"none\",\n    \"24:25\": \"none\",\n    \"24:26\": \"none\",\n    \"24:27\": \"none\",\n    \"24:28\": \"none\",\n    \"24:29\": \"none\",\n    \"24:30\": \"none\",\n    \"24:31\": \"none\",\n    \"24:32\": \"none\",\n    \"24:33\": \"none\",\n    \"24:34\": \"none\",\n    \"24:35\": \"none\",\n    \"24:36\": \"none\",\n    \"24:37\": \"none\",\n    \"24:38\": \"none\",\n    \"24:39\": \"none\",\n    \"24:40\": \"none\",\n    \"24:41\": \"none\",\n    \"24:42\": \"none\",\n    \"24:43\": \"none\",\n    \"24:44\": \"none\",\n    \"24:45\": \"none\",\n    \"24:46\": \"none\",\n    \"25:0\": \"none\",\n    \"25:1\": \"none\",\n    \"25:2\": \"none\",\n    \"25:3\": \"none\",\n    \"25:4\": \"none\",\n    \"25:5\": \"none\",\n    \"25:6\": \"none\",\n    \"25:7\": \"none\",\n    \"25:8\": \"none\",\n    \"25:9\": \"none\",\n    \"25:10\": \"none\",\n    \"25:11\": \"none\",\n    \"25:12\": \"none\",\n    \"25:13\": \"none\",\n    \"25:14\": \"none\",\n    \"25:15\": \"none\",\n    \"25:16\": \"none\",\n    \"25:17\": \"none\",\n    \"25:18\": \"none\",\n    \"25:19\": \"none\",\n    \"25:20\": \"none\",\n    \"25:21\": \"none\",\n    \"25:22\": \"none\",\n    \"25:23\": \"none\",\n    \"25:24\": \"none\",\n    \"25:25\": \"none\",\n    \"25:26\": \"none\",\n    \"25:27\": \"none\",\n    \"25:28\": \"none\",\n    \"25:29\": \"none\",\n    \"25:30\": \"none\",\n    \"25:31\": \"none\",\n    \"25:32\": \"none\",\n    \"25:33\": \"none\",\n    \"25:34\": \"none\",\n    \"25:35\": \"none\",\n    \"25:36\": \"none\",\n    \"25:37\": \"none\",\n    \"25:38\": \"none\",\n    \"25:39\": \"none\",\n    \"25:40\": \"none\",\n    \"25:41\": \"none\",\n    \"25:42\": \"none\",\n    \"25:43\": \"none\",\n    \"25:44\": \"none\",\n    \"25:45\": \"none\",\n    \"25:46\": \"none\",\n    \"26:0\": \"none\",\n    \"26:1\": \"none\",\n    \"26:2\": \"none\",\n    \"26:3\": \"none\",\n    \"26:4\": \"none\",\n    \"26:5\": \"none\",\n    \"26:6\": \"none\",\n    \"26:7\": \"none\",\n    \"26:8\": \"none\",\n    \"26:9\": \"none\",\n    \"26:10\": \"none\",\n    \"26:11\": \"none\",\n    \"26:12\": \"none\",\n    \"26:13\": \"none\",\n    \"26:14\": \"none\",\n    \"26:15\": \"none\",\n    \"26:16\": \"none\",\n    \"26:17\": \"none\",\n    \"26:18\": \"none\",\n    \"26:19\": \"none\",\n    \"26:20\": \"none\",\n    \"26:21\": \"none\",\n    \"26:22\": \"none\",\n    \"26:23\": \"none\",\n    \"26:24\": \"none\",\n    \"26:25\": \"none\",\n    \"26:26\": \"none\",\n    \"26:27\": \"none\",\n    \"26:28\": \"none\",\n    \"26:29\": \"none\",\n    \"26:30\": \"none\",\n    \"26:31\": \"none\",\n    \"26:32\": \"none\",\n    \"26:33\": \"none\",\n    \"26:34\": \"none\",\n    \"26:35\": \"none\",\n    \"26:36\": \"none\",\n    \"26:37\": \"none\",\n    \"26:38\": \"none\",\n    \"26:39\": \"none\",\n    \"26:40\": \"none\",\n    \"26:41\": \"none\",\n    \"26:42\": \"none\",\n    \"26:43\": \"none\",\n    \"26:44\": \"none\",\n    \"26:45\": \"none\",\n    \"26:46\": \"none\"\n  }\n}"},"relativePath":"band_parts/data/boogieman_sam.json"},{"fields":{"contents":"{\n  \"title\": \"Ridealong\",\n  \"sections\": [\n    {\n      \"section\": \"Intro\",\n      \"length\": 4\n    },\n    {\n      \"section\": \"Verse 1\",\n      \"length\": 6\n    },\n    {\n      \"section\": \"Chorus 1\",\n      \"length\": 4\n    },\n    {\n      \"section\": \"Verse 2\",\n      \"length\": 6\n    },\n    {\n      \"section\": \"Chorus 2\",\n      \"length\": 8\n    },\n    {\n      \"section\": \"Outro\",\n      \"length\": 4\n    }\n  ],\n  \"instruments\": [\n    {\n      \"instrument\": \"Rhythm\",\n      \"sections\": {}\n    },\n    {\n      \"instrument\": \"Scotty\",\n      \"sections\": {}\n    },\n    {\n      \"instrument\": \"Vocals\",\n      \"sections\": {}\n    }\n  ],\n  \"cells\": {\n    \"0:0\": \"none\",\n    \"0:1\": \"none\",\n    \"0:2\": \"none\",\n    \"0:3\": \"none\",\n    \"0:4\": \"none\",\n    \"0:5\": \"none\",\n    \"0:6\": \"none\",\n    \"0:7\": \"none\",\n    \"0:8\": \"none\",\n    \"0:9\": \"none\",\n    \"0:10\": \"none\",\n    \"0:11\": \"none\",\n    \"0:12\": \"none\",\n    \"0:13\": \"none\",\n    \"0:14\": \"none\",\n    \"0:15\": \"none\",\n    \"0:16\": \"none\",\n    \"0:17\": \"none\",\n    \"0:18\": \"none\",\n    \"0:19\": \"none\",\n    \"0:20\": \"none\",\n    \"0:21\": \"none\",\n    \"0:22\": \"none\",\n    \"0:23\": \"none\",\n    \"0:24\": \"none\",\n    \"0:25\": \"none\",\n    \"0:26\": \"none\",\n    \"0:27\": \"none\",\n    \"0:28\": \"none\",\n    \"0:29\": \"none\",\n    \"0:30\": \"none\",\n    \"0:31\": \"none\",\n    \"0:32\": \"none\",\n    \"0:33\": \"none\",\n    \"0:34\": \"none\",\n    \"0:35\": \"none\",\n    \"0:36\": \"none\",\n    \"0:37\": \"none\",\n    \"0:38\": \"none\",\n    \"0:39\": \"none\",\n    \"0:40\": \"none\",\n    \"0:41\": \"none\",\n    \"0:42\": \"none\",\n    \"0:43\": \"none\",\n    \"0:44\": \"none\",\n    \"0:45\": \"none\",\n    \"0:46\": \"none\",\n    \"1:0\": \"none\",\n    \"1:1\": \"none\",\n    \"1:2\": \"none\",\n    \"1:3\": \"none\",\n    \"1:4\": \"none\",\n    \"1:5\": \"none\",\n    \"1:6\": \"none\",\n    \"1:7\": \"none\",\n    \"1:8\": \"none\",\n    \"1:9\": \"none\",\n    \"1:10\": \"none\",\n    \"1:11\": \"none\",\n    \"1:12\": \"none\",\n    \"1:13\": \"none\",\n    \"1:14\": \"none\",\n    \"1:15\": \"none\",\n    \"1:16\": \"none\",\n    \"1:17\": \"none\",\n    \"1:18\": \"none\",\n    \"1:19\": \"none\",\n    \"1:20\": \"none\",\n    \"1:21\": \"none\",\n    \"1:22\": \"none\",\n    \"1:23\": \"none\",\n    \"1:24\": \"none\",\n    \"1:25\": \"none\",\n    \"1:26\": \"none\",\n    \"1:27\": \"none\",\n    \"1:28\": \"none\",\n    \"1:29\": \"none\",\n    \"1:30\": \"none\",\n    \"1:31\": \"none\",\n    \"1:32\": \"none\",\n    \"1:33\": \"none\",\n    \"1:34\": \"none\",\n    \"1:35\": \"none\",\n    \"1:36\": \"none\",\n    \"1:37\": \"none\",\n    \"1:38\": \"none\",\n    \"1:39\": \"none\",\n    \"1:40\": \"none\",\n    \"1:41\": \"none\",\n    \"1:42\": \"none\",\n    \"1:43\": \"none\",\n    \"1:44\": \"none\",\n    \"1:45\": \"none\",\n    \"1:46\": \"none\",\n    \"2:0\": \"none\",\n    \"2:1\": \"none\",\n    \"2:2\": \"none\",\n    \"2:3\": \"none\",\n    \"2:4\": \"none\",\n    \"2:5\": \"none\",\n    \"2:6\": \"none\",\n    \"2:7\": \"none\",\n    \"2:8\": \"none\",\n    \"2:9\": \"none\",\n    \"2:10\": \"none\",\n    \"2:11\": \"none\",\n    \"2:12\": \"none\",\n    \"2:13\": \"none\",\n    \"2:14\": \"none\",\n    \"2:15\": \"none\",\n    \"2:16\": \"none\",\n    \"2:17\": \"none\",\n    \"2:18\": \"none\",\n    \"2:19\": \"none\",\n    \"2:20\": \"none\",\n    \"2:21\": \"none\",\n    \"2:22\": \"none\",\n    \"2:23\": \"none\",\n    \"2:24\": \"none\",\n    \"2:25\": \"none\",\n    \"2:26\": \"none\",\n    \"2:27\": \"none\",\n    \"2:28\": \"none\",\n    \"2:29\": \"none\",\n    \"2:30\": \"none\",\n    \"2:31\": \"none\",\n    \"2:32\": \"none\",\n    \"2:33\": \"none\",\n    \"2:34\": \"none\",\n    \"2:35\": \"none\",\n    \"2:36\": \"none\",\n    \"2:37\": \"none\",\n    \"2:38\": \"none\",\n    \"2:39\": \"none\",\n    \"2:40\": \"none\",\n    \"2:41\": \"none\",\n    \"2:42\": \"none\",\n    \"2:43\": \"none\",\n    \"2:44\": \"none\",\n    \"2:45\": \"none\",\n    \"2:46\": \"none\",\n    \"3:0\": \"none\",\n    \"3:1\": \"none\",\n    \"3:2\": \"none\",\n    \"3:3\": \"none\",\n    \"3:4\": \"none\",\n    \"3:5\": \"none\",\n    \"3:6\": \"none\",\n    \"3:7\": \"none\",\n    \"3:8\": \"none\",\n    \"3:9\": \"none\",\n    \"3:10\": \"none\",\n    \"3:11\": \"none\",\n    \"3:12\": \"none\",\n    \"3:13\": \"none\",\n    \"3:14\": \"none\",\n    \"3:15\": \"none\",\n    \"3:16\": \"none\",\n    \"3:17\": \"none\",\n    \"3:18\": \"none\",\n    \"3:19\": \"none\",\n    \"3:20\": \"none\",\n    \"3:21\": \"none\",\n    \"3:22\": \"none\",\n    \"3:23\": \"none\",\n    \"3:24\": \"none\",\n    \"3:25\": \"none\",\n    \"3:26\": \"none\",\n    \"3:27\": \"none\",\n    \"3:28\": \"none\",\n    \"3:29\": \"none\",\n    \"3:30\": \"none\",\n    \"3:31\": \"none\",\n    \"3:32\": \"none\",\n    \"3:33\": \"none\",\n    \"3:34\": \"none\",\n    \"3:35\": \"none\",\n    \"3:36\": \"none\",\n    \"3:37\": \"none\",\n    \"3:38\": \"none\",\n    \"3:39\": \"none\",\n    \"3:40\": \"none\",\n    \"3:41\": \"none\",\n    \"3:42\": \"none\",\n    \"3:43\": \"none\",\n    \"3:44\": \"none\",\n    \"3:45\": \"none\",\n    \"3:46\": \"none\",\n    \"4:0\": \"none\",\n    \"4:1\": \"none\",\n    \"4:2\": \"none\",\n    \"4:3\": \"none\",\n    \"4:4\": \"none\",\n    \"4:5\": \"none\",\n    \"4:6\": \"none\",\n    \"4:7\": \"none\",\n    \"4:8\": \"none\",\n    \"4:9\": \"#5C6BC0\",\n    \"4:10\": \"#5C6BC0\",\n    \"4:11\": \"#5C6BC0\",\n    \"4:12\": \"#5C6BC0\",\n    \"4:13\": \"#5C6BC0\",\n    \"4:14\": \"#5C6BC0\",\n    \"4:15\": \"#5C6BC0\",\n    \"4:16\": \"#5C6BC0\",\n    \"4:17\": \"#EF5350\",\n    \"4:18\": \"#EF5350\",\n    \"4:19\": \"#EF5350\",\n    \"4:20\": \"#EF5350\",\n    \"4:21\": \"#5C6BC0\",\n    \"4:22\": \"#5C6BC0\",\n    \"4:23\": \"#5C6BC0\",\n    \"4:24\": \"#5C6BC0\",\n    \"4:25\": \"#5C6BC0\",\n    \"4:26\": \"#5C6BC0\",\n    \"4:27\": \"#EF5350\",\n    \"4:28\": \"#EF5350\",\n    \"4:29\": \"#EF5350\",\n    \"4:30\": \"#EF5350\",\n    \"4:31\": \"#EF5350\",\n    \"4:32\": \"#EF5350\",\n    \"4:33\": \"#EF5350\",\n    \"4:34\": \"#EF5350\",\n    \"4:35\": \"#EF5350\",\n    \"4:36\": \"#EF5350\",\n    \"4:37\": \"#EF5350\",\n    \"4:38\": \"#EF5350\",\n    \"4:39\": \"none\",\n    \"4:40\": \"none\",\n    \"4:41\": \"none\",\n    \"4:42\": \"none\",\n    \"4:43\": \"none\",\n    \"4:44\": \"none\",\n    \"4:45\": \"none\",\n    \"4:46\": \"none\",\n    \"5:0\": \"none\",\n    \"5:1\": \"none\",\n    \"5:2\": \"none\",\n    \"5:3\": \"none\",\n    \"5:4\": \"none\",\n    \"5:5\": \"none\",\n    \"5:6\": \"none\",\n    \"5:7\": \"none\",\n    \"5:8\": \"none\",\n    \"5:9\": \"#5C6BC0\",\n    \"5:10\": \"#5C6BC0\",\n    \"5:11\": \"#5C6BC0\",\n    \"5:12\": \"#5C6BC0\",\n    \"5:13\": \"#5C6BC0\",\n    \"5:14\": \"#5C6BC0\",\n    \"5:15\": \"#5C6BC0\",\n    \"5:16\": \"#5C6BC0\",\n    \"5:17\": \"#EF5350\",\n    \"5:18\": \"#EF5350\",\n    \"5:19\": \"#EF5350\",\n    \"5:20\": \"#EF5350\",\n    \"5:21\": \"#5C6BC0\",\n    \"5:22\": \"#5C6BC0\",\n    \"5:23\": \"#5C6BC0\",\n    \"5:24\": \"#5C6BC0\",\n    \"5:25\": \"#5C6BC0\",\n    \"5:26\": \"#5C6BC0\",\n    \"5:27\": \"#EF5350\",\n    \"5:28\": \"#EF5350\",\n    \"5:29\": \"#EF5350\",\n    \"5:30\": \"#EF5350\",\n    \"5:31\": \"#EF5350\",\n    \"5:32\": \"#EF5350\",\n    \"5:33\": \"#EF5350\",\n    \"5:34\": \"#EF5350\",\n    \"5:35\": \"#EF5350\",\n    \"5:36\": \"#EF5350\",\n    \"5:37\": \"#EF5350\",\n    \"5:38\": \"#EF5350\",\n    \"5:39\": \"none\",\n    \"5:40\": \"none\",\n    \"5:41\": \"none\",\n    \"5:42\": \"none\",\n    \"5:43\": \"none\",\n    \"5:44\": \"none\",\n    \"5:45\": \"none\",\n    \"5:46\": \"none\",\n    \"6:0\": \"none\",\n    \"6:1\": \"none\",\n    \"6:2\": \"none\",\n    \"6:3\": \"none\",\n    \"6:4\": \"none\",\n    \"6:5\": \"none\",\n    \"6:6\": \"none\",\n    \"6:7\": \"none\",\n    \"6:8\": \"none\",\n    \"6:9\": \"#5C6BC0\",\n    \"6:10\": \"#5C6BC0\",\n    \"6:11\": \"#5C6BC0\",\n    \"6:12\": \"#5C6BC0\",\n    \"6:13\": \"#5C6BC0\",\n    \"6:14\": \"#5C6BC0\",\n    \"6:15\": \"#5C6BC0\",\n    \"6:16\": \"#5C6BC0\",\n    \"6:17\": \"#EF5350\",\n    \"6:18\": \"#EF5350\",\n    \"6:19\": \"#EF5350\",\n    \"6:20\": \"#EF5350\",\n    \"6:21\": \"#5C6BC0\",\n    \"6:22\": \"#5C6BC0\",\n    \"6:23\": \"#5C6BC0\",\n    \"6:24\": \"#5C6BC0\",\n    \"6:25\": \"#5C6BC0\",\n    \"6:26\": \"#5C6BC0\",\n    \"6:27\": \"#EF5350\",\n    \"6:28\": \"#EF5350\",\n    \"6:29\": \"#EF5350\",\n    \"6:30\": \"#EF5350\",\n    \"6:31\": \"#EF5350\",\n    \"6:32\": \"#EF5350\",\n    \"6:33\": \"#EF5350\",\n    \"6:34\": \"#EF5350\",\n    \"6:35\": \"#EF5350\",\n    \"6:36\": \"#EF5350\",\n    \"6:37\": \"#EF5350\",\n    \"6:38\": \"#EF5350\",\n    \"6:39\": \"none\",\n    \"6:40\": \"none\",\n    \"6:41\": \"none\",\n    \"6:42\": \"none\",\n    \"6:43\": \"none\",\n    \"6:44\": \"none\",\n    \"6:45\": \"none\",\n    \"6:46\": \"none\",\n    \"7:0\": \"none\",\n    \"7:1\": \"none\",\n    \"7:2\": \"none\",\n    \"7:3\": \"none\",\n    \"7:4\": \"none\",\n    \"7:5\": \"none\",\n    \"7:6\": \"none\",\n    \"7:7\": \"none\",\n    \"7:8\": \"none\",\n    \"7:9\": \"#5C6BC0\",\n    \"7:10\": \"#5C6BC0\",\n    \"7:11\": \"#5C6BC0\",\n    \"7:12\": \"#5C6BC0\",\n    \"7:13\": \"#5C6BC0\",\n    \"7:14\": \"#5C6BC0\",\n    \"7:15\": \"#5C6BC0\",\n    \"7:16\": \"#5C6BC0\",\n    \"7:17\": \"#EF5350\",\n    \"7:18\": \"#EF5350\",\n    \"7:19\": \"#EF5350\",\n    \"7:20\": \"#EF5350\",\n    \"7:21\": \"#5C6BC0\",\n    \"7:22\": \"#5C6BC0\",\n    \"7:23\": \"#5C6BC0\",\n    \"7:24\": \"#5C6BC0\",\n    \"7:25\": \"#5C6BC0\",\n    \"7:26\": \"#5C6BC0\",\n    \"7:27\": \"#EF5350\",\n    \"7:28\": \"#EF5350\",\n    \"7:29\": \"#EF5350\",\n    \"7:30\": \"#EF5350\",\n    \"7:31\": \"#EF5350\",\n    \"7:32\": \"#EF5350\",\n    \"7:33\": \"#EF5350\",\n    \"7:34\": \"#EF5350\",\n    \"7:35\": \"#EF5350\",\n    \"7:36\": \"#EF5350\",\n    \"7:37\": \"#EF5350\",\n    \"7:38\": \"#EF5350\",\n    \"7:39\": \"none\",\n    \"7:40\": \"none\",\n    \"7:41\": \"none\",\n    \"7:42\": \"none\",\n    \"7:43\": \"none\",\n    \"7:44\": \"none\",\n    \"7:45\": \"none\",\n    \"7:46\": \"none\",\n    \"8:0\": \"none\",\n    \"8:1\": \"none\",\n    \"8:2\": \"none\",\n    \"8:3\": \"none\",\n    \"8:4\": \"none\",\n    \"8:5\": \"none\",\n    \"8:6\": \"none\",\n    \"8:7\": \"#5C6BC0\",\n    \"8:8\": \"#5C6BC0\",\n    \"8:9\": \"#5C6BC0\",\n    \"8:10\": \"#5C6BC0\",\n    \"8:11\": \"none\",\n    \"8:12\": \"none\",\n    \"8:13\": \"none\",\n    \"8:14\": \"none\",\n    \"8:15\": \"#5C6BC0\",\n    \"8:16\": \"#5C6BC0\",\n    \"8:17\": \"#EF5350\",\n    \"8:18\": \"#EF5350\",\n    \"8:19\": \"#EF5350\",\n    \"8:20\": \"#EF5350\",\n    \"8:21\": \"#C5CAE9\",\n    \"8:22\": \"#C5CAE9\",\n    \"8:23\": \"none\",\n    \"8:24\": \"none\",\n    \"8:25\": \"none\",\n    \"8:26\": \"none\",\n    \"8:27\": \"#EF5350\",\n    \"8:28\": \"#EF5350\",\n    \"8:29\": \"#EF5350\",\n    \"8:30\": \"#EF5350\",\n    \"8:31\": \"#EF5350\",\n    \"8:32\": \"#EF5350\",\n    \"8:33\": \"#EF5350\",\n    \"8:34\": \"#FFCDD2\",\n    \"8:35\": \"#FFCDD2\",\n    \"8:36\": \"#C62828\",\n    \"8:37\": \"#C62828\",\n    \"8:38\": \"#C62828\",\n    \"8:39\": \"none\",\n    \"8:40\": \"none\",\n    \"8:41\": \"none\",\n    \"8:42\": \"none\",\n    \"8:43\": \"none\",\n    \"8:44\": \"none\",\n    \"8:45\": \"none\",\n    \"8:46\": \"none\",\n    \"9:0\": \"none\",\n    \"9:1\": \"none\",\n    \"9:2\": \"none\",\n    \"9:3\": \"none\",\n    \"9:4\": \"none\",\n    \"9:5\": \"none\",\n    \"9:6\": \"none\",\n    \"9:7\": \"#5C6BC0\",\n    \"9:8\": \"#5C6BC0\",\n    \"9:9\": \"#5C6BC0\",\n    \"9:10\": \"#5C6BC0\",\n    \"9:11\": \"none\",\n    \"9:12\": \"none\",\n    \"9:13\": \"none\",\n    \"9:14\": \"none\",\n    \"9:15\": \"#5C6BC0\",\n    \"9:16\": \"#5C6BC0\",\n    \"9:17\": \"#EF5350\",\n    \"9:18\": \"#EF5350\",\n    \"9:19\": \"#EF5350\",\n    \"9:20\": \"#EF5350\",\n    \"9:21\": \"#C5CAE9\",\n    \"9:22\": \"#C5CAE9\",\n    \"9:23\": \"none\",\n    \"9:24\": \"none\",\n    \"9:25\": \"none\",\n    \"9:26\": \"none\",\n    \"9:27\": \"#EF5350\",\n    \"9:28\": \"#EF5350\",\n    \"9:29\": \"#EF5350\",\n    \"9:30\": \"#EF5350\",\n    \"9:31\": \"#EF5350\",\n    \"9:32\": \"#EF5350\",\n    \"9:33\": \"#EF5350\",\n    \"9:34\": \"#FFCDD2\",\n    \"9:35\": \"#FFCDD2\",\n    \"9:36\": \"#C62828\",\n    \"9:37\": \"#C62828\",\n    \"9:38\": \"#C62828\",\n    \"9:39\": \"none\",\n    \"9:40\": \"none\",\n    \"9:41\": \"none\",\n    \"9:42\": \"none\",\n    \"9:43\": \"none\",\n    \"9:44\": \"none\",\n    \"9:45\": \"none\",\n    \"9:46\": \"none\",\n    \"10:0\": \"none\",\n    \"10:1\": \"none\",\n    \"10:2\": \"none\",\n    \"10:3\": \"none\",\n    \"10:4\": \"none\",\n    \"10:5\": \"none\",\n    \"10:6\": \"none\",\n    \"10:7\": \"#5C6BC0\",\n    \"10:8\": \"#5C6BC0\",\n    \"10:9\": \"#5C6BC0\",\n    \"10:10\": \"#5C6BC0\",\n    \"10:11\": \"none\",\n    \"10:12\": \"none\",\n    \"10:13\": \"none\",\n    \"10:14\": \"none\",\n    \"10:15\": \"#5C6BC0\",\n    \"10:16\": \"#5C6BC0\",\n    \"10:17\": \"#EF5350\",\n    \"10:18\": \"#EF5350\",\n    \"10:19\": \"#EF5350\",\n    \"10:20\": \"#EF5350\",\n    \"10:21\": \"#C5CAE9\",\n    \"10:22\": \"#C5CAE9\",\n    \"10:23\": \"none\",\n    \"10:24\": \"none\",\n    \"10:25\": \"none\",\n    \"10:26\": \"none\",\n    \"10:27\": \"#EF5350\",\n    \"10:28\": \"#EF5350\",\n    \"10:29\": \"#EF5350\",\n    \"10:30\": \"#EF5350\",\n    \"10:31\": \"#EF5350\",\n    \"10:32\": \"#EF5350\",\n    \"10:33\": \"#EF5350\",\n    \"10:34\": \"#FFCDD2\",\n    \"10:35\": \"#FFCDD2\",\n    \"10:36\": \"#C62828\",\n    \"10:37\": \"#C62828\",\n    \"10:38\": \"#C62828\",\n    \"10:39\": \"none\",\n    \"10:40\": \"none\",\n    \"10:41\": \"none\",\n    \"10:42\": \"none\",\n    \"10:43\": \"none\",\n    \"10:44\": \"none\",\n    \"10:45\": \"none\",\n    \"10:46\": \"none\",\n    \"11:0\": \"none\",\n    \"11:1\": \"none\",\n    \"11:2\": \"none\",\n    \"11:3\": \"none\",\n    \"11:4\": \"none\",\n    \"11:5\": \"none\",\n    \"11:6\": \"none\",\n    \"11:7\": \"#5C6BC0\",\n    \"11:8\": \"#5C6BC0\",\n    \"11:9\": \"#5C6BC0\",\n    \"11:10\": \"#5C6BC0\",\n    \"11:11\": \"none\",\n    \"11:12\": \"none\",\n    \"11:13\": \"none\",\n    \"11:14\": \"none\",\n    \"11:15\": \"#5C6BC0\",\n    \"11:16\": \"#5C6BC0\",\n    \"11:17\": \"#EF5350\",\n    \"11:18\": \"#EF5350\",\n    \"11:19\": \"#EF5350\",\n    \"11:20\": \"#EF5350\",\n    \"11:21\": \"#C5CAE9\",\n    \"11:22\": \"#C5CAE9\",\n    \"11:23\": \"none\",\n    \"11:24\": \"none\",\n    \"11:25\": \"none\",\n    \"11:26\": \"none\",\n    \"11:27\": \"#EF5350\",\n    \"11:28\": \"#EF5350\",\n    \"11:29\": \"#EF5350\",\n    \"11:30\": \"#EF5350\",\n    \"11:31\": \"#EF5350\",\n    \"11:32\": \"#EF5350\",\n    \"11:33\": \"#EF5350\",\n    \"11:34\": \"#FFCDD2\",\n    \"11:35\": \"#FFCDD2\",\n    \"11:36\": \"#C62828\",\n    \"11:37\": \"#C62828\",\n    \"11:38\": \"#C62828\",\n    \"11:39\": \"none\",\n    \"11:40\": \"none\",\n    \"11:41\": \"none\",\n    \"11:42\": \"none\",\n    \"11:43\": \"none\",\n    \"11:44\": \"none\",\n    \"11:45\": \"none\",\n    \"11:46\": \"none\",\n    \"12:0\": \"none\",\n    \"12:1\": \"none\",\n    \"12:2\": \"none\",\n    \"12:3\": \"none\",\n    \"12:4\": \"none\",\n    \"12:5\": \"none\",\n    \"12:6\": \"none\",\n    \"12:7\": \"none\",\n    \"12:8\": \"none\",\n    \"12:9\": \"none\",\n    \"12:10\": \"none\",\n    \"12:11\": \"#5C6BC0\",\n    \"12:12\": \"#5C6BC0\",\n    \"12:13\": \"#5C6BC0\",\n    \"12:14\": \"#5C6BC0\",\n    \"12:15\": \"none\",\n    \"12:16\": \"none\",\n    \"12:17\": \"#EF5350\",\n    \"12:18\": \"#EF5350\",\n    \"12:19\": \"#EF5350\",\n    \"12:20\": \"#EF5350\",\n    \"12:21\": \"none\",\n    \"12:22\": \"none\",\n    \"12:23\": \"#5C6BC0\",\n    \"12:24\": \"#5C6BC0\",\n    \"12:25\": \"#5C6BC0\",\n    \"12:26\": \"#5C6BC0\",\n    \"12:27\": \"#EF5350\",\n    \"12:28\": \"#EF5350\",\n    \"12:29\": \"#EF5350\",\n    \"12:30\": \"#EF5350\",\n    \"12:31\": \"#EF5350\",\n    \"12:32\": \"#EF5350\",\n    \"12:33\": \"#EF5350\",\n    \"12:34\": \"#EF5350\",\n    \"12:35\": \"none\",\n    \"12:36\": \"none\",\n    \"12:37\": \"none\",\n    \"12:38\": \"none\",\n    \"12:39\": \"none\",\n    \"12:40\": \"none\",\n    \"12:41\": \"none\",\n    \"12:42\": \"none\",\n    \"12:43\": \"none\",\n    \"12:44\": \"none\",\n    \"12:45\": \"none\",\n    \"12:46\": \"none\",\n    \"13:0\": \"none\",\n    \"13:1\": \"none\",\n    \"13:2\": \"none\",\n    \"13:3\": \"none\",\n    \"13:4\": \"none\",\n    \"13:5\": \"none\",\n    \"13:6\": \"none\",\n    \"13:7\": \"none\",\n    \"13:8\": \"none\",\n    \"13:9\": \"none\",\n    \"13:10\": \"none\",\n    \"13:11\": \"#5C6BC0\",\n    \"13:12\": \"#5C6BC0\",\n    \"13:13\": \"#5C6BC0\",\n    \"13:14\": \"#5C6BC0\",\n    \"13:15\": \"none\",\n    \"13:16\": \"none\",\n    \"13:17\": \"#EF5350\",\n    \"13:18\": \"#EF5350\",\n    \"13:19\": \"#EF5350\",\n    \"13:20\": \"#EF5350\",\n    \"13:21\": \"none\",\n    \"13:22\": \"none\",\n    \"13:23\": \"#5C6BC0\",\n    \"13:24\": \"#5C6BC0\",\n    \"13:25\": \"#5C6BC0\",\n    \"13:26\": \"#5C6BC0\",\n    \"13:27\": \"#EF5350\",\n    \"13:28\": \"#EF5350\",\n    \"13:29\": \"#EF5350\",\n    \"13:30\": \"#EF5350\",\n    \"13:31\": \"#EF5350\",\n    \"13:32\": \"#EF5350\",\n    \"13:33\": \"#EF5350\",\n    \"13:34\": \"#EF5350\",\n    \"13:35\": \"none\",\n    \"13:36\": \"none\",\n    \"13:37\": \"none\",\n    \"13:38\": \"none\",\n    \"13:39\": \"none\",\n    \"13:40\": \"none\",\n    \"13:41\": \"none\",\n    \"13:42\": \"none\",\n    \"13:43\": \"none\",\n    \"13:44\": \"none\",\n    \"13:45\": \"none\",\n    \"13:46\": \"none\",\n    \"14:0\": \"none\",\n    \"14:1\": \"none\",\n    \"14:2\": \"none\",\n    \"14:3\": \"none\",\n    \"14:4\": \"none\",\n    \"14:5\": \"none\",\n    \"14:6\": \"none\",\n    \"14:7\": \"none\",\n    \"14:8\": \"none\",\n    \"14:9\": \"none\",\n    \"14:10\": \"none\",\n    \"14:11\": \"#5C6BC0\",\n    \"14:12\": \"#5C6BC0\",\n    \"14:13\": \"#5C6BC0\",\n    \"14:14\": \"#5C6BC0\",\n    \"14:15\": \"none\",\n    \"14:16\": \"none\",\n    \"14:17\": \"#EF5350\",\n    \"14:18\": \"#EF5350\",\n    \"14:19\": \"#EF5350\",\n    \"14:20\": \"#EF5350\",\n    \"14:21\": \"none\",\n    \"14:22\": \"none\",\n    \"14:23\": \"#5C6BC0\",\n    \"14:24\": \"#5C6BC0\",\n    \"14:25\": \"#5C6BC0\",\n    \"14:26\": \"#5C6BC0\",\n    \"14:27\": \"#EF5350\",\n    \"14:28\": \"#EF5350\",\n    \"14:29\": \"#EF5350\",\n    \"14:30\": \"#EF5350\",\n    \"14:31\": \"#EF5350\",\n    \"14:32\": \"#EF5350\",\n    \"14:33\": \"#EF5350\",\n    \"14:34\": \"#EF5350\",\n    \"14:35\": \"none\",\n    \"14:36\": \"none\",\n    \"14:37\": \"none\",\n    \"14:38\": \"none\",\n    \"14:39\": \"none\",\n    \"14:40\": \"none\",\n    \"14:41\": \"none\",\n    \"14:42\": \"none\",\n    \"14:43\": \"none\",\n    \"14:44\": \"none\",\n    \"14:45\": \"none\",\n    \"14:46\": \"none\",\n    \"15:0\": \"none\",\n    \"15:1\": \"none\",\n    \"15:2\": \"none\",\n    \"15:3\": \"none\",\n    \"15:4\": \"none\",\n    \"15:5\": \"none\",\n    \"15:6\": \"none\",\n    \"15:7\": \"none\",\n    \"15:8\": \"none\",\n    \"15:9\": \"none\",\n    \"15:10\": \"none\",\n    \"15:11\": \"#5C6BC0\",\n    \"15:12\": \"#5C6BC0\",\n    \"15:13\": \"#5C6BC0\",\n    \"15:14\": \"#5C6BC0\",\n    \"15:15\": \"none\",\n    \"15:16\": \"none\",\n    \"15:17\": \"#EF5350\",\n    \"15:18\": \"#EF5350\",\n    \"15:19\": \"#EF5350\",\n    \"15:20\": \"#EF5350\",\n    \"15:21\": \"none\",\n    \"15:22\": \"none\",\n    \"15:23\": \"#5C6BC0\",\n    \"15:24\": \"#5C6BC0\",\n    \"15:25\": \"#5C6BC0\",\n    \"15:26\": \"#5C6BC0\",\n    \"15:27\": \"#EF5350\",\n    \"15:28\": \"#EF5350\",\n    \"15:29\": \"#EF5350\",\n    \"15:30\": \"#EF5350\",\n    \"15:31\": \"#EF5350\",\n    \"15:32\": \"#EF5350\",\n    \"15:33\": \"#EF5350\",\n    \"15:34\": \"#EF5350\",\n    \"15:35\": \"none\",\n    \"15:36\": \"none\",\n    \"15:37\": \"none\",\n    \"15:38\": \"none\",\n    \"15:39\": \"none\",\n    \"15:40\": \"none\",\n    \"15:41\": \"none\",\n    \"15:42\": \"none\",\n    \"15:43\": \"none\",\n    \"15:44\": \"none\",\n    \"15:45\": \"none\",\n    \"15:46\": \"none\",\n    \"16:0\": \"none\",\n    \"16:1\": \"none\",\n    \"16:2\": \"none\",\n    \"16:3\": \"none\",\n    \"16:4\": \"none\",\n    \"16:5\": \"none\",\n    \"16:6\": \"none\",\n    \"16:7\": \"none\",\n    \"16:8\": \"none\",\n    \"16:9\": \"none\",\n    \"16:10\": \"none\",\n    \"16:11\": \"none\",\n    \"16:12\": \"none\",\n    \"16:13\": \"none\",\n    \"16:14\": \"none\",\n    \"16:15\": \"none\",\n    \"16:16\": \"none\",\n    \"16:17\": \"none\",\n    \"16:18\": \"none\",\n    \"16:19\": \"none\",\n    \"16:20\": \"none\",\n    \"16:21\": \"none\",\n    \"16:22\": \"none\",\n    \"16:23\": \"none\",\n    \"16:24\": \"none\",\n    \"16:25\": \"none\",\n    \"16:26\": \"none\",\n    \"16:27\": \"none\",\n    \"16:28\": \"none\",\n    \"16:29\": \"none\",\n    \"16:30\": \"none\",\n    \"16:31\": \"none\",\n    \"16:32\": \"none\",\n    \"16:33\": \"none\",\n    \"16:34\": \"none\",\n    \"16:35\": \"none\",\n    \"16:36\": \"none\",\n    \"16:37\": \"none\",\n    \"16:38\": \"none\",\n    \"16:39\": \"none\",\n    \"16:40\": \"none\",\n    \"16:41\": \"none\",\n    \"16:42\": \"none\",\n    \"16:43\": \"none\",\n    \"16:44\": \"none\",\n    \"16:45\": \"none\",\n    \"16:46\": \"none\",\n    \"17:0\": \"none\",\n    \"17:1\": \"none\",\n    \"17:2\": \"none\",\n    \"17:3\": \"none\",\n    \"17:4\": \"none\",\n    \"17:5\": \"none\",\n    \"17:6\": \"none\",\n    \"17:7\": \"none\",\n    \"17:8\": \"none\",\n    \"17:9\": \"none\",\n    \"17:10\": \"none\",\n    \"17:11\": \"none\",\n    \"17:12\": \"none\",\n    \"17:13\": \"none\",\n    \"17:14\": \"none\",\n    \"17:15\": \"none\",\n    \"17:16\": \"none\",\n    \"17:17\": \"none\",\n    \"17:18\": \"none\",\n    \"17:19\": \"none\",\n    \"17:20\": \"none\",\n    \"17:21\": \"none\",\n    \"17:22\": \"none\",\n    \"17:23\": \"none\",\n    \"17:24\": \"none\",\n    \"17:25\": \"none\",\n    \"17:26\": \"none\",\n    \"17:27\": \"none\",\n    \"17:28\": \"none\",\n    \"17:29\": \"none\",\n    \"17:30\": \"none\",\n    \"17:31\": \"none\",\n    \"17:32\": \"none\",\n    \"17:33\": \"none\",\n    \"17:34\": \"none\",\n    \"17:35\": \"none\",\n    \"17:36\": \"none\",\n    \"17:37\": \"none\",\n    \"17:38\": \"none\",\n    \"17:39\": \"none\",\n    \"17:40\": \"none\",\n    \"17:41\": \"none\",\n    \"17:42\": \"none\",\n    \"17:43\": \"none\",\n    \"17:44\": \"none\",\n    \"17:45\": \"none\",\n    \"17:46\": \"none\",\n    \"18:0\": \"none\",\n    \"18:1\": \"none\",\n    \"18:2\": \"none\",\n    \"18:3\": \"none\",\n    \"18:4\": \"none\",\n    \"18:5\": \"none\",\n    \"18:6\": \"none\",\n    \"18:7\": \"none\",\n    \"18:8\": \"none\",\n    \"18:9\": \"none\",\n    \"18:10\": \"none\",\n    \"18:11\": \"none\",\n    \"18:12\": \"none\",\n    \"18:13\": \"none\",\n    \"18:14\": \"none\",\n    \"18:15\": \"none\",\n    \"18:16\": \"none\",\n    \"18:17\": \"none\",\n    \"18:18\": \"none\",\n    \"18:19\": \"none\",\n    \"18:20\": \"none\",\n    \"18:21\": \"none\",\n    \"18:22\": \"none\",\n    \"18:23\": \"none\",\n    \"18:24\": \"none\",\n    \"18:25\": \"none\",\n    \"18:26\": \"none\",\n    \"18:27\": \"none\",\n    \"18:28\": \"none\",\n    \"18:29\": \"none\",\n    \"18:30\": \"none\",\n    \"18:31\": \"none\",\n    \"18:32\": \"none\",\n    \"18:33\": \"none\",\n    \"18:34\": \"none\",\n    \"18:35\": \"none\",\n    \"18:36\": \"none\",\n    \"18:37\": \"none\",\n    \"18:38\": \"none\",\n    \"18:39\": \"none\",\n    \"18:40\": \"none\",\n    \"18:41\": \"none\",\n    \"18:42\": \"none\",\n    \"18:43\": \"none\",\n    \"18:44\": \"none\",\n    \"18:45\": \"none\",\n    \"18:46\": \"none\",\n    \"19:0\": \"none\",\n    \"19:1\": \"none\",\n    \"19:2\": \"none\",\n    \"19:3\": \"none\",\n    \"19:4\": \"none\",\n    \"19:5\": \"none\",\n    \"19:6\": \"none\",\n    \"19:7\": \"none\",\n    \"19:8\": \"none\",\n    \"19:9\": \"none\",\n    \"19:10\": \"none\",\n    \"19:11\": \"none\",\n    \"19:12\": \"none\",\n    \"19:13\": \"none\",\n    \"19:14\": \"none\",\n    \"19:15\": \"none\",\n    \"19:16\": \"none\",\n    \"19:17\": \"none\",\n    \"19:18\": \"none\",\n    \"19:19\": \"none\",\n    \"19:20\": \"none\",\n    \"19:21\": \"none\",\n    \"19:22\": \"none\",\n    \"19:23\": \"none\",\n    \"19:24\": \"none\",\n    \"19:25\": \"none\",\n    \"19:26\": \"none\",\n    \"19:27\": \"none\",\n    \"19:28\": \"none\",\n    \"19:29\": \"none\",\n    \"19:30\": \"none\",\n    \"19:31\": \"none\",\n    \"19:32\": \"none\",\n    \"19:33\": \"none\",\n    \"19:34\": \"none\",\n    \"19:35\": \"none\",\n    \"19:36\": \"none\",\n    \"19:37\": \"none\",\n    \"19:38\": \"none\",\n    \"19:39\": \"none\",\n    \"19:40\": \"none\",\n    \"19:41\": \"none\",\n    \"19:42\": \"none\",\n    \"19:43\": \"none\",\n    \"19:44\": \"none\",\n    \"19:45\": \"none\",\n    \"19:46\": \"none\",\n    \"20:0\": \"none\",\n    \"20:1\": \"none\",\n    \"20:2\": \"none\",\n    \"20:3\": \"none\",\n    \"20:4\": \"none\",\n    \"20:5\": \"none\",\n    \"20:6\": \"none\",\n    \"20:7\": \"none\",\n    \"20:8\": \"none\",\n    \"20:9\": \"none\",\n    \"20:10\": \"none\",\n    \"20:11\": \"none\",\n    \"20:12\": \"none\",\n    \"20:13\": \"none\",\n    \"20:14\": \"none\",\n    \"20:15\": \"none\",\n    \"20:16\": \"none\",\n    \"20:17\": \"none\",\n    \"20:18\": \"none\",\n    \"20:19\": \"none\",\n    \"20:20\": \"none\",\n    \"20:21\": \"none\",\n    \"20:22\": \"none\",\n    \"20:23\": \"none\",\n    \"20:24\": \"none\",\n    \"20:25\": \"none\",\n    \"20:26\": \"none\",\n    \"20:27\": \"none\",\n    \"20:28\": \"none\",\n    \"20:29\": \"none\",\n    \"20:30\": \"none\",\n    \"20:31\": \"none\",\n    \"20:32\": \"none\",\n    \"20:33\": \"none\",\n    \"20:34\": \"none\",\n    \"20:35\": \"none\",\n    \"20:36\": \"none\",\n    \"20:37\": \"none\",\n    \"20:38\": \"none\",\n    \"20:39\": \"none\",\n    \"20:40\": \"none\",\n    \"20:41\": \"none\",\n    \"20:42\": \"none\",\n    \"20:43\": \"none\",\n    \"20:44\": \"none\",\n    \"20:45\": \"none\",\n    \"20:46\": \"none\",\n    \"21:0\": \"none\",\n    \"21:1\": \"none\",\n    \"21:2\": \"none\",\n    \"21:3\": \"none\",\n    \"21:4\": \"none\",\n    \"21:5\": \"none\",\n    \"21:6\": \"none\",\n    \"21:7\": \"none\",\n    \"21:8\": \"none\",\n    \"21:9\": \"none\",\n    \"21:10\": \"none\",\n    \"21:11\": \"none\",\n    \"21:12\": \"none\",\n    \"21:13\": \"none\",\n    \"21:14\": \"none\",\n    \"21:15\": \"none\",\n    \"21:16\": \"none\",\n    \"21:17\": \"none\",\n    \"21:18\": \"none\",\n    \"21:19\": \"none\",\n    \"21:20\": \"none\",\n    \"21:21\": \"none\",\n    \"21:22\": \"none\",\n    \"21:23\": \"none\",\n    \"21:24\": \"none\",\n    \"21:25\": \"none\",\n    \"21:26\": \"none\",\n    \"21:27\": \"none\",\n    \"21:28\": \"none\",\n    \"21:29\": \"none\",\n    \"21:30\": \"none\",\n    \"21:31\": \"none\",\n    \"21:32\": \"none\",\n    \"21:33\": \"none\",\n    \"21:34\": \"none\",\n    \"21:35\": \"none\",\n    \"21:36\": \"none\",\n    \"21:37\": \"none\",\n    \"21:38\": \"none\",\n    \"21:39\": \"none\",\n    \"21:40\": \"none\",\n    \"21:41\": \"none\",\n    \"21:42\": \"none\",\n    \"21:43\": \"none\",\n    \"21:44\": \"none\",\n    \"21:45\": \"none\",\n    \"21:46\": \"none\",\n    \"22:0\": \"none\",\n    \"22:1\": \"none\",\n    \"22:2\": \"none\",\n    \"22:3\": \"none\",\n    \"22:4\": \"none\",\n    \"22:5\": \"none\",\n    \"22:6\": \"none\",\n    \"22:7\": \"none\",\n    \"22:8\": \"none\",\n    \"22:9\": \"none\",\n    \"22:10\": \"none\",\n    \"22:11\": \"none\",\n    \"22:12\": \"none\",\n    \"22:13\": \"none\",\n    \"22:14\": \"none\",\n    \"22:15\": \"none\",\n    \"22:16\": \"none\",\n    \"22:17\": \"none\",\n    \"22:18\": \"none\",\n    \"22:19\": \"none\",\n    \"22:20\": \"none\",\n    \"22:21\": \"none\",\n    \"22:22\": \"none\",\n    \"22:23\": \"none\",\n    \"22:24\": \"none\",\n    \"22:25\": \"none\",\n    \"22:26\": \"none\",\n    \"22:27\": \"none\",\n    \"22:28\": \"none\",\n    \"22:29\": \"none\",\n    \"22:30\": \"none\",\n    \"22:31\": \"none\",\n    \"22:32\": \"none\",\n    \"22:33\": \"none\",\n    \"22:34\": \"none\",\n    \"22:35\": \"none\",\n    \"22:36\": \"none\",\n    \"22:37\": \"none\",\n    \"22:38\": \"none\",\n    \"22:39\": \"none\",\n    \"22:40\": \"none\",\n    \"22:41\": \"none\",\n    \"22:42\": \"none\",\n    \"22:43\": \"none\",\n    \"22:44\": \"none\",\n    \"22:45\": \"none\",\n    \"22:46\": \"none\",\n    \"23:0\": \"none\",\n    \"23:1\": \"none\",\n    \"23:2\": \"none\",\n    \"23:3\": \"none\",\n    \"23:4\": \"none\",\n    \"23:5\": \"none\",\n    \"23:6\": \"none\",\n    \"23:7\": \"none\",\n    \"23:8\": \"none\",\n    \"23:9\": \"none\",\n    \"23:10\": \"none\",\n    \"23:11\": \"none\",\n    \"23:12\": \"none\",\n    \"23:13\": \"none\",\n    \"23:14\": \"none\",\n    \"23:15\": \"none\",\n    \"23:16\": \"none\",\n    \"23:17\": \"none\",\n    \"23:18\": \"none\",\n    \"23:19\": \"none\",\n    \"23:20\": \"none\",\n    \"23:21\": \"none\",\n    \"23:22\": \"none\",\n    \"23:23\": \"none\",\n    \"23:24\": \"none\",\n    \"23:25\": \"none\",\n    \"23:26\": \"none\",\n    \"23:27\": \"none\",\n    \"23:28\": \"none\",\n    \"23:29\": \"none\",\n    \"23:30\": \"none\",\n    \"23:31\": \"none\",\n    \"23:32\": \"none\",\n    \"23:33\": \"none\",\n    \"23:34\": \"none\",\n    \"23:35\": \"none\",\n    \"23:36\": \"none\",\n    \"23:37\": \"none\",\n    \"23:38\": \"none\",\n    \"23:39\": \"none\",\n    \"23:40\": \"none\",\n    \"23:41\": \"none\",\n    \"23:42\": \"none\",\n    \"23:43\": \"none\",\n    \"23:44\": \"none\",\n    \"23:45\": \"none\",\n    \"23:46\": \"none\",\n    \"24:0\": \"none\",\n    \"24:1\": \"none\",\n    \"24:2\": \"none\",\n    \"24:3\": \"none\",\n    \"24:4\": \"none\",\n    \"24:5\": \"none\",\n    \"24:6\": \"none\",\n    \"24:7\": \"none\",\n    \"24:8\": \"none\",\n    \"24:9\": \"none\",\n    \"24:10\": \"none\",\n    \"24:11\": \"none\",\n    \"24:12\": \"none\",\n    \"24:13\": \"none\",\n    \"24:14\": \"none\",\n    \"24:15\": \"none\",\n    \"24:16\": \"none\",\n    \"24:17\": \"none\",\n    \"24:18\": \"none\",\n    \"24:19\": \"none\",\n    \"24:20\": \"none\",\n    \"24:21\": \"none\",\n    \"24:22\": \"none\",\n    \"24:23\": \"none\",\n    \"24:24\": \"none\",\n    \"24:25\": \"none\",\n    \"24:26\": \"none\",\n    \"24:27\": \"none\",\n    \"24:28\": \"none\",\n    \"24:29\": \"none\",\n    \"24:30\": \"none\",\n    \"24:31\": \"none\",\n    \"24:32\": \"none\",\n    \"24:33\": \"none\",\n    \"24:34\": \"none\",\n    \"24:35\": \"none\",\n    \"24:36\": \"none\",\n    \"24:37\": \"none\",\n    \"24:38\": \"none\",\n    \"24:39\": \"none\",\n    \"24:40\": \"none\",\n    \"24:41\": \"none\",\n    \"24:42\": \"none\",\n    \"24:43\": \"none\",\n    \"24:44\": \"none\",\n    \"24:45\": \"none\",\n    \"24:46\": \"none\",\n    \"25:0\": \"none\",\n    \"25:1\": \"none\",\n    \"25:2\": \"none\",\n    \"25:3\": \"none\",\n    \"25:4\": \"none\",\n    \"25:5\": \"none\",\n    \"25:6\": \"none\",\n    \"25:7\": \"none\",\n    \"25:8\": \"none\",\n    \"25:9\": \"none\",\n    \"25:10\": \"none\",\n    \"25:11\": \"none\",\n    \"25:12\": \"none\",\n    \"25:13\": \"none\",\n    \"25:14\": \"none\",\n    \"25:15\": \"none\",\n    \"25:16\": \"none\",\n    \"25:17\": \"none\",\n    \"25:18\": \"none\",\n    \"25:19\": \"none\",\n    \"25:20\": \"none\",\n    \"25:21\": \"none\",\n    \"25:22\": \"none\",\n    \"25:23\": \"none\",\n    \"25:24\": \"none\",\n    \"25:25\": \"none\",\n    \"25:26\": \"none\",\n    \"25:27\": \"none\",\n    \"25:28\": \"none\",\n    \"25:29\": \"none\",\n    \"25:30\": \"none\",\n    \"25:31\": \"none\",\n    \"25:32\": \"none\",\n    \"25:33\": \"none\",\n    \"25:34\": \"none\",\n    \"25:35\": \"none\",\n    \"25:36\": \"none\",\n    \"25:37\": \"none\",\n    \"25:38\": \"none\",\n    \"25:39\": \"none\",\n    \"25:40\": \"none\",\n    \"25:41\": \"none\",\n    \"25:42\": \"none\",\n    \"25:43\": \"none\",\n    \"25:44\": \"none\",\n    \"25:45\": \"none\",\n    \"25:46\": \"none\",\n    \"26:0\": \"none\",\n    \"26:1\": \"none\",\n    \"26:2\": \"none\",\n    \"26:3\": \"none\",\n    \"26:4\": \"none\",\n    \"26:5\": \"none\",\n    \"26:6\": \"none\",\n    \"26:7\": \"none\",\n    \"26:8\": \"none\",\n    \"26:9\": \"none\",\n    \"26:10\": \"none\",\n    \"26:11\": \"none\",\n    \"26:12\": \"none\",\n    \"26:13\": \"none\",\n    \"26:14\": \"none\",\n    \"26:15\": \"none\",\n    \"26:16\": \"none\",\n    \"26:17\": \"none\",\n    \"26:18\": \"none\",\n    \"26:19\": \"none\",\n    \"26:20\": \"none\",\n    \"26:21\": \"none\",\n    \"26:22\": \"none\",\n    \"26:23\": \"none\",\n    \"26:24\": \"none\",\n    \"26:25\": \"none\",\n    \"26:26\": \"none\",\n    \"26:27\": \"none\",\n    \"26:28\": \"none\",\n    \"26:29\": \"none\",\n    \"26:30\": \"none\",\n    \"26:31\": \"none\",\n    \"26:32\": \"none\",\n    \"26:33\": \"none\",\n    \"26:34\": \"none\",\n    \"26:35\": \"none\",\n    \"26:36\": \"none\",\n    \"26:37\": \"none\",\n    \"26:38\": \"none\",\n    \"26:39\": \"none\",\n    \"26:40\": \"none\",\n    \"26:41\": \"none\",\n    \"26:42\": \"none\",\n    \"26:43\": \"none\",\n    \"26:44\": \"none\",\n    \"26:45\": \"none\",\n    \"26:46\": \"none\"\n  }\n}"},"relativePath":"band_parts/data/ridealong.json"},{"fields":{"contents":"{\n  \"title\": \"They Won't Go\",\n  \"sections\": [\n    {\n      \"section\": \"A\",\n      \"length\": 2\n    },\n    {\n      \"section\": \"Verse 1\",\n      \"length\": 8\n    },\n    {\n      \"section\": \"A2\",\n      \"length\": 2\n    },\n    {\n      \"section\": \"Verse 2\",\n      \"length\": 4\n    },\n    {\n      \"section\": \"Outro\",\n      \"length\": 10\n    }\n  ],\n  \"instruments\": [\n    {\n      \"instrument\": \"Rhythm\",\n      \"sections\": {}\n    },\n    {\n      \"instrument\": \"Harrison Guitar\",\n      \"sections\": {}\n    },\n    {\n      \"instrument\": \"Vocals\",\n      \"sections\": {}\n    },\n    {\n      \"instrument\": \"Scotty\",\n      \"sections\": {}\n    }\n  ],\n  \"cells\": {\n    \"0:0\": \"none\",\n    \"0:1\": \"none\",\n    \"0:2\": \"none\",\n    \"0:3\": \"none\",\n    \"0:4\": \"none\",\n    \"0:5\": \"none\",\n    \"0:6\": \"none\",\n    \"0:7\": \"none\",\n    \"0:8\": \"none\",\n    \"0:9\": \"none\",\n    \"0:10\": \"none\",\n    \"0:11\": \"none\",\n    \"0:12\": \"none\",\n    \"0:13\": \"none\",\n    \"0:14\": \"none\",\n    \"0:15\": \"none\",\n    \"0:16\": \"none\",\n    \"0:17\": \"none\",\n    \"0:18\": \"none\",\n    \"0:19\": \"none\",\n    \"0:20\": \"none\",\n    \"0:21\": \"none\",\n    \"0:22\": \"none\",\n    \"0:23\": \"none\",\n    \"0:24\": \"none\",\n    \"0:25\": \"none\",\n    \"0:26\": \"none\",\n    \"0:27\": \"none\",\n    \"0:28\": \"none\",\n    \"0:29\": \"none\",\n    \"0:30\": \"none\",\n    \"0:31\": \"none\",\n    \"0:32\": \"none\",\n    \"0:33\": \"none\",\n    \"0:34\": \"none\",\n    \"0:35\": \"none\",\n    \"0:36\": \"none\",\n    \"0:37\": \"none\",\n    \"0:38\": \"none\",\n    \"0:39\": \"none\",\n    \"0:40\": \"none\",\n    \"0:41\": \"none\",\n    \"0:42\": \"none\",\n    \"0:43\": \"none\",\n    \"0:44\": \"none\",\n    \"0:45\": \"none\",\n    \"0:46\": \"none\",\n    \"1:0\": \"none\",\n    \"1:1\": \"none\",\n    \"1:2\": \"none\",\n    \"1:3\": \"none\",\n    \"1:4\": \"none\",\n    \"1:5\": \"none\",\n    \"1:6\": \"none\",\n    \"1:7\": \"none\",\n    \"1:8\": \"none\",\n    \"1:9\": \"none\",\n    \"1:10\": \"none\",\n    \"1:11\": \"none\",\n    \"1:12\": \"none\",\n    \"1:13\": \"none\",\n    \"1:14\": \"none\",\n    \"1:15\": \"none\",\n    \"1:16\": \"none\",\n    \"1:17\": \"none\",\n    \"1:18\": \"none\",\n    \"1:19\": \"none\",\n    \"1:20\": \"none\",\n    \"1:21\": \"none\",\n    \"1:22\": \"none\",\n    \"1:23\": \"none\",\n    \"1:24\": \"none\",\n    \"1:25\": \"none\",\n    \"1:26\": \"none\",\n    \"1:27\": \"none\",\n    \"1:28\": \"none\",\n    \"1:29\": \"none\",\n    \"1:30\": \"none\",\n    \"1:31\": \"none\",\n    \"1:32\": \"none\",\n    \"1:33\": \"none\",\n    \"1:34\": \"none\",\n    \"1:35\": \"none\",\n    \"1:36\": \"none\",\n    \"1:37\": \"none\",\n    \"1:38\": \"none\",\n    \"1:39\": \"none\",\n    \"1:40\": \"none\",\n    \"1:41\": \"none\",\n    \"1:42\": \"none\",\n    \"1:43\": \"none\",\n    \"1:44\": \"none\",\n    \"1:45\": \"none\",\n    \"1:46\": \"none\",\n    \"2:0\": \"none\",\n    \"2:1\": \"none\",\n    \"2:2\": \"none\",\n    \"2:3\": \"none\",\n    \"2:4\": \"none\",\n    \"2:5\": \"none\",\n    \"2:6\": \"none\",\n    \"2:7\": \"none\",\n    \"2:8\": \"none\",\n    \"2:9\": \"none\",\n    \"2:10\": \"none\",\n    \"2:11\": \"none\",\n    \"2:12\": \"none\",\n    \"2:13\": \"none\",\n    \"2:14\": \"none\",\n    \"2:15\": \"none\",\n    \"2:16\": \"none\",\n    \"2:17\": \"none\",\n    \"2:18\": \"none\",\n    \"2:19\": \"none\",\n    \"2:20\": \"none\",\n    \"2:21\": \"none\",\n    \"2:22\": \"none\",\n    \"2:23\": \"none\",\n    \"2:24\": \"none\",\n    \"2:25\": \"none\",\n    \"2:26\": \"none\",\n    \"2:27\": \"none\",\n    \"2:28\": \"none\",\n    \"2:29\": \"none\",\n    \"2:30\": \"none\",\n    \"2:31\": \"none\",\n    \"2:32\": \"none\",\n    \"2:33\": \"none\",\n    \"2:34\": \"none\",\n    \"2:35\": \"none\",\n    \"2:36\": \"none\",\n    \"2:37\": \"none\",\n    \"2:38\": \"none\",\n    \"2:39\": \"none\",\n    \"2:40\": \"none\",\n    \"2:41\": \"none\",\n    \"2:42\": \"none\",\n    \"2:43\": \"none\",\n    \"2:44\": \"none\",\n    \"2:45\": \"none\",\n    \"2:46\": \"none\",\n    \"3:0\": \"none\",\n    \"3:1\": \"none\",\n    \"3:2\": \"none\",\n    \"3:3\": \"none\",\n    \"3:4\": \"none\",\n    \"3:5\": \"none\",\n    \"3:6\": \"none\",\n    \"3:7\": \"none\",\n    \"3:8\": \"none\",\n    \"3:9\": \"none\",\n    \"3:10\": \"none\",\n    \"3:11\": \"none\",\n    \"3:12\": \"none\",\n    \"3:13\": \"none\",\n    \"3:14\": \"none\",\n    \"3:15\": \"none\",\n    \"3:16\": \"none\",\n    \"3:17\": \"none\",\n    \"3:18\": \"none\",\n    \"3:19\": \"none\",\n    \"3:20\": \"none\",\n    \"3:21\": \"none\",\n    \"3:22\": \"none\",\n    \"3:23\": \"none\",\n    \"3:24\": \"none\",\n    \"3:25\": \"none\",\n    \"3:26\": \"none\",\n    \"3:27\": \"none\",\n    \"3:28\": \"none\",\n    \"3:29\": \"none\",\n    \"3:30\": \"none\",\n    \"3:31\": \"none\",\n    \"3:32\": \"none\",\n    \"3:33\": \"none\",\n    \"3:34\": \"none\",\n    \"3:35\": \"none\",\n    \"3:36\": \"none\",\n    \"3:37\": \"none\",\n    \"3:38\": \"none\",\n    \"3:39\": \"none\",\n    \"3:40\": \"none\",\n    \"3:41\": \"none\",\n    \"3:42\": \"none\",\n    \"3:43\": \"none\",\n    \"3:44\": \"none\",\n    \"3:45\": \"none\",\n    \"3:46\": \"none\",\n    \"4:0\": \"none\",\n    \"4:1\": \"none\",\n    \"4:2\": \"none\",\n    \"4:3\": \"none\",\n    \"4:4\": \"none\",\n    \"4:5\": \"none\",\n    \"4:6\": \"none\",\n    \"4:7\": \"#5C6BC0\",\n    \"4:8\": \"#5C6BC0\",\n    \"4:9\": \"#5C6BC0\",\n    \"4:10\": \"#5C6BC0\",\n    \"4:11\": \"#5C6BC0\",\n    \"4:12\": \"#5C6BC0\",\n    \"4:13\": \"#5C6BC0\",\n    \"4:14\": \"#5C6BC0\",\n    \"4:15\": \"#5C6BC0\",\n    \"4:16\": \"#5C6BC0\",\n    \"4:17\": \"#5C6BC0\",\n    \"4:18\": \"#5C6BC0\",\n    \"4:19\": \"#5C6BC0\",\n    \"4:20\": \"#5C6BC0\",\n    \"4:21\": \"#5C6BC0\",\n    \"4:22\": \"#5C6BC0\",\n    \"4:23\": \"#5C6BC0\",\n    \"4:24\": \"#5C6BC0\",\n    \"4:25\": \"#5C6BC0\",\n    \"4:26\": \"#5C6BC0\",\n    \"4:27\": \"#283593\",\n    \"4:28\": \"#283593\",\n    \"4:29\": \"#283593\",\n    \"4:30\": \"#283593\",\n    \"4:31\": \"#5C6BC0\",\n    \"4:32\": \"#5C6BC0\",\n    \"4:33\": \"none\",\n    \"4:34\": \"none\",\n    \"4:35\": \"none\",\n    \"4:36\": \"none\",\n    \"4:37\": \"none\",\n    \"4:38\": \"none\",\n    \"4:39\": \"none\",\n    \"4:40\": \"none\",\n    \"4:41\": \"none\",\n    \"4:42\": \"none\",\n    \"4:43\": \"none\",\n    \"4:44\": \"none\",\n    \"4:45\": \"none\",\n    \"4:46\": \"none\",\n    \"5:0\": \"none\",\n    \"5:1\": \"none\",\n    \"5:2\": \"none\",\n    \"5:3\": \"none\",\n    \"5:4\": \"none\",\n    \"5:5\": \"none\",\n    \"5:6\": \"none\",\n    \"5:7\": \"#5C6BC0\",\n    \"5:8\": \"#5C6BC0\",\n    \"5:9\": \"#5C6BC0\",\n    \"5:10\": \"#5C6BC0\",\n    \"5:11\": \"#5C6BC0\",\n    \"5:12\": \"#5C6BC0\",\n    \"5:13\": \"#5C6BC0\",\n    \"5:14\": \"#5C6BC0\",\n    \"5:15\": \"#5C6BC0\",\n    \"5:16\": \"#5C6BC0\",\n    \"5:17\": \"#5C6BC0\",\n    \"5:18\": \"#5C6BC0\",\n    \"5:19\": \"#5C6BC0\",\n    \"5:20\": \"#5C6BC0\",\n    \"5:21\": \"#5C6BC0\",\n    \"5:22\": \"#5C6BC0\",\n    \"5:23\": \"#5C6BC0\",\n    \"5:24\": \"#5C6BC0\",\n    \"5:25\": \"#5C6BC0\",\n    \"5:26\": \"#5C6BC0\",\n    \"5:27\": \"#283593\",\n    \"5:28\": \"#283593\",\n    \"5:29\": \"#283593\",\n    \"5:30\": \"#283593\",\n    \"5:31\": \"#5C6BC0\",\n    \"5:32\": \"#5C6BC0\",\n    \"5:33\": \"none\",\n    \"5:34\": \"none\",\n    \"5:35\": \"none\",\n    \"5:36\": \"none\",\n    \"5:37\": \"none\",\n    \"5:38\": \"none\",\n    \"5:39\": \"none\",\n    \"5:40\": \"none\",\n    \"5:41\": \"none\",\n    \"5:42\": \"none\",\n    \"5:43\": \"none\",\n    \"5:44\": \"none\",\n    \"5:45\": \"none\",\n    \"5:46\": \"none\",\n    \"6:0\": \"none\",\n    \"6:1\": \"none\",\n    \"6:2\": \"none\",\n    \"6:3\": \"none\",\n    \"6:4\": \"none\",\n    \"6:5\": \"none\",\n    \"6:6\": \"none\",\n    \"6:7\": \"#5C6BC0\",\n    \"6:8\": \"#5C6BC0\",\n    \"6:9\": \"#5C6BC0\",\n    \"6:10\": \"#5C6BC0\",\n    \"6:11\": \"#5C6BC0\",\n    \"6:12\": \"#5C6BC0\",\n    \"6:13\": \"#5C6BC0\",\n    \"6:14\": \"#5C6BC0\",\n    \"6:15\": \"#5C6BC0\",\n    \"6:16\": \"#5C6BC0\",\n    \"6:17\": \"#5C6BC0\",\n    \"6:18\": \"#5C6BC0\",\n    \"6:19\": \"#5C6BC0\",\n    \"6:20\": \"#5C6BC0\",\n    \"6:21\": \"#5C6BC0\",\n    \"6:22\": \"#5C6BC0\",\n    \"6:23\": \"#5C6BC0\",\n    \"6:24\": \"#5C6BC0\",\n    \"6:25\": \"#5C6BC0\",\n    \"6:26\": \"#5C6BC0\",\n    \"6:27\": \"#283593\",\n    \"6:28\": \"#283593\",\n    \"6:29\": \"#283593\",\n    \"6:30\": \"#283593\",\n    \"6:31\": \"#5C6BC0\",\n    \"6:32\": \"#5C6BC0\",\n    \"6:33\": \"none\",\n    \"6:34\": \"none\",\n    \"6:35\": \"none\",\n    \"6:36\": \"none\",\n    \"6:37\": \"none\",\n    \"6:38\": \"none\",\n    \"6:39\": \"none\",\n    \"6:40\": \"none\",\n    \"6:41\": \"none\",\n    \"6:42\": \"none\",\n    \"6:43\": \"none\",\n    \"6:44\": \"none\",\n    \"6:45\": \"none\",\n    \"6:46\": \"none\",\n    \"7:0\": \"none\",\n    \"7:1\": \"none\",\n    \"7:2\": \"none\",\n    \"7:3\": \"none\",\n    \"7:4\": \"none\",\n    \"7:5\": \"none\",\n    \"7:6\": \"none\",\n    \"7:7\": \"#5C6BC0\",\n    \"7:8\": \"#5C6BC0\",\n    \"7:9\": \"#5C6BC0\",\n    \"7:10\": \"#5C6BC0\",\n    \"7:11\": \"#5C6BC0\",\n    \"7:12\": \"#5C6BC0\",\n    \"7:13\": \"#5C6BC0\",\n    \"7:14\": \"#5C6BC0\",\n    \"7:15\": \"#5C6BC0\",\n    \"7:16\": \"#5C6BC0\",\n    \"7:17\": \"#5C6BC0\",\n    \"7:18\": \"#5C6BC0\",\n    \"7:19\": \"#5C6BC0\",\n    \"7:20\": \"#5C6BC0\",\n    \"7:21\": \"#5C6BC0\",\n    \"7:22\": \"#5C6BC0\",\n    \"7:23\": \"#5C6BC0\",\n    \"7:24\": \"#5C6BC0\",\n    \"7:25\": \"#5C6BC0\",\n    \"7:26\": \"#5C6BC0\",\n    \"7:27\": \"#283593\",\n    \"7:28\": \"#283593\",\n    \"7:29\": \"#283593\",\n    \"7:30\": \"#283593\",\n    \"7:31\": \"#5C6BC0\",\n    \"7:32\": \"#5C6BC0\",\n    \"7:33\": \"none\",\n    \"7:34\": \"none\",\n    \"7:35\": \"none\",\n    \"7:36\": \"none\",\n    \"7:37\": \"none\",\n    \"7:38\": \"none\",\n    \"7:39\": \"none\",\n    \"7:40\": \"none\",\n    \"7:41\": \"none\",\n    \"7:42\": \"none\",\n    \"7:43\": \"none\",\n    \"7:44\": \"none\",\n    \"7:45\": \"none\",\n    \"7:46\": \"none\",\n    \"8:0\": \"none\",\n    \"8:1\": \"none\",\n    \"8:2\": \"none\",\n    \"8:3\": \"none\",\n    \"8:4\": \"none\",\n    \"8:5\": \"none\",\n    \"8:6\": \"none\",\n    \"8:7\": \"#5C6BC0\",\n    \"8:8\": \"#5C6BC0\",\n    \"8:9\": \"none\",\n    \"8:10\": \"none\",\n    \"8:11\": \"none\",\n    \"8:12\": \"none\",\n    \"8:13\": \"#5C6BC0\",\n    \"8:14\": \"none\",\n    \"8:15\": \"none\",\n    \"8:16\": \"none\",\n    \"8:17\": \"#5C6BC0\",\n    \"8:18\": \"#5C6BC0\",\n    \"8:19\": \"none\",\n    \"8:20\": \"none\",\n    \"8:21\": \"none\",\n    \"8:22\": \"none\",\n    \"8:23\": \"#5C6BC0\",\n    \"8:24\": \"#5C6BC0\",\n    \"8:25\": \"#5C6BC0\",\n    \"8:26\": \"#5C6BC0\",\n    \"8:27\": \"#5C6BC0\",\n    \"8:28\": \"#5C6BC0\",\n    \"8:29\": \"#5C6BC0\",\n    \"8:30\": \"#5C6BC0\",\n    \"8:31\": \"#5C6BC0\",\n    \"8:32\": \"#5C6BC0\",\n    \"8:33\": \"none\",\n    \"8:34\": \"none\",\n    \"8:35\": \"none\",\n    \"8:36\": \"none\",\n    \"8:37\": \"none\",\n    \"8:38\": \"none\",\n    \"8:39\": \"none\",\n    \"8:40\": \"none\",\n    \"8:41\": \"none\",\n    \"8:42\": \"none\",\n    \"8:43\": \"none\",\n    \"8:44\": \"none\",\n    \"8:45\": \"none\",\n    \"8:46\": \"none\",\n    \"9:0\": \"none\",\n    \"9:1\": \"none\",\n    \"9:2\": \"none\",\n    \"9:3\": \"none\",\n    \"9:4\": \"none\",\n    \"9:5\": \"none\",\n    \"9:6\": \"none\",\n    \"9:7\": \"#5C6BC0\",\n    \"9:8\": \"#5C6BC0\",\n    \"9:9\": \"none\",\n    \"9:10\": \"none\",\n    \"9:11\": \"none\",\n    \"9:12\": \"none\",\n    \"9:13\": \"#5C6BC0\",\n    \"9:14\": \"none\",\n    \"9:15\": \"none\",\n    \"9:16\": \"none\",\n    \"9:17\": \"#5C6BC0\",\n    \"9:18\": \"#5C6BC0\",\n    \"9:19\": \"none\",\n    \"9:20\": \"none\",\n    \"9:21\": \"none\",\n    \"9:22\": \"none\",\n    \"9:23\": \"#5C6BC0\",\n    \"9:24\": \"#5C6BC0\",\n    \"9:25\": \"#5C6BC0\",\n    \"9:26\": \"#5C6BC0\",\n    \"9:27\": \"#5C6BC0\",\n    \"9:28\": \"#5C6BC0\",\n    \"9:29\": \"#5C6BC0\",\n    \"9:30\": \"#5C6BC0\",\n    \"9:31\": \"#5C6BC0\",\n    \"9:32\": \"#5C6BC0\",\n    \"9:33\": \"none\",\n    \"9:34\": \"none\",\n    \"9:35\": \"none\",\n    \"9:36\": \"none\",\n    \"9:37\": \"none\",\n    \"9:38\": \"none\",\n    \"9:39\": \"none\",\n    \"9:40\": \"none\",\n    \"9:41\": \"none\",\n    \"9:42\": \"none\",\n    \"9:43\": \"none\",\n    \"9:44\": \"none\",\n    \"9:45\": \"none\",\n    \"9:46\": \"none\",\n    \"10:0\": \"none\",\n    \"10:1\": \"none\",\n    \"10:2\": \"none\",\n    \"10:3\": \"none\",\n    \"10:4\": \"none\",\n    \"10:5\": \"none\",\n    \"10:6\": \"none\",\n    \"10:7\": \"#5C6BC0\",\n    \"10:8\": \"#5C6BC0\",\n    \"10:9\": \"none\",\n    \"10:10\": \"none\",\n    \"10:11\": \"none\",\n    \"10:12\": \"none\",\n    \"10:13\": \"#5C6BC0\",\n    \"10:14\": \"none\",\n    \"10:15\": \"none\",\n    \"10:16\": \"none\",\n    \"10:17\": \"#5C6BC0\",\n    \"10:18\": \"#5C6BC0\",\n    \"10:19\": \"none\",\n    \"10:20\": \"none\",\n    \"10:21\": \"none\",\n    \"10:22\": \"none\",\n    \"10:23\": \"#5C6BC0\",\n    \"10:24\": \"#5C6BC0\",\n    \"10:25\": \"#5C6BC0\",\n    \"10:26\": \"#5C6BC0\",\n    \"10:27\": \"#5C6BC0\",\n    \"10:28\": \"#5C6BC0\",\n    \"10:29\": \"#5C6BC0\",\n    \"10:30\": \"#5C6BC0\",\n    \"10:31\": \"#5C6BC0\",\n    \"10:32\": \"#5C6BC0\",\n    \"10:33\": \"none\",\n    \"10:34\": \"none\",\n    \"10:35\": \"none\",\n    \"10:36\": \"none\",\n    \"10:37\": \"none\",\n    \"10:38\": \"none\",\n    \"10:39\": \"none\",\n    \"10:40\": \"none\",\n    \"10:41\": \"none\",\n    \"10:42\": \"none\",\n    \"10:43\": \"none\",\n    \"10:44\": \"none\",\n    \"10:45\": \"none\",\n    \"10:46\": \"none\",\n    \"11:0\": \"none\",\n    \"11:1\": \"none\",\n    \"11:2\": \"none\",\n    \"11:3\": \"none\",\n    \"11:4\": \"none\",\n    \"11:5\": \"none\",\n    \"11:6\": \"none\",\n    \"11:7\": \"#5C6BC0\",\n    \"11:8\": \"#5C6BC0\",\n    \"11:9\": \"none\",\n    \"11:10\": \"none\",\n    \"11:11\": \"none\",\n    \"11:12\": \"none\",\n    \"11:13\": \"#5C6BC0\",\n    \"11:14\": \"none\",\n    \"11:15\": \"none\",\n    \"11:16\": \"none\",\n    \"11:17\": \"#5C6BC0\",\n    \"11:18\": \"#5C6BC0\",\n    \"11:19\": \"none\",\n    \"11:20\": \"none\",\n    \"11:21\": \"none\",\n    \"11:22\": \"none\",\n    \"11:23\": \"#5C6BC0\",\n    \"11:24\": \"#5C6BC0\",\n    \"11:25\": \"#5C6BC0\",\n    \"11:26\": \"#5C6BC0\",\n    \"11:27\": \"#5C6BC0\",\n    \"11:28\": \"#5C6BC0\",\n    \"11:29\": \"#5C6BC0\",\n    \"11:30\": \"#5C6BC0\",\n    \"11:31\": \"#5C6BC0\",\n    \"11:32\": \"#5C6BC0\",\n    \"11:33\": \"none\",\n    \"11:34\": \"none\",\n    \"11:35\": \"none\",\n    \"11:36\": \"none\",\n    \"11:37\": \"none\",\n    \"11:38\": \"none\",\n    \"11:39\": \"none\",\n    \"11:40\": \"none\",\n    \"11:41\": \"none\",\n    \"11:42\": \"none\",\n    \"11:43\": \"none\",\n    \"11:44\": \"none\",\n    \"11:45\": \"none\",\n    \"11:46\": \"none\",\n    \"12:0\": \"none\",\n    \"12:1\": \"none\",\n    \"12:2\": \"none\",\n    \"12:3\": \"none\",\n    \"12:4\": \"none\",\n    \"12:5\": \"none\",\n    \"12:6\": \"none\",\n    \"12:7\": \"none\",\n    \"12:8\": \"none\",\n    \"12:9\": \"#5C6BC0\",\n    \"12:10\": \"#5C6BC0\",\n    \"12:11\": \"#5C6BC0\",\n    \"12:12\": \"#5C6BC0\",\n    \"12:13\": \"#5C6BC0\",\n    \"12:14\": \"#5C6BC0\",\n    \"12:15\": \"#5C6BC0\",\n    \"12:16\": \"#5C6BC0\",\n    \"12:17\": \"none\",\n    \"12:18\": \"none\",\n    \"12:19\": \"#5C6BC0\",\n    \"12:20\": \"#5C6BC0\",\n    \"12:21\": \"#5C6BC0\",\n    \"12:22\": \"#5C6BC0\",\n    \"12:23\": \"none\",\n    \"12:24\": \"none\",\n    \"12:25\": \"none\",\n    \"12:26\": \"none\",\n    \"12:27\": \"none\",\n    \"12:28\": \"none\",\n    \"12:29\": \"none\",\n    \"12:30\": \"none\",\n    \"12:31\": \"none\",\n    \"12:32\": \"none\",\n    \"12:33\": \"none\",\n    \"12:34\": \"none\",\n    \"12:35\": \"none\",\n    \"12:36\": \"none\",\n    \"12:37\": \"none\",\n    \"12:38\": \"none\",\n    \"12:39\": \"none\",\n    \"12:40\": \"none\",\n    \"12:41\": \"none\",\n    \"12:42\": \"none\",\n    \"12:43\": \"none\",\n    \"12:44\": \"none\",\n    \"12:45\": \"none\",\n    \"12:46\": \"none\",\n    \"13:0\": \"none\",\n    \"13:1\": \"none\",\n    \"13:2\": \"none\",\n    \"13:3\": \"none\",\n    \"13:4\": \"none\",\n    \"13:5\": \"none\",\n    \"13:6\": \"none\",\n    \"13:7\": \"none\",\n    \"13:8\": \"none\",\n    \"13:9\": \"#5C6BC0\",\n    \"13:10\": \"#5C6BC0\",\n    \"13:11\": \"#5C6BC0\",\n    \"13:12\": \"#5C6BC0\",\n    \"13:13\": \"#5C6BC0\",\n    \"13:14\": \"#5C6BC0\",\n    \"13:15\": \"#5C6BC0\",\n    \"13:16\": \"#5C6BC0\",\n    \"13:17\": \"none\",\n    \"13:18\": \"none\",\n    \"13:19\": \"#5C6BC0\",\n    \"13:20\": \"#5C6BC0\",\n    \"13:21\": \"#5C6BC0\",\n    \"13:22\": \"#5C6BC0\",\n    \"13:23\": \"none\",\n    \"13:24\": \"none\",\n    \"13:25\": \"none\",\n    \"13:26\": \"none\",\n    \"13:27\": \"none\",\n    \"13:28\": \"none\",\n    \"13:29\": \"none\",\n    \"13:30\": \"none\",\n    \"13:31\": \"none\",\n    \"13:32\": \"none\",\n    \"13:33\": \"none\",\n    \"13:34\": \"none\",\n    \"13:35\": \"none\",\n    \"13:36\": \"none\",\n    \"13:37\": \"none\",\n    \"13:38\": \"none\",\n    \"13:39\": \"none\",\n    \"13:40\": \"none\",\n    \"13:41\": \"none\",\n    \"13:42\": \"none\",\n    \"13:43\": \"none\",\n    \"13:44\": \"none\",\n    \"13:45\": \"none\",\n    \"13:46\": \"none\",\n    \"14:0\": \"none\",\n    \"14:1\": \"none\",\n    \"14:2\": \"none\",\n    \"14:3\": \"none\",\n    \"14:4\": \"none\",\n    \"14:5\": \"none\",\n    \"14:6\": \"none\",\n    \"14:7\": \"none\",\n    \"14:8\": \"none\",\n    \"14:9\": \"#5C6BC0\",\n    \"14:10\": \"#5C6BC0\",\n    \"14:11\": \"#5C6BC0\",\n    \"14:12\": \"#5C6BC0\",\n    \"14:13\": \"#5C6BC0\",\n    \"14:14\": \"#5C6BC0\",\n    \"14:15\": \"#5C6BC0\",\n    \"14:16\": \"#5C6BC0\",\n    \"14:17\": \"none\",\n    \"14:18\": \"none\",\n    \"14:19\": \"#5C6BC0\",\n    \"14:20\": \"#5C6BC0\",\n    \"14:21\": \"#5C6BC0\",\n    \"14:22\": \"#5C6BC0\",\n    \"14:23\": \"none\",\n    \"14:24\": \"none\",\n    \"14:25\": \"none\",\n    \"14:26\": \"none\",\n    \"14:27\": \"none\",\n    \"14:28\": \"none\",\n    \"14:29\": \"none\",\n    \"14:30\": \"none\",\n    \"14:31\": \"none\",\n    \"14:32\": \"none\",\n    \"14:33\": \"none\",\n    \"14:34\": \"none\",\n    \"14:35\": \"none\",\n    \"14:36\": \"none\",\n    \"14:37\": \"none\",\n    \"14:38\": \"none\",\n    \"14:39\": \"none\",\n    \"14:40\": \"none\",\n    \"14:41\": \"none\",\n    \"14:42\": \"none\",\n    \"14:43\": \"none\",\n    \"14:44\": \"none\",\n    \"14:45\": \"none\",\n    \"14:46\": \"none\",\n    \"15:0\": \"none\",\n    \"15:1\": \"none\",\n    \"15:2\": \"none\",\n    \"15:3\": \"none\",\n    \"15:4\": \"none\",\n    \"15:5\": \"none\",\n    \"15:6\": \"none\",\n    \"15:7\": \"none\",\n    \"15:8\": \"none\",\n    \"15:9\": \"#5C6BC0\",\n    \"15:10\": \"#5C6BC0\",\n    \"15:11\": \"#5C6BC0\",\n    \"15:12\": \"#5C6BC0\",\n    \"15:13\": \"#5C6BC0\",\n    \"15:14\": \"#5C6BC0\",\n    \"15:15\": \"#5C6BC0\",\n    \"15:16\": \"#5C6BC0\",\n    \"15:17\": \"none\",\n    \"15:18\": \"none\",\n    \"15:19\": \"#5C6BC0\",\n    \"15:20\": \"#5C6BC0\",\n    \"15:21\": \"#5C6BC0\",\n    \"15:22\": \"#5C6BC0\",\n    \"15:23\": \"none\",\n    \"15:24\": \"none\",\n    \"15:25\": \"none\",\n    \"15:26\": \"none\",\n    \"15:27\": \"none\",\n    \"15:28\": \"none\",\n    \"15:29\": \"none\",\n    \"15:30\": \"none\",\n    \"15:31\": \"none\",\n    \"15:32\": \"none\",\n    \"15:33\": \"none\",\n    \"15:34\": \"none\",\n    \"15:35\": \"none\",\n    \"15:36\": \"none\",\n    \"15:37\": \"none\",\n    \"15:38\": \"none\",\n    \"15:39\": \"none\",\n    \"15:40\": \"none\",\n    \"15:41\": \"none\",\n    \"15:42\": \"none\",\n    \"15:43\": \"none\",\n    \"15:44\": \"none\",\n    \"15:45\": \"none\",\n    \"15:46\": \"none\",\n    \"16:0\": \"none\",\n    \"16:1\": \"none\",\n    \"16:2\": \"none\",\n    \"16:3\": \"none\",\n    \"16:4\": \"none\",\n    \"16:5\": \"none\",\n    \"16:6\": \"none\",\n    \"16:7\": \"none\",\n    \"16:8\": \"none\",\n    \"16:9\": \"none\",\n    \"16:10\": \"none\",\n    \"16:11\": \"none\",\n    \"16:12\": \"none\",\n    \"16:13\": \"none\",\n    \"16:14\": \"none\",\n    \"16:15\": \"none\",\n    \"16:16\": \"none\",\n    \"16:17\": \"none\",\n    \"16:18\": \"none\",\n    \"16:19\": \"none\",\n    \"16:20\": \"none\",\n    \"16:21\": \"none\",\n    \"16:22\": \"none\",\n    \"16:23\": \"none\",\n    \"16:24\": \"none\",\n    \"16:25\": \"#66BB6A\",\n    \"16:26\": \"#66BB6A\",\n    \"16:27\": \"#2E7D32\",\n    \"16:28\": \"#2E7D32\",\n    \"16:29\": \"#2E7D32\",\n    \"16:30\": \"#2E7D32\",\n    \"16:31\": \"none\",\n    \"16:32\": \"none\",\n    \"16:33\": \"none\",\n    \"16:34\": \"none\",\n    \"16:35\": \"none\",\n    \"16:36\": \"none\",\n    \"16:37\": \"none\",\n    \"16:38\": \"none\",\n    \"16:39\": \"none\",\n    \"16:40\": \"none\",\n    \"16:41\": \"none\",\n    \"16:42\": \"none\",\n    \"16:43\": \"none\",\n    \"16:44\": \"none\",\n    \"16:45\": \"none\",\n    \"16:46\": \"none\",\n    \"17:0\": \"none\",\n    \"17:1\": \"none\",\n    \"17:2\": \"none\",\n    \"17:3\": \"none\",\n    \"17:4\": \"none\",\n    \"17:5\": \"none\",\n    \"17:6\": \"none\",\n    \"17:7\": \"none\",\n    \"17:8\": \"none\",\n    \"17:9\": \"none\",\n    \"17:10\": \"none\",\n    \"17:11\": \"none\",\n    \"17:12\": \"none\",\n    \"17:13\": \"none\",\n    \"17:14\": \"none\",\n    \"17:15\": \"none\",\n    \"17:16\": \"none\",\n    \"17:17\": \"none\",\n    \"17:18\": \"none\",\n    \"17:19\": \"none\",\n    \"17:20\": \"none\",\n    \"17:21\": \"none\",\n    \"17:22\": \"none\",\n    \"17:23\": \"none\",\n    \"17:24\": \"none\",\n    \"17:25\": \"#66BB6A\",\n    \"17:26\": \"#66BB6A\",\n    \"17:27\": \"#2E7D32\",\n    \"17:28\": \"#2E7D32\",\n    \"17:29\": \"#2E7D32\",\n    \"17:30\": \"#2E7D32\",\n    \"17:31\": \"none\",\n    \"17:32\": \"none\",\n    \"17:33\": \"none\",\n    \"17:34\": \"none\",\n    \"17:35\": \"none\",\n    \"17:36\": \"none\",\n    \"17:37\": \"none\",\n    \"17:38\": \"none\",\n    \"17:39\": \"none\",\n    \"17:40\": \"none\",\n    \"17:41\": \"none\",\n    \"17:42\": \"none\",\n    \"17:43\": \"none\",\n    \"17:44\": \"none\",\n    \"17:45\": \"none\",\n    \"17:46\": \"none\",\n    \"18:0\": \"none\",\n    \"18:1\": \"none\",\n    \"18:2\": \"none\",\n    \"18:3\": \"none\",\n    \"18:4\": \"none\",\n    \"18:5\": \"none\",\n    \"18:6\": \"none\",\n    \"18:7\": \"none\",\n    \"18:8\": \"none\",\n    \"18:9\": \"none\",\n    \"18:10\": \"none\",\n    \"18:11\": \"none\",\n    \"18:12\": \"none\",\n    \"18:13\": \"none\",\n    \"18:14\": \"none\",\n    \"18:15\": \"none\",\n    \"18:16\": \"none\",\n    \"18:17\": \"none\",\n    \"18:18\": \"none\",\n    \"18:19\": \"none\",\n    \"18:20\": \"none\",\n    \"18:21\": \"none\",\n    \"18:22\": \"none\",\n    \"18:23\": \"none\",\n    \"18:24\": \"none\",\n    \"18:25\": \"#66BB6A\",\n    \"18:26\": \"#66BB6A\",\n    \"18:27\": \"#2E7D32\",\n    \"18:28\": \"#2E7D32\",\n    \"18:29\": \"#2E7D32\",\n    \"18:30\": \"#2E7D32\",\n    \"18:31\": \"none\",\n    \"18:32\": \"none\",\n    \"18:33\": \"none\",\n    \"18:34\": \"none\",\n    \"18:35\": \"none\",\n    \"18:36\": \"none\",\n    \"18:37\": \"none\",\n    \"18:38\": \"none\",\n    \"18:39\": \"none\",\n    \"18:40\": \"none\",\n    \"18:41\": \"none\",\n    \"18:42\": \"none\",\n    \"18:43\": \"none\",\n    \"18:44\": \"none\",\n    \"18:45\": \"none\",\n    \"18:46\": \"none\",\n    \"19:0\": \"none\",\n    \"19:1\": \"none\",\n    \"19:2\": \"none\",\n    \"19:3\": \"none\",\n    \"19:4\": \"none\",\n    \"19:5\": \"none\",\n    \"19:6\": \"none\",\n    \"19:7\": \"none\",\n    \"19:8\": \"none\",\n    \"19:9\": \"none\",\n    \"19:10\": \"none\",\n    \"19:11\": \"none\",\n    \"19:12\": \"none\",\n    \"19:13\": \"none\",\n    \"19:14\": \"none\",\n    \"19:15\": \"none\",\n    \"19:16\": \"none\",\n    \"19:17\": \"none\",\n    \"19:18\": \"none\",\n    \"19:19\": \"none\",\n    \"19:20\": \"none\",\n    \"19:21\": \"none\",\n    \"19:22\": \"none\",\n    \"19:23\": \"none\",\n    \"19:24\": \"none\",\n    \"19:25\": \"#66BB6A\",\n    \"19:26\": \"#66BB6A\",\n    \"19:27\": \"#2E7D32\",\n    \"19:28\": \"#2E7D32\",\n    \"19:29\": \"#2E7D32\",\n    \"19:30\": \"#2E7D32\",\n    \"19:31\": \"none\",\n    \"19:32\": \"none\",\n    \"19:33\": \"none\",\n    \"19:34\": \"none\",\n    \"19:35\": \"none\",\n    \"19:36\": \"none\",\n    \"19:37\": \"none\",\n    \"19:38\": \"none\",\n    \"19:39\": \"none\",\n    \"19:40\": \"none\",\n    \"19:41\": \"none\",\n    \"19:42\": \"none\",\n    \"19:43\": \"none\",\n    \"19:44\": \"none\",\n    \"19:45\": \"none\",\n    \"19:46\": \"none\",\n    \"20:0\": \"none\",\n    \"20:1\": \"none\",\n    \"20:2\": \"none\",\n    \"20:3\": \"none\",\n    \"20:4\": \"none\",\n    \"20:5\": \"none\",\n    \"20:6\": \"none\",\n    \"20:7\": \"none\",\n    \"20:8\": \"none\",\n    \"20:9\": \"none\",\n    \"20:10\": \"none\",\n    \"20:11\": \"none\",\n    \"20:12\": \"none\",\n    \"20:13\": \"none\",\n    \"20:14\": \"none\",\n    \"20:15\": \"none\",\n    \"20:16\": \"none\",\n    \"20:17\": \"none\",\n    \"20:18\": \"none\",\n    \"20:19\": \"none\",\n    \"20:20\": \"none\",\n    \"20:21\": \"none\",\n    \"20:22\": \"none\",\n    \"20:23\": \"none\",\n    \"20:24\": \"none\",\n    \"20:25\": \"none\",\n    \"20:26\": \"none\",\n    \"20:27\": \"none\",\n    \"20:28\": \"none\",\n    \"20:29\": \"none\",\n    \"20:30\": \"none\",\n    \"20:31\": \"none\",\n    \"20:32\": \"none\",\n    \"20:33\": \"none\",\n    \"20:34\": \"none\",\n    \"20:35\": \"none\",\n    \"20:36\": \"none\",\n    \"20:37\": \"none\",\n    \"20:38\": \"none\",\n    \"20:39\": \"none\",\n    \"20:40\": \"none\",\n    \"20:41\": \"none\",\n    \"20:42\": \"none\",\n    \"20:43\": \"none\",\n    \"20:44\": \"none\",\n    \"20:45\": \"none\",\n    \"20:46\": \"none\",\n    \"21:0\": \"none\",\n    \"21:1\": \"none\",\n    \"21:2\": \"none\",\n    \"21:3\": \"none\",\n    \"21:4\": \"none\",\n    \"21:5\": \"none\",\n    \"21:6\": \"none\",\n    \"21:7\": \"none\",\n    \"21:8\": \"none\",\n    \"21:9\": \"none\",\n    \"21:10\": \"none\",\n    \"21:11\": \"none\",\n    \"21:12\": \"none\",\n    \"21:13\": \"none\",\n    \"21:14\": \"none\",\n    \"21:15\": \"none\",\n    \"21:16\": \"none\",\n    \"21:17\": \"none\",\n    \"21:18\": \"none\",\n    \"21:19\": \"none\",\n    \"21:20\": \"none\",\n    \"21:21\": \"none\",\n    \"21:22\": \"none\",\n    \"21:23\": \"none\",\n    \"21:24\": \"none\",\n    \"21:25\": \"none\",\n    \"21:26\": \"none\",\n    \"21:27\": \"none\",\n    \"21:28\": \"none\",\n    \"21:29\": \"none\",\n    \"21:30\": \"none\",\n    \"21:31\": \"none\",\n    \"21:32\": \"none\",\n    \"21:33\": \"none\",\n    \"21:34\": \"none\",\n    \"21:35\": \"none\",\n    \"21:36\": \"none\",\n    \"21:37\": \"none\",\n    \"21:38\": \"none\",\n    \"21:39\": \"none\",\n    \"21:40\": \"none\",\n    \"21:41\": \"none\",\n    \"21:42\": \"none\",\n    \"21:43\": \"none\",\n    \"21:44\": \"none\",\n    \"21:45\": \"none\",\n    \"21:46\": \"none\",\n    \"22:0\": \"none\",\n    \"22:1\": \"none\",\n    \"22:2\": \"none\",\n    \"22:3\": \"none\",\n    \"22:4\": \"none\",\n    \"22:5\": \"none\",\n    \"22:6\": \"none\",\n    \"22:7\": \"none\",\n    \"22:8\": \"none\",\n    \"22:9\": \"none\",\n    \"22:10\": \"none\",\n    \"22:11\": \"none\",\n    \"22:12\": \"none\",\n    \"22:13\": \"none\",\n    \"22:14\": \"none\",\n    \"22:15\": \"none\",\n    \"22:16\": \"none\",\n    \"22:17\": \"none\",\n    \"22:18\": \"none\",\n    \"22:19\": \"none\",\n    \"22:20\": \"none\",\n    \"22:21\": \"none\",\n    \"22:22\": \"none\",\n    \"22:23\": \"none\",\n    \"22:24\": \"none\",\n    \"22:25\": \"none\",\n    \"22:26\": \"none\",\n    \"22:27\": \"none\",\n    \"22:28\": \"none\",\n    \"22:29\": \"none\",\n    \"22:30\": \"none\",\n    \"22:31\": \"none\",\n    \"22:32\": \"none\",\n    \"22:33\": \"none\",\n    \"22:34\": \"none\",\n    \"22:35\": \"none\",\n    \"22:36\": \"none\",\n    \"22:37\": \"none\",\n    \"22:38\": \"none\",\n    \"22:39\": \"none\",\n    \"22:40\": \"none\",\n    \"22:41\": \"none\",\n    \"22:42\": \"none\",\n    \"22:43\": \"none\",\n    \"22:44\": \"none\",\n    \"22:45\": \"none\",\n    \"22:46\": \"none\",\n    \"23:0\": \"none\",\n    \"23:1\": \"none\",\n    \"23:2\": \"none\",\n    \"23:3\": \"none\",\n    \"23:4\": \"none\",\n    \"23:5\": \"none\",\n    \"23:6\": \"none\",\n    \"23:7\": \"none\",\n    \"23:8\": \"none\",\n    \"23:9\": \"none\",\n    \"23:10\": \"none\",\n    \"23:11\": \"none\",\n    \"23:12\": \"none\",\n    \"23:13\": \"none\",\n    \"23:14\": \"none\",\n    \"23:15\": \"none\",\n    \"23:16\": \"none\",\n    \"23:17\": \"none\",\n    \"23:18\": \"none\",\n    \"23:19\": \"none\",\n    \"23:20\": \"none\",\n    \"23:21\": \"none\",\n    \"23:22\": \"none\",\n    \"23:23\": \"none\",\n    \"23:24\": \"none\",\n    \"23:25\": \"none\",\n    \"23:26\": \"none\",\n    \"23:27\": \"none\",\n    \"23:28\": \"none\",\n    \"23:29\": \"none\",\n    \"23:30\": \"none\",\n    \"23:31\": \"none\",\n    \"23:32\": \"none\",\n    \"23:33\": \"none\",\n    \"23:34\": \"none\",\n    \"23:35\": \"none\",\n    \"23:36\": \"none\",\n    \"23:37\": \"none\",\n    \"23:38\": \"none\",\n    \"23:39\": \"none\",\n    \"23:40\": \"none\",\n    \"23:41\": \"none\",\n    \"23:42\": \"none\",\n    \"23:43\": \"none\",\n    \"23:44\": \"none\",\n    \"23:45\": \"none\",\n    \"23:46\": \"none\",\n    \"24:0\": \"none\",\n    \"24:1\": \"none\",\n    \"24:2\": \"none\",\n    \"24:3\": \"none\",\n    \"24:4\": \"none\",\n    \"24:5\": \"none\",\n    \"24:6\": \"none\",\n    \"24:7\": \"none\",\n    \"24:8\": \"none\",\n    \"24:9\": \"none\",\n    \"24:10\": \"none\",\n    \"24:11\": \"none\",\n    \"24:12\": \"none\",\n    \"24:13\": \"none\",\n    \"24:14\": \"none\",\n    \"24:15\": \"none\",\n    \"24:16\": \"none\",\n    \"24:17\": \"none\",\n    \"24:18\": \"none\",\n    \"24:19\": \"none\",\n    \"24:20\": \"none\",\n    \"24:21\": \"none\",\n    \"24:22\": \"none\",\n    \"24:23\": \"none\",\n    \"24:24\": \"none\",\n    \"24:25\": \"none\",\n    \"24:26\": \"none\",\n    \"24:27\": \"none\",\n    \"24:28\": \"none\",\n    \"24:29\": \"none\",\n    \"24:30\": \"none\",\n    \"24:31\": \"none\",\n    \"24:32\": \"none\",\n    \"24:33\": \"none\",\n    \"24:34\": \"none\",\n    \"24:35\": \"none\",\n    \"24:36\": \"none\",\n    \"24:37\": \"none\",\n    \"24:38\": \"none\",\n    \"24:39\": \"none\",\n    \"24:40\": \"none\",\n    \"24:41\": \"none\",\n    \"24:42\": \"none\",\n    \"24:43\": \"none\",\n    \"24:44\": \"none\",\n    \"24:45\": \"none\",\n    \"24:46\": \"none\",\n    \"25:0\": \"none\",\n    \"25:1\": \"none\",\n    \"25:2\": \"none\",\n    \"25:3\": \"none\",\n    \"25:4\": \"none\",\n    \"25:5\": \"none\",\n    \"25:6\": \"none\",\n    \"25:7\": \"none\",\n    \"25:8\": \"none\",\n    \"25:9\": \"none\",\n    \"25:10\": \"none\",\n    \"25:11\": \"none\",\n    \"25:12\": \"none\",\n    \"25:13\": \"none\",\n    \"25:14\": \"none\",\n    \"25:15\": \"none\",\n    \"25:16\": \"none\",\n    \"25:17\": \"none\",\n    \"25:18\": \"none\",\n    \"25:19\": \"none\",\n    \"25:20\": \"none\",\n    \"25:21\": \"none\",\n    \"25:22\": \"none\",\n    \"25:23\": \"none\",\n    \"25:24\": \"none\",\n    \"25:25\": \"none\",\n    \"25:26\": \"none\",\n    \"25:27\": \"none\",\n    \"25:28\": \"none\",\n    \"25:29\": \"none\",\n    \"25:30\": \"none\",\n    \"25:31\": \"none\",\n    \"25:32\": \"none\",\n    \"25:33\": \"none\",\n    \"25:34\": \"none\",\n    \"25:35\": \"none\",\n    \"25:36\": \"none\",\n    \"25:37\": \"none\",\n    \"25:38\": \"none\",\n    \"25:39\": \"none\",\n    \"25:40\": \"none\",\n    \"25:41\": \"none\",\n    \"25:42\": \"none\",\n    \"25:43\": \"none\",\n    \"25:44\": \"none\",\n    \"25:45\": \"none\",\n    \"25:46\": \"none\",\n    \"26:0\": \"none\",\n    \"26:1\": \"none\",\n    \"26:2\": \"none\",\n    \"26:3\": \"none\",\n    \"26:4\": \"none\",\n    \"26:5\": \"none\",\n    \"26:6\": \"none\",\n    \"26:7\": \"none\",\n    \"26:8\": \"none\",\n    \"26:9\": \"none\",\n    \"26:10\": \"none\",\n    \"26:11\": \"none\",\n    \"26:12\": \"none\",\n    \"26:13\": \"none\",\n    \"26:14\": \"none\",\n    \"26:15\": \"none\",\n    \"26:16\": \"none\",\n    \"26:17\": \"none\",\n    \"26:18\": \"none\",\n    \"26:19\": \"none\",\n    \"26:20\": \"none\",\n    \"26:21\": \"none\",\n    \"26:22\": \"none\",\n    \"26:23\": \"none\",\n    \"26:24\": \"none\",\n    \"26:25\": \"none\",\n    \"26:26\": \"none\",\n    \"26:27\": \"none\",\n    \"26:28\": \"none\",\n    \"26:29\": \"none\",\n    \"26:30\": \"none\",\n    \"26:31\": \"none\",\n    \"26:32\": \"none\",\n    \"26:33\": \"none\",\n    \"26:34\": \"none\",\n    \"26:35\": \"none\",\n    \"26:36\": \"none\",\n    \"26:37\": \"none\",\n    \"26:38\": \"none\",\n    \"26:39\": \"none\",\n    \"26:40\": \"none\",\n    \"26:41\": \"none\",\n    \"26:42\": \"none\",\n    \"26:43\": \"none\",\n    \"26:44\": \"none\",\n    \"26:45\": \"none\",\n    \"26:46\": \"none\"\n  }\n}"},"relativePath":"band_parts/data/they_wont_go.json"},{"fields":{"contents":"import React from \"react\"\nimport * as d3 from \"d3\"\n\nconst delay = 500\nconst fadeInText  = () => d3.select(\"#bfs .text\").transition().duration(delay).style(\"opacity\", 1)\nconst fadeOutText = () => d3.select(\"#bfs .text\").transition().duration(delay).style(\"opacity\", 0)\n\n// moving these functions out of graphUtils for now\nfunction reciprocateEdges(edges) {\n  let result = []\n  for (const {start, end} of edges) {\n    // could create duplicate edges\n    result.push({start: start, end: end})\n    result.push({start: end, end :start})\n  }\n  return result\n}\n\nfunction makeAdjacencyList(edges, nodes) {\n  edges = reciprocateEdges(edges)\n  let adjacencyList = new Map()\n  for (const {start, end} of edges) {\n    if (adjacencyList.has(start)) {\n      adjacencyList.get(start).push(end)\n    } else {\n      adjacencyList.set(start, [end])\n    }\n  }\n  for (let i = 0; i < nodes.length; i++) {\n    if (!adjacencyList.has(i)) adjacencyList.set(i, [])\n  }\n  return adjacencyList\n}\n\n// takes start and end nodes and returns [path_exists, path]\nfunction bfs(start, end, edges, nodes, directed) {\n  if (start === end) return [true, [start]]\n\n  const adjacencyList = makeAdjacencyList(edges, nodes, directed)\n\n  let q = [[start]]\n  let seen = new Set([start])\n\n  while (!(q.length === 0)) {\n    const q_length = q.length\n    for (let i = 0; i < q_length; i++) {\n      const path = q[i]\n      const curr_node = path[path.length - 1]\n      for (const neighbor of adjacencyList.get(curr_node)) {\n        if (neighbor === end) {\n          return [true, path.concat(neighbor)]\n        }\n        if (!seen.has(neighbor)) {\n          seen.add(neighbor)\n          q.push(path.concat(neighbor))\n        }\n      }\n    }\n    q = q.slice(q_length)\n  }\n  return [false, []]\n}\n\nfunction highlightPath(opts) {\n  const defaultOpts = {\n    onAnimationFinish: () => null,\n    transitionLength: 500,\n    delayUnit: 100,\n  }\n  const { path, onAnimationFinish, transitionLength, delayUnit } = {...defaultOpts, ...opts}\n\n  d3.selectAll(\"g.node, g.edge\").transition().duration(300).style(\"opacity\", 0.3)\n\n  d3.selectAll(\"g.node\")\n    .each((_, i, nodes) => {\n      if (path.includes(i)) {\n        d3.select(nodes[i])\n          .transition()\n          .duration(transitionLength)\n          .delay(path.indexOf(i) * 2 * delayUnit + 3 * delayUnit)\n            .style(\"opacity\", 1)\n      }\n    })\n\n  const undirectedEdgeMembershipFn = (d) => {\n    for (let i = 0; i < path.length - 1; i++) {\n      if (path[i] === d.start && path[i + 1] === d.end ||\n          path[i] === d.end && path[i + 1] === d.start) return true\n    }\n    return false\n  }\n\n  d3.selectAll(\"g.edge\")\n    .each((d, i, nodes) => {\n      if (undirectedEdgeMembershipFn(d)) {\n        d3.select(nodes[i])\n          .transition()\n          .duration(transitionLength)\n          .delay((d) => {\n            const edgeIndexInPath = Math.min(path.indexOf(d.start), path.indexOf(d.end))\n            return (edgeIndexInPath * 2 + 1) * delayUnit + 3 * delayUnit\n          })\n            .style(\"opacity\", 1)\n      }\n    })\n\n  const animationLength = (path.length * 2 + 3) * delayUnit\n  // TODO: this should get cancelled on unmount\n  setTimeout(onAnimationFinish, animationLength)\n}\n\n\nclass BfsUI extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      searchStart: null,\n      searchEnd: null,\n    }\n  }\n\n  componentDidMount() {\n    const handleNodeClick = (_, i, nodes) => {\n      console.log(\"bfs node click\")\n\n      // this is a pretty clumsy way to do animations but it's simple enough in this case.\n      if (this.state.searchStart == null) {\n        fadeOutText()\n        setTimeout(\n          () => {\n            this.setState({searchStart: i})\n            fadeInText()\n          },\n          delay\n        )\n      } else if (this.state.searchEnd == null) {\n        fadeOutText()\n        setTimeout(\n          // fading the text back in is handled in a callback after the animation is finished\n          () => this.setState({searchEnd: i}),\n          delay\n        )\n      }\n      console.log(nodes[i])\n      d3.select(nodes[i]).select(\"circle\").style(\"fill\", \"red\")\n    }\n\n    this.props.setNodeClickHandler(handleNodeClick)\n  }\n\n  componentWillUnmount() {\n    this.props.resetHighlighting()\n  }\n\n  render() {\n    const reset = () => {\n      this.setState({searchStart: null, searchEnd: null})\n      this.props.resetHighlighting()\n    }\n\n    let displayText\n    let onTextClick\n    let textClass = \"text\"\n    if (this.state.searchStart === null) {\n      displayText = \"Pick start\"\n    } else if (this.state.searchEnd === null) {\n      displayText = \"Pick end\"\n    } else {\n      const [_, path] = bfs(this.state.searchStart,\n                                       this.state.searchEnd,\n                                       this.props.edges,\n                                       this.props.nodes,\n                                       false)\n      highlightPath({\n        path: path,\n        onAnimationFinish: () => setTimeout(fadeInText, 500),\n        directed: false,\n      })\n      displayText = \"Reset\"\n      onTextClick = reset\n      textClass += \" reset-button\"\n    }\n\n    return (\n      <div id=\"bfs\" className=\"algorithm-ui\">\n        <h2>Breadth First Search</h2>\n        <p\n          onClick={onTextClick}\n          className={textClass}\n        >{displayText}</p>\n      </div>\n    )\n  }\n}\n\nexport default BfsUI\n"},"relativePath":"graph_builder/algorithm_uis/bfs_ui.jsx"},{"fields":{"contents":"import React from \"react\"\nimport * as d3 from \"d3\"\n\nconst delay = 500\nconst colors = d3[\"schemeCategory10\"]\n\n// TODO: share these\nfunction reciprocateEdges(edges) {\n  let result = []\n  for (const {start, end} of edges) {\n    // could create duplicate edges\n    result.push({start: start, end: end})\n    result.push({start: end, end :start})\n  }\n  return result\n}\n\nfunction makeAdjacencyList(edges, nodes) {\n  edges = reciprocateEdges(edges)\n  let adjacencyList = new Map()\n  for (const {start, end} of edges) {\n    if (adjacencyList.has(start)) {\n      adjacencyList.get(start).push(end)\n    } else {\n      adjacencyList.set(start, [end])\n    }\n  }\n  for (let i = 0; i < nodes.length; i++) {\n    if (!adjacencyList.has(i)) adjacencyList.set(i, [])\n  }\n  return adjacencyList\n}\n\nclass ConnectedComponentsUI extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currStep: 1,\n      vars: { // a namespace for variables used in the algorithm itself\n        currNode: 0,\n        seen: new Set(),\n        numComponents: 0,\n      },\n    }\n\n    // this.setUpVars = this.setUpVars.bind(this)\n    this.setVars = this.setVars.bind(this)\n    this.stepOne = this.stepOne.bind(this)\n    this.stepTwo = this.stepTwo.bind(this)\n  }\n\n  // need this function because setState doesn't do a deep merge...\n  setVars(vars, callback=null) {\n    this.setState(oldState => ({vars: {...oldState.vars, ...vars}}), callback)\n  }\n\n  resetVars() {\n    this.setVars({\n      currNode: 0,\n      seen: new Set(),\n      numComponents: 0,\n    })\n  }\n\n  stepOne() {\n    const t = d3.transition().delay(delay)\n    d3.selectAll(\"g.node > circle\").transition(t).attr(\"r\", this.props.nodeOpts.radius)\n    // TODO: calling advanceStep too fast triggers a D3 concurrent animation bug. Could either\n    // figure out how to fix this or debounce advanceStep.\n    let nextNode\n    if (this.state.vars.currNode == null) {\n      nextNode = 0\n    } else {\n      for (let i = 0; i < this.props.nodes.length; i++) {\n        if (!this.state.vars.seen.has(i)) {\n          nextNode = i\n          break\n        }\n      }\n      if (nextNode == undefined) {\n        console.log(\"finished\")\n        return\n      }\n    }\n\n    this.setState({currStep: 2})\n    this.setVars(\n      {currNode: nextNode},\n      () => d3.selectAll(\"g.node > circle\")\n              .each((_, i, nodes) => {\n                if (i === this.state.vars.currNode) {\n                  d3.select(nodes[i])\n                    .transition(t)\n                    .style(\"fill\", colors[this.state.vars.numComponents])\n                    .attr(\"r\", this.props.nodeOpts.radius + 4)\n                }\n              })\n    )\n  }\n\n  stepTwo() {\n    const t = d3.transition().delay(delay)\n    const start = this.state.vars.currNode\n    let group = [start]\n    let seen = new Set(this.state.vars.seen)\n    seen.add(start)\n    let q = [start]\n\n    while(!(q.length === 0)) {\n      const q_length = q.length\n      for (let i = 0; i < q_length; i++) {\n        const curr = q[i]\n        for (const neighbor of this.state.vars.adjacencyList.get(curr)) {\n          if (!seen.has(neighbor)) {\n            seen.add(neighbor)\n            group.push(neighbor)\n            q.push(neighbor)\n          }\n        }\n      }\n      q = q.slice(q_length)\n    }\n\n    d3.selectAll(\"g.node > circle\")\n      .each((_, i, nodes) => {\n        if (group.includes(i)) {\n          d3.select(nodes[i])\n            .transition(t)\n            .delay(group.indexOf(i) * 100)\n            .style(\"fill\", colors[this.state.vars.numComponents])\n            .attr(\"r\", this.props.nodeOpts.radius + 4)\n        }\n      })\n    this.setState({currStep: 1})\n    this.setVars({seen: seen, numComponents: this.state.vars.numComponents + 1})\n  }\n\n  componentDidMount() {\n    // this is safe to do if we assume this component will always unmount when editing the graph\n    this.setVars({adjacencyList: makeAdjacencyList(this.props.edges, this.props.nodes)})\n  }\n\n  render() {\n    const reset = () => {\n      this.props.resetHighlighting()\n      this.setState({currStep: 1})\n      this.resetVars()\n    }\n\n    let stepsText = [\n      \"for each node that hasn't been visited:\",\n      \"  mark all connected nodes\",\n    ]\n    const stepsFunctions = [this.stepOne, this.stepTwo]\n\n    const nSteps = stepsText.length\n    if (this.state.currStep != null) {\n      stepsText[this.state.currStep - 1] += ' <'\n    }\n\n    const advanceStep = () => {\n      // TODO: need to end when we run out of nodes\n      stepsFunctions[this.state.currStep - 1].call()\n    }\n\n    return (\n      <div id=\"connected-components\" className=\"algorithm-ui\">\n        {/* <p className=\"text\" onClick={reset}>Reset</p> */}\n        <button onClick={advanceStep}>Next Step</button>\n        <button onClick={() => this.props.setMode(null)}>Reset</button>\n        <pre className=\"steps\">\n          {stepsText.join(\"\\n\")}\n        </pre>\n      </div>\n    )\n  }\n\n  componentWillUnmount() {\n    this.props.resetHighlighting()\n  }\n}\n\nexport default ConnectedComponentsUI\n"},"relativePath":"graph_builder/algorithm_uis/connected_components_ui.jsx"},{"fields":{"contents":"import React from \"react\"\nimport * as d3 from \"d3\"\n\nfunction reciprocateEdges(edges) {\n  let result = []\n  for (const {start, end} of edges) {\n    // could create duplicate edges\n    result.push({start: start, end: end})\n    result.push({start: end, end :start})\n  }\n  return result\n}\n\n// TODO: misleadingly named\nfunction makeAdjacencyList(edges, nodes) {\n  edges = reciprocateEdges(edges)\n  let adjacencyList = new Map()\n  for (const {start, end} of edges) {\n    if (adjacencyList.has(start)) {\n      adjacencyList.get(start).push(end)\n    } else {\n      adjacencyList.set(start, [end])\n    }\n  }\n  for (let i = 0; i < nodes.length; i++) {\n    if (!adjacencyList.has(i)) adjacencyList.set(i, [])\n  }\n  return adjacencyList\n}\n\nconst computeInDegrees = (edges) => {\n  let nodeToInDegree = new Map()\n\n  const incInDegree = (i) => {\n    if (nodeToInDegree.has(i)) {\n      nodeToInDegree.set(i, (nodeToInDegree.get(i)) + 1)\n    } else {\n      nodeToInDegree.set(i, 1)\n    }\n  }\n\n  for (const { start, end } of edges) {\n    incInDegree(start)\n    incInDegree(end)\n  }\n\n  console.log(\"in degrees:\", nodeToInDegree)\n  return nodeToInDegree\n}\n\n// using the Welsh Powell algorithm\n// https://www.geeksforgeeks.org/welsh-powell-graph-colouring-algorithm/\nconst computeColoring = (edges, nodes) => {\n  const nodeToInDegree = computeInDegrees(edges)\n  let vertexes = [] // [[node, inDegree]]\n  for (const [node, inDegree] of nodeToInDegree) {\n    vertexes.push({node: node, inDegree: inDegree})\n  }\n  vertexes.sort((e1, e2) => e2.inDegree - e1.inDegree)\n  console.log(vertexes)\n\n  const adjacencyList = makeAdjacencyList(edges, nodes)\n\n  let nodeToColor = new Map() // node and color both ints\n\n  const neighborsNodeWithColor = (node, color) => {\n    for (const neighbor of adjacencyList.get(node)) {\n      if (nodeToColor.get(neighbor) === color) return true\n    }\n    return false\n  }\n\n  let color = 0\n\n  for (let i = 0; i < nodes.length; i++) {\n    if (!nodeToColor.has(i)) {\n      nodeToColor.set(i, color)\n\n      if (i < nodes.length - 1) {\n        for (let j = i + 1; j < nodes.length; j++) {\n          if (!neighborsNodeWithColor(j, color)) {\n            nodeToColor.set(j, color)\n          }\n        }\n      }\n      color++\n    }\n  }\n\n  return nodeToColor\n}\n\nclass GraphColoringUI extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      highlighted: false,\n    }\n    this.highlightNodes = this.highlightNodes.bind(this)\n    this.resetHighlighting = this.resetHighlighting.bind(this)\n  }\n\n  highlightNodes(nodeToColor) {\n    const colors = d3[\"schemeCategory10\"]\n    d3.selectAll(\"g.node > circle\")\n      .transition().duration(500)\n        .style(\"fill\", (_, i) => colors[nodeToColor.get(i)])\n    this.setState({highlighted: true})\n  }\n\n  resetHighlighting() {\n    this.props.resetHighlighting()\n    this.setState({highlighted: false})\n  }\n\n  componentWillUnmount() {\n    this.resetHighlighting()\n  }\n\n  render() {\n    const colorGraph = () => {\n      const nodeToColor = computeColoring(this.props.edges, this.props.nodes)\n      this.highlightNodes(nodeToColor)\n    }\n\n    return (\n      <div id=\"graph-coloring\" className=\"algorithm-ui\">\n        <h2>Graph Coloring</h2>\n        {this.state.highlighted ?\n          <p className=\"text\" onClick={this.resetHighlighting}>Reset</p>\n          :\n          <p className=\"text\" onClick={colorGraph}>Color Graph</p>\n        }\n      </div>\n    )\n  }\n}\n\nexport default GraphColoringUI\n"},"relativePath":"graph_builder/algorithm_uis/graph_coloring_ui.jsx"},{"fields":{"contents":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"45\" height=\"45\">\n  <g style=\"fill:none; fill-opacity:1; fill-rule:evenodd; stroke:#000000; stroke-width:1.5; strokeLinecap:round;stroke-linejoin:round;stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\">\n    <path d=\"M 22.5,11.63 L 22.5,6\" style=\"fill:none; stroke:#000000; stroke-linejoin:miter;\" id=\"path6570\"/>\n    <path d=\"M 22.5,25 C 22.5,25 27,17.5 25.5,14.5 C 25.5,14.5 24.5,12 22.5,12 C 20.5,12 19.5,14.5 19.5,14.5 C 18,17.5 22.5,25 22.5,25\" style=\"fill:#000000;fill-opacity:1; strokeLinecap:butt; stroke-linejoin:miter;\"/>\n    <path d=\"M 12.5,37 C 18,40.5 27,40.5 32.5,37 L 32.5,30 C 32.5,30 41.5,25.5 38.5,19.5 C 34.5,13 25,16 22.5,23.5 L 22.5,27 L 22.5,23.5 C 20,16 10.5,13 6.5,19.5 C 3.5,25.5 12.5,30 12.5,30 L 12.5,37\" style=\"fill:#000000; stroke:#000000;\"/>\n    <path d=\"M 20,8 L 25,8\" style=\"fill:none; stroke:#000000; stroke-linejoin:miter;\"/>\n    <path d=\"M 32,29.5 C 32,29.5 40.5,25.5 38.03,19.85 C 34.15,14 25,18 22.5,24.5 L 22.5,26.6 L 22.5,24.5 C 20,18 10.85,14 6.97,19.85 C 4.5,25.5 13,29.5 13,29.5\" style=\"fill:none; stroke:#ffffff;\"/>\n    <path d=\"M 12.5,30 C 18,27 27,27 32.5,30 M 12.5,33.5 C 18,30.5 27,30.5 32.5,33.5 M 12.5,37 C 18,34 27,34 32.5,37\" style=\"fill:none; stroke:#ffffff;\"/>\n  </g>\n</svg>\n"},"relativePath":"one_d_chess/icons/black_king.svg"},{"fields":{"contents":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"45\" height=\"45\">\n  <g style=\"opacity:1; fill:none; fill-opacity:1; fill-rule:evenodd; stroke:#000000; stroke-width:1.5; strokeLinecap:round;stroke-linejoin:round;stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\">\n    <path\n      d=\"M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18\"\n      style=\"fill:#000000; stroke:#000000;\" />\n    <path\n      d=\"M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34 11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30 5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506 13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008 21,7 C 22,7 22,10 22,10\"\n      style=\"fill:#000000; stroke:#000000;\" />\n    <path\n      d=\"M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\"\n      style=\"fill:#ffffff; stroke:#ffffff;\" />\n    <path\n      d=\"M 15 15.5 A 0.5 1.5 0 1 1  14,15.5 A 0.5 1.5 0 1 1  15 15.5 z\"\n      transform=\"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\"\n      style=\"fill:#ffffff; stroke:#ffffff;\" />\n    <path\n      d=\"M 24.55,10.4 L 24.1,11.85 L 24.6,12 C 27.75,13 30.25,14.49 32.5,18.75 C 34.75,23.01 35.75,29.06 35.25,39 L 35.2,39.5 L 37.45,39.5 L 37.5,39 C 38,28.94 36.62,22.15 34.25,17.66 C 31.88,13.17 28.46,11.02 25.06,10.5 L 24.55,10.4 z \"\n      style=\"fill:#ffffff; stroke:none;\" />\n  </g>\n</svg>\n"},"relativePath":"one_d_chess/icons/black_knight.svg"},{"fields":{"contents":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"45\" height=\"45\">\n  <g style=\"opacity:1; fill:#000000; fill-opacity:1; fill-rule:evenodd; stroke:#000000; stroke-width:1.5; strokeLinecap:round;stroke-linejoin:round;stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\">\n    <path\n      d=\"M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z \"\n      style=\"strokeLinecap:butt;\" />\n    <path\n      d=\"M 12.5,32 L 14,29.5 L 31,29.5 L 32.5,32 L 12.5,32 z \"\n      style=\"strokeLinecap:butt;\" />\n    <path\n      d=\"M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z \"\n      style=\"strokeLinecap:butt;\" />\n    <path\n      d=\"M 14,29.5 L 14,16.5 L 31,16.5 L 31,29.5 L 14,29.5 z \"\n      style=\"strokeLinecap:butt;stroke-linejoin:miter;\" />\n    <path\n      d=\"M 14,16.5 L 11,14 L 34,14 L 31,16.5 L 14,16.5 z \"\n      style=\"strokeLinecap:butt;\" />\n    <path\n      d=\"M 11,14 L 11,9 L 15,9 L 15,11 L 20,11 L 20,9 L 25,9 L 25,11 L 30,11 L 30,9 L 34,9 L 34,14 L 11,14 z \"\n      style=\"strokeLinecap:butt;\" />\n    <path\n      d=\"M 12,35.5 L 33,35.5 L 33,35.5\"\n      style=\"fill:none; stroke:#ffffff; stroke-width:1; stroke-linejoin:miter;\" />\n    <path\n      d=\"M 13,31.5 L 32,31.5\"\n      style=\"fill:none; stroke:#ffffff; stroke-width:1; stroke-linejoin:miter;\" />\n    <path\n      d=\"M 14,29.5 L 31,29.5\"\n      style=\"fill:none; stroke:#ffffff; stroke-width:1; stroke-linejoin:miter;\" />\n    <path\n      d=\"M 14,16.5 L 31,16.5\"\n      style=\"fill:none; stroke:#ffffff; stroke-width:1; stroke-linejoin:miter;\" />\n    <path\n      d=\"M 11,14 L 34,14\"\n      style=\"fill:none; stroke:#ffffff; stroke-width:1; stroke-linejoin:miter;\" />\n  </g>\n</svg>\n"},"relativePath":"one_d_chess/icons/black_rook.svg"},{"fields":{"contents":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"45\" height=\"45\">\n  <g style=\"fill:none; fill-opacity:1; fill-rule:evenodd; stroke:#000000; stroke-width:1.5; strokeLinecap:round;stroke-linejoin:round;stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\">\n    <path d=\"M 22.5,11.63 L 22.5,6\" style=\"fill:none; stroke:#000000; stroke-linejoin:miter;\"/>\n    <path d=\"M 20,8 L 25,8\" style=\"fill:none; stroke:#000000; stroke-linejoin:miter;\"/>\n    <path d=\"M 22.5,25 C 22.5,25 27,17.5 25.5,14.5 C 25.5,14.5 24.5,12 22.5,12 C 20.5,12 19.5,14.5 19.5,14.5 C 18,17.5 22.5,25 22.5,25\" style=\"fill:#ffffff; stroke:#000000; strokeLinecap:butt; stroke-linejoin:miter;\"/>\n    <path d=\"M 12.5,37 C 18,40.5 27,40.5 32.5,37 L 32.5,30 C 32.5,30 41.5,25.5 38.5,19.5 C 34.5,13 25,16 22.5,23.5 L 22.5,27 L 22.5,23.5 C 20,16 10.5,13 6.5,19.5 C 3.5,25.5 12.5,30 12.5,30 L 12.5,37\" style=\"fill:#ffffff; stroke:#000000;\"/>\n    <path d=\"M 12.5,30 C 18,27 27,27 32.5,30\" style=\"fill:none; stroke:#000000;\"/>\n    <path d=\"M 12.5,33.5 C 18,30.5 27,30.5 32.5,33.5\" style=\"fill:none; stroke:#000000;\"/>\n    <path d=\"M 12.5,37 C 18,34 27,34 32.5,37\" style=\"fill:none; stroke:#000000;\"/>\n  </g>\n</svg>\n"},"relativePath":"one_d_chess/icons/white_king.svg"},{"fields":{"contents":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"45\" height=\"45\">\n  <g style=\"opacity:1; fill:none; fill-opacity:1; fill-rule:evenodd; stroke:#000000; stroke-width:1.5; strokeLinecap:round;stroke-linejoin:round;stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\">\n    <path\n      d=\"M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18\"\n      style=\"fill:#ffffff; stroke:#000000;\" />\n    <path\n      d=\"M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34 11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30 5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506 13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008 21,7 C 22,7 22,10 22,10\"\n      style=\"fill:#ffffff; stroke:#000000;\" />\n    <path\n      d=\"M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\"\n      style=\"fill:#000000; stroke:#000000;\" />\n    <path\n      d=\"M 15 15.5 A 0.5 1.5 0 1 1  14,15.5 A 0.5 1.5 0 1 1  15 15.5 z\"\n      transform=\"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\"\n      style=\"fill:#000000; stroke:#000000;\" />\n  </g>\n</svg>\n"},"relativePath":"one_d_chess/icons/white_knight.svg"},{"fields":{"contents":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"45\" height=\"45\">\n  <g style=\"opacity:1; fill:#ffffff; fill-opacity:1; fill-rule:evenodd; stroke:#000000; stroke-width:1.5; strokeLinecap:round;stroke-linejoin:round;stroke-miterlimit:4; stroke-dasharray:none; stroke-opacity:1;\">\n    <path\n      d=\"M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z \"\n      style=\"strokeLinecap:butt;\" />\n    <path\n      d=\"M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z \"\n      style=\"strokeLinecap:butt;\" />\n    <path\n      d=\"M 11,14 L 11,9 L 15,9 L 15,11 L 20,11 L 20,9 L 25,9 L 25,11 L 30,11 L 30,9 L 34,9 L 34,14\"\n      style=\"strokeLinecap:butt;\" />\n    <path\n      d=\"M 34,14 L 31,17 L 14,17 L 11,14\" />\n    <path\n      d=\"M 31,17 L 31,29.5 L 14,29.5 L 14,17\"\n      style=\"strokeLinecap:butt; stroke-linejoin:miter;\" />\n    <path\n      d=\"M 31,29.5 L 32.5,32 L 12.5,32 L 14,29.5\" />\n    <path\n      d=\"M 11,14 L 34,14\"\n      style=\"fill:none; stroke:#000000; stroke-linejoin:miter;\" />\n  </g>\n</svg>\n"},"relativePath":"one_d_chess/icons/white_rook.svg"},{"fields":{"contents":"[\n  {\n    \"start\": 5,\n    \"end\": 6\n  },\n  {\n    \"start\": 6,\n    \"end\": 11\n  },\n  {\n    \"start\": 11,\n    \"end\": 14\n  },\n  {\n    \"start\": 7,\n    \"end\": 14\n  },\n  {\n    \"start\": 2,\n    \"end\": 7\n  },\n  {\n    \"start\": 14,\n    \"end\": 2\n  },\n  {\n    \"start\": 2,\n    \"end\": 3\n  },\n  {\n    \"start\": 3,\n    \"end\": 10\n  },\n  {\n    \"start\": 6,\n    \"end\": 4\n  },\n  {\n    \"start\": 4,\n    \"end\": 2\n  },\n  {\n    \"start\": 1,\n    \"end\": 0\n  },\n  {\n    \"start\": 12,\n    \"end\": 11\n  },\n  {\n    \"start\": 11,\n    \"end\": 9\n  },\n  {\n    \"start\": 9,\n    \"end\": 12\n  },\n  {\n    \"start\": 12,\n    \"end\": 13\n  },\n  {\n    \"start\": 12,\n    \"end\": 8\n  }\n]"},"relativePath":"graph_builder/data/default/edges.json"},{"fields":{"contents":"[\n  {\n    \"x\": 0.428,\n    \"y\": 0.412\n  },\n  {\n    \"x\": 0.502,\n    \"y\": 0.488\n  },\n  {\n    \"x\": 0.212,\n    \"y\": 0.572\n  },\n  {\n    \"x\": 0.136,\n    \"y\": 0.306\n  },\n  {\n    \"x\": 0.48,\n    \"y\": 0.174\n  },\n  {\n    \"x\": 0.222,\n    \"y\": 0.088\n  },\n  {\n    \"x\": 0.298,\n    \"y\": 0.17\n  },\n  {\n    \"x\": 0.218,\n    \"y\": 0.802\n  },\n  {\n    \"x\": 0.672,\n    \"y\": 0.83\n  },\n  {\n    \"x\": 0.88,\n    \"y\": 0.364\n  },\n  {\n    \"x\": 0.816,\n    \"y\": 0.106\n  },\n  {\n    \"x\": 0.652,\n    \"y\": 0.334\n  },\n  {\n    \"x\": 0.692,\n    \"y\": 0.446\n  },\n  {\n    \"x\": 0.884,\n    \"y\": 0.77\n  },\n  {\n    \"x\": 0.548,\n    \"y\": 0.668\n  }\n]"},"relativePath":"graph_builder/data/default/nodes.json"},{"fields":{"contents":"[\n  {\n    \"start\": 0,\n    \"end\": 1\n  },\n  {\n    \"start\": 1,\n    \"end\": 6\n  },\n  {\n    \"start\": 6,\n    \"end\": 5\n  },\n  {\n    \"start\": 16,\n    \"end\": 5\n  },\n  {\n    \"start\": 16,\n    \"end\": 15\n  },\n  {\n    \"start\": 17,\n    \"end\": 16\n  },\n  {\n    \"start\": 7,\n    \"end\": 14\n  },\n  {\n    \"start\": 14,\n    \"end\": 15\n  },\n  {\n    \"start\": 14,\n    \"end\": 18\n  },\n  {\n    \"start\": 15,\n    \"end\": 7\n  },\n  {\n    \"start\": 2,\n    \"end\": 7\n  },\n  {\n    \"start\": 19,\n    \"end\": 23\n  },\n  {\n    \"start\": 23,\n    \"end\": 24\n  },\n  {\n    \"start\": 19,\n    \"end\": 22\n  },\n  {\n    \"start\": 22,\n    \"end\": 20\n  },\n  {\n    \"start\": 21,\n    \"end\": 20\n  },\n  {\n    \"start\": 20,\n    \"end\": 12\n  },\n  {\n    \"start\": 12,\n    \"end\": 11\n  },\n  {\n    \"start\": 13,\n    \"end\": 11\n  },\n  {\n    \"start\": 10,\n    \"end\": 11\n  },\n  {\n    \"start\": 10,\n    \"end\": 13\n  },\n  {\n    \"start\": 13,\n    \"end\": 9\n  },\n  {\n    \"start\": 10,\n    \"end\": 8\n  },\n  {\n    \"start\": 8,\n    \"end\": 4\n  },\n  {\n    \"start\": 3,\n    \"end\": 9\n  }\n]"},"relativePath":"graph_builder/data/grid/edges.json"},{"fields":{"contents":"[\n  {\n    \"x\": 0.089,\n    \"y\": 0.098\n  },\n  {\n    \"x\": 0.238,\n    \"y\": 0.102\n  },\n  {\n    \"x\": 0.42,\n    \"y\": 0.098\n  },\n  {\n    \"x\": 0.598,\n    \"y\": 0.094\n  },\n  {\n    \"x\": 0.804,\n    \"y\": 0.092\n  },\n  {\n    \"x\": 0.096,\n    \"y\": 0.322\n  },\n  {\n    \"x\": 0.25,\n    \"y\": 0.32\n  },\n  {\n    \"x\": 0.432,\n    \"y\": 0.314\n  },\n  {\n    \"x\": 0.6,\n    \"y\": 0.312\n  },\n  {\n    \"x\": 0.808,\n    \"y\": 0.314\n  },\n  {\n    \"x\": 0.818,\n    \"y\": 0.524\n  },\n  {\n    \"x\": 0.822,\n    \"y\": 0.74\n  },\n  {\n    \"x\": 0.83,\n    \"y\": 0.912\n  },\n  {\n    \"x\": 0.624,\n    \"y\": 0.534\n  },\n  {\n    \"x\": 0.454,\n    \"y\": 0.54\n  },\n  {\n    \"x\": 0.262,\n    \"y\": 0.54\n  },\n  {\n    \"x\": 0.086,\n    \"y\": 0.546\n  },\n  {\n    \"x\": 0.09,\n    \"y\": 0.728\n  },\n  {\n    \"x\": 0.464,\n    \"y\": 0.74\n  },\n  {\n    \"x\": 0.264,\n    \"y\": 0.736\n  },\n  {\n    \"x\": 0.638,\n    \"y\": 0.736\n  },\n  {\n    \"x\": 0.684,\n    \"y\": 0.928\n  },\n  {\n    \"x\": 0.48,\n    \"y\": 0.932\n  },\n  {\n    \"x\": 0.27,\n    \"y\": 0.912\n  },\n  {\n    \"x\": 0.094,\n    \"y\": 0.91\n  }\n]"},"relativePath":"graph_builder/data/grid/nodes.json"},{"fields":{"contents":"[\n  {\n    \"start\": 33,\n    \"end\": 35\n  },\n  {\n    \"start\": 35,\n    \"end\": 39\n  },\n  {\n    \"start\": 39,\n    \"end\": 37\n  },\n  {\n    \"start\": 38,\n    \"end\": 36\n  },\n  {\n    \"start\": 36,\n    \"end\": 40\n  },\n  {\n    \"start\": 40,\n    \"end\": 34\n  },\n  {\n    \"start\": 17,\n    \"end\": 18\n  },\n  {\n    \"start\": 18,\n    \"end\": 27\n  },\n  {\n    \"start\": 26,\n    \"end\": 27\n  },\n  {\n    \"start\": 25,\n    \"end\": 26\n  },\n  {\n    \"start\": 25,\n    \"end\": 24\n  },\n  {\n    \"start\": 29,\n    \"end\": 25\n  },\n  {\n    \"start\": 29,\n    \"end\": 30\n  },\n  {\n    \"start\": 30,\n    \"end\": 31\n  },\n  {\n    \"start\": 31,\n    \"end\": 23\n  },\n  {\n    \"start\": 23,\n    \"end\": 22\n  },\n  {\n    \"start\": 22,\n    \"end\": 32\n  },\n  {\n    \"start\": 21,\n    \"end\": 22\n  },\n  {\n    \"start\": 20,\n    \"end\": 21\n  },\n  {\n    \"start\": 20,\n    \"end\": 19\n  },\n  {\n    \"start\": 19,\n    \"end\": 28\n  },\n  {\n    \"start\": 9,\n    \"end\": 8\n  },\n  {\n    \"start\": 8,\n    \"end\": 11\n  },\n  {\n    \"start\": 11,\n    \"end\": 10\n  },\n  {\n    \"start\": 10,\n    \"end\": 12\n  },\n  {\n    \"start\": 12,\n    \"end\": 14\n  },\n  {\n    \"start\": 14,\n    \"end\": 13\n  },\n  {\n    \"start\": 16,\n    \"end\": 14\n  },\n  {\n    \"start\": 15,\n    \"end\": 8\n  },\n  {\n    \"start\": 15,\n    \"end\": 7\n  },\n  {\n    \"start\": 7,\n    \"end\": 16\n  },\n  {\n    \"start\": 16,\n    \"end\": 10\n  },\n  {\n    \"start\": 15,\n    \"end\": 10\n  },\n  {\n    \"start\": 0,\n    \"end\": 2\n  },\n  {\n    \"start\": 2,\n    \"end\": 1\n  },\n  {\n    \"start\": 2,\n    \"end\": 3\n  },\n  {\n    \"start\": 2,\n    \"end\": 4\n  },\n  {\n    \"start\": 5,\n    \"end\": 2\n  },\n  {\n    \"start\": 2,\n    \"end\": 6\n  }\n]"},"relativePath":"graph_builder/data/islands/edges.json"},{"fields":{"contents":"[\n  {\n    \"x\": 0.178,\n    \"y\": 0.088\n  },\n  {\n    \"x\": 0.106,\n    \"y\": 0.194\n  },\n  {\n    \"x\": 0.228,\n    \"y\": 0.19\n  },\n  {\n    \"x\": 0.166,\n    \"y\": 0.3\n  },\n  {\n    \"x\": 0.312,\n    \"y\": 0.298\n  },\n  {\n    \"x\": 0.368,\n    \"y\": 0.194\n  },\n  {\n    \"x\": 0.304,\n    \"y\": 0.096\n  },\n  {\n    \"x\": 0.792,\n    \"y\": 0.696\n  },\n  {\n    \"x\": 0.71,\n    \"y\": 0.812\n  },\n  {\n    \"x\": 0.644,\n    \"y\": 0.922\n  },\n  {\n    \"x\": 0.794,\n    \"y\": 0.824\n  },\n  {\n    \"x\": 0.74,\n    \"y\": 0.926\n  },\n  {\n    \"x\": 0.854,\n    \"y\": 0.914\n  },\n  {\n    \"x\": 0.926,\n    \"y\": 0.91\n  },\n  {\n    \"x\": 0.886,\n    \"y\": 0.832\n  },\n  {\n    \"x\": 0.762,\n    \"y\": 0.754\n  },\n  {\n    \"x\": 0.842,\n    \"y\": 0.752\n  },\n  {\n    \"x\": 0.102,\n    \"y\": 0.626\n  },\n  {\n    \"x\": 0.196,\n    \"y\": 0.624\n  },\n  {\n    \"x\": 0.288,\n    \"y\": 0.624\n  },\n  {\n    \"x\": 0.394,\n    \"y\": 0.628\n  },\n  {\n    \"x\": 0.4,\n    \"y\": 0.718\n  },\n  {\n    \"x\": 0.408,\n    \"y\": 0.81\n  },\n  {\n    \"x\": 0.312,\n    \"y\": 0.812\n  },\n  {\n    \"x\": 0.2,\n    \"y\": 0.81\n  },\n  {\n    \"x\": 0.104,\n    \"y\": 0.8\n  },\n  {\n    \"x\": 0.098,\n    \"y\": 0.718\n  },\n  {\n    \"x\": 0.182,\n    \"y\": 0.724\n  },\n  {\n    \"x\": 0.28,\n    \"y\": 0.726\n  },\n  {\n    \"x\": 0.11,\n    \"y\": 0.892\n  },\n  {\n    \"x\": 0.218,\n    \"y\": 0.892\n  },\n  {\n    \"x\": 0.312,\n    \"y\": 0.894\n  },\n  {\n    \"x\": 0.414,\n    \"y\": 0.892\n  },\n  {\n    \"x\": 0.59,\n    \"y\": 0.324\n  },\n  {\n    \"x\": 0.66,\n    \"y\": 0.392\n  },\n  {\n    \"x\": 0.74,\n    \"y\": 0.32\n  },\n  {\n    \"x\": 0.812,\n    \"y\": 0.248\n  },\n  {\n    \"x\": 0.882,\n    \"y\": 0.16\n  },\n  {\n    \"x\": 0.774,\n    \"y\": 0.082\n  },\n  {\n    \"x\": 0.712,\n    \"y\": 0.164\n  },\n  {\n    \"x\": 0.632,\n    \"y\": 0.236\n  }\n]"},"relativePath":"graph_builder/data/islands/nodes.json"},{"fields":{"contents":"[\n  {\n      \"start\": 5,\n      \"end\": 6\n  },\n  {\n      \"start\": 3,\n      \"end\": 4\n  },\n  {\n      \"start\": 0,\n      \"end\": 1\n  },\n  {\n      \"start\": 10,\n      \"end\": 11\n  },\n  {\n      \"start\": 9,\n      \"end\": 12\n  },\n  {\n      \"start\": 7,\n      \"end\": 8\n  },\n  {\n      \"start\": 13,\n      \"end\": 16\n  },\n  {\n      \"start\": 14,\n      \"end\": 15\n  },\n  {\n      \"start\": 7,\n      \"end\": 17,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 6,\n      \"end\": 4,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 4,\n      \"end\": 2,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 1,\n      \"end\": 2,\n      \"level\": \"green\"\n  },\n  {\n      \"start\": 2,\n      \"end\": 3,\n      \"level\": \"green\"\n  },\n  {\n      \"start\": 3,\n      \"end\": 5,\n      \"level\": \"green\"\n  },\n  {\n      \"start\": 5,\n      \"end\": 3,\n      \"level\": \"green\"\n  },\n  {\n      \"start\": 2,\n      \"end\": 0,\n      \"level\": \"green\"\n  },\n  {\n      \"start\": 6,\n      \"end\": 11,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 11,\n      \"end\": 18,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 18,\n      \"end\": 12,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 18,\n      \"end\": 8,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 8,\n      \"end\": 19,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 19,\n      \"end\": 5,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 7,\n      \"end\": 19,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 10,\n      \"end\": 9,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 9,\n      \"end\": 10,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 16,\n      \"end\": 15,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 15,\n      \"end\": 9,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 12,\n      \"end\": 15,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 4,\n      \"end\": 5,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 17,\n      \"end\": 14,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 17,\n      \"end\": 13,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 16,\n      \"end\": 20,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 20,\n      \"end\": 14,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 8,\n      \"end\": 21,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 21,\n      \"end\": 7,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 15,\n      \"end\": 20,\n      \"level\": \"blue\"\n  },\n  {\n      \"start\": 20,\n      \"end\": 13,\n      \"level\": \"blue\"\n  },\n  {\n    \"start\": 12,\n    \"end\": 7,\n    \"level\": \"blue\"\n  }\n]\n"},"relativePath":"ski_graphs/data/heavenly/edges.json"},{"fields":{"contents":"[\n  {\n    \"x\": 0.912,\n    \"y\": 0.664\n  },\n  {\n    \"x\": 0.888,\n    \"y\": 0.478\n  },\n  {\n    \"x\": 0.832,\n    \"y\": 0.556\n  },\n  {\n    \"x\": 0.72,\n    \"y\": 0.642\n  },\n  {\n    \"x\": 0.766,\n    \"y\": 0.23\n  },\n  {\n    \"x\": 0.636,\n    \"y\": 0.626\n  },\n  {\n    \"x\": 0.5,\n    \"y\": 0.06\n  },\n  {\n    \"x\": 0.414,\n    \"y\": 0.62\n  },\n  {\n    \"x\": 0.312,\n    \"y\": 0.35\n  },\n  {\n    \"x\": 0.134,\n    \"y\": 0.618\n  },\n  {\n    \"x\": 0.078,\n    \"y\": 0.58\n  },\n  {\n    \"x\": 0.098,\n    \"y\": 0.22\n  },\n  {\n    \"x\": 0.246,\n    \"y\": 0.41\n  },\n  {\n    \"x\": 0.052,\n    \"y\": 0.954\n  },\n  {\n    \"x\": 0.216,\n    \"y\": 0.908\n  },\n  {\n    \"x\": 0.168,\n    \"y\": 0.714\n  },\n  {\n    \"x\": 0.08,\n    \"y\": 0.66\n  },\n  {\n    \"x\": 0.248,\n    \"y\": 0.768\n  },\n  {\n    \"x\": 0.234,\n    \"y\": 0.29\n  },\n  {\n    \"x\": 0.524,\n    \"y\": 0.61\n  },\n  {\n    \"x\": 0.124,\n    \"y\": 0.82\n  },\n  {\n    \"x\": 0.418,\n    \"y\": 0.53\n  }\n]"},"relativePath":"ski_graphs/data/heavenly/nodes.json"},{"fields":{"contents":"[\n  {\n    \"type\": \"lift\",\n    \"start\": 1,\n    \"end\": 0\n  },\n  {\n    \"type\": \"run\",\n    \"level\": \"blue\",\n    \"start\": 2,\n    \"end\": 1\n  },\n  {\n    \"type\": \"run\",\n    \"level\": \"green\",\n    \"start\": 0,\n    \"end\": 2\n  },\n  {\n    \"type\": \"lift\",\n    \"start\": 1,\n    \"end\": 3\n  },\n  {\n    \"type\": \"lift\",\n    \"start\": 3,\n    \"end\": 4\n  }\n]"},"relativePath":"ski_graphs/data/test/edges.json"},{"fields":{"contents":"[\n  {\n    \"x\": 50,\n    \"y\": 25\n  },\n  {\n    \"x\": 25,\n    \"y\": 75\n  },\n  {\n    \"x\": 13,\n    \"y\": 50\n  },\n  {\n    \"x\": 75,\n    \"y\": 63\n  },\n  {\n    \"x\": 88,\n    \"y\": 25\n  }\n]\n"},"relativePath":"ski_graphs/data/test/nodes.json"},{"fields":{"contents":"import React from 'react';\n\nconst Sketch = ({scale}) => {\n  scale = scale ?? 1;\n  const width = 133.615 * scale;\n  const height = 27.257 * scale;\n  return <div style={{textAlign: 'center'}}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={`${width}pt`} height={`${height}pt`} version=\"1.1\" viewBox=\"-102.392 544.578 133.615 27.257\">\n      <defs></defs>\n      <g id=\"Fill\" opacity=\"1.000\">\n        <path id=\"STROKE_c390b33c-52b8-4289-ba68-2f8223b27d41\" opacity=\"0.325\" fill=\"#4245a3\" stroke=\"#4245a3\" strokeWidth=\"0.500\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -75.426 547.314 Q -75.481 547.331 -75.572 547.407 Q -75.663 547.482 -75.920 547.358 \"></path>\n        <path id=\"STROKE_a3a82efe-6638-4519-8c44-4e8fdd2b9792\" opacity=\"0.325\" fill=\"#4245a3\" stroke=\"#4245a3\" strokeWidth=\"0.500\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -70.706 547.086 Q -70.728 547.038 -70.714 547.054 Q -70.701 547.069 -70.728 547.004 Q -70.754 546.939 -70.794 546.915 Q -70.834 546.891 -70.904 546.859 Q -70.975 546.827 -71.028 546.800 Q -71.081 546.772 -71.107 546.764 Q -71.133 546.756 -71.170 546.746 Q -71.207 546.736 -71.242 546.733 Q -71.276 546.729 -71.310 546.729 Q -71.345 546.730 -71.352 546.727 Q -71.360 546.724 -71.428 546.734 Q -71.496 546.745 -71.506 546.760 Q -71.517 546.776 -71.517 546.771 Q -71.518 546.767 -71.504 546.766 Q -71.490 546.765 -71.570 546.827 Q -71.650 546.890 -71.715 546.926 Q -71.779 546.962 -71.872 546.986 Q -71.965 547.009 -72.013 547.018 Q -72.061 547.026 -72.088 547.030 Q -72.114 547.034 -72.249 547.062 Q -72.383 547.089 -72.573 547.145 Q -72.762 547.201 -72.951 547.223 Q -73.140 547.246 -73.654 547.304 Q -74.167 547.362 -74.686 547.407 Q -75.205 547.451 -75.531 547.418 Q -75.856 547.385 -76.228 547.397 Q -76.601 547.409 -77.083 547.405 Q -77.564 547.402 -77.989 547.342 Q -78.413 547.281 -78.841 547.303 Q -79.268 547.324 -79.641 547.353 Q -80.013 547.382 -80.412 547.317 Q -80.811 547.251 -81.269 547.298 Q -81.728 547.345 -81.995 547.389 Q -82.262 547.434 -82.459 547.428 Q -82.657 547.423 -82.807 547.423 Q -82.958 547.422 -83.233 547.455 Q -83.508 547.488 -83.712 547.514 Q -83.917 547.539 -84.087 547.580 Q -84.258 547.621 -84.383 547.649 Q -84.509 547.677 -84.676 547.749 Q -84.844 547.821 -85.189 547.843 Q -85.535 547.865 -85.854 547.888 Q -86.174 547.910 -86.350 547.907 Q -86.525 547.904 -86.635 547.908 Q -86.744 547.912 -87.048 547.981 Q -87.352 548.050 -87.519 548.072 Q -87.687 548.095 -87.969 548.073 Q -88.251 548.051 -88.477 548.058 Q -88.703 548.066 -88.835 548.085 Q -88.967 548.104 -88.990 548.108 Q -89.012 548.111 -89.156 548.117 Q -89.300 548.123 -89.690 548.118 Q -90.081 548.113 -90.312 548.128 Q -90.542 548.144 -90.739 548.075 Q -90.936 548.007 -91.198 547.960 Q -91.460 547.914 -91.650 547.939 Q -91.840 547.965 -92.122 547.885 Q -92.404 547.806 -92.553 547.757 Q -92.702 547.708 -92.850 547.717 Q -92.998 547.726 -93.253 547.722 Q -93.509 547.718 -93.684 547.706 Q -93.858 547.694 -94.150 547.711 Q -94.442 547.727 -94.656 547.708 Q -94.870 547.690 -95.017 547.678 Q -95.164 547.666 -95.246 547.676 Q -95.329 547.686 -95.362 547.701 Q -95.396 547.715 -95.453 547.729 Q -95.510 547.743 -95.569 547.754 Q -95.628 547.766 -95.660 547.770 Q -95.693 547.774 -95.731 547.778 Q -95.769 547.782 -95.786 547.782 Q -95.802 547.781 -95.843 547.781 Q -95.883 547.782 -95.909 547.782 Q -95.935 547.782 -95.998 547.779 Q -96.062 547.776 -96.065 547.779 Q -96.069 547.782 -96.337 547.829 Q -96.604 547.877 -96.861 547.864 Q -97.119 547.852 -97.246 547.848 Q -97.374 547.845 -97.449 547.850 Q -97.524 547.855 -97.566 547.887 Q -97.608 547.918 -97.714 547.980 Q -97.820 548.041 -97.991 548.120 Q -98.162 548.198 -98.260 548.253 Q -98.358 548.308 -98.401 548.386 Q -98.444 548.463 -98.458 548.497 Q -98.472 548.532 -98.485 548.561 Q -98.497 548.590 -98.508 548.615 Q -98.518 548.640 -98.520 548.637 Q -98.521 548.635 -98.514 548.632 Q -98.506 548.628 -98.549 548.677 Q -98.591 548.725 -98.630 548.745 Q -98.669 548.766 -98.727 548.800 Q -98.785 548.834 -98.863 548.880 Q -98.942 548.925 -98.969 549.039 Q -98.997 549.152 -99.006 549.229 Q -99.014 549.306 -99.019 549.347 Q -99.023 549.389 -99.048 549.470 Q -99.073 549.552 -99.107 549.637 Q -99.142 549.722 -99.156 549.772 Q -99.170 549.821 -99.179 549.851 Q -99.188 549.881 -99.192 549.979 Q -99.197 550.077 -99.251 550.223 Q -99.306 550.369 -99.347 550.431 Q -99.388 550.494 -99.401 550.528 Q -99.414 550.562 -99.432 550.607 Q -99.450 550.652 -99.451 550.647 Q -99.452 550.642 -99.470 550.846 Q -99.488 551.050 -99.515 551.174 Q -99.541 551.298 -99.563 551.342 Q -99.584 551.386 -99.608 551.428 Q -99.631 551.469 -99.656 551.514 Q -99.681 551.559 -99.688 551.570 Q -99.694 551.580 -99.690 551.575 Q -99.686 551.571 -99.695 551.576 Q -99.703 551.582 -99.735 551.668 Q -99.767 551.755 -99.765 551.936 Q -99.763 552.116 -99.773 552.222 Q -99.782 552.327 -99.820 552.385 Q -99.858 552.443 -99.888 552.497 Q -99.918 552.551 -99.939 552.618 Q -99.961 552.684 -99.961 552.658 Q -99.961 552.632 -99.961 553.017 Q -99.960 553.402 -99.958 553.661 Q -99.955 553.919 -99.994 554.023 Q -100.034 554.126 -100.059 554.290 Q -100.083 554.455 -100.077 554.564 Q -100.070 554.673 -100.072 554.736 Q -100.075 554.799 -100.074 554.800 Q -100.073 554.801 -100.075 554.820 Q -100.077 554.840 -100.081 554.946 Q -100.085 555.053 -100.078 555.153 Q -100.071 555.254 -100.068 555.253 Q -100.065 555.253 -99.996 555.435 Q -99.927 555.617 -99.892 555.835 Q -99.856 556.053 -99.835 556.272 Q -99.814 556.492 -99.767 556.607 Q -99.720 556.722 -99.720 557.063 Q -99.720 557.405 -99.713 557.604 Q -99.706 557.803 -99.715 557.892 Q -99.724 557.981 -99.743 558.042 Q -99.763 558.104 -99.784 558.180 Q -99.806 558.255 -99.807 558.267 Q -99.807 558.280 -99.811 558.298 Q -99.814 558.316 -99.819 558.355 Q -99.824 558.394 -99.818 558.476 Q -99.813 558.559 -99.815 558.691 Q -99.816 558.824 -99.844 558.958 Q -99.872 559.092 -99.879 559.210 Q -99.887 559.328 -99.885 559.387 Q -99.884 559.447 -99.884 559.499 Q -99.885 559.551 -99.884 559.620 Q -99.883 559.690 -99.887 559.754 Q -99.892 559.818 -99.897 559.850 Q -99.902 559.882 -99.898 559.880 Q -99.895 559.878 -99.900 559.907 Q -99.905 559.936 -99.965 560.191 Q -100.026 560.446 -99.963 560.738 Q -99.900 561.030 -99.825 561.318 Q -99.750 561.607 -99.670 561.853 Q -99.591 562.099 -99.577 562.214 Q -99.562 562.329 -99.559 562.403 Q -99.556 562.477 -99.549 562.676 Q -99.541 562.875 -99.530 563.014 Q -99.518 563.153 -99.515 563.130 Q -99.513 563.107 -99.512 563.387 Q -99.511 563.668 -99.525 563.952 Q -99.539 564.236 -99.537 564.454 Q -99.534 564.673 -99.535 564.779 Q -99.535 564.885 -99.536 564.935 Q -99.536 564.985 -99.534 565.087 Q -99.532 565.190 -99.529 565.299 Q -99.526 565.408 -99.528 565.490 Q -99.530 565.573 -99.529 565.648 Q -99.528 565.723 -99.525 565.777 Q -99.523 565.831 -99.522 565.849 Q -99.521 565.867 -99.515 565.904 Q -99.509 565.941 -99.514 565.918 Q -99.519 565.896 -99.500 566.059 Q -99.480 566.223 -99.439 566.339 Q -99.399 566.456 -99.376 566.490 Q -99.354 566.523 -99.322 566.579 Q -99.290 566.636 -99.265 566.678 Q -99.240 566.720 -99.199 566.782 Q -99.157 566.843 -99.130 566.875 Q -99.104 566.906 -99.082 566.933 Q -99.061 566.961 -98.861 567.046 Q -98.660 567.131 -98.540 567.205 Q -98.420 567.279 -98.280 567.299 Q -98.140 567.320 -97.878 567.379 Q -97.617 567.438 -97.477 567.474 Q -97.336 567.510 -97.290 567.508 Q -97.244 567.505 -96.990 567.502 Q -96.736 567.499 -96.551 567.509 Q -96.367 567.519 -96.253 567.549 Q -96.138 567.579 -95.699 567.651 Q -95.259 567.722 -94.659 567.759 Q -94.059 567.795 -93.242 567.740 Q -92.425 567.685 -92.026 567.645 Q -91.626 567.604 -91.464 567.603 Q -91.302 567.601 -91.248 567.597 Q -91.194 567.593 -90.956 567.618 Q -90.717 567.644 -90.307 567.660 Q -89.898 567.676 -89.669 567.706 Q -89.440 567.736 -89.246 567.776 Q -89.052 567.816 -88.427 567.803 Q -87.801 567.789 -87.395 567.798 Q -86.990 567.807 -86.803 567.826 Q -86.616 567.844 -86.524 567.866 Q -86.431 567.889 -86.061 567.913 Q -85.690 567.938 -85.297 567.934 Q -84.904 567.931 -84.426 567.965 Q -83.949 567.998 -83.512 567.981 Q -83.076 567.964 -82.700 568.002 Q -82.324 568.040 -82.033 568.097 Q -81.743 568.154 -81.349 568.169 Q -80.955 568.185 -80.711 568.196 Q -80.467 568.207 -79.912 568.234 Q -79.356 568.260 -78.812 568.291 Q -78.267 568.322 -77.864 568.331 Q -77.460 568.340 -77.271 568.340 Q -77.083 568.340 -76.945 568.340 Q -76.807 568.340 -76.673 568.340 Q -76.539 568.340 -76.379 568.340 Q -76.220 568.340 -75.812 568.339 Q -75.403 568.337 -74.997 568.336 Q -74.591 568.334 -74.330 568.313 Q -74.068 568.293 -73.921 568.272 Q -73.774 568.252 -73.706 568.240 Q -73.638 568.229 -73.510 568.213 Q -73.382 568.197 -73.219 568.186 Q -73.056 568.174 -72.856 568.183 Q -72.656 568.192 -72.069 568.147 Q -71.483 568.101 -70.950 568.081 Q -70.417 568.060 -70.056 568.063 Q -69.694 568.066 -69.310 568.028 Q -68.927 567.991 -68.744 567.985 Q -68.561 567.980 -68.262 567.979 Q -67.963 567.977 -67.593 567.963 Q -67.223 567.949 -66.753 567.998 Q -66.283 568.048 -65.967 568.104 Q -65.651 568.160 -65.131 568.111 Q -64.612 568.062 -64.207 568.069 Q -63.802 568.077 -63.503 568.037 Q -63.205 567.997 -63.071 567.960 Q -62.938 567.922 -62.785 567.909 Q -62.631 567.895 -62.415 567.896 Q -62.198 567.897 -61.939 567.946 Q -61.680 567.995 -61.120 567.993 Q -60.561 567.991 -60.067 568.023 Q -59.573 568.055 -59.299 568.069 Q -59.025 568.084 -58.749 568.094 Q -58.472 568.104 -58.075 568.105 Q -57.677 568.105 -57.442 568.071 Q -57.207 568.037 -57.086 568.003 Q -56.966 567.969 -56.901 567.956 Q -56.836 567.942 -56.791 567.933 Q -56.746 567.925 -56.713 567.915 Q -56.679 567.906 -56.653 567.901 Q -56.626 567.897 -56.581 567.860 Q -56.535 567.823 -56.492 567.749 Q -56.448 567.676 -56.345 567.543 Q -56.242 567.410 -56.130 567.324 Q -56.018 567.237 -55.921 567.051 Q -55.823 566.865 -55.721 566.652 Q -55.618 566.439 -55.471 566.252 Q -55.325 566.065 -55.287 565.839 Q -55.250 565.613 -55.251 565.228 Q -55.252 564.843 -55.274 564.647 Q -55.295 564.451 -55.230 564.224 Q -55.164 563.996 -55.091 563.870 Q -55.018 563.744 -55.014 563.432 Q -55.009 563.120 -55.104 562.824 Q -55.199 562.527 -55.233 562.125 Q -55.268 561.724 -55.263 561.523 Q -55.258 561.323 -55.221 561.194 Q -55.183 561.064 -55.175 560.661 Q -55.168 560.258 -55.180 559.811 Q -55.192 559.363 -55.186 559.118 Q -55.180 558.873 -55.244 558.630 Q -55.307 558.386 -55.331 558.210 Q -55.354 558.033 -55.435 557.709 Q -55.516 557.385 -55.663 557.013 Q -55.810 556.641 -55.854 556.274 Q -55.898 555.908 -55.876 555.624 Q -55.855 555.341 -55.915 555.036 Q -55.976 554.732 -55.975 554.385 Q -55.975 554.039 -55.949 553.785 Q -55.924 553.530 -55.956 553.393 Q -55.988 553.256 -56.090 552.960 Q -56.192 552.664 -56.192 552.325 Q -56.192 551.986 -56.207 551.741 Q -56.222 551.495 -56.295 551.305 Q -56.368 551.115 -56.404 550.956 Q -56.440 550.798 -56.422 550.554 Q -56.405 550.310 -56.515 549.970 Q -56.625 549.630 -56.667 549.385 Q -56.710 549.141 -56.706 548.998 Q -56.701 548.856 -56.702 548.805 Q -56.702 548.755 -56.722 548.633 Q -56.743 548.512 -56.803 548.409 Q -56.862 548.307 -56.892 548.272 Q -56.922 548.237 -56.998 548.118 Q -57.074 548.000 -57.200 547.848 Q -57.326 547.695 -57.442 547.592 Q -57.559 547.488 -57.628 547.454 Q -57.697 547.419 -57.785 547.418 Q -57.874 547.416 -57.963 547.432 Q -58.053 547.448 -58.054 547.451 Q -58.055 547.454 -58.157 547.463 Q -58.259 547.472 -58.585 547.461 Q -58.910 547.450 -59.100 547.435 Q -59.289 547.419 -59.576 547.500 Q -59.862 547.582 -60.418 547.556 Q -60.975 547.531 -61.468 547.512 Q -61.961 547.493 -62.375 547.500 Q -62.790 547.508 -63.394 547.478 Q -63.998 547.448 -64.315 547.439 Q -64.632 547.430 -65.099 547.438 Q -65.566 547.447 -65.945 547.430 Q -66.323 547.413 -66.780 547.356 Q -67.237 547.300 -67.645 547.277 Q -68.054 547.254 -68.748 547.262 Q -69.443 547.271 -69.938 547.261 Q -70.433 547.252 -70.700 547.237 Q -70.967 547.223 -71.229 547.226 Q -71.490 547.229 -71.787 547.278 Q -72.084 547.327 -72.265 547.365 Q -72.445 547.404 -72.897 547.429 Q -73.350 547.454 -74.130 547.500 Q -74.911 547.546 -75.305 547.554 Q -75.700 547.562 -75.890 547.560 Q -76.081 547.558 -76.197 547.553 Q -76.313 547.549 -76.563 547.545 Q -76.813 547.542 -77.290 547.670 Q -77.767 547.798 -78.482 547.918 Q -79.196 548.037 -79.597 548.089 Q -79.997 548.141 -80.220 548.159 Q -80.443 548.178 -80.898 548.288 Q -81.354 548.398 -81.774 548.430 Q -82.195 548.463 -82.459 548.460 Q -82.723 548.456 -82.961 548.370 Q -83.200 548.284 -83.443 548.143 \"></path>\n        <path id=\"STROKE_f652162d-74f1-407b-a10e-b891c8f91502\" opacity=\"0.325\" fill=\"#4378c3\" stroke=\"#4378c3\" strokeWidth=\"0.500\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -31.619 549.067 Q -31.619 549.067 -31.612 549.066 Q -31.606 549.065 -31.605 549.017 Q -31.603 548.969 -31.628 548.955 Q -31.653 548.940 -31.750 548.916 Q -31.847 548.892 -31.930 548.857 Q -32.013 548.823 -32.280 548.766 Q -32.548 548.710 -32.706 548.713 Q -32.863 548.716 -33.303 548.780 Q -33.743 548.844 -34.334 548.845 Q -34.925 548.847 -35.246 548.848 Q -35.568 548.850 -35.868 548.902 Q -36.169 548.955 -36.392 548.983 Q -36.615 549.011 -36.919 549.019 Q -37.223 549.026 -37.645 548.944 Q -38.067 548.861 -38.291 548.800 Q -38.515 548.739 -38.901 548.741 Q -39.286 548.744 -39.586 548.800 Q -39.886 548.855 -40.207 548.863 Q -40.528 548.870 -40.829 548.789 Q -41.129 548.708 -41.453 548.707 Q -41.778 548.707 -42.105 548.746 Q -42.432 548.786 -42.813 548.736 Q -43.194 548.686 -43.580 548.685 Q -43.966 548.684 -44.144 548.685 Q -44.322 548.685 -44.484 548.639 Q -44.646 548.593 -44.962 548.487 Q -45.278 548.381 -45.463 548.324 Q -45.649 548.267 -45.758 548.249 Q -45.867 548.232 -45.921 548.217 Q -45.975 548.202 -46.455 548.205 Q -46.936 548.209 -47.165 548.214 Q -47.394 548.220 -47.749 548.114 Q -48.105 548.008 -48.287 547.956 Q -48.470 547.904 -48.785 547.896 Q -49.101 547.888 -49.420 547.909 Q -49.739 547.930 -50.174 547.835 Q -50.609 547.740 -50.827 547.666 Q -51.044 547.592 -51.215 547.568 Q -51.386 547.544 -51.734 547.593 Q -52.082 547.643 -52.407 547.671 Q -52.732 547.700 -52.907 547.732 Q -53.082 547.764 -53.176 547.783 Q -53.270 547.801 -53.325 547.807 Q -53.380 547.814 -53.462 547.815 Q -53.544 547.816 -53.602 547.815 Q -53.660 547.814 -53.676 547.815 Q -53.692 547.817 -53.714 547.811 Q -53.737 547.805 -53.982 547.863 Q -54.227 547.921 -54.610 548.002 Q -54.994 548.084 -55.263 548.133 Q -55.533 548.183 -55.669 548.220 Q -55.805 548.257 -55.862 548.286 Q -55.920 548.315 -55.968 548.370 Q -56.016 548.425 -56.034 548.460 Q -56.051 548.495 -56.071 548.538 Q -56.092 548.581 -56.104 548.622 Q -56.117 548.663 -56.122 548.685 Q -56.128 548.706 -56.156 548.784 Q -56.185 548.861 -56.220 549.003 Q -56.256 549.145 -56.261 549.278 Q -56.265 549.411 -56.119 549.726 Q -55.973 550.042 -55.893 550.301 Q -55.812 550.560 -55.791 550.659 Q -55.770 550.759 -55.777 550.960 Q -55.783 551.161 -55.852 551.350 Q -55.922 551.540 -55.972 551.689 Q -56.023 551.838 -56.068 552.285 Q -56.113 552.732 -56.148 553.023 Q -56.183 553.314 -56.246 553.514 Q -56.308 553.713 -56.285 554.241 Q -56.262 554.768 -56.233 555.090 Q -56.203 555.411 -56.209 555.543 Q -56.215 555.675 -56.216 555.916 Q -56.216 556.157 -56.173 556.534 Q -56.130 556.911 -56.121 557.150 Q -56.112 557.388 -56.136 557.594 Q -56.160 557.799 -55.997 558.144 Q -55.835 558.490 -55.734 558.700 Q -55.634 558.911 -55.617 559.006 Q -55.599 559.102 -55.571 559.385 Q -55.543 559.668 -55.433 559.947 Q -55.322 560.227 -55.269 560.712 Q -55.216 561.196 -55.162 561.418 Q -55.109 561.639 -55.107 562.297 Q -55.106 562.955 -55.114 563.290 Q -55.122 563.624 -55.135 563.761 Q -55.148 563.898 -55.216 564.131 Q -55.285 564.364 -55.295 564.647 Q -55.305 564.930 -55.342 565.111 Q -55.379 565.292 -55.399 565.534 Q -55.419 565.776 -55.421 565.890 Q -55.422 566.003 -55.422 566.056 Q -55.422 566.108 -55.422 566.130 Q -55.422 566.153 -55.420 566.181 Q -55.417 566.209 -55.424 566.236 Q -55.431 566.263 -55.416 566.359 Q -55.402 566.456 -55.318 566.605 Q -55.233 566.754 -55.179 566.830 Q -55.125 566.906 -55.082 566.953 Q -55.040 567.001 -54.990 567.043 Q -54.941 567.085 -54.931 567.090 Q -54.921 567.094 -54.893 567.111 Q -54.866 567.128 -54.853 567.129 Q -54.840 567.130 -54.539 567.201 Q -54.239 567.272 -53.880 567.476 Q -53.522 567.681 -53.312 567.801 Q -53.103 567.922 -52.854 567.973 Q -52.605 568.024 -52.485 568.036 Q -52.365 568.047 -52.137 568.100 Q -51.909 568.152 -51.600 568.274 Q -51.291 568.397 -51.089 568.470 Q -50.887 568.543 -50.485 568.510 Q -50.082 568.477 -49.703 568.444 Q -49.325 568.411 -49.143 568.384 Q -48.960 568.357 -48.858 568.321 Q -48.755 568.285 -48.469 568.156 Q -48.183 568.027 -47.156 568.016 Q -46.128 568.005 -45.575 568.010 Q -45.022 568.014 -44.567 568.011 Q -44.111 568.008 -43.865 568.011 Q -43.619 568.014 -43.166 567.939 Q -42.714 567.864 -42.095 567.862 Q -41.477 567.860 -40.979 567.865 Q -40.481 567.869 -39.823 567.975 Q -39.165 568.081 -38.831 568.154 Q -38.498 568.227 -37.941 568.231 Q -37.383 568.234 -37.079 568.243 Q -36.775 568.252 -36.367 568.281 Q -35.959 568.309 -35.599 568.248 Q -35.239 568.187 -34.776 568.172 Q -34.312 568.157 -33.796 568.225 Q -33.280 568.293 -32.988 568.329 Q -32.695 568.364 -31.997 568.364 Q -31.299 568.364 -30.687 568.320 Q -30.076 568.275 -29.544 568.219 Q -29.012 568.163 -28.713 568.119 Q -28.413 568.074 -27.947 568.193 Q -27.480 568.311 -27.272 568.388 Q -27.064 568.465 -26.623 568.485 Q -26.182 568.505 -25.768 568.584 Q -25.354 568.663 -25.076 568.738 Q -24.798 568.813 -24.616 568.839 Q -24.434 568.865 -24.420 568.875 Q -24.407 568.885 -23.670 568.878 Q -22.934 568.870 -22.533 568.879 Q -22.133 568.888 -21.878 568.855 Q -21.623 568.821 -21.352 568.801 Q -21.080 568.781 -20.458 568.810 Q -19.837 568.839 -19.502 568.837 Q -19.167 568.835 -18.776 568.923 Q -18.385 569.011 -18.042 569.080 Q -17.698 569.149 -17.337 569.183 Q -16.976 569.217 -16.717 569.270 Q -16.457 569.323 -16.188 569.318 Q -15.919 569.314 -15.624 569.298 Q -15.329 569.282 -14.879 569.383 Q -14.428 569.485 -14.218 569.528 Q -14.008 569.571 -13.830 569.573 Q -13.651 569.575 -13.487 569.581 Q -13.322 569.587 -13.138 569.590 Q -12.954 569.592 -12.787 569.515 Q -12.621 569.437 -12.487 569.423 Q -12.352 569.409 -12.301 569.421 Q -12.249 569.433 -12.145 569.362 Q -12.040 569.291 -11.983 569.217 Q -11.925 569.142 -11.841 569.079 Q -11.757 569.015 -11.708 568.987 Q -11.658 568.960 -11.617 568.945 Q -11.576 568.930 -11.540 568.912 Q -11.503 568.894 -11.320 568.836 Q -11.137 568.778 -10.867 568.763 Q -10.596 568.748 -10.439 568.757 Q -10.282 568.766 -10.203 568.765 Q -10.124 568.764 -10.083 568.719 Q -10.042 568.673 -10.007 568.620 Q -9.973 568.566 -9.973 568.556 Q -9.974 568.546 -9.965 568.508 Q -9.955 568.470 -9.952 568.364 Q -9.949 568.258 -9.981 568.102 Q -10.013 567.947 -10.048 567.627 Q -10.083 567.307 -10.098 567.132 Q -10.113 566.958 -10.117 566.800 Q -10.122 566.642 -10.121 566.541 Q -10.120 566.440 -10.088 566.260 Q -10.057 566.081 -9.986 565.634 Q -9.916 565.187 -9.853 564.948 Q -9.789 564.709 -9.789 564.246 Q -9.789 563.783 -9.793 563.548 Q -9.797 563.313 -9.734 563.002 Q -9.671 562.692 -9.767 561.955 Q -9.862 561.218 -9.901 560.827 Q -9.941 560.436 -10.023 560.089 Q -10.105 559.743 -10.156 559.435 Q -10.207 559.127 -10.150 558.518 Q -10.093 557.910 -10.047 557.510 Q -10.000 557.109 -9.967 556.870 Q -9.934 556.630 -9.932 556.257 Q -9.930 555.883 -9.963 555.615 Q -9.996 555.347 -10.027 555.112 Q -10.058 554.877 -10.055 554.784 Q -10.052 554.690 -10.079 554.120 Q -10.105 553.550 -10.130 553.229 Q -10.155 552.909 -10.174 552.743 Q -10.194 552.578 -10.195 552.321 Q -10.196 552.064 -10.302 551.764 Q -10.407 551.464 -10.443 551.099 Q -10.479 550.734 -10.475 550.527 Q -10.472 550.320 -10.485 550.193 Q -10.497 550.066 -10.504 550.048 Q -10.511 550.030 -10.533 549.920 Q -10.556 549.810 -10.582 549.680 Q -10.608 549.550 -10.612 549.459 Q -10.616 549.367 -10.837 549.155 Q -11.057 548.943 -11.201 548.798 Q -11.345 548.654 -11.473 548.604 Q -11.600 548.554 -11.918 548.566 Q -12.236 548.579 -12.569 548.521 Q -12.902 548.463 -13.141 548.437 Q -13.380 548.410 -13.590 548.413 Q -13.801 548.415 -14.289 548.430 Q -14.777 548.445 -15.510 548.409 Q -16.244 548.374 -16.664 548.358 Q -17.084 548.342 -17.719 548.435 Q -18.353 548.529 -18.819 548.552 Q -19.286 548.576 -19.658 548.590 Q -20.030 548.604 -20.479 548.634 Q -20.928 548.663 -21.303 548.685 Q -21.678 548.708 -23.054 548.668 Q -24.431 548.628 -25.142 548.606 Q -25.854 548.584 -26.195 548.592 Q -26.536 548.600 -27.124 548.638 Q -27.711 548.676 -28.111 548.695 Q -28.512 548.715 -28.764 548.727 Q -29.016 548.740 -29.631 548.799 Q -30.246 548.859 -30.904 548.906 Q -31.562 548.952 -32.033 548.948 Q -32.503 548.944 -32.713 548.944 Q -32.924 548.943 -33.644 548.936 Q -34.365 548.929 -34.785 548.942 Q -35.206 548.956 -35.860 548.935 Q -36.514 548.913 -36.849 548.879 Q -37.184 548.845 -37.408 548.824 Q -37.632 548.804 -38.200 548.748 Q -38.769 548.691 -39.661 548.642 Q -40.554 548.592 -41.171 548.550 Q -41.787 548.509 -42.292 548.449 Q -42.796 548.390 -43.216 548.349 Q -43.637 548.308 -44.117 548.262 Q -44.597 548.215 -45.850 548.240 Q -47.102 548.264 -47.729 548.281 Q -48.356 548.298 -48.688 548.293 Q -49.021 548.287 -49.278 548.284 Q -49.536 548.281 -49.754 548.286 Q -49.972 548.292 -50.324 548.376 \"></path>\n        <path id=\"STROKE_2536fdb0-f637-4676-852d-313aa4fd0f9d\" opacity=\"0.325\" fill=\"#9bc1e6\" stroke=\"#9bc1e6\" strokeWidth=\"0.500\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M 28.224 568.083 L 28.190 568.167 Q 27.936 568.431 27.749 568.466 Q 27.562 568.500 27.403 568.546 Q 27.245 568.592 27.133 568.622 Q 27.020 568.652 26.810 568.697 Q 26.599 568.742 26.359 568.769 Q 26.118 568.796 25.763 568.817 Q 25.408 568.838 25.244 568.850 Q 25.080 568.861 24.711 568.873 Q 24.341 568.884 23.614 568.861 Q 22.886 568.837 22.439 568.779 Q 21.991 568.721 21.201 568.713 Q 20.410 568.705 19.821 568.718 Q 19.232 568.732 18.777 568.802 Q 18.322 568.872 18.040 568.872 Q 17.758 568.871 17.212 568.852 Q 16.667 568.832 16.330 568.784 Q 15.992 568.736 15.566 568.741 Q 15.140 568.746 14.312 568.738 Q 13.485 568.729 13.070 568.639 Q 12.655 568.549 11.820 568.453 Q 10.985 568.356 10.361 568.337 Q 9.736 568.318 8.854 568.240 Q 7.973 568.162 7.425 568.188 Q 6.877 568.215 6.582 568.225 Q 6.287 568.235 5.771 568.237 Q 5.255 568.239 5.064 568.246 Q 4.872 568.252 4.502 568.309 Q 4.131 568.367 3.427 568.458 Q 2.723 568.549 2.290 568.478 Q 1.857 568.406 1.337 568.330 Q 0.816 568.253 0.399 568.287 Q -0.018 568.321 -0.245 568.334 Q -0.472 568.348 -0.740 568.349 Q -1.009 568.351 -1.520 568.312 Q -2.030 568.274 -2.595 568.185 Q -3.160 568.095 -3.461 568.174 Q -3.762 568.253 -4.134 568.344 Q -4.506 568.434 -4.812 568.392 Q -5.119 568.351 -5.494 568.315 Q -5.869 568.280 -6.132 568.351 Q -6.396 568.422 -6.813 568.472 Q -7.230 568.522 -7.501 568.433 Q -7.772 568.345 -7.942 568.283 Q -8.111 568.221 -8.299 568.229 Q -8.486 568.237 -8.767 568.251 Q -9.048 568.265 -9.079 568.189 Q -9.110 568.114 -9.130 568.059 Q -9.149 568.004 -9.194 567.904 Q -9.238 567.804 -9.279 567.608 Q -9.320 567.412 -9.310 567.317 Q -9.301 567.222 -9.295 567.013 Q -9.289 566.804 -9.273 566.547 Q -9.258 566.290 -9.262 565.891 Q -9.267 565.493 -9.265 565.308 Q -9.263 565.123 -9.298 564.871 Q -9.334 564.619 -9.359 564.371 Q -9.384 564.123 -9.380 564.042 Q -9.377 563.960 -9.395 563.848 Q -9.414 563.736 -9.419 563.561 Q -9.425 563.387 -9.425 563.050 Q -9.425 562.712 -9.492 562.502 Q -9.560 562.292 -9.660 561.938 Q -9.761 561.584 -9.732 561.389 Q -9.704 561.194 -9.701 560.863 Q -9.697 560.533 -9.730 560.151 Q -9.763 559.769 -9.687 559.536 Q -9.612 559.303 -9.520 558.950 Q -9.428 558.597 -9.463 558.299 Q -9.499 558.000 -9.556 557.674 Q -9.614 557.348 -9.602 557.225 Q -9.591 557.102 -9.593 556.967 Q -9.594 556.832 -9.609 556.688 Q -9.623 556.544 -9.692 556.379 Q -9.761 556.214 -9.858 555.881 Q -9.955 555.548 -9.883 555.244 Q -9.811 554.939 -9.786 554.320 Q -9.761 553.701 -9.811 553.517 Q -9.861 553.332 -9.879 553.261 Q -9.897 553.191 -9.914 553.079 Q -9.930 552.968 -9.923 552.713 Q -9.917 552.458 -9.904 552.019 Q -9.892 551.580 -9.879 551.384 Q -9.865 551.188 -9.758 551.027 Q -9.650 550.867 -9.651 550.813 Q -9.652 550.759 -9.658 550.601 Q -9.663 550.443 -9.658 550.248 Q -9.652 550.054 -9.560 549.934 Q -9.468 549.814 -9.449 549.758 Q -9.430 549.701 -9.420 549.598 Q -9.409 549.495 -9.384 549.338 Q -9.358 549.181 -9.286 549.011 Q -9.214 548.841 -9.175 548.724 Q -9.135 548.607 -9.055 548.560 Q -8.975 548.513 -8.777 548.464 Q -8.578 548.414 -8.344 548.412 Q -8.110 548.410 -7.929 548.447 Q -7.747 548.484 -7.419 548.511 Q -7.090 548.539 -6.706 548.511 Q -6.323 548.483 -6.157 548.493 Q -5.991 548.502 -5.963 548.510 Q -5.934 548.518 -5.849 548.532 Q -5.765 548.546 -5.676 548.568 Q -5.588 548.589 -5.475 548.616 Q -5.362 548.642 -5.304 548.662 Q -5.246 548.681 -5.107 548.684 Q -4.968 548.686 -4.807 548.682 Q -4.646 548.678 -4.425 548.634 Q -4.203 548.590 -3.984 548.545 Q -3.765 548.500 -3.492 548.533 Q -3.219 548.566 -2.656 548.593 Q -2.092 548.620 -1.574 548.573 Q -1.056 548.526 -0.628 548.591 Q -0.200 548.656 0.168 548.733 Q 0.537 548.809 0.836 548.781 Q 1.135 548.753 1.498 548.696 Q 1.862 548.638 2.347 548.651 Q 2.832 548.664 3.212 548.760 Q 3.591 548.857 3.932 548.850 Q 4.273 548.842 4.797 548.819 Q 5.322 548.796 5.801 548.837 Q 6.281 548.878 6.785 548.904 Q 7.288 548.931 8.068 548.910 Q 8.847 548.889 9.283 548.892 Q 9.718 548.896 10.129 548.892 Q 10.539 548.889 11.083 548.933 Q 11.627 548.978 12.502 549.069 Q 13.377 549.160 13.953 549.142 Q 14.529 549.124 14.814 549.166 Q 15.098 549.207 15.385 549.242 Q 15.671 549.276 15.901 549.244 Q 16.131 549.213 16.201 549.182 Q 16.271 549.151 16.384 549.100 Q 16.497 549.049 16.681 548.946 Q 16.865 548.844 16.979 548.821 Q 17.094 548.799 17.250 548.791 Q 17.406 548.783 17.594 548.866 Q 17.783 548.948 17.859 548.980 Q 17.839 548.975 17.838 548.975 Q 17.837 548.975 16.038 549.200 Q 14.240 549.426 14.310 549.277 Q 14.380 549.129 14.562 548.986 Q 14.745 548.843 14.960 548.792 Q 15.176 548.740 15.447 548.743 Q 15.718 548.746 16.187 548.791 Q 16.655 548.837 17.142 548.929 Q 17.628 549.022 18.355 549.156 Q 19.082 549.289 19.725 549.328 Q 20.368 549.366 20.578 549.352 Q 20.787 549.337 21.183 549.336 Q 21.580 549.334 22.151 549.313 Q 22.722 549.291 23.417 549.249 Q 24.112 549.206 24.536 549.128 Q 24.961 549.050 25.423 548.993 Q 25.884 548.936 26.274 548.971 Q 26.664 549.007 27.033 549.117 Q 27.403 549.227 27.514 549.379 Q 27.626 549.532 27.719 549.722 Q 27.813 549.912 27.865 550.188 Q 27.917 550.464 27.891 550.788 Q 27.865 551.111 27.938 551.528 Q 28.011 551.944 28.131 552.538 Q 28.251 553.132 28.277 553.381 Q 28.303 553.630 28.363 553.848 Q 28.424 554.066 28.574 554.386 Q 28.724 554.707 28.966 555.349 Q 29.208 555.991 29.270 556.435 Q 29.331 556.879 29.456 557.246 Q 29.580 557.613 29.593 557.800 Q 29.605 557.986 29.601 558.216 Q 29.597 558.446 29.608 558.742 Q 29.618 559.037 29.702 559.400 Q 29.785 559.763 29.852 560.125 Q 29.919 560.488 29.913 560.697 Q 29.907 560.905 29.847 561.137 Q 29.786 561.369 29.737 561.805 Q 29.689 562.241 29.748 562.615 Q 29.807 562.990 29.815 563.306 Q 29.824 563.622 29.817 563.761 Q 29.810 563.900 29.792 564.260 Q 29.693 564.336 29.648 564.380 Q 29.604 564.424 29.566 564.474 Q 29.528 564.523 29.497 564.578 Q 29.466 564.632 29.442 564.690 Q 29.419 564.748 29.403 564.808 Q 29.387 564.869 29.380 564.931 Q 29.372 564.993 29.373 565.017 Q 29.371 565.099 29.374 565.140 Q 29.377 565.182 29.382 565.207 L 29.383 565.215 L 29.383 565.217 Q 29.383 565.250 29.383 565.255 Q 29.355 565.335 29.349 565.354 Q 29.318 565.443 29.307 565.477 Q 29.273 565.573 29.254 565.633 Q 29.218 565.741 29.200 565.802 Q 29.165 565.909 29.136 566.001 Q 29.107 566.098 29.082 566.185 Q 29.052 566.279 29.037 566.324 Q 29.022 566.370 29.012 566.407 Q 28.982 566.506 28.962 566.578 Q 28.929 566.687 28.924 566.708 Q 28.892 566.806 28.877 566.857 Q 28.845 566.955 28.837 566.986 Q 28.806 567.087 28.801 567.111 Q 28.778 567.198 28.768 567.241 Q 28.758 567.284 28.758 567.285 Q 28.739 567.383 28.731 567.437 Q 28.719 567.517 28.712 567.568 Q 28.623 567.620 28.619 567.623 Q 28.526 567.688 28.483 567.726 Q 28.441 567.763 28.403 567.806 Q 28.366 567.848 28.338 567.889 Q 28.281 567.974 28.266 568.002 \"></path>\n        <path id=\"ERASER_8c562f53-2d72-456a-aa49-91e0934185b5\" opacity=\"1.000\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"5.754\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -74.635 534.202 Q -74.810 534.250 -75.479 534.138 Q -76.148 534.026 -76.705 534.000 Q -77.263 533.975 -77.829 534.105 Q -78.395 534.236 -78.815 534.505 Q -79.236 534.775 -79.485 534.994 Q -79.734 535.213 -80.227 536.000 Q -80.719 536.787 -81.160 537.752 Q -81.601 538.718 -81.967 539.650 Q -82.334 540.582 -82.580 541.638 Q -82.826 542.694 -82.941 543.410 Q -83.057 544.126 -83.114 544.529 Q -83.171 544.932 -83.201 545.189 Q -83.231 545.446 -83.392 546.602 Q -83.553 547.759 -83.926 549.502 Q -84.298 551.246 -84.759 553.446 Q -85.220 555.646 -85.465 556.740 Q -85.709 557.833 -85.816 558.304 Q -85.923 558.776 -86.190 559.624 Q -86.458 560.473 -86.694 561.062 Q -86.930 561.652 -87.156 562.289 Q -87.382 562.926 -87.503 563.313 Q -87.623 563.700 -87.944 564.934 Q -88.264 566.167 -88.473 566.886 Q -88.681 567.604 -88.775 567.966 Q -88.868 568.328 -89.161 569.020 Q -89.453 569.713 -89.638 570.082 Q -89.823 570.452 -90.139 570.912 Q -90.454 571.373 -90.644 571.645 Q -90.834 571.917 -91.118 572.708 Q -91.403 573.500 -91.711 574.573 Q -92.019 575.646 -92.813 580.097 \"></path>\n        <path id=\"ERASER_af29d1eb-faa9-4446-b7e3-d2e70cc18314\" opacity=\"1.000\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"6.477\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -86.488 545.100 Q -86.487 545.017 -86.543 544.486 L -86.567 544.486 Q -86.703 544.585 -86.557 546.435 Q -86.410 548.284 -86.323 549.478 Q -86.237 550.672 -86.225 551.706 Q -86.213 552.740 -86.331 553.667 Q -86.449 554.594 -86.662 555.375 Q -86.875 556.155 -87.546 558.137 Q -88.217 560.119 -88.559 561.137 Q -88.901 562.155 -89.089 562.659 Q -89.277 563.162 -89.454 563.479 Q -89.631 563.795 -89.967 564.257 Q -90.302 564.719 -90.622 565.209 Q -90.610 565.257 -90.104 563.549 \"></path>\n        <path id=\"ERASER_ad983bc3-ab12-454b-aec6-3f0d673b583c\" opacity=\"1.000\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"6.740\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -90.020 544.784 Q -89.920 544.617 -89.673 544.267 Q -89.665 544.210 -89.859 545.697 Q -90.053 547.184 -90.105 548.211 Q -90.157 549.237 -90.274 550.677 Q -90.391 552.117 -90.515 553.470 Q -90.640 554.823 -90.732 555.994 Q -90.824 557.164 -90.881 557.912 Q -90.937 558.661 -90.955 560.660 Q -90.973 562.659 -90.943 563.716 Q -90.912 564.773 -90.874 565.285 Q -90.836 565.797 -90.710 567.512 Q -90.583 569.227 -90.580 570.811 Q -90.577 572.394 -90.578 573.314 Q -90.579 574.235 -90.497 574.874 Q -90.325 574.896 -90.277 572.664 Q -90.229 570.431 -90.238 568.895 Q -90.248 567.358 -90.241 566.631 Q -90.235 565.903 -90.287 564.514 Q -90.340 563.125 -90.392 562.385 Q -90.443 561.644 -90.466 561.266 Q -90.490 560.887 -90.671 559.183 Q -90.853 557.480 -91.097 555.845 Q -91.341 554.211 -91.645 552.888 Q -91.949 551.564 -92.209 550.665 Q -92.470 549.765 -92.619 549.263 Q -92.769 548.762 -92.859 548.441 Q -92.950 548.121 -93.297 548.057 Q -93.520 548.126 -93.658 549.586 Q -93.796 551.047 -93.872 552.266 Q -93.948 553.484 -93.981 554.077 Q -94.013 554.669 -94.152 556.994 Q -94.291 559.319 -94.391 561.026 Q -94.492 562.732 -94.538 563.722 Q -94.584 564.711 -94.649 565.835 Q -94.714 566.959 -94.814 569.172 Q -94.819 569.172 -94.829 569.172 Q -94.879 569.081 -94.901 568.159 Q -94.923 567.237 -95.038 564.245 Q -95.153 561.252 -95.240 559.708 Q -95.326 558.163 -95.388 557.467 Q -95.449 556.771 -95.487 556.286 Q -95.524 555.802 -95.665 554.510 Q -95.807 553.218 -95.907 552.513 Q -96.007 551.808 -96.073 551.485 Q -96.138 551.162 -96.240 551.054 Q -96.342 550.946 -96.459 550.951 Q -96.576 550.956 -96.772 550.995 Q -96.968 551.034 -97.257 551.669 Q -97.546 552.303 -97.768 554.111 Q -97.990 555.918 -98.067 557.111 Q -98.145 558.305 -98.201 559.185 Q -98.258 560.065 -98.310 561.424 Q -98.362 562.784 -98.358 564.070 Q -98.354 565.357 -98.336 566.298 Q -98.318 567.239 -97.730 568.998 Q -97.786 569.038 -97.975 569.054 Q -98.163 569.070 -98.422 568.734 Q -98.681 568.398 -98.868 567.780 Q -99.056 567.162 -99.205 566.373 Q -99.354 565.584 -99.417 565.118 Q -99.479 564.651 -99.551 564.280 Q -99.624 563.910 -99.996 561.132 Q -100.368 558.354 -100.521 556.888 Q -100.675 555.421 -100.728 554.745 Q -100.781 554.068 -100.836 553.565 Q -100.892 553.063 -101.037 550.716 Q -101.183 548.369 -101.256 546.898 Q -101.330 545.427 -101.224 544.291 Q -101.094 544.170 -100.656 544.211 Q -100.218 544.251 -99.828 544.535 Q -99.437 544.819 -99.239 545.073 Q -99.041 545.326 -98.956 545.947 Q -98.871 546.569 -98.750 547.299 \"></path>\n        <path id=\"ERASER_c4e101e2-7d10-4654-8a0a-e85ef0e11ff0\" opacity=\"1.000\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"6.402\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -79.478 547.671 Q -79.401 547.750 -79.237 548.440 Q -79.073 549.131 -79.087 550.045 Q -79.101 550.959 -79.479 552.615 Q -79.858 554.270 -80.136 555.227 Q -80.415 556.184 -80.601 556.843 Q -80.787 557.502 -80.886 557.843 Q -80.985 558.184 -81.428 559.501 Q -81.871 560.818 -82.266 562.179 Q -82.661 563.540 -82.848 564.502 Q -83.035 565.463 -83.136 565.893 Q -83.236 566.323 -83.216 566.908 Q -83.196 567.493 -83.045 568.058 Q -82.893 568.624 -82.711 569.007 Q -82.528 569.390 -82.418 569.562 Q -82.309 569.734 -82.018 569.757 Q -81.728 569.781 -81.855 569.740 Q -81.982 569.699 -81.925 569.681 Q -81.869 569.664 -81.837 569.600 Q -81.806 569.537 -81.569 568.602 Q -81.333 567.666 -81.206 566.832 Q -81.079 565.998 -80.892 564.841 Q -80.704 563.684 -80.429 561.539 Q -80.154 559.394 -80.029 558.223 Q -79.904 557.051 -79.854 556.451 Q -79.803 555.851 -79.746 555.240 Q -79.689 554.630 -79.602 553.398 Q -79.514 552.167 -79.537 551.215 Q -79.559 550.263 -79.552 549.707 Q -79.546 549.150 -79.867 548.410 Q -80.174 548.367 -80.258 550.118 Q -80.342 551.869 -80.566 556.010 Q -80.789 560.152 -80.907 562.235 Q -81.025 564.318 -81.091 565.194 Q -81.157 566.070 -81.197 566.473 Q -81.237 566.876 -81.249 567.583 Q -81.261 568.291 -81.286 568.676 Q -81.311 569.062 -81.285 569.310 Q -81.260 569.558 -81.060 569.600 Q -80.860 569.643 -80.652 569.628 Q -80.444 569.613 -80.174 569.027 Q -79.903 568.440 -79.592 567.352 Q -79.280 566.264 -78.831 564.505 Q -78.383 562.745 -78.025 561.117 Q -77.667 559.489 -77.405 557.921 Q -77.144 556.352 -76.978 555.134 Q -76.811 553.917 -76.731 553.328 Q -76.651 552.739 -76.410 551.192 Q -76.170 549.644 -76.053 548.227 Q -75.937 546.809 -76.047 545.658 L -76.056 545.658 Q -76.187 545.661 -75.920 547.517 Q -75.653 549.372 -75.444 551.184 Q -75.236 552.997 -75.123 554.334 Q -75.010 555.672 -74.977 557.283 Q -74.944 558.894 -74.926 559.813 Q -74.908 560.733 -74.971 562.221 Q -75.033 563.709 -75.129 564.651 Q -75.226 565.593 -75.485 567.219 Q -75.151 567.326 -74.719 565.620 Q -74.287 563.915 -74.059 562.533 Q -73.832 561.151 -73.639 560.007 Q -73.447 558.863 -73.231 557.330 Q -73.015 555.797 -72.910 555.007 Q -72.805 554.218 -72.633 552.745 Q -72.461 551.272 -72.328 549.795 Q -72.195 548.318 -72.173 547.411 Q -72.151 546.503 -72.182 545.930 Q -72.213 545.356 -72.537 544.908 Q -72.602 544.893 -72.745 545.070 Q -72.889 545.248 -73.030 545.567 Q -73.171 545.886 -73.313 547.131 Q -73.454 548.376 -73.504 549.073 Q -73.553 549.769 -73.824 553.163 Q -74.094 556.557 -74.305 558.628 Q -74.516 560.698 -74.655 561.779 Q -74.794 562.860 -74.983 564.078 Q -75.173 565.296 -75.409 566.436 Q -75.402 566.361 -74.996 564.057 \"></path>\n        <path id=\"ERASER_ed8fe9a9-4f31-4022-8a8c-9d3b8fafd4d6\" opacity=\"1.000\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"6.201\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -65.856 544.852 Q -65.856 544.852 -65.864 544.886 Q -65.871 544.919 -66.035 545.169 Q -66.198 545.419 -66.435 546.018 Q -66.672 546.617 -66.838 547.404 Q -67.005 548.190 -67.206 549.752 Q -67.407 551.313 -67.509 552.220 Q -67.611 553.126 -67.656 553.587 Q -67.702 554.049 -67.903 556.103 Q -68.103 558.157 -68.204 559.221 Q -68.305 560.284 -68.353 560.815 Q -68.401 561.346 -68.497 562.865 Q -68.592 564.385 -68.674 565.390 Q -68.756 566.394 -68.839 567.135 Q -68.921 567.875 -68.957 568.533 Q -68.993 569.190 -69.054 569.701 Q -69.116 570.211 -69.259 570.588 Q -69.402 570.964 -69.525 571.173 Q -69.648 571.382 -69.891 571.450 Q -70.008 571.398 -70.096 570.073 \"></path>\n        <path id=\"ERASER_f6dfb52b-f3b1-4c4d-afa3-d0eb54d52955\" opacity=\"1.000\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"6.296\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -64.678 540.352 Q -64.505 540.248 -64.346 540.792 Q -64.187 541.336 -64.117 541.889 Q -64.046 542.441 -64.003 542.840 Q -63.960 543.239 -63.867 544.007 Q -63.773 544.776 -63.767 546.505 Q -63.760 548.234 -63.766 549.143 Q -63.773 550.053 -63.939 552.048 Q -64.105 554.044 -64.182 555.448 Q -64.258 556.852 -64.253 557.773 Q -64.247 558.693 -64.065 559.709 Q -63.883 560.724 -63.777 561.474 Q -63.672 562.223 -63.719 562.845 Q -63.767 563.466 -63.839 563.773 Q -63.912 564.080 -64.024 564.513 Q -64.136 564.946 -64.335 565.677 Q -64.534 566.409 -64.869 567.974 Q -65.204 569.539 -65.417 570.432 Q -65.631 571.325 -65.911 572.669 Q -66.191 574.013 -66.348 574.804 Q -66.504 575.595 -66.612 576.146 Q -66.612 576.112 -66.525 575.818 \"></path>\n        <path id=\"ERASER_9ee0f957-42b8-4760-9982-40ac3834bcac\" opacity=\"1.000\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"5.932\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -61.555 543.336 Q -61.495 543.259 -61.357 542.703 Q -61.415 542.572 -61.112 543.661 Q -60.810 544.750 -60.616 546.071 Q -60.423 547.392 -60.369 548.034 Q -60.316 548.676 -60.310 548.998 Q -60.305 549.320 -60.147 550.374 Q -59.990 551.429 -59.893 552.315 Q -59.795 553.201 -59.827 554.104 Q -59.859 555.006 -59.961 555.790 Q -60.064 556.574 -60.216 558.671 Q -60.368 560.768 -60.477 561.937 Q -60.586 563.106 -60.697 563.920 Q -60.807 564.733 -60.881 565.230 Q -60.954 565.727 -61.265 566.972 Q -61.575 568.217 -61.780 568.893 Q -61.984 569.570 -62.091 570.087 Q -62.197 570.604 -62.268 571.325 Q -62.338 572.046 -62.325 572.715 Q -62.312 573.384 -62.291 573.755 Q -62.270 574.127 -62.446 574.438 Q -62.605 574.419 -62.619 573.670 \"></path>\n        <path id=\"ERASER_4d525ddd-afea-4f8b-9b0c-262de0d345fd\" opacity=\"1.000\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"6.111\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -61.194 548.622 Q -61.170 548.612 -61.070 548.543 Q -60.971 548.474 -60.825 548.026 Q -60.806 548.002 -60.799 548.021 Q -60.792 548.041 -60.792 548.029 Q -60.792 548.018 -60.755 548.136 Q -60.718 548.254 -60.622 548.405 Q -60.525 548.556 -60.413 548.632 Q -60.300 548.708 -60.234 548.716 Q -60.169 548.724 -60.180 548.721 Q -60.191 548.718 -60.135 548.731 Q -60.079 548.744 -60.056 548.636 Q -60.033 548.529 -60.002 548.381 Q -59.971 548.234 -59.930 548.182 Q -59.889 548.130 -59.865 548.087 Q -59.841 548.044 -59.820 548.009 Q -59.798 547.974 -59.809 547.982 Q -59.820 547.991 -59.603 547.768 Q -59.748 547.844 -59.756 548.063 Q -59.764 548.282 -59.710 548.696 Q -59.656 549.110 -59.588 549.290 Q -59.521 549.470 -59.486 549.511 Q -59.452 549.551 -59.418 549.597 Q -59.385 549.643 -59.352 549.696 Q -59.320 549.750 -59.328 549.742 Q -59.336 549.734 -59.338 549.733 Q -59.339 549.731 -59.298 549.864 Q -59.257 549.997 -59.208 550.136 Q -59.158 550.275 -59.143 550.376 Q -59.127 550.476 -59.150 550.547 Q -59.172 550.618 -59.173 550.612 Q -59.173 550.606 -59.170 550.605 Q -59.167 550.604 -59.191 550.626 Q -59.216 550.649 -59.269 550.709 Q -59.322 550.768 -59.320 550.760 Q -59.319 550.751 -59.317 550.753 Q -59.315 550.754 -59.337 550.771 Q -59.359 550.789 -59.408 550.848 Q -59.458 550.906 -59.446 550.912 Q -59.434 550.917 -59.438 550.920 Q -59.442 550.924 -59.440 550.986 Q -59.439 551.049 -59.443 551.051 Q -59.447 551.053 -59.447 551.065 Q -59.447 551.076 -59.452 551.123 Q -59.457 551.169 -59.451 551.311 Q -59.444 551.453 -59.409 551.791 Q -59.374 552.129 -59.377 552.354 Q -59.379 552.579 -59.387 552.657 Q -59.395 552.735 -59.388 552.906 Q -59.381 553.076 -59.370 553.162 Q -59.359 553.248 -59.343 553.290 Q -59.327 553.331 -59.336 553.296 Q -59.345 553.260 -59.305 553.395 Q -59.266 553.531 -59.235 553.675 Q -59.205 553.819 -59.200 553.906 Q -59.195 553.994 -59.194 554.038 Q -59.192 554.082 -59.192 554.066 Q -59.192 554.049 -59.181 554.127 Q -59.170 554.205 -59.183 554.723 Q -59.195 555.241 -59.187 555.623 Q -59.180 556.006 -59.142 556.160 Q -59.104 556.314 -59.099 556.388 Q -59.094 556.463 -59.095 556.500 Q -59.096 556.538 -59.095 556.548 Q -59.094 556.558 -59.096 556.547 Q -59.098 556.537 -59.037 556.831 Q -58.977 557.125 -58.968 557.347 Q -58.958 557.569 -58.960 557.689 Q -58.963 557.809 -58.957 557.925 Q -58.952 558.041 -58.948 557.991 Q -58.944 557.942 -58.953 558.073 Q -58.962 558.204 -58.951 558.489 Q -58.939 558.773 -58.909 558.927 Q -58.879 559.081 -58.871 559.149 Q -58.863 559.218 -58.857 559.261 Q -58.852 559.304 -58.864 559.254 Q -58.877 559.204 -58.815 559.578 Q -58.752 559.951 -58.728 560.183 Q -58.704 560.414 -58.710 560.494 Q -58.716 560.574 -58.715 560.612 Q -58.713 560.649 -58.714 560.682 Q -58.715 560.716 -58.713 560.733 Q -58.711 560.750 -58.714 560.744 Q -58.718 560.738 -58.708 560.761 Q -58.699 560.784 -58.681 560.957 Q -58.663 561.129 -58.664 561.216 Q -58.666 561.302 -58.666 561.389 Q -58.665 561.476 -58.666 561.454 Q -58.667 561.433 -58.665 561.532 Q -58.664 561.632 -58.665 561.596 Q -58.667 561.561 -58.665 561.613 Q -58.662 561.665 -58.649 561.835 Q -58.635 562.004 -58.629 562.094 Q -58.622 562.184 -58.619 562.249 Q -58.616 562.315 -58.617 562.385 Q -58.617 562.454 -58.617 562.466 Q -58.617 562.478 -58.617 562.507 Q -58.617 562.537 -58.617 562.505 Q -58.617 562.474 -58.617 562.595 Q -58.617 562.715 -58.617 562.814 Q -58.617 562.913 -58.617 562.977 Q -58.617 563.040 -58.617 563.030 Q -58.617 563.020 -58.617 563.018 Q -58.617 563.016 -58.616 563.046 Q -58.615 563.077 -58.616 563.047 Q -58.617 563.017 -58.620 563.215 Q -58.622 563.413 -58.611 563.578 Q -58.601 563.743 -58.596 563.831 Q -58.590 563.920 -58.580 563.982 Q -58.570 564.044 -58.567 564.061 Q -58.565 564.077 -58.566 564.074 Q -58.568 564.071 -58.552 564.130 Q -58.537 564.189 -58.528 564.270 Q -58.520 564.350 -58.520 564.355 Q -58.520 564.360 -58.520 564.364 Q -58.520 564.369 -58.522 564.423 Q -58.523 564.478 -58.518 564.542 Q -58.513 564.605 -58.502 564.724 Q -58.491 564.843 -58.485 564.970 Q -58.581 564.927 -58.599 564.902 \"></path>\n        <path id=\"STROKE_9c10746e-bc2a-49ef-a090-88a69f1b9c6d\" opacity=\"0.706\" fill=\"#4378c3\" stroke=\"#4378c3\" strokeWidth=\"0.500\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -58.284 547.613 Q -58.248 547.621 -58.152 547.592 Q -58.154 547.447 -58.155 547.491 Q -58.192 547.381 -58.189 547.401 Q -58.136 547.410 -58.352 547.295 Q -58.327 547.289 -58.427 547.368 Q -58.528 547.447 -58.854 547.431 Q -59.181 547.416 -59.356 547.436 Q -59.530 547.455 -59.595 547.428 Q -59.660 547.400 -59.720 547.355 Q -59.780 547.310 -59.838 547.268 Q -59.896 547.225 -59.896 547.225 Q -59.897 547.224 -59.980 547.138 Q -60.064 547.052 -60.266 547.033 Q -60.469 547.014 -60.618 546.994 Q -60.767 546.975 -60.859 546.969 Q -60.951 546.962 -60.996 546.982 Q -61.042 547.002 -61.048 547.008 Q -61.054 547.013 -61.055 547.007 Q -61.055 547.001 -61.088 547.044 Q -61.120 547.087 -61.471 547.121 Q -61.822 547.155 -62.001 547.164 Q -62.180 547.173 -62.418 547.205 Q -62.655 547.236 -62.788 547.224 Q -62.921 547.212 -63.116 547.173 Q -63.312 547.135 -63.402 547.122 Q -63.492 547.110 -63.473 547.107 Q -63.454 547.103 -63.745 547.117 Q -64.036 547.132 -64.336 547.121 Q -64.637 547.109 -64.787 547.067 Q -64.938 547.026 -64.994 547.044 Q -65.050 547.063 -65.302 547.071 Q -65.554 547.079 -65.764 547.046 Q -65.974 547.013 -66.105 547.017 Q -66.237 547.021 -66.317 547.055 Q -66.398 547.088 -66.453 547.105 Q -66.509 547.122 -66.543 547.127 Q -66.577 547.133 -66.561 547.130 Q -66.545 547.127 -66.616 547.142 Q -66.687 547.156 -67.254 547.151 Q -67.821 547.145 -68.429 547.150 Q -69.036 547.154 -69.331 547.185 Q -69.625 547.216 -69.858 547.166 Q -70.090 547.117 -70.297 547.100 Q -70.504 547.083 -70.909 547.097 Q -71.315 547.111 -71.539 547.126 Q -71.763 547.140 -71.854 547.162 Q -71.944 547.185 -71.994 547.192 Q -72.043 547.199 -72.097 547.210 Q -72.151 547.220 -72.134 547.218 Q -72.118 547.215 -72.272 547.216 Q -72.426 547.217 -72.674 547.296 Q -72.921 547.375 -73.110 547.425 Q -73.298 547.475 -73.591 547.472 Q -73.885 547.469 -74.246 547.498 Q -74.608 547.526 -74.793 547.530 Q -74.977 547.534 -75.118 547.533 Q -75.258 547.531 -75.381 547.532 Q -75.504 547.534 -75.486 547.537 Q -75.469 547.540 -75.846 547.531 Q -76.224 547.522 -76.536 547.549 Q -76.849 547.576 -77.099 547.610 Q -77.349 547.645 -77.478 547.637 Q -77.608 547.629 -77.673 547.631 Q -77.739 547.633 -77.776 547.633 Q -77.813 547.633 -77.849 547.636 Q -77.885 547.639 -77.899 547.640 Q -77.914 547.641 -77.952 547.646 Q -77.991 547.651 -78.021 547.654 Q -78.051 547.657 -78.026 547.659 Q -78.001 547.661 -78.334 547.677 Q -78.667 547.694 -78.889 547.703 Q -79.110 547.712 -79.236 547.754 Q -79.361 547.797 -79.393 547.802 Q -79.424 547.807 -79.443 547.811 Q -79.461 547.815 -79.463 547.815 Q -79.465 547.815 -79.460 547.813 Q -79.455 547.811 -79.458 547.813 Q -79.460 547.816 -79.560 547.826 Q -79.659 547.837 -79.773 547.836 Q -79.887 547.835 -79.945 547.831 Q -80.003 547.826 -80.034 547.818 Q -80.064 547.810 -80.071 547.808 Q -80.078 547.805 -80.090 547.806 Q -80.101 547.806 -80.183 547.776 Q -80.266 547.745 -80.370 547.699 Q -80.474 547.653 -80.592 547.627 Q -80.709 547.601 -80.758 547.591 Q -80.806 547.581 -80.889 547.569 Q -80.972 547.557 -81.040 547.540 Q -81.107 547.523 -81.205 547.532 Q -81.302 547.540 -81.327 547.549 Q -81.352 547.558 -81.411 547.586 Q -81.469 547.615 -81.490 547.628 Q -81.511 547.640 -81.645 547.688 Q -81.780 547.735 -81.986 547.805 Q -82.192 547.875 -82.326 547.937 Q -82.459 547.999 -82.551 548.028 Q -82.644 548.056 -82.720 548.074 Q -82.796 548.091 -83.004 548.122 Q -83.212 548.153 -83.537 548.153 Q -83.862 548.152 -84.014 548.153 Q -84.166 548.153 -84.228 548.153 Q -84.289 548.153 -84.340 548.153 Q -84.392 548.153 -84.438 548.153 Q -84.484 548.153 -84.501 548.152 Q -84.517 548.152 -84.639 548.152 Q -84.762 548.153 -84.834 548.156 Q -84.906 548.159 -84.931 548.159 Q -84.955 548.158 -85.050 548.159 Q -85.144 548.159 -85.195 548.160 Q -85.246 548.162 -85.291 548.158 Q -85.336 548.154 -85.439 548.156 Q -85.542 548.159 -85.612 548.178 Q -85.682 548.197 -85.758 548.208 Q -85.834 548.218 -85.870 548.219 Q -85.906 548.220 -85.970 548.225 Q -86.034 548.230 -86.006 548.222 Q -85.978 548.213 -86.141 548.260 Q -86.304 548.306 -86.504 548.332 Q -86.704 548.358 -86.814 548.354 Q -86.925 548.350 -86.992 548.350 Q -87.059 548.349 -87.043 548.348 Q -87.027 548.346 -87.230 548.352 Q -87.433 548.358 -87.659 548.312 Q -87.886 548.267 -88.006 548.215 Q -88.126 548.162 -88.234 548.142 Q -88.341 548.121 -88.392 548.115 Q -88.442 548.109 -88.500 548.101 Q -88.558 548.093 -88.633 548.074 Q -88.708 548.055 -88.746 548.047 Q -88.784 548.038 -88.797 548.037 Q -88.810 548.035 -88.861 548.024 Q -88.912 548.013 -89.032 548.014 Q -89.153 548.015 -89.241 548.014 Q -89.328 548.014 -89.421 548.012 Q -89.515 548.010 -89.649 548.028 Q -89.783 548.045 -89.866 548.051 Q -89.949 548.056 -90.066 548.079 Q -90.184 548.102 -90.238 548.116 Q -90.291 548.130 -90.362 548.153 Q -90.434 548.176 -90.484 548.187 Q -90.534 548.199 -90.533 548.197 Q -90.532 548.196 -90.568 548.203 Q -90.603 548.211 -90.606 548.211 Q -90.610 548.211 -90.665 548.223 Q -90.721 548.234 -90.723 548.234 Q -90.725 548.234 -90.775 548.247 Q -90.825 548.260 -90.843 548.261 Q -90.862 548.262 -90.906 548.264 Q -90.950 548.266 -90.969 548.265 Q -90.988 548.264 -90.993 548.263 Q -90.998 548.262 -90.987 548.265 Q -90.975 548.267 -91.073 548.262 Q -91.171 548.257 -91.404 548.233 Q -91.637 548.209 -91.771 548.186 Q -91.906 548.163 -91.997 548.131 Q -92.087 548.098 -92.160 548.072 Q -92.232 548.046 -92.352 548.028 Q -92.471 548.010 -92.538 548.009 Q -92.604 548.009 -92.642 548.009 Q -92.681 548.009 -92.742 548.006 Q -92.804 548.004 -92.881 547.994 Q -92.959 547.984 -93.026 547.974 Q -93.094 547.963 -93.112 547.967 Q -93.131 547.972 -93.303 547.975 Q -93.475 547.978 -93.609 547.958 Q -93.742 547.939 -93.833 547.912 Q -93.924 547.885 -93.912 547.878 Q -93.901 547.871 -94.072 547.856 Q -94.243 547.840 -94.349 547.845 Q -94.454 547.851 -94.530 547.851 Q -94.606 547.852 -94.649 547.850 Q -94.692 547.848 -94.729 547.857 Q -94.765 547.865 -94.855 547.833 Q -94.944 547.802 -95.007 547.771 Q -95.069 547.740 -95.115 547.713 Q -95.162 547.686 -95.249 547.680 Q -95.335 547.674 -95.430 547.676 Q -95.525 547.677 -95.571 547.677 Q -95.618 547.676 -95.673 547.676 Q -95.728 547.677 -95.735 547.676 Q -95.743 547.676 -95.744 547.677 Q -95.745 547.678 -95.843 547.684 Q -95.941 547.689 -96.061 547.685 Q -96.181 547.680 -96.234 547.688 Q -96.288 547.695 -96.325 547.709 Q -96.362 547.723 -96.390 547.735 Q -96.418 547.746 -96.456 547.769 Q -96.493 547.791 -96.502 547.793 Q -96.511 547.795 -96.504 547.796 Q -96.496 547.798 -96.571 547.828 Q -96.646 547.858 -96.740 547.871 Q -96.834 547.883 -96.898 547.893 Q -96.961 547.902 -97.005 547.933 Q -97.048 547.964 -97.047 547.964 Q -97.046 547.964 -97.042 547.960 Q -97.038 547.955 -97.052 547.969 Q -97.066 547.983 -97.050 547.966 Q -97.035 547.948 -97.066 547.991 Q -97.097 548.034 -97.113 548.049 Q -97.129 548.064 -97.130 548.065 Q -97.131 548.066 -97.171 548.087 Q -97.211 548.107 -97.255 548.110 Q -97.300 548.112 -97.319 548.114 Q -97.338 548.115 -97.329 548.115 Q -97.319 548.114 -97.338 548.117 Q -97.356 548.120 -97.349 548.111 Q -97.341 548.102 -97.451 548.123 Q -97.561 548.145 -97.656 548.172 Q -97.750 548.199 -97.850 548.198 Q -97.951 548.198 -97.923 548.200 Q -97.895 548.202 -98.018 548.190 Q -98.142 548.179 -98.224 548.241 Q -98.306 548.302 -98.347 548.355 Q -98.388 548.408 -98.426 548.451 Q -98.465 548.494 -98.507 548.534 Q -98.549 548.573 -98.563 548.665 Q -98.577 548.757 -98.646 548.893 Q -98.715 549.029 -98.768 549.107 Q -98.822 549.184 -98.841 549.219 Q -98.861 549.254 -98.870 549.267 Q -98.879 549.280 -98.880 549.284 Q -98.880 549.287 -98.985 549.450 Q -99.090 549.612 -99.231 549.811 Q -99.372 550.010 -99.445 550.115 Q -99.518 550.220 -99.540 550.302 Q -99.561 550.383 -99.566 550.406 Q -99.571 550.429 -99.584 550.512 Q -99.597 550.595 -99.613 550.731 Q -99.629 550.866 -99.651 551.040 Q -99.673 551.215 -99.702 551.377 Q -99.730 551.539 -99.697 552.045 Q -99.664 552.551 -99.648 552.935 Q -99.631 553.320 -99.630 553.492 Q -99.629 553.665 -99.619 553.864 Q -99.610 554.063 -99.594 554.242 Q -99.578 554.422 -99.655 554.679 Q -99.732 554.936 -99.782 555.098 Q -99.831 555.261 -99.838 555.369 Q -99.845 555.476 -99.883 555.795 Q -99.921 556.113 -99.881 556.438 Q -99.840 556.762 -99.843 557.128 Q -99.846 557.493 -99.897 557.809 Q -99.948 558.124 -99.919 558.427 Q -99.890 558.731 -99.825 558.864 Q -99.761 558.997 -99.681 559.283 Q -99.601 559.569 -99.522 559.844 Q -99.443 560.120 -99.382 560.242 Q -99.321 560.364 -99.325 560.388 Q -99.329 560.412 -99.300 560.438 Q -99.271 560.464 -99.295 561.119 Q -99.319 561.774 -99.339 562.130 Q -99.358 562.486 -99.353 562.650 Q -99.348 562.814 -99.328 562.904 Q -99.307 562.995 -99.312 563.303 Q -99.317 563.611 -99.315 563.778 Q -99.313 563.944 -99.300 564.043 Q -99.286 564.141 -99.282 564.242 Q -99.279 564.343 -99.281 564.386 Q -99.282 564.430 -99.281 564.490 Q -99.280 564.549 -99.280 564.579 Q -99.280 564.609 -99.284 564.633 Q -99.288 564.657 -99.284 564.647 Q -99.281 564.638 -99.286 564.661 Q -99.292 564.684 -99.316 564.785 Q -99.340 564.885 -99.349 564.967 Q -99.358 565.049 -99.356 565.110 Q -99.355 565.171 -99.356 565.162 Q -99.356 565.153 -99.356 565.235 Q -99.356 565.316 -99.358 565.459 Q -99.360 565.602 -99.354 565.635 Q -99.348 565.668 -99.358 565.830 Q -99.368 565.991 -99.386 566.044 Q -99.403 566.096 -99.411 566.181 Q -99.418 566.265 -99.405 566.376 Q -99.392 566.488 -99.387 566.547 Q -99.381 566.607 -99.380 566.665 Q -99.378 566.723 -99.376 566.762 Q -99.374 566.801 -99.367 566.833 Q -99.360 566.864 -99.371 566.853 Q -99.382 566.842 -99.350 566.873 Q -99.318 566.904 -99.247 566.950 Q -99.176 566.996 -99.132 567.084 Q -99.088 567.173 -99.055 567.206 Q -99.021 567.239 -98.996 567.244 Q -98.971 567.250 -98.928 567.257 Q -98.885 567.264 -98.909 567.260 Q -98.932 567.257 -98.866 567.262 Q -98.799 567.267 -98.732 567.287 Q -98.665 567.306 -98.634 567.323 Q -98.602 567.340 -98.557 567.367 Q -98.512 567.394 -98.515 567.395 Q -98.518 567.396 -98.496 567.409 Q -98.475 567.423 -98.442 567.442 Q -98.409 567.462 -98.375 567.480 Q -98.342 567.498 -98.315 567.505 Q -98.288 567.513 -98.288 567.519 Q -98.289 567.526 -98.164 567.530 Q -98.039 567.534 -97.795 567.472 Q -97.551 567.410 -97.443 567.417 Q -97.334 567.423 -96.954 567.425 Q -96.574 567.426 -96.289 567.407 Q -96.004 567.388 -95.842 567.379 Q -95.681 567.371 -95.492 567.473 Q -95.304 567.575 -95.001 567.600 Q -94.699 567.625 -94.525 567.604 Q -94.352 567.583 -94.084 567.633 Q -93.816 567.683 -93.674 567.731 Q -93.531 567.778 -93.449 567.781 Q -93.368 567.784 -93.263 567.754 Q -93.159 567.725 -93.071 567.697 Q -92.983 567.670 -92.812 567.679 Q -92.640 567.688 -92.551 567.698 Q -92.462 567.707 -92.312 567.787 Q -92.163 567.866 -92.023 567.882 Q -91.884 567.898 -91.710 567.881 Q -91.537 567.865 -91.412 567.856 Q -91.287 567.847 -91.016 567.944 Q -90.744 568.042 -90.139 568.033 Q -89.533 568.025 -89.248 568.014 Q -88.963 568.002 -88.681 567.986 Q -88.400 567.970 -88.251 567.969 Q -88.102 567.968 -87.984 567.970 Q -87.865 567.972 -87.781 567.976 Q -87.697 567.979 -87.638 567.999 Q -87.580 568.019 -87.211 567.974 Q -86.843 567.928 -86.613 567.923 Q -86.382 567.917 -86.229 567.945 Q -86.076 567.973 -85.894 568.009 Q -85.713 568.046 -85.260 568.030 Q -84.807 568.014 -84.390 568.066 Q -83.973 568.117 -83.675 568.142 Q -83.377 568.168 -83.113 568.147 Q -82.850 568.126 -82.575 568.129 Q -82.300 568.132 -81.969 568.175 Q -81.638 568.218 -81.339 568.170 Q -81.040 568.122 -80.871 568.085 Q -80.703 568.048 -80.532 568.037 Q -80.362 568.026 -79.887 568.034 Q -79.413 568.042 -78.794 568.034 Q -78.174 568.026 -77.874 568.016 Q -77.574 568.006 -76.983 568.093 Q -76.393 568.181 -75.802 568.156 Q -75.211 568.131 -74.789 568.050 Q -74.367 567.968 -74.037 567.985 Q -73.706 568.002 -73.274 567.954 Q -72.842 567.905 -72.336 567.862 Q -71.830 567.820 -71.424 567.825 Q -71.019 567.830 -70.754 567.807 Q -70.489 567.785 -69.909 567.766 Q -69.330 567.748 -69.019 567.749 Q -68.709 567.751 -68.362 567.718 Q -68.015 567.684 -67.726 567.740 Q -67.438 567.796 -67.138 567.845 Q -66.838 567.893 -66.659 567.920 Q -66.480 567.946 -66.118 567.957 Q -65.757 567.968 -65.332 567.916 Q -64.907 567.864 -64.417 567.917 Q -63.926 567.970 -63.681 568.012 Q -63.435 568.054 -63.232 568.046 Q -63.028 568.039 -62.839 568.051 Q -62.649 568.063 -62.283 568.016 Q -61.917 567.968 -61.722 567.929 Q -61.527 567.889 -61.459 567.867 Q -61.392 567.844 -61.354 567.834 Q -61.317 567.823 -61.287 567.799 Q -61.257 567.776 -60.835 567.636 Q -60.413 567.496 -60.133 567.417 Q -59.853 567.338 -59.704 567.274 Q -59.556 567.209 -59.288 567.196 Q -59.020 567.183 -58.933 567.179 Q -58.846 567.175 -58.665 567.234 Q -58.483 567.293 -58.361 567.332 Q -58.240 567.372 -58.161 567.370 Q -58.082 567.368 -58.042 567.371 Q -58.002 567.375 -57.959 567.375 Q -57.915 567.375 -57.873 567.375 Q -57.831 567.375 -57.856 567.374 Q -57.880 567.374 -57.784 567.375 Q -57.688 567.375 -57.592 567.377 Q -57.496 567.378 -57.405 567.366 Q -57.315 567.353 -57.268 567.347 Q -57.220 567.342 -57.177 567.329 Q -57.133 567.316 -57.109 567.307 Q -57.085 567.299 -57.048 567.284 Q -57.010 567.269 -57.027 567.279 Q -57.044 567.290 -56.946 567.266 Q -56.848 567.241 -56.788 567.222 Q -56.728 567.202 -56.684 567.168 Q -56.641 567.133 -56.638 567.133 Q -56.635 567.133 -56.639 567.132 Q -56.643 567.132 -56.620 567.129 Q -56.596 567.126 -56.516 567.074 Q -56.436 567.022 -56.408 566.986 Q -56.379 566.949 -56.376 566.920 Q -56.374 566.890 -56.373 566.864 Q -56.372 566.838 -56.370 566.833 Q -56.367 566.827 -56.373 566.832 Q -56.378 566.836 -56.351 566.758 Q -56.324 566.679 -56.279 566.591 Q -56.234 566.502 -56.211 566.441 Q -56.189 566.380 -56.182 566.350 Q -56.176 566.319 -56.173 566.287 Q -56.170 566.255 -56.170 566.275 Q -56.171 566.295 -56.155 565.923 Q -56.139 565.550 -56.154 565.319 Q -56.168 565.087 -56.118 564.981 Q -56.068 564.874 -55.992 564.762 Q -55.917 564.650 -55.889 564.599 Q -55.861 564.548 -55.842 564.495 Q -55.822 564.441 -55.822 564.411 Q -55.821 564.380 -55.821 564.344 Q -55.821 564.308 -55.821 564.299 Q -55.821 564.290 -55.821 564.143 Q -55.821 563.996 -55.821 563.791 Q -55.821 563.586 -55.821 563.477 Q -55.821 563.367 -55.817 563.240 Q -55.812 563.114 -55.826 563.055 Q -55.839 562.995 -55.888 562.839 Q -55.938 562.682 -55.969 562.468 Q -56.000 562.254 -55.961 562.081 Q -55.922 561.909 -55.857 561.814 Q -55.792 561.720 -55.754 561.535 Q -55.717 561.349 -55.649 561.076 Q -55.581 560.804 -55.524 560.542 Q -55.468 560.280 -55.507 559.979 Q -55.545 559.678 -55.571 559.522 Q -55.598 559.365 -55.577 559.174 Q -55.557 558.983 -55.622 558.347 Q -55.686 557.710 -55.756 557.392 Q -55.825 557.074 -55.774 556.791 Q -55.722 556.509 -55.707 556.297 Q -55.692 556.086 -55.804 555.787 Q -55.916 555.489 -55.968 555.094 Q -56.020 554.698 -55.994 554.432 Q -55.968 554.167 -56.013 553.967 Q -56.058 553.766 -56.118 553.593 Q -56.179 553.420 -56.193 553.228 Q -56.207 553.036 -56.137 552.839 Q -56.066 552.643 -56.122 552.345 Q -56.178 552.048 -56.227 551.877 Q -56.276 551.707 -56.323 551.608 Q -56.370 551.509 -56.382 551.338 Q -56.395 551.167 -56.423 550.910 Q -56.452 550.653 -56.489 550.483 Q -56.526 550.314 -56.550 550.020 Q -56.575 549.727 -56.608 549.425 Q -56.640 549.122 -56.631 548.983 Q -56.621 548.844 -56.619 548.787 Q -56.618 548.729 -56.624 548.725 Q -56.629 548.720 -56.632 548.716 Q -56.634 548.711 -56.644 548.696 Q -56.654 548.682 -56.652 548.683 Q -56.650 548.683 -56.651 548.692 Q -56.652 548.701 -56.664 548.678 Q -56.676 548.655 -56.695 548.607 Q -56.713 548.558 -56.716 548.532 Q -56.718 548.506 -56.720 548.492 Q -56.721 548.478 -56.723 548.477 Q -56.725 548.476 -56.723 548.467 Q -56.721 548.458 -56.715 548.356 Q -56.709 548.254 -56.717 548.200 Q -56.725 548.146 -56.727 548.142 Q -56.729 548.138 -56.776 548.097 Q -56.822 548.056 -56.880 548.014 Q -56.937 547.972 -56.943 547.963 Q -56.949 547.954 -56.962 547.941 Q -56.974 547.928 -57.003 547.893 Q -57.033 547.859 -57.031 547.860 Q -57.029 547.860 -57.032 547.859 Q -57.035 547.858 -57.102 547.727 Q -57.079 547.747 -57.104 547.829 Q -57.129 547.910 -57.176 547.919 Q -57.223 547.929 -57.359 547.821 \"></path>\n        <path id=\"ERASER_edaf7b71-d1b4-405d-baad-01e7bdf6a470\" opacity=\"1.000\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2.592\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M 34.063 563.992 Q 34.067 563.951 34.179 563.667 Q 34.167 563.682 34.178 563.663 Q 34.188 563.645 34.115 563.741 Q 34.042 563.837 33.991 563.930 Q 33.940 564.023 33.911 564.049 Q 33.883 564.075 33.850 564.121 Q 33.817 564.166 33.746 564.115 Q 33.676 564.063 33.633 564.000 Q 33.589 563.936 33.556 563.899 Q 33.523 563.862 33.517 563.838 Q 33.512 563.813 33.392 563.784 Q 33.374 563.832 33.379 563.833 Q 33.376 563.885 33.376 563.887 Q 33.377 563.889 33.378 563.887 Q 33.378 563.893 33.379 563.896 Q 33.433 563.904 33.259 563.654 Q 33.219 563.602 33.176 563.730 Q 33.134 563.857 33.121 563.945 Q 33.108 564.033 33.058 564.118 Q 33.007 564.203 32.907 564.203 Q 32.806 564.202 32.701 564.244 Q 32.596 564.287 32.532 564.414 Q 32.468 564.542 32.455 564.738 Q 32.443 564.934 32.536 565.128 Q 32.556 565.124 32.727 565.061 Q 32.843 565.098 32.693 565.604 Q 32.682 565.650 32.652 565.566 Q 32.621 565.481 32.610 565.391 Q 32.598 565.301 32.476 564.994 Q 32.354 564.686 32.263 564.521 Q 32.173 564.356 32.124 564.230 Q 32.076 564.105 32.127 563.888 Q 32.178 563.671 32.207 563.440 Q 32.236 563.208 32.170 562.838 Q 32.221 562.845 32.297 562.715 Q 32.373 562.586 32.441 562.465 Q 32.508 562.344 32.633 562.273 Q 32.758 562.202 32.647 561.303 Q 32.670 561.278 32.704 561.316 Q 32.738 561.355 32.804 561.465 \"></path>\n        <path id=\"ERASER_7145d8ed-07cd-43e2-b27e-372408c6d186\" opacity=\"1.000\" fill=\"none\" stroke=\"#ffffff\" strokeWidth=\"2.824\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M 31.580 558.453 Q 31.563 558.356 31.500 557.515 Q 31.523 557.496 31.525 557.980 Q 31.527 558.464 31.505 559.033 Q 31.483 559.602 31.476 559.897 Q 31.468 560.193 31.465 560.465 Q 31.462 560.737 31.465 560.910 Q 31.469 561.084 31.502 561.174 Q 31.536 561.264 31.696 561.200 Q 31.694 561.303 31.621 561.525 Q 31.548 561.748 31.515 562.482 Q 31.519 562.437 31.410 562.120 Q 31.302 561.803 31.246 561.206 Q 31.190 560.609 31.183 560.318 Q 31.177 560.027 31.168 559.897 Q 31.160 559.767 31.118 559.717 Q 31.077 559.667 31.049 559.659 Q 31.021 559.651 31.025 559.652 Q 31.029 559.653 31.020 559.647 Q 31.012 559.640 30.821 559.656 Q 30.880 559.687 30.939 559.766 Q 30.997 559.844 31.017 559.959 Q 31.037 560.073 31.061 560.146 Q 31.086 560.218 30.846 561.384 Q 30.859 561.401 30.878 561.338 Q 30.884 561.397 30.892 561.474 Q 30.880 561.439 30.887 561.039 Q 30.894 560.639 30.863 560.241 Q 30.832 559.842 30.824 559.577 Q 30.816 559.311 30.860 559.120 Q 30.905 558.930 30.939 558.726 Q 30.974 558.521 30.962 558.466 Q 30.950 558.410 30.990 558.250 Q 31.029 558.090 31.035 557.910 Q 31.040 557.731 31.025 557.630 Q 31.010 557.530 31.053 557.428 Q 31.095 557.327 31.105 557.268 Q 31.114 557.208 31.102 557.077 Q 31.090 556.946 31.063 556.818 Q 31.035 556.690 30.997 556.539 Q 30.958 556.387 30.927 556.344 Q 30.897 556.299 30.887 556.282 Q 30.876 556.264 30.854 556.254 Q 30.831 556.243 30.826 556.245 Q 30.822 556.247 30.783 556.266 Q 30.744 556.285 30.748 556.289 Q 30.751 556.292 30.748 556.294 Q 30.746 556.296 30.751 556.287 Q 30.756 556.279 30.736 556.331 Q 30.716 556.383 30.649 556.536 Q 30.581 556.688 30.538 556.861 Q 30.495 557.034 30.505 557.202 Q 30.516 557.369 30.531 557.483 Q 30.546 557.596 30.494 557.774 Q 30.441 557.951 30.448 558.139 Q 30.455 558.326 30.529 558.684 Q 30.604 559.042 30.651 559.236 Q 30.697 559.430 30.760 559.672 Q 30.822 559.914 30.881 560.508 Q 30.939 561.102 30.959 561.452 Q 30.980 561.802 30.996 562.135 Q 31.012 562.467 30.998 562.668 Q 30.984 562.870 30.941 562.957 Q 30.898 563.044 30.860 563.310 Q 30.822 563.576 30.759 563.815 Q 30.695 564.054 30.670 564.332 Q 30.644 564.609 30.609 564.844 Q 30.574 565.079 30.582 565.279 Q 30.589 565.478 30.558 565.639 Q 30.527 565.799 30.509 565.874 Q 30.491 565.949 30.490 566.057 Q 30.488 566.164 30.494 566.210 Q 30.500 566.256 30.520 566.310 Q 30.539 566.365 30.544 566.413 Q 30.549 566.462 30.556 566.495 Q 30.563 566.529 30.569 566.555 Q 30.576 566.582 30.571 566.566 Q 30.566 566.551 30.587 566.601 Q 30.630 566.588 30.655 565.889 Q 30.681 565.190 30.661 564.578 Q 30.640 563.966 30.601 563.688 Q 30.561 563.411 30.575 563.196 Q 30.590 562.981 30.609 562.873 Q 30.629 562.764 30.627 562.566 Q 30.625 562.369 30.600 562.103 Q 30.575 561.837 30.609 561.489 Q 30.643 561.142 30.655 560.960 Q 30.666 560.779 30.659 560.682 Q 30.652 560.584 30.644 560.419 Q 30.635 560.253 30.603 560.117 Q 30.570 559.981 30.507 559.868 Q 30.560 559.859 30.742 559.784 Q 30.924 559.709 31.102 559.674 Q 31.279 559.639 31.614 559.758 \"></path>\n      </g>\n      <g id=\"Pen\" opacity=\"1.000\">\n        <path id=\"STROKE_401f3ea4-81b6-488c-8aeb-06fa0afca65f\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -90.183 553.660 Q -90.185 553.700 -89.568 552.863 Q -89.680 552.948 -90.409 555.039 Q -91.137 557.131 -91.550 558.880 Q -91.962 560.630 -91.861 562.144 Q -91.460 562.446 -90.017 561.643 Q -88.574 560.841 -86.442 560.113 Q -86.758 560.156 -86.770 560.179 \"></path>\n        <path id=\"STROKE_22818d48-e9dd-4ba8-8efb-7164d6401f7b\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -89.584 556.464 Q -89.326 556.326 -89.380 556.363 Q -89.316 556.335 -89.219 556.286 Q -89.123 556.237 -89.122 556.226 Q -89.120 556.215 -89.082 556.174 Q -89.043 556.134 -88.011 555.692 Q -86.978 555.250 -85.879 554.390 \"></path>\n        <path id=\"STROKE_d58626e6-99d9-41cd-9406-715198c6b790\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -89.104 552.019 Q -89.112 552.019 -89.120 552.019 Q -89.020 552.412 -87.800 552.473 Q -86.579 552.534 -85.704 552.449 Q -84.828 552.364 -84.024 552.128 Q -83.221 551.891 -82.382 551.023 \"></path>\n        <path id=\"STROKE_300efc5b-72ae-419a-8c44-30601a52c3f9\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -83.346 558.488 Q -83.396 558.520 -83.195 558.253 Q -83.143 558.422 -83.301 558.717 Q -83.458 559.012 -83.540 559.563 Q -83.622 560.115 -83.630 560.407 Q -83.639 560.700 -83.494 560.857 Q -83.349 561.013 -83.067 561.149 Q -82.785 561.284 -82.326 561.168 Q -81.868 561.052 -80.678 559.812 L -80.655 559.822 Q -80.696 559.920 -80.538 561.605 Q -80.326 561.869 -79.308 560.578 \"></path>\n        <path id=\"STROKE_2b440dc2-5b3e-4d3f-b8a9-9c2f43e5d507\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -77.979 560.691 Q -77.990 560.691 -78.062 560.691 Q -78.113 560.327 -78.099 560.394 Q -78.089 560.358 -78.107 560.084 Q -78.124 559.810 -78.004 559.447 Q -77.884 559.083 -77.342 558.884 Q -76.800 558.684 -75.301 559.449 \"></path>\n        <path id=\"STROKE_038ba082-1882-43d1-b470-3470a68b0546\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -73.133 559.996 Q -73.042 560.005 -72.443 560.113 Q -72.459 559.950 -72.406 560.003 Q -72.352 560.055 -72.510 559.864 Q -72.669 559.673 -73.091 559.658 Q -73.514 559.643 -73.821 559.682 Q -74.128 559.722 -74.332 559.894 Q -74.536 560.066 -74.612 560.399 Q -74.687 560.732 -74.649 560.903 Q -74.611 561.075 -74.335 561.251 Q -74.059 561.428 -73.520 561.478 Q -72.981 561.529 -72.589 561.488 Q -72.197 561.448 -71.893 561.086 Q -71.589 560.725 -71.726 559.781 \"></path>\n        <path id=\"STROKE_d3d710d9-5562-40ef-8622-5218d5333215\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -70.152 559.531 Q -70.094 559.540 -69.790 561.192 Q -69.486 562.844 -68.730 565.468 Q -68.730 565.378 -68.844 564.656 \"></path>\n        <path id=\"STROKE_b487636f-b33b-4983-9265-6520bebae5dc\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -69.590 559.019 Q -69.580 559.211 -69.423 559.250 Q -69.417 559.203 -69.337 558.816 Q -69.258 558.429 -69.188 558.113 Q -69.119 557.796 -68.711 557.704 Q -68.303 557.611 -68.013 557.663 Q -67.724 557.715 -67.476 557.893 Q -67.229 558.072 -67.089 558.171 Q -66.949 558.271 -66.701 558.711 Q -66.454 559.151 -66.539 559.632 Q -66.625 560.112 -66.986 560.556 Q -67.347 560.999 -67.807 561.188 Q -68.267 561.377 -68.550 561.371 Q -68.832 561.366 -69.036 561.281 Q -69.240 561.195 -69.355 560.476 \"></path>\n        <path id=\"STROKE_ecd180f9-f58e-4ef9-ba75-cda357cd7f56\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -65.035 559.500 Q -64.923 559.827 -64.936 559.789 Q -64.908 559.950 -64.823 560.253 Q -64.738 560.555 -64.486 560.625 Q -64.234 560.694 -64.066 560.616 Q -63.897 560.538 -63.783 560.476 Q -63.669 560.414 -63.473 559.994 Q -63.277 559.574 -63.210 559.273 Q -63.142 558.973 -63.133 558.614 Q -63.123 558.255 -63.368 558.104 Q -63.613 557.952 -63.971 557.946 Q -64.329 557.940 -64.711 558.286 Q -65.094 558.632 -65.302 558.958 Q -65.510 559.284 -65.622 559.839 Q -65.734 560.394 -65.732 560.799 Q -65.731 561.204 -65.548 561.552 Q -65.364 561.900 -65.022 562.253 Q -64.680 562.605 -63.806 562.770 Q -62.932 562.934 -60.981 562.035 \"></path>\n        <path id=\"STROKE_192330d0-b920-4068-842a-73fa2eae144b\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -88.161 548.035 Q -88.196 548.121 -88.213 548.121 Q -88.561 548.088 -88.453 548.101 Q -88.850 548.101 -88.727 548.101 Q -89.031 548.101 -88.979 548.101 Q -88.895 548.106 -89.618 548.097 Q -90.340 548.089 -90.717 548.055 Q -91.094 548.020 -91.288 547.992 Q -91.482 547.963 -91.578 547.937 Q -91.675 547.910 -91.655 547.913 Q -91.635 547.916 -91.684 547.928 Q -91.733 547.940 -92.263 547.782 Q -92.793 547.625 -93.091 547.576 Q -93.388 547.526 -93.538 547.534 Q -93.688 547.542 -93.813 547.545 Q -93.938 547.548 -93.861 547.536 Q -93.783 547.524 -94.100 547.544 Q -94.417 547.565 -94.673 547.620 Q -94.929 547.676 -95.044 547.681 Q -95.160 547.687 -95.155 547.691 Q -95.149 547.696 -95.128 547.688 Q -95.107 547.681 -95.552 547.707 Q -95.998 547.732 -96.325 547.790 Q -96.653 547.848 -96.803 547.876 Q -96.953 547.904 -97.068 547.918 Q -97.183 547.932 -97.214 547.942 Q -97.245 547.953 -97.190 547.929 Q -97.135 547.905 -97.375 547.935 Q -97.615 547.965 -97.777 548.008 Q -97.939 548.051 -98.054 548.086 Q -98.169 548.121 -98.167 548.118 Q -98.165 548.116 -98.157 548.113 Q -98.150 548.111 -98.169 548.126 Q -98.188 548.141 -98.162 548.125 Q -98.135 548.110 -98.274 548.160 Q -98.414 548.210 -98.552 548.424 Q -98.689 548.637 -98.774 548.810 Q -98.859 548.982 -98.905 549.089 Q -98.951 549.196 -98.939 549.172 Q -98.928 549.148 -98.952 549.188 Q -98.976 549.228 -99.027 549.322 Q -99.079 549.416 -99.079 549.421 Q -99.080 549.425 -99.091 549.448 Q -99.103 549.470 -99.190 549.645 Q -99.278 549.819 -99.318 549.894 Q -99.359 549.969 -99.358 549.964 Q -99.357 549.958 -99.358 549.986 Q -99.359 550.015 -99.380 549.961 Q -99.401 549.907 -99.625 550.493 Q -99.848 551.078 -99.910 551.370 Q -99.972 551.662 -99.977 551.828 Q -99.982 551.995 -99.980 552.082 Q -99.979 552.169 -99.979 552.505 Q -99.980 552.841 -99.981 553.148 Q -99.983 553.454 -99.981 553.533 Q -99.978 553.611 -99.945 554.075 Q -99.913 554.539 -99.916 554.826 Q -99.919 555.114 -99.917 555.248 Q -99.916 555.382 -99.916 555.501 Q -99.917 555.621 -99.911 555.651 Q -99.905 555.681 -99.909 555.679 Q -99.912 555.676 -99.926 556.759 Q -99.939 557.842 -99.904 558.609 Q -99.869 559.377 -99.812 559.755 Q -99.754 560.134 -99.761 560.351 Q -99.767 560.568 -99.765 560.757 Q -99.763 560.946 -99.871 562.132 Q -99.980 563.319 -100.031 563.972 Q -100.082 564.625 -100.070 564.909 Q -100.058 565.192 -100.056 565.332 Q -100.054 565.471 -100.051 565.595 Q -100.047 565.719 -100.082 565.971 Q -100.116 566.222 -100.018 566.481 Q -99.920 566.740 -99.805 566.854 Q -99.691 566.967 -99.666 566.987 Q -99.641 567.007 -99.508 567.085 Q -99.375 567.163 -99.368 567.163 Q -99.360 567.163 -99.332 567.187 Q -99.303 567.210 -99.181 567.268 Q -99.058 567.326 -98.961 567.360 Q -98.865 567.394 -98.766 567.417 Q -98.667 567.439 -98.758 567.439 Q -98.849 567.440 -98.320 567.504 Q -97.791 567.569 -97.272 567.532 Q -96.754 567.495 -96.337 567.588 Q -95.921 567.682 -94.748 567.746 Q -93.575 567.810 -92.910 567.817 Q -92.245 567.824 -91.971 567.837 Q -91.697 567.849 -91.589 567.870 Q -91.482 567.891 -90.641 567.879 Q -89.800 567.868 -88.938 567.980 Q -88.076 568.093 -86.821 568.132 Q -85.565 568.172 -84.952 568.166 Q -84.338 568.159 -84.004 568.209 Q -83.669 568.258 -83.479 568.277 Q -83.289 568.295 -82.922 568.312 Q -82.554 568.328 -82.036 568.296 Q -81.519 568.263 -81.289 568.196 Q -81.058 568.129 -79.926 568.170 Q -78.795 568.212 -78.001 568.215 Q -77.207 568.218 -76.688 568.229 Q -76.169 568.240 -74.934 568.243 Q -73.699 568.246 -72.672 568.232 Q -71.645 568.217 -71.237 568.221 Q -70.830 568.224 -70.498 568.223 Q -70.166 568.222 -70.016 568.217 Q -69.865 568.213 -69.819 568.228 Q -69.773 568.242 -69.304 568.223 Q -68.835 568.204 -68.504 568.150 Q -68.173 568.096 -68.045 568.104 Q -67.918 568.112 -67.865 568.108 Q -67.812 568.104 -67.489 568.111 Q -67.166 568.118 -66.952 568.106 Q -66.738 568.094 -66.518 568.070 Q -66.299 568.045 -66.222 568.030 Q -66.146 568.015 -65.923 568.027 Q -65.701 568.039 -65.418 568.026 Q -65.136 568.014 -64.283 567.958 Q -63.430 567.903 -63.046 567.918 Q -62.663 567.933 -61.780 567.930 Q -60.897 567.928 -60.545 567.931 Q -60.193 567.933 -59.498 567.851 Q -58.804 567.769 -58.191 567.758 Q -57.579 567.746 -57.295 567.759 Q -57.011 567.771 -56.816 567.724 Q -56.622 567.678 -56.519 567.616 Q -56.417 567.553 -56.386 567.539 Q -56.355 567.525 -56.326 567.492 Q -56.297 567.460 -56.213 567.336 Q -56.129 567.213 -56.074 567.038 Q -56.019 566.864 -55.972 566.717 Q -55.924 566.570 -55.901 566.473 Q -55.878 566.375 -55.902 566.416 Q -55.927 566.457 -55.832 566.326 Q -55.737 566.195 -55.628 564.877 Q -55.518 563.560 -55.479 562.831 Q -55.440 562.102 -55.445 561.826 Q -55.450 561.550 -55.452 561.338 Q -55.454 561.127 -55.468 561.054 Q -55.483 560.982 -55.478 561.000 Q -55.474 561.019 -55.554 560.818 Q -55.633 560.618 -55.668 559.637 Q -55.703 558.657 -55.772 557.973 Q -55.842 557.289 -55.940 556.762 Q -56.038 556.234 -56.125 555.780 Q -56.212 555.325 -56.222 554.933 Q -56.231 554.541 -56.230 554.352 Q -56.229 554.162 -56.229 554.076 Q -56.229 553.989 -56.226 554.003 Q -56.222 554.017 -56.232 553.952 Q -56.242 553.888 -56.217 553.086 Q -56.193 552.284 -56.150 551.825 Q -56.106 551.366 -56.096 551.040 Q -56.085 550.715 -56.083 550.581 Q -56.082 550.448 -56.083 550.314 Q -56.084 550.181 -56.082 550.178 Q -56.080 550.176 -56.083 550.159 Q -56.085 550.143 -56.072 550.030 Q -56.058 549.917 -56.061 549.914 Q -56.064 549.911 -56.063 549.896 Q -56.062 549.881 -56.062 549.778 Q -56.062 549.675 -56.068 549.653 Q -56.074 549.630 -56.077 549.592 Q -56.079 549.553 -56.057 549.528 Q -56.034 549.504 -56.144 549.149 Q -56.254 548.795 -56.326 548.605 Q -56.398 548.414 -56.521 548.267 Q -56.644 548.119 -56.641 548.122 Q -56.639 548.126 -56.624 548.134 Q -56.608 548.142 -56.661 548.103 Q -56.713 548.065 -56.794 548.016 Q -56.875 547.968 -56.840 547.999 Q -56.805 548.029 -57.023 547.913 Q -57.240 547.796 -57.610 547.567 Q -57.979 547.337 -58.347 547.233 Q -58.715 547.128 -58.861 547.107 Q -59.006 547.086 -59.271 547.035 Q -59.536 546.984 -59.813 546.970 Q -60.090 546.956 -60.261 546.934 Q -60.432 546.911 -61.286 546.896 Q -62.140 546.881 -62.531 546.888 Q -62.923 546.895 -63.978 546.904 Q -65.033 546.912 -65.675 546.911 Q -66.316 546.910 -66.473 546.910 Q -66.630 546.909 -66.907 546.907 Q -67.183 546.905 -67.275 546.907 Q -67.367 546.909 -67.452 546.914 Q -67.536 546.919 -67.989 546.932 Q -68.442 546.946 -68.399 546.935 Q -68.356 546.925 -68.766 546.980 Q -69.176 547.034 -69.561 547.045 Q -69.946 547.056 -70.151 547.067 Q -70.356 547.079 -70.507 547.100 Q -70.659 547.122 -70.796 547.147 Q -70.932 547.173 -71.335 547.222 Q -71.738 547.271 -72.117 547.315 Q -72.497 547.358 -72.647 547.373 Q -72.798 547.388 -72.867 547.395 Q -72.936 547.401 -72.890 547.399 Q -72.843 547.397 -73.117 547.420 Q -73.390 547.443 -73.793 547.454 Q -74.195 547.465 -74.848 547.550 Q -75.501 547.635 -76.163 547.637 Q -76.825 547.640 -77.279 547.614 Q -77.733 547.588 -78.346 547.545 Q -78.959 547.501 -79.652 547.558 Q -80.345 547.616 -80.741 547.707 Q -81.137 547.798 -82.262 547.838 Q -83.386 547.878 -84.126 547.856 Q -84.865 547.833 -85.349 547.879 Q -85.832 547.924 -85.992 547.989 Q -86.151 548.055 -86.275 548.082 Q -86.400 548.110 -86.582 548.154 Q -86.765 548.197 -86.730 548.182 Q -86.694 548.167 -86.757 548.201 Q -86.819 548.235 -87.027 548.211 Q -87.234 548.187 -87.524 548.211 Q -87.814 548.235 -87.938 548.277 Q -88.063 548.318 -88.320 548.392 Q -88.576 548.467 -88.512 548.483 Q -88.449 548.500 -89.096 548.555 Q -89.744 548.609 -90.678 548.667 \"></path>\n        <path id=\"STROKE_9bf82117-b3a9-42d6-bab8-7707ca5d219b\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -44.825 552.651 Q -44.705 552.610 -44.259 552.400 Q -43.812 552.191 -43.649 551.969 Q -43.487 551.748 -43.489 551.575 Q -43.491 551.402 -43.676 551.268 Q -43.861 551.133 -44.487 551.079 Q -45.113 551.026 -45.938 551.251 Q -46.764 551.477 -47.561 552.025 Q -48.359 552.572 -49.046 553.261 Q -49.734 553.950 -50.136 554.580 Q -50.539 555.209 -50.831 555.959 Q -51.124 556.708 -51.303 557.564 Q -51.482 558.419 -51.435 559.033 Q -51.388 559.647 -51.303 559.955 Q -51.218 560.262 -51.089 560.494 Q -50.959 560.726 -50.797 560.922 Q -50.634 561.119 -50.364 561.388 Q -50.093 561.657 -49.367 561.744 Q -48.641 561.831 -48.097 561.779 Q -47.553 561.727 -47.196 561.521 Q -46.839 561.316 -46.648 560.949 Q -46.457 560.583 -46.395 560.264 Q -46.333 559.945 -46.352 559.422 Q -46.372 558.899 -46.642 558.303 Q -46.912 557.707 -47.242 557.204 Q -47.573 556.701 -48.372 556.692 Q -48.421 556.836 -48.333 557.055 Q -48.246 557.273 -47.895 557.497 Q -47.544 557.720 -46.615 557.902 Q -45.687 558.083 -44.887 558.091 Q -44.088 558.099 -43.223 557.718 \"></path>\n        <path id=\"STROKE_602e9fa6-d4c8-4700-9ead-f16e39f78acf\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -43.030 558.905 Q -43.061 558.939 -43.037 558.896 Q -43.013 558.853 -43.030 558.868 Q -43.047 558.884 -43.032 558.876 Q -43.017 558.869 -43.141 559.040 Q -43.265 559.212 -43.247 559.210 Q -43.229 559.208 -43.227 559.193 Q -43.226 559.178 -43.236 559.312 Q -43.245 559.446 -42.882 559.495 Q -42.519 559.544 -42.169 559.431 Q -41.819 559.317 -41.505 559.028 Q -41.191 558.739 -41.069 558.429 Q -40.948 558.120 -40.985 557.923 Q -41.022 557.727 -41.164 557.630 Q -41.307 557.533 -41.712 557.488 Q -42.116 557.443 -42.612 557.775 Q -43.108 558.108 -43.427 558.481 Q -43.747 558.855 -43.831 559.406 Q -43.915 559.957 -43.891 560.340 Q -43.868 560.724 -43.670 561.052 Q -43.471 561.379 -42.906 561.585 Q -42.341 561.792 -41.593 561.879 Q -40.844 561.966 -39.035 560.614 \"></path>\n        <path id=\"STROKE_bd2c54d0-71fe-4ece-92a5-3face4c4682e\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -37.476 560.717 Q -37.466 560.643 -37.499 560.965 Q -37.021 561.195 -37.273 557.981 Q -36.811 557.432 -34.037 558.776 Q -34.037 558.785 -34.037 558.813 \"></path>\n        <path id=\"STROKE_ab807da0-a801-4e3c-ad10-f6aac51f0810\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -32.614 559.265 Q -32.830 559.491 -32.755 559.443 Q -32.798 559.559 -32.748 560.981 Q -32.635 561.168 -32.315 560.601 Q -31.996 560.035 -31.741 559.744 Q -31.486 559.454 -31.360 559.328 Q -31.234 559.202 -30.938 559.121 Q -30.642 559.040 -30.461 559.389 Q -30.280 559.737 -30.225 559.966 Q -30.170 560.196 -30.126 560.326 Q -30.083 560.457 -29.997 560.562 Q -29.912 560.667 -29.911 560.634 Q -29.911 560.602 -29.900 560.658 Q -29.888 560.715 -29.673 560.337 Q -29.458 559.960 -29.173 559.615 Q -28.887 559.271 -28.645 559.242 Q -28.404 559.213 -28.003 559.278 Q -27.602 559.343 -26.709 560.808 Q -26.657 560.755 -26.612 560.702 \"></path>\n        <path id=\"STROKE_dbfd536a-a338-42a1-9aa6-9eaaca96b466\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -23.437 559.728 Q -23.440 559.754 -23.216 558.836 Q -23.277 558.821 -23.533 558.800 Q -23.788 558.779 -24.151 558.899 Q -24.513 559.020 -24.911 559.337 Q -25.308 559.654 -25.552 559.924 Q -25.797 560.193 -25.838 560.457 Q -25.880 560.722 -25.818 560.890 Q -25.757 561.059 -25.414 561.118 Q -25.071 561.177 -24.644 561.061 Q -24.216 560.945 -23.799 560.587 Q -23.382 560.229 -23.155 559.760 Q -23.120 559.837 -23.191 560.372 Q -23.262 560.907 -23.184 561.445 Q -23.105 561.982 -22.988 562.232 Q -22.870 562.483 -22.731 562.553 Q -22.592 562.623 -22.466 562.579 Q -22.339 562.535 -22.123 562.217 \"></path>\n        <path id=\"STROKE_9d386f1e-4dae-46ad-812b-8112ac762295\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -20.205 559.413 Q -20.205 559.406 -20.205 559.385 Q -20.266 559.356 -20.366 561.730 Q -20.246 561.765 -20.176 561.767 Q -20.106 561.768 -19.837 561.318 Q -19.568 560.867 -19.376 560.609 Q -19.184 560.351 -19.061 560.245 Q -18.937 560.140 -18.963 560.157 Q -18.988 560.174 -18.742 560.065 Q -18.495 559.957 -18.223 560.568 Q -17.950 561.179 -17.781 561.483 Q -17.611 561.788 -17.476 561.918 Q -17.340 562.047 -17.277 562.058 Q -17.215 562.069 -17.153 562.001 Q -17.091 561.933 -16.931 561.751 \"></path>\n        <path id=\"STROKE_3f02c75a-4d9b-47fa-b8a1-783effabccdf\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -13.681 559.113 L -13.688 559.113 Q -13.667 559.300 -14.067 560.860 Q -14.466 562.421 -14.618 563.422 Q -14.770 564.423 -14.798 564.949 Q -14.826 565.475 -14.791 565.792 Q -14.756 566.110 -14.190 566.416 \"></path>\n        <path id=\"STROKE_eed73f06-e7ed-4d42-a8f9-d7282174934a\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -15.749 560.508 Q -15.761 560.359 -16.206 559.831 Q -16.650 559.302 -16.809 558.439 \"></path>\n        <path id=\"STROKE_772512a2-10b8-49c6-951c-c2f1a731f366\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -54.958 548.060 Q -54.990 548.064 -55.099 548.121 Q -55.209 548.179 -55.239 548.171 Q -55.270 548.162 -55.254 548.165 Q -55.238 548.167 -55.235 548.166 Q -55.232 548.165 -55.330 548.166 Q -55.338 548.257 -54.592 548.029 Q -53.846 547.801 -52.782 547.798 Q -51.717 547.796 -51.064 547.779 Q -50.411 547.761 -49.797 547.965 Q -49.183 548.169 -48.598 548.183 Q -48.013 548.197 -47.037 548.282 Q -46.062 548.367 -45.616 548.433 Q -45.169 548.499 -44.832 548.495 Q -44.494 548.491 -43.947 548.459 Q -43.400 548.427 -42.881 548.400 Q -42.362 548.372 -41.576 548.464 Q -40.791 548.555 -40.207 548.541 Q -39.623 548.527 -38.941 548.544 Q -38.258 548.561 -37.559 548.572 Q -36.860 548.583 -35.572 548.666 Q -34.283 548.748 -33.561 548.770 Q -32.840 548.793 -32.569 548.780 Q -32.299 548.767 -31.882 548.829 Q -31.465 548.891 -30.822 548.951 Q -30.180 549.011 -29.652 548.975 Q -29.124 548.939 -28.572 548.859 Q -28.021 548.780 -27.357 548.822 Q -26.693 548.864 -25.439 548.798 Q -24.185 548.732 -23.593 548.637 Q -23.001 548.541 -22.651 548.635 Q -22.302 548.729 -21.389 548.726 Q -20.477 548.723 -20.028 548.713 Q -19.578 548.702 -19.361 548.653 Q -19.143 548.603 -19.053 548.586 Q -18.963 548.568 -18.892 548.564 Q -18.821 548.560 -18.883 548.526 Q -18.944 548.493 -17.379 548.423 Q -15.813 548.353 -15.008 548.389 Q -14.203 548.426 -13.763 548.366 Q -13.323 548.307 -13.025 548.284 Q -12.726 548.262 -12.615 548.265 Q -12.504 548.267 -12.325 548.327 Q -12.145 548.387 -12.010 548.422 Q -11.874 548.456 -11.737 548.486 Q -11.599 548.515 -11.518 548.525 Q -11.436 548.534 -11.300 548.594 Q -11.165 548.655 -11.064 548.737 Q -10.964 548.819 -10.872 548.850 Q -10.781 548.882 -10.590 548.965 Q -10.400 549.047 -10.314 549.121 Q -10.229 549.195 -10.235 549.184 Q -10.242 549.172 -10.230 549.179 Q -10.217 549.185 -10.170 549.267 Q -10.122 549.348 -10.085 549.419 Q -10.048 549.490 -10.066 549.514 Q -10.084 549.538 -10.061 549.523 Q -10.039 549.508 -10.013 550.432 Q -9.987 551.356 -10.076 551.964 Q -10.165 552.573 -10.170 552.832 Q -10.175 553.092 -10.164 553.257 Q -10.153 553.422 -10.117 553.567 Q -10.080 553.712 -10.048 553.901 Q -10.015 554.091 -10.010 554.038 Q -10.005 553.985 -9.947 554.759 Q -9.889 555.534 -9.883 556.571 Q -9.877 557.609 -9.935 558.348 Q -9.992 559.088 -10.081 559.835 Q -10.170 560.583 -10.157 561.247 Q -10.145 561.911 -10.149 562.357 Q -10.152 562.802 -10.137 563.605 Q -10.122 564.408 -10.123 565.040 Q -10.125 565.672 -10.087 566.123 Q -10.049 566.573 -9.969 566.881 Q -9.889 567.190 -9.887 567.361 Q -9.885 567.531 -9.872 567.689 Q -9.859 567.847 -9.866 567.807 Q -9.873 567.766 -9.855 567.903 Q -9.838 568.040 -9.940 568.638 Q -9.940 568.615 -9.851 568.380 \"></path>\n        <path id=\"STROKE_2d599c14-834c-4ce0-91e7-9246ff7afcf7\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -56.258 567.525 Q -56.122 567.366 -55.913 567.300 Q -55.703 567.235 -55.479 567.268 Q -55.256 567.301 -55.162 567.345 Q -55.069 567.389 -54.875 567.556 Q -54.680 567.723 -53.752 567.756 Q -52.823 567.790 -52.174 567.638 Q -51.525 567.485 -50.912 567.572 Q -50.300 567.658 -49.519 567.843 Q -48.739 568.028 -47.744 567.854 Q -46.750 567.680 -45.833 567.594 Q -44.915 567.508 -44.237 567.647 Q -43.559 567.786 -42.662 567.766 Q -41.764 567.747 -41.312 567.697 Q -40.859 567.646 -40.389 567.618 Q -39.919 567.590 -38.753 567.646 Q -37.587 567.701 -36.975 567.725 Q -36.362 567.750 -35.478 567.722 Q -34.594 567.695 -33.993 567.846 Q -33.391 567.997 -32.310 568.017 Q -31.228 568.038 -30.489 568.120 Q -29.750 568.202 -29.051 568.302 Q -28.353 568.402 -27.947 568.412 Q -27.541 568.421 -26.423 568.523 Q -25.305 568.624 -24.548 568.637 Q -23.791 568.649 -23.045 568.633 Q -22.300 568.618 -21.762 568.819 Q -21.224 569.019 -20.357 569.103 Q -19.489 569.188 -18.904 569.201 Q -18.319 569.215 -18.005 569.219 Q -17.692 569.223 -17.498 569.236 Q -17.303 569.250 -17.097 569.265 Q -16.890 569.279 -16.813 569.279 Q -16.737 569.278 -16.603 569.285 Q -16.468 569.292 -16.249 569.308 Q -16.030 569.324 -15.746 569.360 Q -15.462 569.395 -15.221 569.414 Q -14.981 569.432 -14.355 569.459 Q -13.729 569.485 -13.292 569.517 Q -12.855 569.548 -12.499 569.493 Q -12.142 569.438 -11.809 569.406 Q -11.477 569.374 -11.330 569.364 Q -11.183 569.354 -11.037 569.288 Q -10.890 569.222 -10.827 569.174 Q -10.763 569.126 -10.699 568.975 Q -10.635 568.823 -10.607 568.654 Q -10.579 568.485 -10.566 568.424 Q -10.554 568.362 -10.452 568.009 Q -10.350 567.656 -10.337 567.431 Q -10.324 567.207 -10.387 566.991 Q -10.450 566.776 -10.614 566.268 \"></path>\n        <path id=\"STROKE_721a43c9-56a8-48cd-ad04-602a1a1b56c1\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -3.623 553.654 Q -3.709 553.570 -3.708 553.594 Q -3.870 553.882 -3.759 554.564 Q -3.647 555.246 -3.273 556.309 Q -2.898 557.372 -2.590 558.582 Q -2.283 559.793 -2.316 560.897 Q -2.338 560.962 -2.535 560.448 \"></path>\n        <path id=\"STROKE_81dca260-6e21-492d-914e-769f88210433\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -4.075 553.205 Q -4.239 552.904 -5.588 552.584 Q -5.665 552.572 -4.210 552.497 Q -2.756 552.422 -1.540 552.528 Q -0.325 552.633 0.362 552.814 Q 1.049 552.996 1.470 553.142 Q 1.890 553.288 2.089 553.656 Q 2.287 554.024 2.061 554.618 Q 1.835 555.212 -0.309 557.314 Q -0.310 557.411 0.736 557.795 Q 1.782 558.178 2.482 558.594 Q 3.182 559.010 3.518 559.222 Q 3.855 559.434 3.997 559.625 Q 4.139 559.816 4.028 560.145 Q 3.917 560.473 3.428 560.788 Q 2.939 561.102 2.317 561.363 Q 1.694 561.623 1.075 561.735 Q 0.455 561.846 -0.019 561.802 Q -0.494 561.758 -0.929 561.412 Q -1.364 561.065 -1.635 559.894 \"></path>\n        <path id=\"STROKE_74702a31-06cc-4747-8e3f-6832c423a50c\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M 5.728 559.594 Q 5.728 559.606 5.730 559.563 Q 5.733 559.520 5.631 559.977 Q 5.892 560.067 6.158 560.102 Q 6.424 560.138 6.784 559.987 Q 7.145 559.835 7.352 559.502 Q 7.559 559.168 7.576 558.938 Q 7.594 558.707 7.432 558.576 Q 7.271 558.446 7.106 558.414 Q 6.941 558.381 6.784 558.341 Q 6.627 558.301 6.292 558.414 Q 5.957 558.527 5.777 558.701 Q 5.596 558.874 5.444 559.055 Q 5.292 559.235 5.225 559.644 Q 5.159 560.053 5.195 560.419 Q 5.231 560.786 5.662 561.151 Q 6.094 561.515 6.715 561.614 Q 7.336 561.712 7.864 561.671 Q 8.392 561.629 8.796 561.192 Q 9.200 560.755 9.516 559.820 Q 9.627 559.860 9.868 560.378 Q 10.108 560.896 10.823 561.229 Q 11.140 560.872 10.554 559.106 Q 10.820 559.097 10.810 559.098 Q 10.800 559.100 10.901 559.100 Q 11.003 559.100 11.103 559.084 Q 11.202 559.068 12.171 559.221 Q 13.140 559.373 14.153 559.256 Q 14.166 559.202 14.288 558.979 \"></path>\n        <path id=\"STROKE_ee17264c-e46e-4f94-a70d-ebf7ca15f277\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M 15.154 552.799 Q 15.141 552.943 15.120 554.347 Q 15.100 555.751 15.255 556.922 Q 15.411 558.093 15.631 559.291 Q 15.852 560.488 15.859 561.947 Q 15.889 561.963 16.007 561.917 \"></path>\n        <path id=\"STROKE_28492c51-f052-4621-8ef3-2cc78e291af3\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M 18.749 560.042 Q 18.720 559.914 18.749 561.229 Q 18.605 561.602 18.096 557.778 Q 18.169 557.640 19.135 558.259 \"></path>\n        <path id=\"STROKE_974329cf-702f-483a-b253-6566d308b61d\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M 21.382 559.085 Q 21.524 559.183 21.321 560.883 Q 21.261 560.813 21.643 560.284 Q 22.026 559.754 22.445 559.414 Q 22.863 559.074 23.289 559.022 Q 23.715 558.970 24.220 559.021 Q 24.726 559.072 25.073 559.599 Q 25.420 560.126 25.316 561.737 Q 25.371 561.639 25.646 561.197 \"></path>\n        <path id=\"STROKE_7d9f4de4-67f6-4e8b-b195-0bf828aee72d\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -10.242 548.738 Q -10.242 548.729 -10.242 548.720 Q -9.945 548.693 -10.013 548.699 Q -9.713 548.643 -8.453 548.629 Q -7.193 548.616 -6.505 548.573 Q -5.817 548.531 -5.304 548.545 Q -4.792 548.559 -4.209 548.535 Q -3.625 548.510 -2.562 548.496 Q -1.499 548.481 -0.865 548.509 Q -0.231 548.536 0.356 548.449 Q 0.943 548.362 1.309 548.439 Q 1.675 548.516 1.993 548.575 Q 2.311 548.634 2.717 548.655 Q 3.123 548.677 3.697 548.612 Q 4.271 548.547 5.386 548.555 Q 6.501 548.563 7.149 548.583 Q 7.798 548.604 8.118 548.529 Q 8.438 548.454 8.588 548.461 Q 8.738 548.468 9.373 548.570 Q 10.007 548.672 10.442 548.621 Q 10.876 548.569 11.283 548.496 Q 11.689 548.424 12.302 548.566 Q 12.915 548.708 13.541 548.733 Q 14.166 548.758 14.624 548.740 Q 15.081 548.723 16.009 548.788 Q 16.938 548.854 17.430 548.784 Q 17.922 548.713 18.477 548.680 Q 19.031 548.646 19.352 548.668 Q 19.673 548.689 19.945 548.782 Q 20.218 548.875 20.329 548.888 Q 20.440 548.900 20.581 548.925 Q 20.721 548.950 21.002 548.954 Q 21.282 548.958 21.537 548.930 Q 21.792 548.901 21.925 548.862 Q 22.059 548.823 22.507 548.803 Q 22.954 548.784 23.602 548.851 Q 24.251 548.918 24.686 548.973 Q 25.122 549.028 25.388 549.020 Q 25.655 549.012 26.153 549.159 Q 26.651 549.306 27.020 549.443 Q 27.389 549.579 27.575 549.617 Q 27.761 549.655 27.824 549.676 Q 27.888 549.696 27.986 549.756 Q 28.083 549.817 28.172 549.886 Q 28.260 549.955 28.234 549.949 Q 28.207 549.942 28.266 549.952 Q 28.325 549.961 28.528 550.320 Q 28.730 550.679 28.811 550.850 Q 28.892 551.020 28.894 551.307 Q 28.896 551.594 28.896 551.755 Q 28.896 551.916 28.896 552.014 Q 28.896 552.113 28.895 552.156 Q 28.894 552.198 28.897 552.457 Q 28.899 552.717 28.899 552.965 Q 28.899 553.214 28.888 553.412 Q 28.878 553.611 28.877 553.812 Q 28.877 554.013 28.873 554.139 Q 28.870 554.266 28.894 554.419 Q 28.919 554.572 28.830 555.321 Q 28.741 556.070 28.696 556.521 Q 28.651 556.971 28.643 557.886 Q 28.635 558.802 28.655 559.363 Q 28.675 559.924 28.781 560.601 Q 28.887 561.279 28.826 562.058 Q 28.766 562.838 28.743 563.206 Q 28.719 563.574 28.725 564.344 Q 28.730 565.114 28.743 565.600 Q 28.755 566.085 28.592 566.565 Q 28.429 567.044 28.251 567.511 L 28.326 567.529 \"></path>\n        <path id=\"STROKE_2411e29f-2c9b-458b-854e-6706d0a01f44\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M 28.417 567.458 L 28.488 567.368 \"></path>\n        <path id=\"STROKE_266b2f4d-a069-4578-9cc1-59c57ee3ea2d\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"0.999\" strokeOpacity=\"1.000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M -9.988 567.797 Q -9.937 568.058 -9.940 567.977 Q -9.746 568.064 -9.776 568.044 Q -9.640 568.077 -8.955 567.976 Q -8.269 567.875 -7.259 567.908 Q -6.248 567.941 -5.748 567.940 Q -5.247 567.939 -3.008 568.025 Q -0.768 568.112 1.160 568.117 Q 3.089 568.121 3.964 568.114 Q 4.838 568.106 5.231 568.118 Q 5.624 568.131 6.187 568.084 Q 6.751 568.037 8.702 568.053 Q 10.653 568.068 12.025 568.066 Q 13.397 568.064 14.636 568.218 Q 15.875 568.372 16.487 568.399 Q 17.099 568.426 17.332 568.416 Q 17.565 568.407 17.726 568.410 Q 17.888 568.413 18.040 568.411 Q 18.192 568.409 18.336 568.411 Q 18.480 568.414 18.591 568.425 Q 18.702 568.436 18.760 568.466 Q 18.817 568.496 20.489 568.447 Q 22.161 568.397 23.294 568.407 Q 24.428 568.416 24.909 568.408 Q 25.390 568.400 25.550 568.408 Q 25.710 568.417 26.022 568.409 Q 26.334 568.401 26.868 568.331 Q 27.402 568.260 27.928 568.168 \"></path>\n      </g>\n    </svg>\n  </div>\n};\n\nexport default Sketch;\n"},"relativePath":"heirarchical_search/sketch.jsx"},{"fields":{"contents":"export const hamletText = `\nThe Tragedy of Hamlet, Prince of Denmark\nShakespeare homepage | Hamlet | Entire play\nACT I\nSCENE I. Elsinore. A platform before the castle.\nFRANCISCO at his post. Enter to him BERNARDO\nBERNARDO\nWho's there?\nFRANCISCO\nNay, answer me: stand, and unfold yourself.\nBERNARDO\nLong live the king!\nFRANCISCO\nBernardo?\nBERNARDO\nHe.\nFRANCISCO\nYou come most carefully upon your hour.\nBERNARDO\n'Tis now struck twelve; get thee to bed, Francisco.\nFRANCISCO\nFor this relief much thanks: 'tis bitter cold,\nAnd I am sick at heart.\nBERNARDO\nHave you had quiet guard?\nFRANCISCO\nNot a mouse stirring.\nBERNARDO\nWell, good night.\nIf you do meet Horatio and Marcellus,\nThe rivals of my watch, bid them make haste.\nFRANCISCO\nI think I hear them. Stand, ho! Who's there?\nEnter HORATIO and MARCELLUS\n\nHORATIO\nFriends to this ground.\nMARCELLUS\nAnd liegemen to the Dane.\nFRANCISCO\nGive you good night.\nMARCELLUS\nO, farewell, honest soldier:\nWho hath relieved you?\nFRANCISCO\nBernardo has my place.\nGive you good night.\nExit\n\nMARCELLUS\nHolla! Bernardo!\nBERNARDO\nSay,\nWhat, is Horatio there?\nHORATIO\nA piece of him.\nBERNARDO\nWelcome, Horatio: welcome, good Marcellus.\nMARCELLUS\nWhat, has this thing appear'd again to-night?\nBERNARDO\nI have seen nothing.\nMARCELLUS\nHoratio says 'tis but our fantasy,\nAnd will not let belief take hold of him\nTouching this dreaded sight, twice seen of us:\nTherefore I have entreated him along\nWith us to watch the minutes of this night;\nThat if again this apparition come,\nHe may approve our eyes and speak to it.\nHORATIO\nTush, tush, 'twill not appear.\nBERNARDO\nSit down awhile;\nAnd let us once again assail your ears,\nThat are so fortified against our story\nWhat we have two nights seen.\nHORATIO\nWell, sit we down,\nAnd let us hear Bernardo speak of this.\nBERNARDO\nLast night of all,\nWhen yond same star that's westward from the pole\nHad made his course to illume that part of heaven\nWhere now it burns, Marcellus and myself,\nThe bell then beating one,--\nEnter Ghost\n\nMARCELLUS\nPeace, break thee off; look, where it comes again!\nBERNARDO\nIn the same figure, like the king that's dead.\nMARCELLUS\nThou art a scholar; speak to it, Horatio.\nBERNARDO\nLooks it not like the king? mark it, Horatio.\nHORATIO\nMost like: it harrows me with fear and wonder.\nBERNARDO\nIt would be spoke to.\nMARCELLUS\nQuestion it, Horatio.\nHORATIO\nWhat art thou that usurp'st this time of night,\nTogether with that fair and warlike form\nIn which the majesty of buried Denmark\nDid sometimes march? by heaven I charge thee, speak!\nMARCELLUS\nIt is offended.\nBERNARDO\nSee, it stalks away!\nHORATIO\nStay! speak, speak! I charge thee, speak!\nExit Ghost\n\nMARCELLUS\n'Tis gone, and will not answer.\nBERNARDO\nHow now, Horatio! you tremble and look pale:\nIs not this something more than fantasy?\nWhat think you on't?\nHORATIO\nBefore my God, I might not this believe\nWithout the sensible and true avouch\nOf mine own eyes.\nMARCELLUS\nIs it not like the king?\nHORATIO\nAs thou art to thyself:\nSuch was the very armour he had on\nWhen he the ambitious Norway combated;\nSo frown'd he once, when, in an angry parle,\nHe smote the sledded Polacks on the ice.\n'Tis strange.\nMARCELLUS\nThus twice before, and jump at this dead hour,\nWith martial stalk hath he gone by our watch.\nHORATIO\nIn what particular thought to work I know not;\nBut in the gross and scope of my opinion,\nThis bodes some strange eruption to our state.\nMARCELLUS\nGood now, sit down, and tell me, he that knows,\nWhy this same strict and most observant watch\nSo nightly toils the subject of the land,\nAnd why such daily cast of brazen cannon,\nAnd foreign mart for implements of war;\nWhy such impress of shipwrights, whose sore task\nDoes not divide the Sunday from the week;\nWhat might be toward, that this sweaty haste\nDoth make the night joint-labourer with the day:\nWho is't that can inform me?\nHORATIO\nThat can I;\nAt least, the whisper goes so. Our last king,\nWhose image even but now appear'd to us,\nWas, as you know, by Fortinbras of Norway,\nThereto prick'd on by a most emulate pride,\nDared to the combat; in which our valiant Hamlet--\nFor so this side of our known world esteem'd him--\nDid slay this Fortinbras; who by a seal'd compact,\nWell ratified by law and heraldry,\nDid forfeit, with his life, all those his lands\nWhich he stood seized of, to the conqueror:\nAgainst the which, a moiety competent\nWas gaged by our king; which had return'd\nTo the inheritance of Fortinbras,\nHad he been vanquisher; as, by the same covenant,\nAnd carriage of the article design'd,\nHis fell to Hamlet. Now, sir, young Fortinbras,\nOf unimproved mettle hot and full,\nHath in the skirts of Norway here and there\nShark'd up a list of lawless resolutes,\nFor food and diet, to some enterprise\nThat hath a stomach in't; which is no other--\nAs it doth well appear unto our state--\nBut to recover of us, by strong hand\nAnd terms compulsatory, those foresaid lands\nSo by his father lost: and this, I take it,\nIs the main motive of our preparations,\nThe source of this our watch and the chief head\nOf this post-haste and romage in the land.\nBERNARDO\nI think it be no other but e'en so:\nWell may it sort that this portentous figure\nComes armed through our watch; so like the king\nThat was and is the question of these wars.\nHORATIO\nA mote it is to trouble the mind's eye.\nIn the most high and palmy state of Rome,\nA little ere the mightiest Julius fell,\nThe graves stood tenantless and the sheeted dead\nDid squeak and gibber in the Roman streets:\nAs stars with trains of fire and dews of blood,\nDisasters in the sun; and the moist star\nUpon whose influence Neptune's empire stands\nWas sick almost to doomsday with eclipse:\nAnd even the like precurse of fierce events,\nAs harbingers preceding still the fates\nAnd prologue to the omen coming on,\nHave heaven and earth together demonstrated\nUnto our climatures and countrymen.--\nBut soft, behold! lo, where it comes again!\nRe-enter Ghost\n\nI'll cross it, though it blast me. Stay, illusion!\nIf thou hast any sound, or use of voice,\nSpeak to me:\nIf there be any good thing to be done,\nThat may to thee do ease and grace to me,\nSpeak to me:\nCock crows\n\nIf thou art privy to thy country's fate,\nWhich, happily, foreknowing may avoid, O, speak!\nOr if thou hast uphoarded in thy life\nExtorted treasure in the womb of earth,\nFor which, they say, you spirits oft walk in death,\nSpeak of it: stay, and speak! Stop it, Marcellus.\nMARCELLUS\nShall I strike at it with my partisan?\nHORATIO\nDo, if it will not stand.\nBERNARDO\n'Tis here!\nHORATIO\n'Tis here!\nMARCELLUS\n'Tis gone!\nExit Ghost\n\nWe do it wrong, being so majestical,\nTo offer it the show of violence;\nFor it is, as the air, invulnerable,\nAnd our vain blows malicious mockery.\nBERNARDO\nIt was about to speak, when the cock crew.\nHORATIO\nAnd then it started like a guilty thing\nUpon a fearful summons. I have heard,\nThe cock, that is the trumpet to the morn,\nDoth with his lofty and shrill-sounding throat\nAwake the god of day; and, at his warning,\nWhether in sea or fire, in earth or air,\nThe extravagant and erring spirit hies\nTo his confine: and of the truth herein\nThis present object made probation.\nMARCELLUS\nIt faded on the crowing of the cock.\nSome say that ever 'gainst that season comes\nWherein our Saviour's birth is celebrated,\nThe bird of dawning singeth all night long:\nAnd then, they say, no spirit dares stir abroad;\nThe nights are wholesome; then no planets strike,\nNo fairy takes, nor witch hath power to charm,\nSo hallow'd and so gracious is the time.\nHORATIO\nSo have I heard and do in part believe it.\nBut, look, the morn, in russet mantle clad,\nWalks o'er the dew of yon high eastward hill:\nBreak we our watch up; and by my advice,\nLet us impart what we have seen to-night\nUnto young Hamlet; for, upon my life,\nThis spirit, dumb to us, will speak to him.\nDo you consent we shall acquaint him with it,\nAs needful in our loves, fitting our duty?\nMARCELLUS\nLet's do't, I pray; and I this morning know\nWhere we shall find him most conveniently.\nExeunt\n\nSCENE II. A room of state in the castle.\nEnter KING CLAUDIUS, QUEEN GERTRUDE, HAMLET, POLONIUS, LAERTES, VOLTIMAND, CORNELIUS, Lords, and Attendants\nKING CLAUDIUS\nThough yet of Hamlet our dear brother's death\nThe memory be green, and that it us befitted\nTo bear our hearts in grief and our whole kingdom\nTo be contracted in one brow of woe,\nYet so far hath discretion fought with nature\nThat we with wisest sorrow think on him,\nTogether with remembrance of ourselves.\nTherefore our sometime sister, now our queen,\nThe imperial jointress to this warlike state,\nHave we, as 'twere with a defeated joy,--\nWith an auspicious and a dropping eye,\nWith mirth in funeral and with dirge in marriage,\nIn equal scale weighing delight and dole,--\nTaken to wife: nor have we herein barr'd\nYour better wisdoms, which have freely gone\nWith this affair along. For all, our thanks.\nNow follows, that you know, young Fortinbras,\nHolding a weak supposal of our worth,\nOr thinking by our late dear brother's death\nOur state to be disjoint and out of frame,\nColleagued with the dream of his advantage,\nHe hath not fail'd to pester us with message,\nImporting the surrender of those lands\nLost by his father, with all bonds of law,\nTo our most valiant brother. So much for him.\nNow for ourself and for this time of meeting:\nThus much the business is: we have here writ\nTo Norway, uncle of young Fortinbras,--\nWho, impotent and bed-rid, scarcely hears\nOf this his nephew's purpose,--to suppress\nHis further gait herein; in that the levies,\nThe lists and full proportions, are all made\nOut of his subject: and we here dispatch\nYou, good Cornelius, and you, Voltimand,\nFor bearers of this greeting to old Norway;\nGiving to you no further personal power\nTo business with the king, more than the scope\nOf these delated articles allow.\nFarewell, and let your haste commend your duty.\nCORNELIUS VOLTIMAND\nIn that and all things will we show our duty.\nKING CLAUDIUS\nWe doubt it nothing: heartily farewell.\nExeunt VOLTIMAND and CORNELIUS\n\nAnd now, Laertes, what's the news with you?\nYou told us of some suit; what is't, Laertes?\nYou cannot speak of reason to the Dane,\nAnd loose your voice: what wouldst thou beg, Laertes,\nThat shall not be my offer, not thy asking?\nThe head is not more native to the heart,\nThe hand more instrumental to the mouth,\nThan is the throne of Denmark to thy father.\nWhat wouldst thou have, Laertes?\nLAERTES\nMy dread lord,\nYour leave and favour to return to France;\nFrom whence though willingly I came to Denmark,\nTo show my duty in your coronation,\nYet now, I must confess, that duty done,\nMy thoughts and wishes bend again toward France\nAnd bow them to your gracious leave and pardon.\nKING CLAUDIUS\nHave you your father's leave? What says Polonius?\nLORD POLONIUS\nHe hath, my lord, wrung from me my slow leave\nBy laboursome petition, and at last\nUpon his will I seal'd my hard consent:\nI do beseech you, give him leave to go.\nKING CLAUDIUS\nTake thy fair hour, Laertes; time be thine,\nAnd thy best graces spend it at thy will!\nBut now, my cousin Hamlet, and my son,--\nHAMLET\n[Aside] A little more than kin, and less than kind.\nKING CLAUDIUS\nHow is it that the clouds still hang on you?\nHAMLET\nNot so, my lord; I am too much i' the sun.\nQUEEN GERTRUDE\nGood Hamlet, cast thy nighted colour off,\nAnd let thine eye look like a friend on Denmark.\nDo not for ever with thy vailed lids\nSeek for thy noble father in the dust:\nThou know'st 'tis common; all that lives must die,\nPassing through nature to eternity.\nHAMLET\nAy, madam, it is common.\nQUEEN GERTRUDE\nIf it be,\nWhy seems it so particular with thee?\nHAMLET\nSeems, madam! nay it is; I know not 'seems.'\n'Tis not alone my inky cloak, good mother,\nNor customary suits of solemn black,\nNor windy suspiration of forced breath,\nNo, nor the fruitful river in the eye,\nNor the dejected 'havior of the visage,\nTogether with all forms, moods, shapes of grief,\nThat can denote me truly: these indeed seem,\nFor they are actions that a man might play:\nBut I have that within which passeth show;\nThese but the trappings and the suits of woe.\nKING CLAUDIUS\n'Tis sweet and commendable in your nature, Hamlet,\nTo give these mourning duties to your father:\nBut, you must know, your father lost a father;\nThat father lost, lost his, and the survivor bound\nIn filial obligation for some term\nTo do obsequious sorrow: but to persever\nIn obstinate condolement is a course\nOf impious stubbornness; 'tis unmanly grief;\nIt shows a will most incorrect to heaven,\nA heart unfortified, a mind impatient,\nAn understanding simple and unschool'd:\nFor what we know must be and is as common\nAs any the most vulgar thing to sense,\nWhy should we in our peevish opposition\nTake it to heart? Fie! 'tis a fault to heaven,\nA fault against the dead, a fault to nature,\nTo reason most absurd: whose common theme\nIs death of fathers, and who still hath cried,\nFrom the first corse till he that died to-day,\n'This must be so.' We pray you, throw to earth\nThis unprevailing woe, and think of us\nAs of a father: for let the world take note,\nYou are the most immediate to our throne;\nAnd with no less nobility of love\nThan that which dearest father bears his son,\nDo I impart toward you. For your intent\nIn going back to school in Wittenberg,\nIt is most retrograde to our desire:\nAnd we beseech you, bend you to remain\nHere, in the cheer and comfort of our eye,\nOur chiefest courtier, cousin, and our son.\nQUEEN GERTRUDE\nLet not thy mother lose her prayers, Hamlet:\nI pray thee, stay with us; go not to Wittenberg.\nHAMLET\nI shall in all my best obey you, madam.\nKING CLAUDIUS\nWhy, 'tis a loving and a fair reply:\nBe as ourself in Denmark. Madam, come;\nThis gentle and unforced accord of Hamlet\nSits smiling to my heart: in grace whereof,\nNo jocund health that Denmark drinks to-day,\nBut the great cannon to the clouds shall tell,\nAnd the king's rouse the heavens all bruit again,\nRe-speaking earthly thunder. Come away.\nExeunt all but HAMLET\n\nHAMLET\nO, that this too too solid flesh would melt\nThaw and resolve itself into a dew!\nOr that the Everlasting had not fix'd\nHis canon 'gainst self-slaughter! O God! God!\nHow weary, stale, flat and unprofitable,\nSeem to me all the uses of this world!\nFie on't! ah fie! 'tis an unweeded garden,\nThat grows to seed; things rank and gross in nature\nPossess it merely. That it should come to this!\nBut two months dead: nay, not so much, not two:\nSo excellent a king; that was, to this,\nHyperion to a satyr; so loving to my mother\nThat he might not beteem the winds of heaven\nVisit her face too roughly. Heaven and earth!\nMust I remember? why, she would hang on him,\nAs if increase of appetite had grown\nBy what it fed on: and yet, within a month--\nLet me not think on't--Frailty, thy name is woman!--\nA little month, or ere those shoes were old\nWith which she follow'd my poor father's body,\nLike Niobe, all tears:--why she, even she--\nO, God! a beast, that wants discourse of reason,\nWould have mourn'd longer--married with my uncle,\nMy father's brother, but no more like my father\nThan I to Hercules: within a month:\nEre yet the salt of most unrighteous tears\nHad left the flushing in her galled eyes,\nShe married. O, most wicked speed, to post\nWith such dexterity to incestuous sheets!\nIt is not nor it cannot come to good:\nBut break, my heart; for I must hold my tongue.\nEnter HORATIO, MARCELLUS, and BERNARDO\n\nHORATIO\nHail to your lordship!\nHAMLET\nI am glad to see you well:\nHoratio,--or I do forget myself.\nHORATIO\nThe same, my lord, and your poor servant ever.\nHAMLET\nSir, my good friend; I'll change that name with you:\nAnd what make you from Wittenberg, Horatio? Marcellus?\nMARCELLUS\nMy good lord--\nHAMLET\nI am very glad to see you. Good even, sir.\nBut what, in faith, make you from Wittenberg?\nHORATIO\nA truant disposition, good my lord.\nHAMLET\nI would not hear your enemy say so,\nNor shall you do mine ear that violence,\nTo make it truster of your own report\nAgainst yourself: I know you are no truant.\nBut what is your affair in Elsinore?\nWe'll teach you to drink deep ere you depart.\nHORATIO\nMy lord, I came to see your father's funeral.\nHAMLET\nI pray thee, do not mock me, fellow-student;\nI think it was to see my mother's wedding.\nHORATIO\nIndeed, my lord, it follow'd hard upon.\nHAMLET\nThrift, thrift, Horatio! the funeral baked meats\nDid coldly furnish forth the marriage tables.\nWould I had met my dearest foe in heaven\nOr ever I had seen that day, Horatio!\nMy father!--methinks I see my father.\nHORATIO\nWhere, my lord?\nHAMLET\nIn my mind's eye, Horatio.\nHORATIO\nI saw him once; he was a goodly king.\nHAMLET\nHe was a man, take him for all in all,\nI shall not look upon his like again.\nHORATIO\nMy lord, I think I saw him yesternight.\nHAMLET\nSaw? who?\nHORATIO\nMy lord, the king your father.\nHAMLET\nThe king my father!\nHORATIO\nSeason your admiration for awhile\nWith an attent ear, till I may deliver,\nUpon the witness of these gentlemen,\nThis marvel to you.\nHAMLET\nFor God's love, let me hear.\nHORATIO\nTwo nights together had these gentlemen,\nMarcellus and Bernardo, on their watch,\nIn the dead vast and middle of the night,\nBeen thus encounter'd. A figure like your father,\nArmed at point exactly, cap-a-pe,\nAppears before them, and with solemn march\nGoes slow and stately by them: thrice he walk'd\nBy their oppress'd and fear-surprised eyes,\nWithin his truncheon's length; whilst they, distilled\nAlmost to jelly with the act of fear,\nStand dumb and speak not to him. This to me\nIn dreadful secrecy impart they did;\nAnd I with them the third night kept the watch;\nWhere, as they had deliver'd, both in time,\nForm of the thing, each word made true and good,\nThe apparition comes: I knew your father;\nThese hands are not more like.\nHAMLET\nBut where was this?\nMARCELLUS\nMy lord, upon the platform where we watch'd.\nHAMLET\nDid you not speak to it?\nHORATIO\nMy lord, I did;\nBut answer made it none: yet once methought\nIt lifted up its head and did address\nItself to motion, like as it would speak;\nBut even then the morning cock crew loud,\nAnd at the sound it shrunk in haste away,\nAnd vanish'd from our sight.\nHAMLET\n'Tis very strange.\nHORATIO\nAs I do live, my honour'd lord, 'tis true;\nAnd we did think it writ down in our duty\nTo let you know of it.\nHAMLET\nIndeed, indeed, sirs, but this troubles me.\nHold you the watch to-night?\nMARCELLUS BERNARDO\nWe do, my lord.\nHAMLET\nArm'd, say you?\nMARCELLUS BERNARDO\nArm'd, my lord.\nHAMLET\nFrom top to toe?\nMARCELLUS BERNARDO\nMy lord, from head to foot.\nHAMLET\nThen saw you not his face?\nHORATIO\nO, yes, my lord; he wore his beaver up.\nHAMLET\nWhat, look'd he frowningly?\nHORATIO\nA countenance more in sorrow than in anger.\nHAMLET\nPale or red?\nHORATIO\nNay, very pale.\nHAMLET\nAnd fix'd his eyes upon you?\nHORATIO\nMost constantly.\nHAMLET\nI would I had been there.\nHORATIO\nIt would have much amazed you.\nHAMLET\nVery like, very like. Stay'd it long?\nHORATIO\nWhile one with moderate haste might tell a hundred.\nMARCELLUS BERNARDO\nLonger, longer.\nHORATIO\nNot when I saw't.\nHAMLET\nHis beard was grizzled--no?\nHORATIO\nIt was, as I have seen it in his life,\nA sable silver'd.\nHAMLET\nI will watch to-night;\nPerchance 'twill walk again.\nHORATIO\nI warrant it will.\nHAMLET\nIf it assume my noble father's person,\nI'll speak to it, though hell itself should gape\nAnd bid me hold my peace. I pray you all,\nIf you have hitherto conceal'd this sight,\nLet it be tenable in your silence still;\nAnd whatsoever else shall hap to-night,\nGive it an understanding, but no tongue:\nI will requite your loves. So, fare you well:\nUpon the platform, 'twixt eleven and twelve,\nI'll visit you.\nAll\nOur duty to your honour.\nHAMLET\nYour loves, as mine to you: farewell.\nExeunt all but HAMLET\n\nMy father's spirit in arms! all is not well;\nI doubt some foul play: would the night were come!\nTill then sit still, my soul: foul deeds will rise,\nThough all the earth o'erwhelm them, to men's eyes.\nExit\n\nSCENE III. A room in Polonius' house.\nEnter LAERTES and OPHELIA\nLAERTES\nMy necessaries are embark'd: farewell:\nAnd, sister, as the winds give benefit\nAnd convoy is assistant, do not sleep,\nBut let me hear from you.\nOPHELIA\nDo you doubt that?\nLAERTES\nFor Hamlet and the trifling of his favour,\nHold it a fashion and a toy in blood,\nA violet in the youth of primy nature,\nForward, not permanent, sweet, not lasting,\nThe perfume and suppliance of a minute; No more.\nOPHELIA\nNo more but so?\nLAERTES\nThink it no more;\nFor nature, crescent, does not grow alone\nIn thews and bulk, but, as this temple waxes,\nThe inward service of the mind and soul\nGrows wide withal. Perhaps he loves you now,\nAnd now no soil nor cautel doth besmirch\nThe virtue of his will: but you must fear,\nHis greatness weigh'd, his will is not his own;\nFor he himself is subject to his birth:\nHe may not, as unvalued persons do,\nCarve for himself; for on his choice depends\nThe safety and health of this whole state;\nAnd therefore must his choice be circumscribed\nUnto the voice and yielding of that body\nWhereof he is the head. Then if he says he loves you,\nIt fits your wisdom so far to believe it\nAs he in his particular act and place\nMay give his saying deed; which is no further\nThan the main voice of Denmark goes withal.\nThen weigh what loss your honour may sustain,\nIf with too credent ear you list his songs,\nOr lose your heart, or your chaste treasure open\nTo his unmaster'd importunity.\nFear it, Ophelia, fear it, my dear sister,\nAnd keep you in the rear of your affection,\nOut of the shot and danger of desire.\nThe chariest maid is prodigal enough,\nIf she unmask her beauty to the moon:\nVirtue itself 'scapes not calumnious strokes:\nThe canker galls the infants of the spring,\nToo oft before their buttons be disclosed,\nAnd in the morn and liquid dew of youth\nContagious blastments are most imminent.\nBe wary then; best safety lies in fear:\nYouth to itself rebels, though none else near.\nOPHELIA\nI shall the effect of this good lesson keep,\nAs watchman to my heart. But, good my brother,\nDo not, as some ungracious pastors do,\nShow me the steep and thorny way to heaven;\nWhiles, like a puff'd and reckless libertine,\nHimself the primrose path of dalliance treads,\nAnd recks not his own rede.\nLAERTES\nO, fear me not.\nI stay too long: but here my father comes.\nEnter POLONIUS\n\nA double blessing is a double grace,\nOccasion smiles upon a second leave.\nLORD POLONIUS\nYet here, Laertes! aboard, aboard, for shame!\nThe wind sits in the shoulder of your sail,\nAnd you are stay'd for. There; my blessing with thee!\nAnd these few precepts in thy memory\nSee thou character. Give thy thoughts no tongue,\nNor any unproportioned thought his act.\nBe thou familiar, but by no means vulgar.\nThose friends thou hast, and their adoption tried,\nGrapple them to thy soul with hoops of steel;\nBut do not dull thy palm with entertainment\nOf each new-hatch'd, unfledged comrade. Beware\nOf entrance to a quarrel, but being in,\nBear't that the opposed may beware of thee.\nGive every man thy ear, but few thy voice;\nTake each man's censure, but reserve thy judgment.\nCostly thy habit as thy purse can buy,\nBut not express'd in fancy; rich, not gaudy;\nFor the apparel oft proclaims the man,\nAnd they in France of the best rank and station\nAre of a most select and generous chief in that.\nNeither a borrower nor a lender be;\nFor loan oft loses both itself and friend,\nAnd borrowing dulls the edge of husbandry.\nThis above all: to thine ownself be true,\nAnd it must follow, as the night the day,\nThou canst not then be false to any man.\nFarewell: my blessing season this in thee!\nLAERTES\nMost humbly do I take my leave, my lord.\nLORD POLONIUS\nThe time invites you; go; your servants tend.\nLAERTES\nFarewell, Ophelia; and remember well\nWhat I have said to you.\nOPHELIA\n'Tis in my memory lock'd,\nAnd you yourself shall keep the key of it.\nLAERTES\nFarewell.\nExit\n\nLORD POLONIUS\nWhat is't, Ophelia, be hath said to you?\nOPHELIA\nSo please you, something touching the Lord Hamlet.\nLORD POLONIUS\nMarry, well bethought:\n'Tis told me, he hath very oft of late\nGiven private time to you; and you yourself\nHave of your audience been most free and bounteous:\nIf it be so, as so 'tis put on me,\nAnd that in way of caution, I must tell you,\nYou do not understand yourself so clearly\nAs it behoves my daughter and your honour.\nWhat is between you? give me up the truth.\nOPHELIA\nHe hath, my lord, of late made many tenders\nOf his affection to me.\nLORD POLONIUS\nAffection! pooh! you speak like a green girl,\nUnsifted in such perilous circumstance.\nDo you believe his tenders, as you call them?\nOPHELIA\nI do not know, my lord, what I should think.\nLORD POLONIUS\nMarry, I'll teach you: think yourself a baby;\nThat you have ta'en these tenders for true pay,\nWhich are not sterling. Tender yourself more dearly;\nOr--not to crack the wind of the poor phrase,\nRunning it thus--you'll tender me a fool.\nOPHELIA\nMy lord, he hath importuned me with love\nIn honourable fashion.\nLORD POLONIUS\nAy, fashion you may call it; go to, go to.\nOPHELIA\nAnd hath given countenance to his speech, my lord,\nWith almost all the holy vows of heaven.\nLORD POLONIUS\nAy, springes to catch woodcocks. I do know,\nWhen the blood burns, how prodigal the soul\nLends the tongue vows: these blazes, daughter,\nGiving more light than heat, extinct in both,\nEven in their promise, as it is a-making,\nYou must not take for fire. From this time\nBe somewhat scanter of your maiden presence;\nSet your entreatments at a higher rate\nThan a command to parley. For Lord Hamlet,\nBelieve so much in him, that he is young\nAnd with a larger tether may he walk\nThan may be given you: in few, Ophelia,\nDo not believe his vows; for they are brokers,\nNot of that dye which their investments show,\nBut mere implorators of unholy suits,\nBreathing like sanctified and pious bawds,\nThe better to beguile. This is for all:\nI would not, in plain terms, from this time forth,\nHave you so slander any moment leisure,\nAs to give words or talk with the Lord Hamlet.\nLook to't, I charge you: come your ways.\nOPHELIA\nI shall obey, my lord.\nExeunt\n\nSCENE IV. The platform.\nEnter HAMLET, HORATIO, and MARCELLUS\nHAMLET\nThe air bites shrewdly; it is very cold.\nHORATIO\nIt is a nipping and an eager air.\nHAMLET\nWhat hour now?\nHORATIO\nI think it lacks of twelve.\nHAMLET\nNo, it is struck.\nHORATIO\nIndeed? I heard it not: then it draws near the season\nWherein the spirit held his wont to walk.\nA flourish of trumpets, and ordnance shot off, within\n\nWhat does this mean, my lord?\nHAMLET\nThe king doth wake to-night and takes his rouse,\nKeeps wassail, and the swaggering up-spring reels;\nAnd, as he drains his draughts of Rhenish down,\nThe kettle-drum and trumpet thus bray out\nThe triumph of his pledge.\nHORATIO\nIs it a custom?\nHAMLET\nAy, marry, is't:\nBut to my mind, though I am native here\nAnd to the manner born, it is a custom\nMore honour'd in the breach than the observance.\nThis heavy-headed revel east and west\nMakes us traduced and tax'd of other nations:\nThey clepe us drunkards, and with swinish phrase\nSoil our addition; and indeed it takes\nFrom our achievements, though perform'd at height,\nThe pith and marrow of our attribute.\nSo, oft it chances in particular men,\nThat for some vicious mole of nature in them,\nAs, in their birth--wherein they are not guilty,\nSince nature cannot choose his origin--\nBy the o'ergrowth of some complexion,\nOft breaking down the pales and forts of reason,\nOr by some habit that too much o'er-leavens\nThe form of plausive manners, that these men,\nCarrying, I say, the stamp of one defect,\nBeing nature's livery, or fortune's star,--\nTheir virtues else--be they as pure as grace,\nAs infinite as man may undergo--\nShall in the general censure take corruption\nFrom that particular fault: the dram of eale\nDoth all the noble substance of a doubt\nTo his own scandal.\nHORATIO\nLook, my lord, it comes!\nEnter Ghost\n\nHAMLET\nAngels and ministers of grace defend us!\nBe thou a spirit of health or goblin damn'd,\nBring with thee airs from heaven or blasts from hell,\nBe thy intents wicked or charitable,\nThou comest in such a questionable shape\nThat I will speak to thee: I'll call thee Hamlet,\nKing, father, royal Dane: O, answer me!\nLet me not burst in ignorance; but tell\nWhy thy canonized bones, hearsed in death,\nHave burst their cerements; why the sepulchre,\nWherein we saw thee quietly inurn'd,\nHath oped his ponderous and marble jaws,\nTo cast thee up again. What may this mean,\nThat thou, dead corse, again in complete steel\nRevisit'st thus the glimpses of the moon,\nMaking night hideous; and we fools of nature\nSo horridly to shake our disposition\nWith thoughts beyond the reaches of our souls?\nSay, why is this? wherefore? what should we do?\nGhost beckons HAMLET\n\nHORATIO\nIt beckons you to go away with it,\nAs if it some impartment did desire\nTo you alone.\nMARCELLUS\nLook, with what courteous action\nIt waves you to a more removed ground:\nBut do not go with it.\nHORATIO\nNo, by no means.\nHAMLET\nIt will not speak; then I will follow it.\nHORATIO\nDo not, my lord.\nHAMLET\nWhy, what should be the fear?\nI do not set my life in a pin's fee;\nAnd for my soul, what can it do to that,\nBeing a thing immortal as itself?\nIt waves me forth again: I'll follow it.\nHORATIO\nWhat if it tempt you toward the flood, my lord,\nOr to the dreadful summit of the cliff\nThat beetles o'er his base into the sea,\nAnd there assume some other horrible form,\nWhich might deprive your sovereignty of reason\nAnd draw you into madness? think of it:\nThe very place puts toys of desperation,\nWithout more motive, into every brain\nThat looks so many fathoms to the sea\nAnd hears it roar beneath.\nHAMLET\nIt waves me still.\nGo on; I'll follow thee.\nMARCELLUS\nYou shall not go, my lord.\nHAMLET\nHold off your hands.\nHORATIO\nBe ruled; you shall not go.\nHAMLET\nMy fate cries out,\nAnd makes each petty artery in this body\nAs hardy as the Nemean lion's nerve.\nStill am I call'd. Unhand me, gentlemen.\nBy heaven, I'll make a ghost of him that lets me!\nI say, away! Go on; I'll follow thee.\nExeunt Ghost and HAMLET\n\nHORATIO\nHe waxes desperate with imagination.\nMARCELLUS\nLet's follow; 'tis not fit thus to obey him.\nHORATIO\nHave after. To what issue will this come?\nMARCELLUS\nSomething is rotten in the state of Denmark.\nHORATIO\nHeaven will direct it.\nMARCELLUS\nNay, let's follow him.\nExeunt\n\nSCENE V. Another part of the platform.\nEnter GHOST and HAMLET\nHAMLET\nWhere wilt thou lead me? speak; I'll go no further.\nGhost\nMark me.\nHAMLET\nI will.\nGhost\nMy hour is almost come,\nWhen I to sulphurous and tormenting flames\nMust render up myself.\nHAMLET\nAlas, poor ghost!\nGhost\nPity me not, but lend thy serious hearing\nTo what I shall unfold.\nHAMLET\nSpeak; I am bound to hear.\nGhost\nSo art thou to revenge, when thou shalt hear.\nHAMLET\nWhat?\nGhost\nI am thy father's spirit,\nDoom'd for a certain term to walk the night,\nAnd for the day confined to fast in fires,\nTill the foul crimes done in my days of nature\nAre burnt and purged away. But that I am forbid\nTo tell the secrets of my prison-house,\nI could a tale unfold whose lightest word\nWould harrow up thy soul, freeze thy young blood,\nMake thy two eyes, like stars, start from their spheres,\nThy knotted and combined locks to part\nAnd each particular hair to stand on end,\nLike quills upon the fretful porpentine:\nBut this eternal blazon must not be\nTo ears of flesh and blood. List, list, O, list!\nIf thou didst ever thy dear father love--\nHAMLET\nO God!\nGhost\nRevenge his foul and most unnatural murder.\nHAMLET\nMurder!\nGhost\nMurder most foul, as in the best it is;\nBut this most foul, strange and unnatural.\nHAMLET\nHaste me to know't, that I, with wings as swift\nAs meditation or the thoughts of love,\nMay sweep to my revenge.\nGhost\nI find thee apt;\nAnd duller shouldst thou be than the fat weed\nThat roots itself in ease on Lethe wharf,\nWouldst thou not stir in this. Now, Hamlet, hear:\n'Tis given out that, sleeping in my orchard,\nA serpent stung me; so the whole ear of Denmark\nIs by a forged process of my death\nRankly abused: but know, thou noble youth,\nThe serpent that did sting thy father's life\nNow wears his crown.\nHAMLET\nO my prophetic soul! My uncle!\nGhost\nAy, that incestuous, that adulterate beast,\nWith witchcraft of his wit, with traitorous gifts,--\nO wicked wit and gifts, that have the power\nSo to seduce!--won to his shameful lust\nThe will of my most seeming-virtuous queen:\nO Hamlet, what a falling-off was there!\nFrom me, whose love was of that dignity\nThat it went hand in hand even with the vow\nI made to her in marriage, and to decline\nUpon a wretch whose natural gifts were poor\nTo those of mine!\nBut virtue, as it never will be moved,\nThough lewdness court it in a shape of heaven,\nSo lust, though to a radiant angel link'd,\nWill sate itself in a celestial bed,\nAnd prey on garbage.\nBut, soft! methinks I scent the morning air;\nBrief let me be. Sleeping within my orchard,\nMy custom always of the afternoon,\nUpon my secure hour thy uncle stole,\nWith juice of cursed hebenon in a vial,\nAnd in the porches of my ears did pour\nThe leperous distilment; whose effect\nHolds such an enmity with blood of man\nThat swift as quicksilver it courses through\nThe natural gates and alleys of the body,\nAnd with a sudden vigour doth posset\nAnd curd, like eager droppings into milk,\nThe thin and wholesome blood: so did it mine;\nAnd a most instant tetter bark'd about,\nMost lazar-like, with vile and loathsome crust,\nAll my smooth body.\nThus was I, sleeping, by a brother's hand\nOf life, of crown, of queen, at once dispatch'd:\nCut off even in the blossoms of my sin,\nUnhousel'd, disappointed, unanel'd,\nNo reckoning made, but sent to my account\nWith all my imperfections on my head:\nO, horrible! O, horrible! most horrible!\nIf thou hast nature in thee, bear it not;\nLet not the royal bed of Denmark be\nA couch for luxury and damned incest.\nBut, howsoever thou pursuest this act,\nTaint not thy mind, nor let thy soul contrive\nAgainst thy mother aught: leave her to heaven\nAnd to those thorns that in her bosom lodge,\nTo prick and sting her. Fare thee well at once!\nThe glow-worm shows the matin to be near,\nAnd 'gins to pale his uneffectual fire:\nAdieu, adieu! Hamlet, remember me.\nExit\n\nHAMLET\nO all you host of heaven! O earth! what else?\nAnd shall I couple hell? O, fie! Hold, hold, my heart;\nAnd you, my sinews, grow not instant old,\nBut bear me stiffly up. Remember thee!\nAy, thou poor ghost, while memory holds a seat\nIn this distracted globe. Remember thee!\nYea, from the table of my memory\nI'll wipe away all trivial fond records,\nAll saws of books, all forms, all pressures past,\nThat youth and observation copied there;\nAnd thy commandment all alone shall live\nWithin the book and volume of my brain,\nUnmix'd with baser matter: yes, by heaven!\nO most pernicious woman!\nO villain, villain, smiling, damned villain!\nMy tables,--meet it is I set it down,\nThat one may smile, and smile, and be a villain;\nAt least I'm sure it may be so in Denmark:\nWriting\n\nSo, uncle, there you are. Now to my word;\nIt is 'Adieu, adieu! remember me.'\nI have sworn 't.\nMARCELLUS HORATIO\n[Within] My lord, my lord,--\nMARCELLUS\n[Within] Lord Hamlet,--\nHORATIO\n[Within] Heaven secure him!\nHAMLET\nSo be it!\nHORATIO\n[Within] Hillo, ho, ho, my lord!\nHAMLET\nHillo, ho, ho, boy! come, bird, come.\nEnter HORATIO and MARCELLUS\n\nMARCELLUS\nHow is't, my noble lord?\nHORATIO\nWhat news, my lord?\nHAMLET\nO, wonderful!\nHORATIO\nGood my lord, tell it.\nHAMLET\nNo; you'll reveal it.\nHORATIO\nNot I, my lord, by heaven.\nMARCELLUS\nNor I, my lord.\nHAMLET\nHow say you, then; would heart of man once think it?\nBut you'll be secret?\nHORATIO MARCELLUS\nAy, by heaven, my lord.\nHAMLET\nThere's ne'er a villain dwelling in all Denmark\nBut he's an arrant knave.\nHORATIO\nThere needs no ghost, my lord, come from the grave\nTo tell us this.\nHAMLET\nWhy, right; you are i' the right;\nAnd so, without more circumstance at all,\nI hold it fit that we shake hands and part:\nYou, as your business and desire shall point you;\nFor every man has business and desire,\nSuch as it is; and for mine own poor part,\nLook you, I'll go pray.\nHORATIO\nThese are but wild and whirling words, my lord.\nHAMLET\nI'm sorry they offend you, heartily;\nYes, 'faith heartily.\nHORATIO\nThere's no offence, my lord.\nHAMLET\nYes, by Saint Patrick, but there is, Horatio,\nAnd much offence too. Touching this vision here,\nIt is an honest ghost, that let me tell you:\nFor your desire to know what is between us,\nO'ermaster 't as you may. And now, good friends,\nAs you are friends, scholars and soldiers,\nGive me one poor request.\nHORATIO\nWhat is't, my lord? we will.\nHAMLET\nNever make known what you have seen to-night.\nHORATIO MARCELLUS\nMy lord, we will not.\nHAMLET\nNay, but swear't.\nHORATIO\nIn faith,\nMy lord, not I.\nMARCELLUS\nNor I, my lord, in faith.\nHAMLET\nUpon my sword.\nMARCELLUS\nWe have sworn, my lord, already.\nHAMLET\nIndeed, upon my sword, indeed.\nGhost\n[Beneath] Swear.\nHAMLET\nAh, ha, boy! say'st thou so? art thou there,\ntruepenny?\nCome on--you hear this fellow in the cellarage--\nConsent to swear.\nHORATIO\nPropose the oath, my lord.\nHAMLET\nNever to speak of this that you have seen,\nSwear by my sword.\nGhost\n[Beneath] Swear.\nHAMLET\nHic et ubique? then we'll shift our ground.\nCome hither, gentlemen,\nAnd lay your hands again upon my sword:\nNever to speak of this that you have heard,\nSwear by my sword.\nGhost\n[Beneath] Swear.\nHAMLET\nWell said, old mole! canst work i' the earth so fast?\nA worthy pioner! Once more remove, good friends.\nHORATIO\nO day and night, but this is wondrous strange!\nHAMLET\nAnd therefore as a stranger give it welcome.\nThere are more things in heaven and earth, Horatio,\nThan are dreamt of in your philosophy. But come;\nHere, as before, never, so help you mercy,\nHow strange or odd soe'er I bear myself,\nAs I perchance hereafter shall think meet\nTo put an antic disposition on,\nThat you, at such times seeing me, never shall,\nWith arms encumber'd thus, or this headshake,\nOr by pronouncing of some doubtful phrase,\nAs 'Well, well, we know,' or 'We could, an if we would,'\nOr 'If we list to speak,' or 'There be, an if they might,'\nOr such ambiguous giving out, to note\nThat you know aught of me: this not to do,\nSo grace and mercy at your most need help you, Swear.\nGhost\n[Beneath] Swear.\nHAMLET\nRest, rest, perturbed spirit!\nThey swear\n\nSo, gentlemen,\nWith all my love I do commend me to you:\nAnd what so poor a man as Hamlet is\nMay do, to express his love and friending to you,\nGod willing, shall not lack. Let us go in together;\nAnd still your fingers on your lips, I pray.\nThe time is out of joint: O cursed spite,\nThat ever I was born to set it right!\nNay, come, let's go together.\nExeunt\n\nACT II\nSCENE I. A room in POLONIUS' house.\nEnter POLONIUS and REYNALDO\nLORD POLONIUS\nGive him this money and these notes, Reynaldo.\nREYNALDO\nI will, my lord.\nLORD POLONIUS\nYou shall do marvellous wisely, good Reynaldo,\nBefore you visit him, to make inquire\nOf his behavior.\nREYNALDO\nMy lord, I did intend it.\nLORD POLONIUS\nMarry, well said; very well said. Look you, sir,\nInquire me first what Danskers are in Paris;\nAnd how, and who, what means, and where they keep,\nWhat company, at what expense; and finding\nBy this encompassment and drift of question\nThat they do know my son, come you more nearer\nThan your particular demands will touch it:\nTake you, as 'twere, some distant knowledge of him;\nAs thus, 'I know his father and his friends,\nAnd in part him: ' do you mark this, Reynaldo?\nREYNALDO\nAy, very well, my lord.\nLORD POLONIUS\n'And in part him; but' you may say 'not well:\nBut, if't be he I mean, he's very wild;\nAddicted so and so:' and there put on him\nWhat forgeries you please; marry, none so rank\nAs may dishonour him; take heed of that;\nBut, sir, such wanton, wild and usual slips\nAs are companions noted and most known\nTo youth and liberty.\nREYNALDO\nAs gaming, my lord.\nLORD POLONIUS\nAy, or drinking, fencing, swearing, quarrelling,\nDrabbing: you may go so far.\nREYNALDO\nMy lord, that would dishonour him.\nLORD POLONIUS\n'Faith, no; as you may season it in the charge\nYou must not put another scandal on him,\nThat he is open to incontinency;\nThat's not my meaning: but breathe his faults so quaintly\nThat they may seem the taints of liberty,\nThe flash and outbreak of a fiery mind,\nA savageness in unreclaimed blood,\nOf general assault.\nREYNALDO\nBut, my good lord,--\nLORD POLONIUS\nWherefore should you do this?\nREYNALDO\nAy, my lord,\nI would know that.\nLORD POLONIUS\nMarry, sir, here's my drift;\nAnd I believe, it is a fetch of wit:\nYou laying these slight sullies on my son,\nAs 'twere a thing a little soil'd i' the working, Mark you,\nYour party in converse, him you would sound,\nHaving ever seen in the prenominate crimes\nThe youth you breathe of guilty, be assured\nHe closes with you in this consequence;\n'Good sir,' or so, or 'friend,' or 'gentleman,'\nAccording to the phrase or the addition\nOf man and country.\nREYNALDO\nVery good, my lord.\nLORD POLONIUS\nAnd then, sir, does he this--he does--what was I\nabout to say? By the mass, I was about to say\nsomething: where did I leave?\nREYNALDO\nAt 'closes in the consequence,' at 'friend or so,'\nand 'gentleman.'\nLORD POLONIUS\nAt 'closes in the consequence,' ay, marry;\nHe closes thus: 'I know the gentleman;\nI saw him yesterday, or t' other day,\nOr then, or then; with such, or such; and, as you say,\nThere was a' gaming; there o'ertook in's rouse;\nThere falling out at tennis:' or perchance,\n'I saw him enter such a house of sale,'\nVidelicet, a brothel, or so forth.\nSee you now;\nYour bait of falsehood takes this carp of truth:\nAnd thus do we of wisdom and of reach,\nWith windlasses and with assays of bias,\nBy indirections find directions out:\nSo by my former lecture and advice,\nShall you my son. You have me, have you not?\nREYNALDO\nMy lord, I have.\nLORD POLONIUS\nGod be wi' you; fare you well.\nREYNALDO\nGood my lord!\nLORD POLONIUS\nObserve his inclination in yourself.\nREYNALDO\nI shall, my lord.\nLORD POLONIUS\nAnd let him ply his music.\nREYNALDO\nWell, my lord.\nLORD POLONIUS\nFarewell!\nExit REYNALDO\n\nEnter OPHELIA\n\nHow now, Ophelia! what's the matter?\nOPHELIA\nO, my lord, my lord, I have been so affrighted!\nLORD POLONIUS\nWith what, i' the name of God?\nOPHELIA\nMy lord, as I was sewing in my closet,\nLord Hamlet, with his doublet all unbraced;\nNo hat upon his head; his stockings foul'd,\nUngarter'd, and down-gyved to his ancle;\nPale as his shirt; his knees knocking each other;\nAnd with a look so piteous in purport\nAs if he had been loosed out of hell\nTo speak of horrors,--he comes before me.\nLORD POLONIUS\nMad for thy love?\nOPHELIA\nMy lord, I do not know;\nBut truly, I do fear it.\nLORD POLONIUS\nWhat said he?\nOPHELIA\nHe took me by the wrist and held me hard;\nThen goes he to the length of all his arm;\nAnd, with his other hand thus o'er his brow,\nHe falls to such perusal of my face\nAs he would draw it. Long stay'd he so;\nAt last, a little shaking of mine arm\nAnd thrice his head thus waving up and down,\nHe raised a sigh so piteous and profound\nAs it did seem to shatter all his bulk\nAnd end his being: that done, he lets me go:\nAnd, with his head over his shoulder turn'd,\nHe seem'd to find his way without his eyes;\nFor out o' doors he went without their helps,\nAnd, to the last, bended their light on me.\nLORD POLONIUS\nCome, go with me: I will go seek the king.\nThis is the very ecstasy of love,\nWhose violent property fordoes itself\nAnd leads the will to desperate undertakings\nAs oft as any passion under heaven\nThat does afflict our natures. I am sorry.\nWhat, have you given him any hard words of late?\nOPHELIA\nNo, my good lord, but, as you did command,\nI did repel his fetters and denied\nHis access to me.\nLORD POLONIUS\nThat hath made him mad.\nI am sorry that with better heed and judgment\nI had not quoted him: I fear'd he did but trifle,\nAnd meant to wreck thee; but, beshrew my jealousy!\nBy heaven, it is as proper to our age\nTo cast beyond ourselves in our opinions\nAs it is common for the younger sort\nTo lack discretion. Come, go we to the king:\nThis must be known; which, being kept close, might\nmove\nMore grief to hide than hate to utter love.\nExeunt\n\nSCENE II. A room in the castle.\nEnter KING CLAUDIUS, QUEEN GERTRUDE, ROSENCRANTZ, GUILDENSTERN, and Attendants\nKING CLAUDIUS\nWelcome, dear Rosencrantz and Guildenstern!\nMoreover that we much did long to see you,\nThe need we have to use you did provoke\nOur hasty sending. Something have you heard\nOf Hamlet's transformation; so call it,\nSith nor the exterior nor the inward man\nResembles that it was. What it should be,\nMore than his father's death, that thus hath put him\nSo much from the understanding of himself,\nI cannot dream of: I entreat you both,\nThat, being of so young days brought up with him,\nAnd sith so neighbour'd to his youth and havior,\nThat you vouchsafe your rest here in our court\nSome little time: so by your companies\nTo draw him on to pleasures, and to gather,\nSo much as from occasion you may glean,\nWhether aught, to us unknown, afflicts him thus,\nThat, open'd, lies within our remedy.\nQUEEN GERTRUDE\nGood gentlemen, he hath much talk'd of you;\nAnd sure I am two men there are not living\nTo whom he more adheres. If it will please you\nTo show us so much gentry and good will\nAs to expend your time with us awhile,\nFor the supply and profit of our hope,\nYour visitation shall receive such thanks\nAs fits a king's remembrance.\nROSENCRANTZ\nBoth your majesties\nMight, by the sovereign power you have of us,\nPut your dread pleasures more into command\nThan to entreaty.\nGUILDENSTERN\nBut we both obey,\nAnd here give up ourselves, in the full bent\nTo lay our service freely at your feet,\nTo be commanded.\nKING CLAUDIUS\nThanks, Rosencrantz and gentle Guildenstern.\nQUEEN GERTRUDE\nThanks, Guildenstern and gentle Rosencrantz:\nAnd I beseech you instantly to visit\nMy too much changed son. Go, some of you,\nAnd bring these gentlemen where Hamlet is.\nGUILDENSTERN\nHeavens make our presence and our practises\nPleasant and helpful to him!\nQUEEN GERTRUDE\nAy, amen!\nExeunt ROSENCRANTZ, GUILDENSTERN, and some Attendants\n\nEnter POLONIUS\n\nLORD POLONIUS\nThe ambassadors from Norway, my good lord,\nAre joyfully return'd.\nKING CLAUDIUS\nThou still hast been the father of good news.\nLORD POLONIUS\nHave I, my lord? I assure my good liege,\nI hold my duty, as I hold my soul,\nBoth to my God and to my gracious king:\nAnd I do think, or else this brain of mine\nHunts not the trail of policy so sure\nAs it hath used to do, that I have found\nThe very cause of Hamlet's lunacy.\nKING CLAUDIUS\nO, speak of that; that do I long to hear.\nLORD POLONIUS\nGive first admittance to the ambassadors;\nMy news shall be the fruit to that great feast.\nKING CLAUDIUS\nThyself do grace to them, and bring them in.\nExit POLONIUS\n\nHe tells me, my dear Gertrude, he hath found\nThe head and source of all your son's distemper.\nQUEEN GERTRUDE\nI doubt it is no other but the main;\nHis father's death, and our o'erhasty marriage.\nKING CLAUDIUS\nWell, we shall sift him.\nRe-enter POLONIUS, with VOLTIMAND and CORNELIUS\n\nWelcome, my good friends!\nSay, Voltimand, what from our brother Norway?\nVOLTIMAND\nMost fair return of greetings and desires.\nUpon our first, he sent out to suppress\nHis nephew's levies; which to him appear'd\nTo be a preparation 'gainst the Polack;\nBut, better look'd into, he truly found\nIt was against your highness: whereat grieved,\nThat so his sickness, age and impotence\nWas falsely borne in hand, sends out arrests\nOn Fortinbras; which he, in brief, obeys;\nReceives rebuke from Norway, and in fine\nMakes vow before his uncle never more\nTo give the assay of arms against your majesty.\nWhereon old Norway, overcome with joy,\nGives him three thousand crowns in annual fee,\nAnd his commission to employ those soldiers,\nSo levied as before, against the Polack:\nWith an entreaty, herein further shown,\nGiving a paper\n\nThat it might please you to give quiet pass\nThrough your dominions for this enterprise,\nOn such regards of safety and allowance\nAs therein are set down.\nKING CLAUDIUS\nIt likes us well;\nAnd at our more consider'd time well read,\nAnswer, and think upon this business.\nMeantime we thank you for your well-took labour:\nGo to your rest; at night we'll feast together:\nMost welcome home!\nExeunt VOLTIMAND and CORNELIUS\n\nLORD POLONIUS\nThis business is well ended.\nMy liege, and madam, to expostulate\nWhat majesty should be, what duty is,\nWhy day is day, night night, and time is time,\nWere nothing but to waste night, day and time.\nTherefore, since brevity is the soul of wit,\nAnd tediousness the limbs and outward flourishes,\nI will be brief: your noble son is mad:\nMad call I it; for, to define true madness,\nWhat is't but to be nothing else but mad?\nBut let that go.\nQUEEN GERTRUDE\nMore matter, with less art.\nLORD POLONIUS\nMadam, I swear I use no art at all.\nThat he is mad, 'tis true: 'tis true 'tis pity;\nAnd pity 'tis 'tis true: a foolish figure;\nBut farewell it, for I will use no art.\nMad let us grant him, then: and now remains\nThat we find out the cause of this effect,\nOr rather say, the cause of this defect,\nFor this effect defective comes by cause:\nThus it remains, and the remainder thus. Perpend.\nI have a daughter--have while she is mine--\nWho, in her duty and obedience, mark,\nHath given me this: now gather, and surmise.\nReads\n\n'To the celestial and my soul's idol, the most\nbeautified Ophelia,'--\nThat's an ill phrase, a vile phrase; 'beautified' is\na vile phrase: but you shall hear. Thus:\nReads\n\n'In her excellent white bosom, these, & c.'\nQUEEN GERTRUDE\nCame this from Hamlet to her?\nLORD POLONIUS\nGood madam, stay awhile; I will be faithful.\nReads\n\n'Doubt thou the stars are fire;\nDoubt that the sun doth move;\nDoubt truth to be a liar;\nBut never doubt I love.\n'O dear Ophelia, I am ill at these numbers;\nI have not art to reckon my groans: but that\nI love thee best, O most best, believe it. Adieu.\n'Thine evermore most dear lady, whilst\nthis machine is to him, HAMLET.'\nThis, in obedience, hath my daughter shown me,\nAnd more above, hath his solicitings,\nAs they fell out by time, by means and place,\nAll given to mine ear.\nKING CLAUDIUS\nBut how hath she\nReceived his love?\nLORD POLONIUS\nWhat do you think of me?\nKING CLAUDIUS\nAs of a man faithful and honourable.\nLORD POLONIUS\nI would fain prove so. But what might you think,\nWhen I had seen this hot love on the wing--\nAs I perceived it, I must tell you that,\nBefore my daughter told me--what might you,\nOr my dear majesty your queen here, think,\nIf I had play'd the desk or table-book,\nOr given my heart a winking, mute and dumb,\nOr look'd upon this love with idle sight;\nWhat might you think? No, I went round to work,\nAnd my young mistress thus I did bespeak:\n'Lord Hamlet is a prince, out of thy star;\nThis must not be:' and then I precepts gave her,\nThat she should lock herself from his resort,\nAdmit no messengers, receive no tokens.\nWhich done, she took the fruits of my advice;\nAnd he, repulsed--a short tale to make--\nFell into a sadness, then into a fast,\nThence to a watch, thence into a weakness,\nThence to a lightness, and, by this declension,\nInto the madness wherein now he raves,\nAnd all we mourn for.\nKING CLAUDIUS\nDo you think 'tis this?\nQUEEN GERTRUDE\nIt may be, very likely.\nLORD POLONIUS\nHath there been such a time--I'd fain know that--\nThat I have positively said 'Tis so,'\nWhen it proved otherwise?\nKING CLAUDIUS\nNot that I know.\nLORD POLONIUS\n[Pointing to his head and shoulder]\nTake this from this, if this be otherwise:\nIf circumstances lead me, I will find\nWhere truth is hid, though it were hid indeed\nWithin the centre.\nKING CLAUDIUS\nHow may we try it further?\nLORD POLONIUS\nYou know, sometimes he walks four hours together\nHere in the lobby.\nQUEEN GERTRUDE\nSo he does indeed.\nLORD POLONIUS\nAt such a time I'll loose my daughter to him:\nBe you and I behind an arras then;\nMark the encounter: if he love her not\nAnd be not from his reason fall'n thereon,\nLet me be no assistant for a state,\nBut keep a farm and carters.\nKING CLAUDIUS\nWe will try it.\nQUEEN GERTRUDE\nBut, look, where sadly the poor wretch comes reading.\nLORD POLONIUS\nAway, I do beseech you, both away:\nI'll board him presently.\nExeunt KING CLAUDIUS, QUEEN GERTRUDE, and Attendants\n\nEnter HAMLET, reading\n\nO, give me leave:\nHow does my good Lord Hamlet?\nHAMLET\nWell, God-a-mercy.\nLORD POLONIUS\nDo you know me, my lord?\nHAMLET\nExcellent well; you are a fishmonger.\nLORD POLONIUS\nNot I, my lord.\nHAMLET\nThen I would you were so honest a man.\nLORD POLONIUS\nHonest, my lord!\nHAMLET\nAy, sir; to be honest, as this world goes, is to be\none man picked out of ten thousand.\nLORD POLONIUS\nThat's very true, my lord.\nHAMLET\nFor if the sun breed maggots in a dead dog, being a\ngod kissing carrion,--Have you a daughter?\nLORD POLONIUS\nI have, my lord.\nHAMLET\nLet her not walk i' the sun: conception is a\nblessing: but not as your daughter may conceive.\nFriend, look to 't.\nLORD POLONIUS\n[Aside] How say you by that? Still harping on my\ndaughter: yet he knew me not at first; he said I\nwas a fishmonger: he is far gone, far gone: and\ntruly in my youth I suffered much extremity for\nlove; very near this. I'll speak to him again.\nWhat do you read, my lord?\nHAMLET\nWords, words, words.\nLORD POLONIUS\nWhat is the matter, my lord?\nHAMLET\nBetween who?\nLORD POLONIUS\nI mean, the matter that you read, my lord.\nHAMLET\nSlanders, sir: for the satirical rogue says here\nthat old men have grey beards, that their faces are\nwrinkled, their eyes purging thick amber and\nplum-tree gum and that they have a plentiful lack of\nwit, together with most weak hams: all which, sir,\nthough I most powerfully and potently believe, yet\nI hold it not honesty to have it thus set down, for\nyourself, sir, should be old as I am, if like a crab\nyou could go backward.\nLORD POLONIUS\n[Aside] Though this be madness, yet there is method\nin 't. Will you walk out of the air, my lord?\nHAMLET\nInto my grave.\nLORD POLONIUS\nIndeed, that is out o' the air.\nAside\n\nHow pregnant sometimes his replies are! a happiness\nthat often madness hits on, which reason and sanity\ncould not so prosperously be delivered of. I will\nleave him, and suddenly contrive the means of\nmeeting between him and my daughter.--My honourable\nlord, I will most humbly take my leave of you.\nHAMLET\nYou cannot, sir, take from me any thing that I will\nmore willingly part withal: except my life, except\nmy life, except my life.\nLORD POLONIUS\nFare you well, my lord.\nHAMLET\nThese tedious old fools!\nEnter ROSENCRANTZ and GUILDENSTERN\n\nLORD POLONIUS\nYou go to seek the Lord Hamlet; there he is.\nROSENCRANTZ\n[To POLONIUS] God save you, sir!\nExit POLONIUS\n\nGUILDENSTERN\nMy honoured lord!\nROSENCRANTZ\nMy most dear lord!\nHAMLET\nMy excellent good friends! How dost thou,\nGuildenstern? Ah, Rosencrantz! Good lads, how do ye both?\nROSENCRANTZ\nAs the indifferent children of the earth.\nGUILDENSTERN\nHappy, in that we are not over-happy;\nOn fortune's cap we are not the very button.\nHAMLET\nNor the soles of her shoe?\nROSENCRANTZ\nNeither, my lord.\nHAMLET\nThen you live about her waist, or in the middle of\nher favours?\nGUILDENSTERN\n'Faith, her privates we.\nHAMLET\nIn the secret parts of fortune? O, most true; she\nis a strumpet. What's the news?\nROSENCRANTZ\nNone, my lord, but that the world's grown honest.\nHAMLET\nThen is doomsday near: but your news is not true.\nLet me question more in particular: what have you,\nmy good friends, deserved at the hands of fortune,\nthat she sends you to prison hither?\nGUILDENSTERN\nPrison, my lord!\nHAMLET\nDenmark's a prison.\nROSENCRANTZ\nThen is the world one.\nHAMLET\nA goodly one; in which there are many confines,\nwards and dungeons, Denmark being one o' the worst.\nROSENCRANTZ\nWe think not so, my lord.\nHAMLET\nWhy, then, 'tis none to you; for there is nothing\neither good or bad, but thinking makes it so: to me\nit is a prison.\nROSENCRANTZ\nWhy then, your ambition makes it one; 'tis too\nnarrow for your mind.\nHAMLET\nO God, I could be bounded in a nut shell and count\nmyself a king of infinite space, were it not that I\nhave bad dreams.\nGUILDENSTERN\nWhich dreams indeed are ambition, for the very\nsubstance of the ambitious is merely the shadow of a dream.\nHAMLET\nA dream itself is but a shadow.\nROSENCRANTZ\nTruly, and I hold ambition of so airy and light a\nquality that it is but a shadow's shadow.\nHAMLET\nThen are our beggars bodies, and our monarchs and\noutstretched heroes the beggars' shadows. Shall we\nto the court? for, by my fay, I cannot reason.\nROSENCRANTZ GUILDENSTERN\nWe'll wait upon you.\nHAMLET\nNo such matter: I will not sort you with the rest\nof my servants, for, to speak to you like an honest\nman, I am most dreadfully attended. But, in the\nbeaten way of friendship, what make you at Elsinore?\nROSENCRANTZ\nTo visit you, my lord; no other occasion.\nHAMLET\nBeggar that I am, I am even poor in thanks; but I\nthank you: and sure, dear friends, my thanks are\ntoo dear a halfpenny. Were you not sent for? Is it\nyour own inclining? Is it a free visitation? Come,\ndeal justly with me: come, come; nay, speak.\nGUILDENSTERN\nWhat should we say, my lord?\nHAMLET\nWhy, any thing, but to the purpose. You were sent\nfor; and there is a kind of confession in your looks\nwhich your modesties have not craft enough to colour:\nI know the good king and queen have sent for you.\nROSENCRANTZ\nTo what end, my lord?\nHAMLET\nThat you must teach me. But let me conjure you, by\nthe rights of our fellowship, by the consonancy of\nour youth, by the obligation of our ever-preserved\nlove, and by what more dear a better proposer could\ncharge you withal, be even and direct with me,\nwhether you were sent for, or no?\nROSENCRANTZ\n[Aside to GUILDENSTERN] What say you?\nHAMLET\n[Aside] Nay, then, I have an eye of you.--If you\nlove me, hold not off.\nGUILDENSTERN\nMy lord, we were sent for.\nHAMLET\nI will tell you why; so shall my anticipation\nprevent your discovery, and your secrecy to the king\nand queen moult no feather. I have of late--but\nwherefore I know not--lost all my mirth, forgone all\ncustom of exercises; and indeed it goes so heavily\nwith my disposition that this goodly frame, the\nearth, seems to me a sterile promontory, this most\nexcellent canopy, the air, look you, this brave\no'erhanging firmament, this majestical roof fretted\nwith golden fire, why, it appears no other thing to\nme than a foul and pestilent congregation of vapours.\nWhat a piece of work is a man! how noble in reason!\nhow infinite in faculty! in form and moving how\nexpress and admirable! in action how like an angel!\nin apprehension how like a god! the beauty of the\nworld! the paragon of animals! And yet, to me,\nwhat is this quintessence of dust? man delights not\nme: no, nor woman neither, though by your smiling\nyou seem to say so.\nROSENCRANTZ\nMy lord, there was no such stuff in my thoughts.\nHAMLET\nWhy did you laugh then, when I said 'man delights not me'?\nROSENCRANTZ\nTo think, my lord, if you delight not in man, what\nlenten entertainment the players shall receive from\nyou: we coted them on the way; and hither are they\ncoming, to offer you service.\nHAMLET\nHe that plays the king shall be welcome; his majesty\nshall have tribute of me; the adventurous knight\nshall use his foil and target; the lover shall not\nsigh gratis; the humourous man shall end his part\nin peace; the clown shall make those laugh whose\nlungs are tickled o' the sere; and the lady shall\nsay her mind freely, or the blank verse shall halt\nfor't. What players are they?\nROSENCRANTZ\nEven those you were wont to take delight in, the\ntragedians of the city.\nHAMLET\nHow chances it they travel? their residence, both\nin reputation and profit, was better both ways.\nROSENCRANTZ\nI think their inhibition comes by the means of the\nlate innovation.\nHAMLET\nDo they hold the same estimation they did when I was\nin the city? are they so followed?\nROSENCRANTZ\nNo, indeed, are they not.\nHAMLET\nHow comes it? do they grow rusty?\nROSENCRANTZ\nNay, their endeavour keeps in the wonted pace: but\nthere is, sir, an aery of children, little eyases,\nthat cry out on the top of question, and are most\ntyrannically clapped for't: these are now the\nfashion, and so berattle the common stages--so they\ncall them--that many wearing rapiers are afraid of\ngoose-quills and dare scarce come thither.\nHAMLET\nWhat, are they children? who maintains 'em? how are\nthey escoted? Will they pursue the quality no\nlonger than they can sing? will they not say\nafterwards, if they should grow themselves to common\nplayers--as it is most like, if their means are no\nbetter--their writers do them wrong, to make them\nexclaim against their own succession?\nROSENCRANTZ\n'Faith, there has been much to do on both sides; and\nthe nation holds it no sin to tarre them to\ncontroversy: there was, for a while, no money bid\nfor argument, unless the poet and the player went to\ncuffs in the question.\nHAMLET\nIs't possible?\nGUILDENSTERN\nO, there has been much throwing about of brains.\nHAMLET\nDo the boys carry it away?\nROSENCRANTZ\nAy, that they do, my lord; Hercules and his load too.\nHAMLET\nIt is not very strange; for mine uncle is king of\nDenmark, and those that would make mows at him while\nmy father lived, give twenty, forty, fifty, an\nhundred ducats a-piece for his picture in little.\n'Sblood, there is something in this more than\nnatural, if philosophy could find it out.\nFlourish of trumpets within\n\nGUILDENSTERN\nThere are the players.\nHAMLET\nGentlemen, you are welcome to Elsinore. Your hands,\ncome then: the appurtenance of welcome is fashion\nand ceremony: let me comply with you in this garb,\nlest my extent to the players, which, I tell you,\nmust show fairly outward, should more appear like\nentertainment than yours. You are welcome: but my\nuncle-father and aunt-mother are deceived.\nGUILDENSTERN\nIn what, my dear lord?\nHAMLET\nI am but mad north-north-west: when the wind is\nsoutherly I know a hawk from a handsaw.\nEnter POLONIUS\n\nLORD POLONIUS\nWell be with you, gentlemen!\nHAMLET\nHark you, Guildenstern; and you too: at each ear a\nhearer: that great baby you see there is not yet\nout of his swaddling-clouts.\nROSENCRANTZ\nHappily he's the second time come to them; for they\nsay an old man is twice a child.\nHAMLET\nI will prophesy he comes to tell me of the players;\nmark it. You say right, sir: o' Monday morning;\n'twas so indeed.\nLORD POLONIUS\nMy lord, I have news to tell you.\nHAMLET\nMy lord, I have news to tell you.\nWhen Roscius was an actor in Rome,--\nLORD POLONIUS\nThe actors are come hither, my lord.\nHAMLET\nBuz, buz!\nLORD POLONIUS\nUpon mine honour,--\nHAMLET\nThen came each actor on his ass,--\nLORD POLONIUS\nThe best actors in the world, either for tragedy,\ncomedy, history, pastoral, pastoral-comical,\nhistorical-pastoral, tragical-historical, tragical-\ncomical-historical-pastoral, scene individable, or\npoem unlimited: Seneca cannot be too heavy, nor\nPlautus too light. For the law of writ and the\nliberty, these are the only men.\nHAMLET\nO Jephthah, judge of Israel, what a treasure hadst thou!\nLORD POLONIUS\nWhat a treasure had he, my lord?\nHAMLET\nWhy,\n'One fair daughter and no more,\nThe which he loved passing well.'\nLORD POLONIUS\n[Aside] Still on my daughter.\nHAMLET\nAm I not i' the right, old Jephthah?\nLORD POLONIUS\nIf you call me Jephthah, my lord, I have a daughter\nthat I love passing well.\nHAMLET\nNay, that follows not.\nLORD POLONIUS\nWhat follows, then, my lord?\nHAMLET\nWhy,\n'As by lot, God wot,'\nand then, you know,\n'It came to pass, as most like it was,'--\nthe first row of the pious chanson will show you\nmore; for look, where my abridgement comes.\nEnter four or five Players\n\nYou are welcome, masters; welcome, all. I am glad\nto see thee well. Welcome, good friends. O, my old\nfriend! thy face is valenced since I saw thee last:\ncomest thou to beard me in Denmark? What, my young\nlady and mistress! By'r lady, your ladyship is\nnearer to heaven than when I saw you last, by the\naltitude of a chopine. Pray God, your voice, like\napiece of uncurrent gold, be not cracked within the\nring. Masters, you are all welcome. We'll e'en\nto't like French falconers, fly at any thing we see:\nwe'll have a speech straight: come, give us a taste\nof your quality; come, a passionate speech.\nFirst Player\nWhat speech, my lord?\nHAMLET\nI heard thee speak me a speech once, but it was\nnever acted; or, if it was, not above once; for the\nplay, I remember, pleased not the million; 'twas\ncaviare to the general: but it was--as I received\nit, and others, whose judgments in such matters\ncried in the top of mine--an excellent play, well\ndigested in the scenes, set down with as much\nmodesty as cunning. I remember, one said there\nwere no sallets in the lines to make the matter\nsavoury, nor no matter in the phrase that might\nindict the author of affectation; but called it an\nhonest method, as wholesome as sweet, and by very\nmuch more handsome than fine. One speech in it I\nchiefly loved: 'twas Aeneas' tale to Dido; and\nthereabout of it especially, where he speaks of\nPriam's slaughter: if it live in your memory, begin\nat this line: let me see, let me see--\n'The rugged Pyrrhus, like the Hyrcanian beast,'--\nit is not so:--it begins with Pyrrhus:--\n'The rugged Pyrrhus, he whose sable arms,\nBlack as his purpose, did the night resemble\nWhen he lay couched in the ominous horse,\nHath now this dread and black complexion smear'd\nWith heraldry more dismal; head to foot\nNow is he total gules; horridly trick'd\nWith blood of fathers, mothers, daughters, sons,\nBaked and impasted with the parching streets,\nThat lend a tyrannous and damned light\nTo their lord's murder: roasted in wrath and fire,\nAnd thus o'er-sized with coagulate gore,\nWith eyes like carbuncles, the hellish Pyrrhus\nOld grandsire Priam seeks.'\nSo, proceed you.\nLORD POLONIUS\n'Fore God, my lord, well spoken, with good accent and\ngood discretion.\nFirst Player\n'Anon he finds him\nStriking too short at Greeks; his antique sword,\nRebellious to his arm, lies where it falls,\nRepugnant to command: unequal match'd,\nPyrrhus at Priam drives; in rage strikes wide;\nBut with the whiff and wind of his fell sword\nThe unnerved father falls. Then senseless Ilium,\nSeeming to feel this blow, with flaming top\nStoops to his base, and with a hideous crash\nTakes prisoner Pyrrhus' ear: for, lo! his sword,\nWhich was declining on the milky head\nOf reverend Priam, seem'd i' the air to stick:\nSo, as a painted tyrant, Pyrrhus stood,\nAnd like a neutral to his will and matter,\nDid nothing.\nBut, as we often see, against some storm,\nA silence in the heavens, the rack stand still,\nThe bold winds speechless and the orb below\nAs hush as death, anon the dreadful thunder\nDoth rend the region, so, after Pyrrhus' pause,\nAroused vengeance sets him new a-work;\nAnd never did the Cyclops' hammers fall\nOn Mars's armour forged for proof eterne\nWith less remorse than Pyrrhus' bleeding sword\nNow falls on Priam.\nOut, out, thou strumpet, Fortune! All you gods,\nIn general synod 'take away her power;\nBreak all the spokes and fellies from her wheel,\nAnd bowl the round nave down the hill of heaven,\nAs low as to the fiends!'\nLORD POLONIUS\nThis is too long.\nHAMLET\nIt shall to the barber's, with your beard. Prithee,\nsay on: he's for a jig or a tale of bawdry, or he\nsleeps: say on: come to Hecuba.\nFirst Player\n'But who, O, who had seen the mobled queen--'\nHAMLET\n'The mobled queen?'\nLORD POLONIUS\nThat's good; 'mobled queen' is good.\nFirst Player\n'Run barefoot up and down, threatening the flames\nWith bisson rheum; a clout upon that head\nWhere late the diadem stood, and for a robe,\nAbout her lank and all o'er-teemed loins,\nA blanket, in the alarm of fear caught up;\nWho this had seen, with tongue in venom steep'd,\n'Gainst Fortune's state would treason have\npronounced:\nBut if the gods themselves did see her then\nWhen she saw Pyrrhus make malicious sport\nIn mincing with his sword her husband's limbs,\nThe instant burst of clamour that she made,\nUnless things mortal move them not at all,\nWould have made milch the burning eyes of heaven,\nAnd passion in the gods.'\nLORD POLONIUS\nLook, whether he has not turned his colour and has\ntears in's eyes. Pray you, no more.\nHAMLET\n'Tis well: I'll have thee speak out the rest soon.\nGood my lord, will you see the players well\nbestowed? Do you hear, let them be well used; for\nthey are the abstract and brief chronicles of the\ntime: after your death you were better have a bad\nepitaph than their ill report while you live.\nLORD POLONIUS\nMy lord, I will use them according to their desert.\nHAMLET\nGod's bodykins, man, much better: use every man\nafter his desert, and who should 'scape whipping?\nUse them after your own honour and dignity: the less\nthey deserve, the more merit is in your bounty.\nTake them in.\nLORD POLONIUS\nCome, sirs.\nHAMLET\nFollow him, friends: we'll hear a play to-morrow.\nExit POLONIUS with all the Players but the First\n\nDost thou hear me, old friend; can you play the\nMurder of Gonzago?\nFirst Player\nAy, my lord.\nHAMLET\nWe'll ha't to-morrow night. You could, for a need,\nstudy a speech of some dozen or sixteen lines, which\nI would set down and insert in't, could you not?\nFirst Player\nAy, my lord.\nHAMLET\nVery well. Follow that lord; and look you mock him\nnot.\nExit First Player\n\nMy good friends, I'll leave you till night: you are\nwelcome to Elsinore.\nROSENCRANTZ\nGood my lord!\nHAMLET\nAy, so, God be wi' ye;\nExeunt ROSENCRANTZ and GUILDENSTERN\n\nNow I am alone.\nO, what a rogue and peasant slave am I!\nIs it not monstrous that this player here,\nBut in a fiction, in a dream of passion,\nCould force his soul so to his own conceit\nThat from her working all his visage wann'd,\nTears in his eyes, distraction in's aspect,\nA broken voice, and his whole function suiting\nWith forms to his conceit? and all for nothing!\nFor Hecuba!\nWhat's Hecuba to him, or he to Hecuba,\nThat he should weep for her? What would he do,\nHad he the motive and the cue for passion\nThat I have? He would drown the stage with tears\nAnd cleave the general ear with horrid speech,\nMake mad the guilty and appal the free,\nConfound the ignorant, and amaze indeed\nThe very faculties of eyes and ears. Yet I,\nA dull and muddy-mettled rascal, peak,\nLike John-a-dreams, unpregnant of my cause,\nAnd can say nothing; no, not for a king,\nUpon whose property and most dear life\nA damn'd defeat was made. Am I a coward?\nWho calls me villain? breaks my pate across?\nPlucks off my beard, and blows it in my face?\nTweaks me by the nose? gives me the lie i' the throat,\nAs deep as to the lungs? who does me this?\nHa!\n'Swounds, I should take it: for it cannot be\nBut I am pigeon-liver'd and lack gall\nTo make oppression bitter, or ere this\nI should have fatted all the region kites\nWith this slave's offal: bloody, bawdy villain!\nRemorseless, treacherous, lecherous, kindless villain!\nO, vengeance!\nWhy, what an ass am I! This is most brave,\nThat I, the son of a dear father murder'd,\nPrompted to my revenge by heaven and hell,\nMust, like a whore, unpack my heart with words,\nAnd fall a-cursing, like a very drab,\nA scullion!\nFie upon't! foh! About, my brain! I have heard\nThat guilty creatures sitting at a play\nHave by the very cunning of the scene\nBeen struck so to the soul that presently\nThey have proclaim'd their malefactions;\nFor murder, though it have no tongue, will speak\nWith most miraculous organ. I'll have these players\nPlay something like the murder of my father\nBefore mine uncle: I'll observe his looks;\nI'll tent him to the quick: if he but blench,\nI know my course. The spirit that I have seen\nMay be the devil: and the devil hath power\nTo assume a pleasing shape; yea, and perhaps\nOut of my weakness and my melancholy,\nAs he is very potent with such spirits,\nAbuses me to damn me: I'll have grounds\nMore relative than this: the play 's the thing\nWherein I'll catch the conscience of the king.\nExit\n\nACT III\nSCENE I. A room in the castle.\nEnter KING CLAUDIUS, QUEEN GERTRUDE, POLONIUS, OPHELIA, ROSENCRANTZ, and GUILDENSTERN\nKING CLAUDIUS\nAnd can you, by no drift of circumstance,\nGet from him why he puts on this confusion,\nGrating so harshly all his days of quiet\nWith turbulent and dangerous lunacy?\nROSENCRANTZ\nHe does confess he feels himself distracted;\nBut from what cause he will by no means speak.\nGUILDENSTERN\nNor do we find him forward to be sounded,\nBut, with a crafty madness, keeps aloof,\nWhen we would bring him on to some confession\nOf his true state.\nQUEEN GERTRUDE\nDid he receive you well?\nROSENCRANTZ\nMost like a gentleman.\nGUILDENSTERN\nBut with much forcing of his disposition.\nROSENCRANTZ\nNiggard of question; but, of our demands,\nMost free in his reply.\nQUEEN GERTRUDE\nDid you assay him?\nTo any pastime?\nROSENCRANTZ\nMadam, it so fell out, that certain players\nWe o'er-raught on the way: of these we told him;\nAnd there did seem in him a kind of joy\nTo hear of it: they are about the court,\nAnd, as I think, they have already order\nThis night to play before him.\nLORD POLONIUS\n'Tis most true:\nAnd he beseech'd me to entreat your majesties\nTo hear and see the matter.\nKING CLAUDIUS\nWith all my heart; and it doth much content me\nTo hear him so inclined.\nGood gentlemen, give him a further edge,\nAnd drive his purpose on to these delights.\nROSENCRANTZ\nWe shall, my lord.\nExeunt ROSENCRANTZ and GUILDENSTERN\n\nKING CLAUDIUS\nSweet Gertrude, leave us too;\nFor we have closely sent for Hamlet hither,\nThat he, as 'twere by accident, may here\nAffront Ophelia:\nHer father and myself, lawful espials,\nWill so bestow ourselves that, seeing, unseen,\nWe may of their encounter frankly judge,\nAnd gather by him, as he is behaved,\nIf 't be the affliction of his love or no\nThat thus he suffers for.\nQUEEN GERTRUDE\nI shall obey you.\nAnd for your part, Ophelia, I do wish\nThat your good beauties be the happy cause\nOf Hamlet's wildness: so shall I hope your virtues\nWill bring him to his wonted way again,\nTo both your honours.\nOPHELIA\nMadam, I wish it may.\nExit QUEEN GERTRUDE\n\nLORD POLONIUS\nOphelia, walk you here. Gracious, so please you,\nWe will bestow ourselves.\nTo OPHELIA\n\nRead on this book;\nThat show of such an exercise may colour\nYour loneliness. We are oft to blame in this,--\n'Tis too much proved--that with devotion's visage\nAnd pious action we do sugar o'er\nThe devil himself.\nKING CLAUDIUS\n[Aside] O, 'tis too true!\nHow smart a lash that speech doth give my conscience!\nThe harlot's cheek, beautied with plastering art,\nIs not more ugly to the thing that helps it\nThan is my deed to my most painted word:\nO heavy burthen!\nLORD POLONIUS\nI hear him coming: let's withdraw, my lord.\nExeunt KING CLAUDIUS and POLONIUS\n\nEnter HAMLET\n\nHAMLET\nTo be, or not to be, that is the question,\nWhether 'tis nobler in the mind to suffer\nThe slings and arrows of outrageous fortune,\nOr to take arms against a sea of troubles,\nAnd by opposing end them? To die: to sleep;\nNo more; and by a sleep to say we end\nThe heart-ache and the thousand natural shocks\nThat flesh is heir to, 'tis a consummation\nDevoutly to be wish'd. To die, to sleep;\nTo sleep: perchance to dream: ay, there's the rub;\nFor in that sleep of death what dreams may come\nWhen we have shuffled off this mortal coil,\nMust give us pause: there's the respect\nThat makes calamity of so long life;\nFor who would bear the whips and scorns of time,\nThe oppressor's wrong, the proud man's contumely,\nThe pangs of despised love, the law's delay,\nThe insolence of office and the spurns\nThat patient merit of the unworthy takes,\nWhen he himself might his quietus make\nWith a bare bodkin? who would fardels bear,\nTo grunt and sweat under a weary life,\nBut that the dread of something after death,\nThe undiscover'd country from whose bourn\nNo traveller returns, puzzles the will\nAnd makes us rather bear those ills we have\nThan fly to others that we know not of?\nThus conscience does make cowards of us all;\nAnd thus the native hue of resolution\nIs sicklied o'er with the pale cast of thought,\nAnd enterprises of great pith and moment\nWith this regard their currents turn awry,\nAnd lose the name of action.--Soft you now!\nThe fair Ophelia! Nymph, in thy orisons\nBe all my sins remember'd.\nOPHELIA\nGood my lord,\nHow does your honour for this many a day?\nHAMLET\nI humbly thank you; well, well, well.\nOPHELIA\nMy lord, I have remembrances of yours,\nThat I have longed long to re-deliver;\nI pray you, now receive them.\nHAMLET\nNo, not I;\nI never gave you aught.\nOPHELIA\nMy honour'd lord, you know right well you did;\nAnd, with them, words of so sweet breath composed\nAs made the things more rich: their perfume lost,\nTake these again; for to the noble mind\nRich gifts wax poor when givers prove unkind.\nThere, my lord.\nHAMLET\nHa, ha! are you honest?\nOPHELIA\nMy lord?\nHAMLET\nAre you fair?\nOPHELIA\nWhat means your lordship?\nHAMLET\nThat if you be honest and fair, your honesty should\nadmit no discourse to your beauty.\nOPHELIA\nCould beauty, my lord, have better commerce than\nwith honesty?\nHAMLET\nAy, truly; for the power of beauty will sooner\ntransform honesty from what it is to a bawd than the\nforce of honesty can translate beauty into his\nlikeness: this was sometime a paradox, but now the\ntime gives it proof. I did love you once.\nOPHELIA\nIndeed, my lord, you made me believe so.\nHAMLET\nYou should not have believed me; for virtue cannot\nso inoculate our old stock but we shall relish of\nit: I loved you not.\nOPHELIA\nI was the more deceived.\nHAMLET\nGet thee to a nunnery: why wouldst thou be a\nbreeder of sinners? I am myself indifferent honest;\nbut yet I could accuse me of such things that it\nwere better my mother had not borne me: I am very\nproud, revengeful, ambitious, with more offences at\nmy beck than I have thoughts to put them in,\nimagination to give them shape, or time to act them\nin. What should such fellows as I do crawling\nbetween earth and heaven? We are arrant knaves,\nall; believe none of us. Go thy ways to a nunnery.\nWhere's your father?\nOPHELIA\nAt home, my lord.\nHAMLET\nLet the doors be shut upon him, that he may play the\nfool no where but in's own house. Farewell.\nOPHELIA\nO, help him, you sweet heavens!\nHAMLET\nIf thou dost marry, I'll give thee this plague for\nthy dowry: be thou as chaste as ice, as pure as\nsnow, thou shalt not escape calumny. Get thee to a\nnunnery, go: farewell. Or, if thou wilt needs\nmarry, marry a fool; for wise men know well enough\nwhat monsters you make of them. To a nunnery, go,\nand quickly too. Farewell.\nOPHELIA\nO heavenly powers, restore him!\nHAMLET\nI have heard of your paintings too, well enough; God\nhas given you one face, and you make yourselves\nanother: you jig, you amble, and you lisp, and\nnick-name God's creatures, and make your wantonness\nyour ignorance. Go to, I'll no more on't; it hath\nmade me mad. I say, we will have no more marriages:\nthose that are married already, all but one, shall\nlive; the rest shall keep as they are. To a\nnunnery, go.\nExit\n\nOPHELIA\nO, what a noble mind is here o'erthrown!\nThe courtier's, soldier's, scholar's, eye, tongue, sword;\nThe expectancy and rose of the fair state,\nThe glass of fashion and the mould of form,\nThe observed of all observers, quite, quite down!\nAnd I, of ladies most deject and wretched,\nThat suck'd the honey of his music vows,\nNow see that noble and most sovereign reason,\nLike sweet bells jangled, out of tune and harsh;\nThat unmatch'd form and feature of blown youth\nBlasted with ecstasy: O, woe is me,\nTo have seen what I have seen, see what I see!\nRe-enter KING CLAUDIUS and POLONIUS\n\nKING CLAUDIUS\nLove! his affections do not that way tend;\nNor what he spake, though it lack'd form a little,\nWas not like madness. There's something in his soul,\nO'er which his melancholy sits on brood;\nAnd I do doubt the hatch and the disclose\nWill be some danger: which for to prevent,\nI have in quick determination\nThus set it down: he shall with speed to England,\nFor the demand of our neglected tribute\nHaply the seas and countries different\nWith variable objects shall expel\nThis something-settled matter in his heart,\nWhereon his brains still beating puts him thus\nFrom fashion of himself. What think you on't?\nLORD POLONIUS\nIt shall do well: but yet do I believe\nThe origin and commencement of his grief\nSprung from neglected love. How now, Ophelia!\nYou need not tell us what Lord Hamlet said;\nWe heard it all. My lord, do as you please;\nBut, if you hold it fit, after the play\nLet his queen mother all alone entreat him\nTo show his grief: let her be round with him;\nAnd I'll be placed, so please you, in the ear\nOf all their conference. If she find him not,\nTo England send him, or confine him where\nYour wisdom best shall think.\nKING CLAUDIUS\nIt shall be so:\nMadness in great ones must not unwatch'd go.\nExeunt\n\nSCENE II. A hall in the castle.\nEnter HAMLET and Players\nHAMLET\nSpeak the speech, I pray you, as I pronounced it to\nyou, trippingly on the tongue: but if you mouth it,\nas many of your players do, I had as lief the\ntown-crier spoke my lines. Nor do not saw the air\ntoo much with your hand, thus, but use all gently;\nfor in the very torrent, tempest, and, as I may say,\nthe whirlwind of passion, you must acquire and beget\na temperance that may give it smoothness. O, it\noffends me to the soul to hear a robustious\nperiwig-pated fellow tear a passion to tatters, to\nvery rags, to split the ears of the groundlings, who\nfor the most part are capable of nothing but\ninexplicable dumbshows and noise: I would have such\na fellow whipped for o'erdoing Termagant; it\nout-herods Herod: pray you, avoid it.\nFirst Player\nI warrant your honour.\nHAMLET\nBe not too tame neither, but let your own discretion\nbe your tutor: suit the action to the word, the\nword to the action; with this special o'erstep not\nthe modesty of nature: for any thing so overdone is\nfrom the purpose of playing, whose end, both at the\nfirst and now, was and is, to hold, as 'twere, the\nmirror up to nature; to show virtue her own feature,\nscorn her own image, and the very age and body of\nthe time his form and pressure. Now this overdone,\nor come tardy off, though it make the unskilful\nlaugh, cannot but make the judicious grieve; the\ncensure of the which one must in your allowance\no'erweigh a whole theatre of others. O, there be\nplayers that I have seen play, and heard others\npraise, and that highly, not to speak it profanely,\nthat, neither having the accent of Christians nor\nthe gait of Christian, pagan, nor man, have so\nstrutted and bellowed that I have thought some of\nnature's journeymen had made men and not made them\nwell, they imitated humanity so abominably.\nFirst Player\nI hope we have reformed that indifferently with us,\nsir.\nHAMLET\nO, reform it altogether. And let those that play\nyour clowns speak no more than is set down for them;\nfor there be of them that will themselves laugh, to\nset on some quantity of barren spectators to laugh\ntoo; though, in the mean time, some necessary\nquestion of the play be then to be considered:\nthat's villanous, and shows a most pitiful ambition\nin the fool that uses it. Go, make you ready.\nExeunt Players\n\nEnter POLONIUS, ROSENCRANTZ, and GUILDENSTERN\n\nHow now, my lord! I will the king hear this piece of work?\nLORD POLONIUS\nAnd the queen too, and that presently.\nHAMLET\nBid the players make haste.\nExit POLONIUS\n\nWill you two help to hasten them?\nROSENCRANTZ GUILDENSTERN\nWe will, my lord.\nExeunt ROSENCRANTZ and GUILDENSTERN\n\nHAMLET\nWhat ho! Horatio!\nEnter HORATIO\n\nHORATIO\nHere, sweet lord, at your service.\nHAMLET\nHoratio, thou art e'en as just a man\nAs e'er my conversation coped withal.\nHORATIO\nO, my dear lord,--\nHAMLET\nNay, do not think I flatter;\nFor what advancement may I hope from thee\nThat no revenue hast but thy good spirits,\nTo feed and clothe thee? Why should the poor be flatter'd?\nNo, let the candied tongue lick absurd pomp,\nAnd crook the pregnant hinges of the knee\nWhere thrift may follow fawning. Dost thou hear?\nSince my dear soul was mistress of her choice\nAnd could of men distinguish, her election\nHath seal'd thee for herself; for thou hast been\nAs one, in suffering all, that suffers nothing,\nA man that fortune's buffets and rewards\nHast ta'en with equal thanks: and blest are those\nWhose blood and judgment are so well commingled,\nThat they are not a pipe for fortune's finger\nTo sound what stop she please. Give me that man\nThat is not passion's slave, and I will wear him\nIn my heart's core, ay, in my heart of heart,\nAs I do thee.--Something too much of this.--\nThere is a play to-night before the king;\nOne scene of it comes near the circumstance\nWhich I have told thee of my father's death:\nI prithee, when thou seest that act afoot,\nEven with the very comment of thy soul\nObserve mine uncle: if his occulted guilt\nDo not itself unkennel in one speech,\nIt is a damned ghost that we have seen,\nAnd my imaginations are as foul\nAs Vulcan's stithy. Give him heedful note;\nFor I mine eyes will rivet to his face,\nAnd after we will both our judgments join\nIn censure of his seeming.\nHORATIO\nWell, my lord:\nIf he steal aught the whilst this play is playing,\nAnd 'scape detecting, I will pay the theft.\nHAMLET\nThey are coming to the play; I must be idle:\nGet you a place.\nDanish march. A flourish. Enter KING CLAUDIUS, QUEEN GERTRUDE, POLONIUS, OPHELIA, ROSENCRANTZ, GUILDENSTERN, and others\n\nKING CLAUDIUS\nHow fares our cousin Hamlet?\nHAMLET\nExcellent, i' faith; of the chameleon's dish: I eat\nthe air, promise-crammed: you cannot feed capons so.\nKING CLAUDIUS\nI have nothing with this answer, Hamlet; these words\nare not mine.\nHAMLET\nNo, nor mine now.\nTo POLONIUS\n\nMy lord, you played once i' the university, you say?\nLORD POLONIUS\nThat did I, my lord; and was accounted a good actor.\nHAMLET\nWhat did you enact?\nLORD POLONIUS\nI did enact Julius Caesar: I was killed i' the\nCapitol; Brutus killed me.\nHAMLET\nIt was a brute part of him to kill so capital a calf\nthere. Be the players ready?\nROSENCRANTZ\nAy, my lord; they stay upon your patience.\nQUEEN GERTRUDE\nCome hither, my dear Hamlet, sit by me.\nHAMLET\nNo, good mother, here's metal more attractive.\nLORD POLONIUS\n[To KING CLAUDIUS] O, ho! do you mark that?\nHAMLET\nLady, shall I lie in your lap?\nLying down at OPHELIA's feet\n\nOPHELIA\nNo, my lord.\nHAMLET\nI mean, my head upon your lap?\nOPHELIA\nAy, my lord.\nHAMLET\nDo you think I meant country matters?\nOPHELIA\nI think nothing, my lord.\nHAMLET\nThat's a fair thought to lie between maids' legs.\nOPHELIA\nWhat is, my lord?\nHAMLET\nNothing.\nOPHELIA\nYou are merry, my lord.\nHAMLET\nWho, I?\nOPHELIA\nAy, my lord.\nHAMLET\nO God, your only jig-maker. What should a man do\nbut be merry? for, look you, how cheerfully my\nmother looks, and my father died within these two hours.\nOPHELIA\nNay, 'tis twice two months, my lord.\nHAMLET\nSo long? Nay then, let the devil wear black, for\nI'll have a suit of sables. O heavens! die two\nmonths ago, and not forgotten yet? Then there's\nhope a great man's memory may outlive his life half\na year: but, by'r lady, he must build churches,\nthen; or else shall he suffer not thinking on, with\nthe hobby-horse, whose epitaph is 'For, O, for, O,\nthe hobby-horse is forgot.'\nHautboys play. The dumb-show enters\n\nEnter a King and a Queen very lovingly; the Queen embracing him, and he her. She kneels, and makes show of protestation unto him. He takes her up, and declines his head upon her neck: lays him down upon a bank of flowers: she, seeing him asleep, leaves him. Anon comes in a fellow, takes off his crown, kisses it, and pours poison in the King's ears, and exit. The Queen returns; finds the King dead, and makes passionate action. The Poisoner, with some two or three Mutes, comes in again, seeming to lament with her. The dead body is carried away. The Poisoner wooes the Queen with gifts: she seems loath and unwilling awhile, but in the end accepts his love\n\nExeunt\n\nOPHELIA\nWhat means this, my lord?\nHAMLET\nMarry, this is miching mallecho; it means mischief.\nOPHELIA\nBelike this show imports the argument of the play.\nEnter Prologue\n\nHAMLET\nWe shall know by this fellow: the players cannot\nkeep counsel; they'll tell all.\nOPHELIA\nWill he tell us what this show meant?\nHAMLET\nAy, or any show that you'll show him: be not you\nashamed to show, he'll not shame to tell you what it means.\nOPHELIA\nYou are naught, you are naught: I'll mark the play.\nPrologue\nFor us, and for our tragedy,\nHere stooping to your clemency,\nWe beg your hearing patiently.\nExit\n\nHAMLET\nIs this a prologue, or the posy of a ring?\nOPHELIA\n'Tis brief, my lord.\nHAMLET\nAs woman's love.\nEnter two Players, King and Queen\n\nPlayer King\nFull thirty times hath Phoebus' cart gone round\nNeptune's salt wash and Tellus' orbed ground,\nAnd thirty dozen moons with borrow'd sheen\nAbout the world have times twelve thirties been,\nSince love our hearts and Hymen did our hands\nUnite commutual in most sacred bands.\nPlayer Queen\nSo many journeys may the sun and moon\nMake us again count o'er ere love be done!\nBut, woe is me, you are so sick of late,\nSo far from cheer and from your former state,\nThat I distrust you. Yet, though I distrust,\nDiscomfort you, my lord, it nothing must:\nFor women's fear and love holds quantity;\nIn neither aught, or in extremity.\nNow, what my love is, proof hath made you know;\nAnd as my love is sized, my fear is so:\nWhere love is great, the littlest doubts are fear;\nWhere little fears grow great, great love grows there.\nPlayer King\n'Faith, I must leave thee, love, and shortly too;\nMy operant powers their functions leave to do:\nAnd thou shalt live in this fair world behind,\nHonour'd, beloved; and haply one as kind\nFor husband shalt thou--\nPlayer Queen\nO, confound the rest!\nSuch love must needs be treason in my breast:\nIn second husband let me be accurst!\nNone wed the second but who kill'd the first.\nHAMLET\n[Aside] Wormwood, wormwood.\nPlayer Queen\nThe instances that second marriage move\nAre base respects of thrift, but none of love:\nA second time I kill my husband dead,\nWhen second husband kisses me in bed.\nPlayer King\nI do believe you think what now you speak;\nBut what we do determine oft we break.\nPurpose is but the slave to memory,\nOf violent birth, but poor validity;\nWhich now, like fruit unripe, sticks on the tree;\nBut fall, unshaken, when they mellow be.\nMost necessary 'tis that we forget\nTo pay ourselves what to ourselves is debt:\nWhat to ourselves in passion we propose,\nThe passion ending, doth the purpose lose.\nThe violence of either grief or joy\nTheir own enactures with themselves destroy:\nWhere joy most revels, grief doth most lament;\nGrief joys, joy grieves, on slender accident.\nThis world is not for aye, nor 'tis not strange\nThat even our loves should with our fortunes change;\nFor 'tis a question left us yet to prove,\nWhether love lead fortune, or else fortune love.\nThe great man down, you mark his favourite flies;\nThe poor advanced makes friends of enemies.\nAnd hitherto doth love on fortune tend;\nFor who not needs shall never lack a friend,\nAnd who in want a hollow friend doth try,\nDirectly seasons him his enemy.\nBut, orderly to end where I begun,\nOur wills and fates do so contrary run\nThat our devices still are overthrown;\nOur thoughts are ours, their ends none of our own:\nSo think thou wilt no second husband wed;\nBut die thy thoughts when thy first lord is dead.\nPlayer Queen\nNor earth to me give food, nor heaven light!\nSport and repose lock from me day and night!\nTo desperation turn my trust and hope!\nAn anchor's cheer in prison be my scope!\nEach opposite that blanks the face of joy\nMeet what I would have well and it destroy!\nBoth here and hence pursue me lasting strife,\nIf, once a widow, ever I be wife!\nHAMLET\nIf she should break it now!\nPlayer King\n'Tis deeply sworn. Sweet, leave me here awhile;\nMy spirits grow dull, and fain I would beguile\nThe tedious day with sleep.\nSleeps\n\nPlayer Queen\nSleep rock thy brain,\nAnd never come mischance between us twain!\nExit\n\nHAMLET\nMadam, how like you this play?\nQUEEN GERTRUDE\nThe lady protests too much, methinks.\nHAMLET\nO, but she'll keep her word.\nKING CLAUDIUS\nHave you heard the argument? Is there no offence in 't?\nHAMLET\nNo, no, they do but jest, poison in jest; no offence\ni' the world.\nKING CLAUDIUS\nWhat do you call the play?\nHAMLET\nThe Mouse-trap. Marry, how? Tropically. This play\nis the image of a murder done in Vienna: Gonzago is\nthe duke's name; his wife, Baptista: you shall see\nanon; 'tis a knavish piece of work: but what o'\nthat? your majesty and we that have free souls, it\ntouches us not: let the galled jade wince, our\nwithers are unwrung.\nEnter LUCIANUS\n\nThis is one Lucianus, nephew to the king.\nOPHELIA\nYou are as good as a chorus, my lord.\nHAMLET\nI could interpret between you and your love, if I\ncould see the puppets dallying.\nOPHELIA\nYou are keen, my lord, you are keen.\nHAMLET\nIt would cost you a groaning to take off my edge.\nOPHELIA\nStill better, and worse.\nHAMLET\nSo you must take your husbands. Begin, murderer;\npox, leave thy damnable faces, and begin. Come:\n'the croaking raven doth bellow for revenge.'\nLUCIANUS\nThoughts black, hands apt, drugs fit, and time agreeing;\nConfederate season, else no creature seeing;\nThou mixture rank, of midnight weeds collected,\nWith Hecate's ban thrice blasted, thrice infected,\nThy natural magic and dire property,\nOn wholesome life usurp immediately.\nPours the poison into the sleeper's ears\n\nHAMLET\nHe poisons him i' the garden for's estate. His\nname's Gonzago: the story is extant, and writ in\nchoice Italian: you shall see anon how the murderer\ngets the love of Gonzago's wife.\nOPHELIA\nThe king rises.\nHAMLET\nWhat, frighted with false fire!\nQUEEN GERTRUDE\nHow fares my lord?\nLORD POLONIUS\nGive o'er the play.\nKING CLAUDIUS\nGive me some light: away!\nAll\nLights, lights, lights!\nExeunt all but HAMLET and HORATIO\n\nHAMLET\nWhy, let the stricken deer go weep,\nThe hart ungalled play;\nFor some must watch, while some must sleep:\nSo runs the world away.\nWould not this, sir, and a forest of feathers-- if\nthe rest of my fortunes turn Turk with me--with two\nProvincial roses on my razed shoes, get me a\nfellowship in a cry of players, sir?\nHORATIO\nHalf a share.\nHAMLET\nA whole one, I.\nFor thou dost know, O Damon dear,\nThis realm dismantled was\nOf Jove himself; and now reigns here\nA very, very--pajock.\nHORATIO\nYou might have rhymed.\nHAMLET\nO good Horatio, I'll take the ghost's word for a\nthousand pound. Didst perceive?\nHORATIO\nVery well, my lord.\nHAMLET\nUpon the talk of the poisoning?\nHORATIO\nI did very well note him.\nHAMLET\nAh, ha! Come, some music! come, the recorders!\nFor if the king like not the comedy,\nWhy then, belike, he likes it not, perdy.\nCome, some music!\nRe-enter ROSENCRANTZ and GUILDENSTERN\n\nGUILDENSTERN\nGood my lord, vouchsafe me a word with you.\nHAMLET\nSir, a whole history.\nGUILDENSTERN\nThe king, sir,--\nHAMLET\nAy, sir, what of him?\nGUILDENSTERN\nIs in his retirement marvellous distempered.\nHAMLET\nWith drink, sir?\nGUILDENSTERN\nNo, my lord, rather with choler.\nHAMLET\nYour wisdom should show itself more richer to\nsignify this to his doctor; for, for me to put him\nto his purgation would perhaps plunge him into far\nmore choler.\nGUILDENSTERN\nGood my lord, put your discourse into some frame and\nstart not so wildly from my affair.\nHAMLET\nI am tame, sir: pronounce.\nGUILDENSTERN\nThe queen, your mother, in most great affliction of\nspirit, hath sent me to you.\nHAMLET\nYou are welcome.\nGUILDENSTERN\nNay, good my lord, this courtesy is not of the right\nbreed. If it shall please you to make me a\nwholesome answer, I will do your mother's\ncommandment: if not, your pardon and my return\nshall be the end of my business.\nHAMLET\nSir, I cannot.\nGUILDENSTERN\nWhat, my lord?\nHAMLET\nMake you a wholesome answer; my wit's diseased: but,\nsir, such answer as I can make, you shall command;\nor, rather, as you say, my mother: therefore no\nmore, but to the matter: my mother, you say,--\nROSENCRANTZ\nThen thus she says; your behavior hath struck her\ninto amazement and admiration.\nHAMLET\nO wonderful son, that can so astonish a mother! But\nis there no sequel at the heels of this mother's\nadmiration? Impart.\nROSENCRANTZ\nShe desires to speak with you in her closet, ere you\ngo to bed.\nHAMLET\nWe shall obey, were she ten times our mother. Have\nyou any further trade with us?\nROSENCRANTZ\nMy lord, you once did love me.\nHAMLET\nSo I do still, by these pickers and stealers.\nROSENCRANTZ\nGood my lord, what is your cause of distemper? you\ndo, surely, bar the door upon your own liberty, if\nyou deny your griefs to your friend.\nHAMLET\nSir, I lack advancement.\nROSENCRANTZ\nHow can that be, when you have the voice of the king\nhimself for your succession in Denmark?\nHAMLET\nAy, but sir, 'While the grass grows,'--the proverb\nis something musty.\nRe-enter Players with recorders\n\nO, the recorders! let me see one. To withdraw with\nyou:--why do you go about to recover the wind of me,\nas if you would drive me into a toil?\nGUILDENSTERN\nO, my lord, if my duty be too bold, my love is too\nunmannerly.\nHAMLET\nI do not well understand that. Will you play upon\nthis pipe?\nGUILDENSTERN\nMy lord, I cannot.\nHAMLET\nI pray you.\nGUILDENSTERN\nBelieve me, I cannot.\nHAMLET\nI do beseech you.\nGUILDENSTERN\nI know no touch of it, my lord.\nHAMLET\n'Tis as easy as lying: govern these ventages with\nyour lingers and thumb, give it breath with your\nmouth, and it will discourse most eloquent music.\nLook you, these are the stops.\nGUILDENSTERN\nBut these cannot I command to any utterance of\nharmony; I have not the skill.\nHAMLET\nWhy, look you now, how unworthy a thing you make of\nme! You would play upon me; you would seem to know\nmy stops; you would pluck out the heart of my\nmystery; you would sound me from my lowest note to\nthe top of my compass: and there is much music,\nexcellent voice, in this little organ; yet cannot\nyou make it speak. 'Sblood, do you think I am\neasier to be played on than a pipe? Call me what\ninstrument you will, though you can fret me, yet you\ncannot play upon me.\nEnter POLONIUS\n\nGod bless you, sir!\nLORD POLONIUS\nMy lord, the queen would speak with you, and\npresently.\nHAMLET\nDo you see yonder cloud that's almost in shape of a camel?\nLORD POLONIUS\nBy the mass, and 'tis like a camel, indeed.\nHAMLET\nMethinks it is like a weasel.\nLORD POLONIUS\nIt is backed like a weasel.\nHAMLET\nOr like a whale?\nLORD POLONIUS\nVery like a whale.\nHAMLET\nThen I will come to my mother by and by. They fool\nme to the top of my bent. I will come by and by.\nLORD POLONIUS\nI will say so.\nHAMLET\nBy and by is easily said.\nExit POLONIUS\n\nLeave me, friends.\nExeunt all but HAMLET\n\nTis now the very witching time of night,\nWhen churchyards yawn and hell itself breathes out\nContagion to this world: now could I drink hot blood,\nAnd do such bitter business as the day\nWould quake to look on. Soft! now to my mother.\nO heart, lose not thy nature; let not ever\nThe soul of Nero enter this firm bosom:\nLet me be cruel, not unnatural:\nI will speak daggers to her, but use none;\nMy tongue and soul in this be hypocrites;\nHow in my words soever she be shent,\nTo give them seals never, my soul, consent!\nExit\n\nSCENE III. A room in the castle.\nEnter KING CLAUDIUS, ROSENCRANTZ, and GUILDENSTERN\nKING CLAUDIUS\nI like him not, nor stands it safe with us\nTo let his madness range. Therefore prepare you;\nI your commission will forthwith dispatch,\nAnd he to England shall along with you:\nThe terms of our estate may not endure\nHazard so dangerous as doth hourly grow\nOut of his lunacies.\nGUILDENSTERN\nWe will ourselves provide:\nMost holy and religious fear it is\nTo keep those many many bodies safe\nThat live and feed upon your majesty.\nROSENCRANTZ\nThe single and peculiar life is bound,\nWith all the strength and armour of the mind,\nTo keep itself from noyance; but much more\nThat spirit upon whose weal depend and rest\nThe lives of many. The cease of majesty\nDies not alone; but, like a gulf, doth draw\nWhat's near it with it: it is a massy wheel,\nFix'd on the summit of the highest mount,\nTo whose huge spokes ten thousand lesser things\nAre mortised and adjoin'd; which, when it falls,\nEach small annexment, petty consequence,\nAttends the boisterous ruin. Never alone\nDid the king sigh, but with a general groan.\nKING CLAUDIUS\nArm you, I pray you, to this speedy voyage;\nFor we will fetters put upon this fear,\nWhich now goes too free-footed.\nROSENCRANTZ GUILDENSTERN\nWe will haste us.\nExeunt ROSENCRANTZ and GUILDENSTERN\n\nEnter POLONIUS\n\nLORD POLONIUS\nMy lord, he's going to his mother's closet:\nBehind the arras I'll convey myself,\nTo hear the process; and warrant she'll tax him home:\nAnd, as you said, and wisely was it said,\n'Tis meet that some more audience than a mother,\nSince nature makes them partial, should o'erhear\nThe speech, of vantage. Fare you well, my liege:\nI'll call upon you ere you go to bed,\nAnd tell you what I know.\nKING CLAUDIUS\nThanks, dear my lord.\nExit POLONIUS\n\nO, my offence is rank it smells to heaven;\nIt hath the primal eldest curse upon't,\nA brother's murder. Pray can I not,\nThough inclination be as sharp as will:\nMy stronger guilt defeats my strong intent;\nAnd, like a man to double business bound,\nI stand in pause where I shall first begin,\nAnd both neglect. What if this cursed hand\nWere thicker than itself with brother's blood,\nIs there not rain enough in the sweet heavens\nTo wash it white as snow? Whereto serves mercy\nBut to confront the visage of offence?\nAnd what's in prayer but this two-fold force,\nTo be forestalled ere we come to fall,\nOr pardon'd being down? Then I'll look up;\nMy fault is past. But, O, what form of prayer\nCan serve my turn? 'Forgive me my foul murder'?\nThat cannot be; since I am still possess'd\nOf those effects for which I did the murder,\nMy crown, mine own ambition and my queen.\nMay one be pardon'd and retain the offence?\nIn the corrupted currents of this world\nOffence's gilded hand may shove by justice,\nAnd oft 'tis seen the wicked prize itself\nBuys out the law: but 'tis not so above;\nThere is no shuffling, there the action lies\nIn his true nature; and we ourselves compell'd,\nEven to the teeth and forehead of our faults,\nTo give in evidence. What then? what rests?\nTry what repentance can: what can it not?\nYet what can it when one can not repent?\nO wretched state! O bosom black as death!\nO limed soul, that, struggling to be free,\nArt more engaged! Help, angels! Make assay!\nBow, stubborn knees; and, heart with strings of steel,\nBe soft as sinews of the newborn babe!\nAll may be well.\nRetires and kneels\n\nEnter HAMLET\n\nHAMLET\nNow might I do it pat, now he is praying;\nAnd now I'll do't. And so he goes to heaven;\nAnd so am I revenged. That would be scann'd:\nA villain kills my father; and for that,\nI, his sole son, do this same villain send\nTo heaven.\nO, this is hire and salary, not revenge.\nHe took my father grossly, full of bread;\nWith all his crimes broad blown, as flush as May;\nAnd how his audit stands who knows save heaven?\nBut in our circumstance and course of thought,\n'Tis heavy with him: and am I then revenged,\nTo take him in the purging of his soul,\nWhen he is fit and season'd for his passage?\nNo!\nUp, sword; and know thou a more horrid hent:\nWhen he is drunk asleep, or in his rage,\nOr in the incestuous pleasure of his bed;\nAt gaming, swearing, or about some act\nThat has no relish of salvation in't;\nThen trip him, that his heels may kick at heaven,\nAnd that his soul may be as damn'd and black\nAs hell, whereto it goes. My mother stays:\nThis physic but prolongs thy sickly days.\nExit\n\nKING CLAUDIUS\n[Rising] My words fly up, my thoughts remain below:\nWords without thoughts never to heaven go.\nExit\n\nSCENE IV. The Queen's closet.\nEnter QUEEN GERTRUDE and POLONIUS\nLORD POLONIUS\nHe will come straight. Look you lay home to him:\nTell him his pranks have been too broad to bear with,\nAnd that your grace hath screen'd and stood between\nMuch heat and him. I'll sconce me even here.\nPray you, be round with him.\nHAMLET\n[Within] Mother, mother, mother!\nQUEEN GERTRUDE\nI'll warrant you,\nFear me not: withdraw, I hear him coming.\nPOLONIUS hides behind the arras\n\nEnter HAMLET\n\nHAMLET\nNow, mother, what's the matter?\nQUEEN GERTRUDE\nHamlet, thou hast thy father much offended.\nHAMLET\nMother, you have my father much offended.\nQUEEN GERTRUDE\nCome, come, you answer with an idle tongue.\nHAMLET\nGo, go, you question with a wicked tongue.\nQUEEN GERTRUDE\nWhy, how now, Hamlet!\nHAMLET\nWhat's the matter now?\nQUEEN GERTRUDE\nHave you forgot me?\nHAMLET\nNo, by the rood, not so:\nYou are the queen, your husband's brother's wife;\nAnd--would it were not so!--you are my mother.\nQUEEN GERTRUDE\nNay, then, I'll set those to you that can speak.\nHAMLET\nCome, come, and sit you down; you shall not budge;\nYou go not till I set you up a glass\nWhere you may see the inmost part of you.\nQUEEN GERTRUDE\nWhat wilt thou do? thou wilt not murder me?\nHelp, help, ho!\nLORD POLONIUS\n[Behind] What, ho! help, help, help!\nHAMLET\n[Drawing] How now! a rat? Dead, for a ducat, dead!\nMakes a pass through the arras\n\nLORD POLONIUS\n[Behind] O, I am slain!\nFalls and dies\n\nQUEEN GERTRUDE\nO me, what hast thou done?\nHAMLET\nNay, I know not:\nIs it the king?\nQUEEN GERTRUDE\nO, what a rash and bloody deed is this!\nHAMLET\nA bloody deed! almost as bad, good mother,\nAs kill a king, and marry with his brother.\nQUEEN GERTRUDE\nAs kill a king!\nHAMLET\nAy, lady, 'twas my word.\nLifts up the array and discovers POLONIUS\n\nThou wretched, rash, intruding fool, farewell!\nI took thee for thy better: take thy fortune;\nThou find'st to be too busy is some danger.\nLeave wringing of your hands: peace! sit you down,\nAnd let me wring your heart; for so I shall,\nIf it be made of penetrable stuff,\nIf damned custom have not brass'd it so\nThat it is proof and bulwark against sense.\nQUEEN GERTRUDE\nWhat have I done, that thou darest wag thy tongue\nIn noise so rude against me?\nHAMLET\nSuch an act\nThat blurs the grace and blush of modesty,\nCalls virtue hypocrite, takes off the rose\nFrom the fair forehead of an innocent love\nAnd sets a blister there, makes marriage-vows\nAs false as dicers' oaths: O, such a deed\nAs from the body of contraction plucks\nThe very soul, and sweet religion makes\nA rhapsody of words: heaven's face doth glow:\nYea, this solidity and compound mass,\nWith tristful visage, as against the doom,\nIs thought-sick at the act.\nQUEEN GERTRUDE\nAy me, what act,\nThat roars so loud, and thunders in the index?\nHAMLET\nLook here, upon this picture, and on this,\nThe counterfeit presentment of two brothers.\nSee, what a grace was seated on this brow;\nHyperion's curls; the front of Jove himself;\nAn eye like Mars, to threaten and command;\nA station like the herald Mercury\nNew-lighted on a heaven-kissing hill;\nA combination and a form indeed,\nWhere every god did seem to set his seal,\nTo give the world assurance of a man:\nThis was your husband. Look you now, what follows:\nHere is your husband; like a mildew'd ear,\nBlasting his wholesome brother. Have you eyes?\nCould you on this fair mountain leave to feed,\nAnd batten on this moor? Ha! have you eyes?\nYou cannot call it love; for at your age\nThe hey-day in the blood is tame, it's humble,\nAnd waits upon the judgment: and what judgment\nWould step from this to this? Sense, sure, you have,\nElse could you not have motion; but sure, that sense\nIs apoplex'd; for madness would not err,\nNor sense to ecstasy was ne'er so thrall'd\nBut it reserved some quantity of choice,\nTo serve in such a difference. What devil was't\nThat thus hath cozen'd you at hoodman-blind?\nEyes without feeling, feeling without sight,\nEars without hands or eyes, smelling sans all,\nOr but a sickly part of one true sense\nCould not so mope.\nO shame! where is thy blush? Rebellious hell,\nIf thou canst mutine in a matron's bones,\nTo flaming youth let virtue be as wax,\nAnd melt in her own fire: proclaim no shame\nWhen the compulsive ardour gives the charge,\nSince frost itself as actively doth burn\nAnd reason panders will.\nQUEEN GERTRUDE\nO Hamlet, speak no more:\nThou turn'st mine eyes into my very soul;\nAnd there I see such black and grained spots\nAs will not leave their tinct.\nHAMLET\nNay, but to live\nIn the rank sweat of an enseamed bed,\nStew'd in corruption, honeying and making love\nOver the nasty sty,--\nQUEEN GERTRUDE\nO, speak to me no more;\nThese words, like daggers, enter in mine ears;\nNo more, sweet Hamlet!\nHAMLET\nA murderer and a villain;\nA slave that is not twentieth part the tithe\nOf your precedent lord; a vice of kings;\nA cutpurse of the empire and the rule,\nThat from a shelf the precious diadem stole,\nAnd put it in his pocket!\nQUEEN GERTRUDE\nNo more!\nHAMLET\nA king of shreds and patches,--\nEnter Ghost\n\nSave me, and hover o'er me with your wings,\nYou heavenly guards! What would your gracious figure?\nQUEEN GERTRUDE\nAlas, he's mad!\nHAMLET\nDo you not come your tardy son to chide,\nThat, lapsed in time and passion, lets go by\nThe important acting of your dread command? O, say!\nGhost\nDo not forget: this visitation\nIs but to whet thy almost blunted purpose.\nBut, look, amazement on thy mother sits:\nO, step between her and her fighting soul:\nConceit in weakest bodies strongest works:\nSpeak to her, Hamlet.\nHAMLET\nHow is it with you, lady?\nQUEEN GERTRUDE\nAlas, how is't with you,\nThat you do bend your eye on vacancy\nAnd with the incorporal air do hold discourse?\nForth at your eyes your spirits wildly peep;\nAnd, as the sleeping soldiers in the alarm,\nYour bedded hair, like life in excrements,\nStarts up, and stands on end. O gentle son,\nUpon the heat and flame of thy distemper\nSprinkle cool patience. Whereon do you look?\nHAMLET\nOn him, on him! Look you, how pale he glares!\nHis form and cause conjoin'd, preaching to stones,\nWould make them capable. Do not look upon me;\nLest with this piteous action you convert\nMy stern effects: then what I have to do\nWill want true colour; tears perchance for blood.\nQUEEN GERTRUDE\nTo whom do you speak this?\nHAMLET\nDo you see nothing there?\nQUEEN GERTRUDE\nNothing at all; yet all that is I see.\nHAMLET\nNor did you nothing hear?\nQUEEN GERTRUDE\nNo, nothing but ourselves.\nHAMLET\nWhy, look you there! look, how it steals away!\nMy father, in his habit as he lived!\nLook, where he goes, even now, out at the portal!\nExit Ghost\n\nQUEEN GERTRUDE\nThis the very coinage of your brain:\nThis bodiless creation ecstasy\nIs very cunning in.\nHAMLET\nEcstasy!\nMy pulse, as yours, doth temperately keep time,\nAnd makes as healthful music: it is not madness\nThat I have utter'd: bring me to the test,\nAnd I the matter will re-word; which madness\nWould gambol from. Mother, for love of grace,\nLay not that mattering unction to your soul,\nThat not your trespass, but my madness speaks:\nIt will but skin and film the ulcerous place,\nWhilst rank corruption, mining all within,\nInfects unseen. Confess yourself to heaven;\nRepent what's past; avoid what is to come;\nAnd do not spread the compost on the weeds,\nTo make them ranker. Forgive me this my virtue;\nFor in the fatness of these pursy times\nVirtue itself of vice must pardon beg,\nYea, curb and woo for leave to do him good.\nQUEEN GERTRUDE\nO Hamlet, thou hast cleft my heart in twain.\nHAMLET\nO, throw away the worser part of it,\nAnd live the purer with the other half.\nGood night: but go not to mine uncle's bed;\nAssume a virtue, if you have it not.\nThat monster, custom, who all sense doth eat,\nOf habits devil, is angel yet in this,\nThat to the use of actions fair and good\nHe likewise gives a frock or livery,\nThat aptly is put on. Refrain to-night,\nAnd that shall lend a kind of easiness\nTo the next abstinence: the next more easy;\nFor use almost can change the stamp of nature,\nAnd either [ ] the devil, or throw him out\nWith wondrous potency. Once more, good night:\nAnd when you are desirous to be bless'd,\nI'll blessing beg of you. For this same lord,\nPointing to POLONIUS\n\nI do repent: but heaven hath pleased it so,\nTo punish me with this and this with me,\nThat I must be their scourge and minister.\nI will bestow him, and will answer well\nThe death I gave him. So, again, good night.\nI must be cruel, only to be kind:\nThus bad begins and worse remains behind.\nOne word more, good lady.\nQUEEN GERTRUDE\nWhat shall I do?\nHAMLET\nNot this, by no means, that I bid you do:\nLet the bloat king tempt you again to bed;\nPinch wanton on your cheek; call you his mouse;\nAnd let him, for a pair of reechy kisses,\nOr paddling in your neck with his damn'd fingers,\nMake you to ravel all this matter out,\nThat I essentially am not in madness,\nBut mad in craft. 'Twere good you let him know;\nFor who, that's but a queen, fair, sober, wise,\nWould from a paddock, from a bat, a gib,\nSuch dear concernings hide? who would do so?\nNo, in despite of sense and secrecy,\nUnpeg the basket on the house's top.\nLet the birds fly, and, like the famous ape,\nTo try conclusions, in the basket creep,\nAnd break your own neck down.\nQUEEN GERTRUDE\nBe thou assured, if words be made of breath,\nAnd breath of life, I have no life to breathe\nWhat thou hast said to me.\nHAMLET\nI must to England; you know that?\nQUEEN GERTRUDE\nAlack,\nI had forgot: 'tis so concluded on.\nHAMLET\nThere's letters seal'd: and my two schoolfellows,\nWhom I will trust as I will adders fang'd,\nThey bear the mandate; they must sweep my way,\nAnd marshal me to knavery. Let it work;\nFor 'tis the sport to have the engineer\nHoist with his own petard: and 't shall go hard\nBut I will delve one yard below their mines,\nAnd blow them at the moon: O, 'tis most sweet,\nWhen in one line two crafts directly meet.\nThis man shall set me packing:\nI'll lug the guts into the neighbour room.\nMother, good night. Indeed this counsellor\nIs now most still, most secret and most grave,\nWho was in life a foolish prating knave.\nCome, sir, to draw toward an end with you.\nGood night, mother.\nExeunt severally; HAMLET dragging in POLONIUS\n\nACT IV\nSCENE I. A room in the castle.\nEnter KING CLAUDIUS, QUEEN GERTRUDE, ROSENCRANTZ, and GUILDENSTERN\nKING CLAUDIUS\nThere's matter in these sighs, these profound heaves:\nYou must translate: 'tis fit we understand them.\nWhere is your son?\nQUEEN GERTRUDE\nBestow this place on us a little while.\nExeunt ROSENCRANTZ and GUILDENSTERN\n\nAh, my good lord, what have I seen to-night!\nKING CLAUDIUS\nWhat, Gertrude? How does Hamlet?\nQUEEN GERTRUDE\nMad as the sea and wind, when both contend\nWhich is the mightier: in his lawless fit,\nBehind the arras hearing something stir,\nWhips out his rapier, cries, 'A rat, a rat!'\nAnd, in this brainish apprehension, kills\nThe unseen good old man.\nKING CLAUDIUS\nO heavy deed!\nIt had been so with us, had we been there:\nHis liberty is full of threats to all;\nTo you yourself, to us, to every one.\nAlas, how shall this bloody deed be answer'd?\nIt will be laid to us, whose providence\nShould have kept short, restrain'd and out of haunt,\nThis mad young man: but so much was our love,\nWe would not understand what was most fit;\nBut, like the owner of a foul disease,\nTo keep it from divulging, let it feed\nEven on the pith of Life. Where is he gone?\nQUEEN GERTRUDE\nTo draw apart the body he hath kill'd:\nO'er whom his very madness, like some ore\nAmong a mineral of metals base,\nShows itself pure; he weeps for what is done.\nKING CLAUDIUS\nO Gertrude, come away!\nThe sun no sooner shall the mountains touch,\nBut we will ship him hence: and this vile deed\nWe must, with all our majesty and skill,\nBoth countenance and excuse. Ho, Guildenstern!\nRe-enter ROSENCRANTZ and GUILDENSTERN\n\nFriends both, go join you with some further aid:\nHamlet in madness hath Polonius slain,\nAnd from his mother's closet hath he dragg'd him:\nGo seek him out; speak fair, and bring the body\nInto the chapel. I pray you, haste in this.\nExeunt ROSENCRANTZ and GUILDENSTERN\n\nCome, Gertrude, we'll call up our wisest friends;\nAnd let them know, both what we mean to do,\nAnd what's untimely done. O, come away!\nMy soul is full of discord and dismay.\nExeunt\n\nSCENE II. Another room in the castle.\nEnter HAMLET\nHAMLET\nSafely stowed.\nROSENCRANTZ: GUILDENSTERN:\n[Within] Hamlet! Lord Hamlet!\nHAMLET\nWhat noise? who calls on Hamlet?\nO, here they come.\nEnter ROSENCRANTZ and GUILDENSTERN\n\nROSENCRANTZ\nWhat have you done, my lord, with the dead body?\nHAMLET\nCompounded it with dust, whereto 'tis kin.\nROSENCRANTZ\nTell us where 'tis, that we may take it thence\nAnd bear it to the chapel.\nHAMLET\nDo not believe it.\nROSENCRANTZ\nBelieve what?\nHAMLET\nThat I can keep your counsel and not mine own.\nBesides, to be demanded of a sponge! what\nreplication should be made by the son of a king?\nROSENCRANTZ\nTake you me for a sponge, my lord?\nHAMLET\nAy, sir, that soaks up the king's countenance, his\nrewards, his authorities. But such officers do the\nking best service in the end: he keeps them, like\nan ape, in the corner of his jaw; first mouthed, to\nbe last swallowed: when he needs what you have\ngleaned, it is but squeezing you, and, sponge, you\nshall be dry again.\nROSENCRANTZ\nI understand you not, my lord.\nHAMLET\nI am glad of it: a knavish speech sleeps in a\nfoolish ear.\nROSENCRANTZ\nMy lord, you must tell us where the body is, and go\nwith us to the king.\nHAMLET\nThe body is with the king, but the king is not with\nthe body. The king is a thing--\nGUILDENSTERN\nA thing, my lord!\nHAMLET\nOf nothing: bring me to him. Hide fox, and all after.\nExeunt\n\nSCENE III. Another room in the castle.\nEnter KING CLAUDIUS, attended\nKING CLAUDIUS\nI have sent to seek him, and to find the body.\nHow dangerous is it that this man goes loose!\nYet must not we put the strong law on him:\nHe's loved of the distracted multitude,\nWho like not in their judgment, but their eyes;\nAnd where tis so, the offender's scourge is weigh'd,\nBut never the offence. To bear all smooth and even,\nThis sudden sending him away must seem\nDeliberate pause: diseases desperate grown\nBy desperate appliance are relieved,\nOr not at all.\nEnter ROSENCRANTZ\n\nHow now! what hath befall'n?\nROSENCRANTZ\nWhere the dead body is bestow'd, my lord,\nWe cannot get from him.\nKING CLAUDIUS\nBut where is he?\nROSENCRANTZ\nWithout, my lord; guarded, to know your pleasure.\nKING CLAUDIUS\nBring him before us.\nROSENCRANTZ\nHo, Guildenstern! bring in my lord.\nEnter HAMLET and GUILDENSTERN\n\nKING CLAUDIUS\nNow, Hamlet, where's Polonius?\nHAMLET\nAt supper.\nKING CLAUDIUS\nAt supper! where?\nHAMLET\nNot where he eats, but where he is eaten: a certain\nconvocation of politic worms are e'en at him. Your\nworm is your only emperor for diet: we fat all\ncreatures else to fat us, and we fat ourselves for\nmaggots: your fat king and your lean beggar is but\nvariable service, two dishes, but to one table:\nthat's the end.\nKING CLAUDIUS\nAlas, alas!\nHAMLET\nA man may fish with the worm that hath eat of a\nking, and eat of the fish that hath fed of that worm.\nKING CLAUDIUS\nWhat dost you mean by this?\nHAMLET\nNothing but to show you how a king may go a\nprogress through the guts of a beggar.\nKING CLAUDIUS\nWhere is Polonius?\nHAMLET\nIn heaven; send hither to see: if your messenger\nfind him not there, seek him i' the other place\nyourself. But indeed, if you find him not within\nthis month, you shall nose him as you go up the\nstairs into the lobby.\nKING CLAUDIUS\nGo seek him there.\nTo some Attendants\n\nHAMLET\nHe will stay till ye come.\nExeunt Attendants\n\nKING CLAUDIUS\nHamlet, this deed, for thine especial safety,--\nWhich we do tender, as we dearly grieve\nFor that which thou hast done,--must send thee hence\nWith fiery quickness: therefore prepare thyself;\nThe bark is ready, and the wind at help,\nThe associates tend, and every thing is bent\nFor England.\nHAMLET\nFor England!\nKING CLAUDIUS\nAy, Hamlet.\nHAMLET\nGood.\nKING CLAUDIUS\nSo is it, if thou knew'st our purposes.\nHAMLET\nI see a cherub that sees them. But, come; for\nEngland! Farewell, dear mother.\nKING CLAUDIUS\nThy loving father, Hamlet.\nHAMLET\nMy mother: father and mother is man and wife; man\nand wife is one flesh; and so, my mother. Come, for England!\nExit\n\nKING CLAUDIUS\nFollow him at foot; tempt him with speed aboard;\nDelay it not; I'll have him hence to-night:\nAway! for every thing is seal'd and done\nThat else leans on the affair: pray you, make haste.\nExeunt ROSENCRANTZ and GUILDENSTERN\n\nAnd, England, if my love thou hold'st at aught--\nAs my great power thereof may give thee sense,\nSince yet thy cicatrice looks raw and red\nAfter the Danish sword, and thy free awe\nPays homage to us--thou mayst not coldly set\nOur sovereign process; which imports at full,\nBy letters congruing to that effect,\nThe present death of Hamlet. Do it, England;\nFor like the hectic in my blood he rages,\nAnd thou must cure me: till I know 'tis done,\nHowe'er my haps, my joys were ne'er begun.\nExit\n\nSCENE IV. A plain in Denmark.\nEnter FORTINBRAS, a Captain, and Soldiers, marching\nPRINCE FORTINBRAS\nGo, captain, from me greet the Danish king;\nTell him that, by his licence, Fortinbras\nCraves the conveyance of a promised march\nOver his kingdom. You know the rendezvous.\nIf that his majesty would aught with us,\nWe shall express our duty in his eye;\nAnd let him know so.\nCaptain\nI will do't, my lord.\nPRINCE FORTINBRAS\nGo softly on.\nExeunt FORTINBRAS and Soldiers\n\nEnter HAMLET, ROSENCRANTZ, GUILDENSTERN, and others\n\nHAMLET\nGood sir, whose powers are these?\nCaptain\nThey are of Norway, sir.\nHAMLET\nHow purposed, sir, I pray you?\nCaptain\nAgainst some part of Poland.\nHAMLET\nWho commands them, sir?\nCaptain\nThe nephews to old Norway, Fortinbras.\nHAMLET\nGoes it against the main of Poland, sir,\nOr for some frontier?\nCaptain\nTruly to speak, and with no addition,\nWe go to gain a little patch of ground\nThat hath in it no profit but the name.\nTo pay five ducats, five, I would not farm it;\nNor will it yield to Norway or the Pole\nA ranker rate, should it be sold in fee.\nHAMLET\nWhy, then the Polack never will defend it.\nCaptain\nYes, it is already garrison'd.\nHAMLET\nTwo thousand souls and twenty thousand ducats\nWill not debate the question of this straw:\nThis is the imposthume of much wealth and peace,\nThat inward breaks, and shows no cause without\nWhy the man dies. I humbly thank you, sir.\nCaptain\nGod be wi' you, sir.\nExit\n\nROSENCRANTZ\nWilt please you go, my lord?\nHAMLET\nI'll be with you straight go a little before.\nExeunt all except HAMLET\n\nHow all occasions do inform against me,\nAnd spur my dull revenge! What is a man,\nIf his chief good and market of his time\nBe but to sleep and feed? a beast, no more.\nSure, he that made us with such large discourse,\nLooking before and after, gave us not\nThat capability and god-like reason\nTo fust in us unused. Now, whether it be\nBestial oblivion, or some craven scruple\nOf thinking too precisely on the event,\nA thought which, quarter'd, hath but one part wisdom\nAnd ever three parts coward, I do not know\nWhy yet I live to say 'This thing's to do;'\nSith I have cause and will and strength and means\nTo do't. Examples gross as earth exhort me:\nWitness this army of such mass and charge\nLed by a delicate and tender prince,\nWhose spirit with divine ambition puff'd\nMakes mouths at the invisible event,\nExposing what is mortal and unsure\nTo all that fortune, death and danger dare,\nEven for an egg-shell. Rightly to be great\nIs not to stir without great argument,\nBut greatly to find quarrel in a straw\nWhen honour's at the stake. How stand I then,\nThat have a father kill'd, a mother stain'd,\nExcitements of my reason and my blood,\nAnd let all sleep? while, to my shame, I see\nThe imminent death of twenty thousand men,\nThat, for a fantasy and trick of fame,\nGo to their graves like beds, fight for a plot\nWhereon the numbers cannot try the cause,\nWhich is not tomb enough and continent\nTo hide the slain? O, from this time forth,\nMy thoughts be bloody, or be nothing worth!\nExit\n\nSCENE V. Elsinore. A room in the castle.\nEnter QUEEN GERTRUDE, HORATIO, and a Gentleman\nQUEEN GERTRUDE\nI will not speak with her.\nGentleman\nShe is importunate, indeed distract:\nHer mood will needs be pitied.\nQUEEN GERTRUDE\nWhat would she have?\nGentleman\nShe speaks much of her father; says she hears\nThere's tricks i' the world; and hems, and beats her heart;\nSpurns enviously at straws; speaks things in doubt,\nThat carry but half sense: her speech is nothing,\nYet the unshaped use of it doth move\nThe hearers to collection; they aim at it,\nAnd botch the words up fit to their own thoughts;\nWhich, as her winks, and nods, and gestures\nyield them,\nIndeed would make one think there might be thought,\nThough nothing sure, yet much unhappily.\nHORATIO\n'Twere good she were spoken with; for she may strew\nDangerous conjectures in ill-breeding minds.\nQUEEN GERTRUDE\nLet her come in.\nExit HORATIO\n\nTo my sick soul, as sin's true nature is,\nEach toy seems prologue to some great amiss:\nSo full of artless jealousy is guilt,\nIt spills itself in fearing to be spilt.\nRe-enter HORATIO, with OPHELIA\n\nOPHELIA\nWhere is the beauteous majesty of Denmark?\nQUEEN GERTRUDE\nHow now, Ophelia!\nOPHELIA\n[Sings]\nHow should I your true love know\nFrom another one?\nBy his cockle hat and staff,\nAnd his sandal shoon.\nQUEEN GERTRUDE\nAlas, sweet lady, what imports this song?\nOPHELIA\nSay you? nay, pray you, mark.\nSings\n\nHe is dead and gone, lady,\nHe is dead and gone;\nAt his head a grass-green turf,\nAt his heels a stone.\nQUEEN GERTRUDE\nNay, but, Ophelia,--\nOPHELIA\nPray you, mark.\nSings\n\nWhite his shroud as the mountain snow,--\nEnter KING CLAUDIUS\n\nQUEEN GERTRUDE\nAlas, look here, my lord.\nOPHELIA\n[Sings]\nLarded with sweet flowers\nWhich bewept to the grave did go\nWith true-love showers.\nKING CLAUDIUS\nHow do you, pretty lady?\nOPHELIA\nWell, God 'ild you! They say the owl was a baker's\ndaughter. Lord, we know what we are, but know not\nwhat we may be. God be at your table!\nKING CLAUDIUS\nConceit upon her father.\nOPHELIA\nPray you, let's have no words of this; but when they\nask you what it means, say you this:\nSings\n\nTo-morrow is Saint Valentine's day,\nAll in the morning betime,\nAnd I a maid at your window,\nTo be your Valentine.\nThen up he rose, and donn'd his clothes,\nAnd dupp'd the chamber-door;\nLet in the maid, that out a maid\nNever departed more.\nKING CLAUDIUS\nPretty Ophelia!\nOPHELIA\nIndeed, la, without an oath, I'll make an end on't:\nSings\n\nBy Gis and by Saint Charity,\nAlack, and fie for shame!\nYoung men will do't, if they come to't;\nBy cock, they are to blame.\nQuoth she, before you tumbled me,\nYou promised me to wed.\nSo would I ha' done, by yonder sun,\nAn thou hadst not come to my bed.\nKING CLAUDIUS\nHow long hath she been thus?\nOPHELIA\nI hope all will be well. We must be patient: but I\ncannot choose but weep, to think they should lay him\ni' the cold ground. My brother shall know of it:\nand so I thank you for your good counsel. Come, my\ncoach! Good night, ladies; good night, sweet ladies;\ngood night, good night.\nExit\n\nKING CLAUDIUS\nFollow her close; give her good watch,\nI pray you.\nExit HORATIO\n\nO, this is the poison of deep grief; it springs\nAll from her father's death. O Gertrude, Gertrude,\nWhen sorrows come, they come not single spies\nBut in battalions. First, her father slain:\nNext, your son gone; and he most violent author\nOf his own just remove: the people muddied,\nThick and unwholesome in their thoughts and whispers,\nFor good Polonius' death; and we have done but greenly,\nIn hugger-mugger to inter him: poor Ophelia\nDivided from herself and her fair judgment,\nWithout the which we are pictures, or mere beasts:\nLast, and as much containing as all these,\nHer brother is in secret come from France;\nFeeds on his wonder, keeps himself in clouds,\nAnd wants not buzzers to infect his ear\nWith pestilent speeches of his father's death;\nWherein necessity, of matter beggar'd,\nWill nothing stick our person to arraign\nIn ear and ear. O my dear Gertrude, this,\nLike to a murdering-piece, in many places\nGives me superfluous death.\nA noise within\n\nQUEEN GERTRUDE\nAlack, what noise is this?\nKING CLAUDIUS\nWhere are my Switzers? Let them guard the door.\nEnter another Gentleman\n\nWhat is the matter?\nGentleman\nSave yourself, my lord:\nThe ocean, overpeering of his list,\nEats not the flats with more impetuous haste\nThan young Laertes, in a riotous head,\nO'erbears your officers. The rabble call him lord;\nAnd, as the world were now but to begin,\nAntiquity forgot, custom not known,\nThe ratifiers and props of every word,\nThey cry 'Choose we: Laertes shall be king:'\nCaps, hands, and tongues, applaud it to the clouds:\n'Laertes shall be king, Laertes king!'\nQUEEN GERTRUDE\nHow cheerfully on the false trail they cry!\nO, this is counter, you false Danish dogs!\nKING CLAUDIUS\nThe doors are broke.\nNoise within\n\nEnter LAERTES, armed; Danes following\n\nLAERTES\nWhere is this king? Sirs, stand you all without.\nDanes\nNo, let's come in.\nLAERTES\nI pray you, give me leave.\nDanes\nWe will, we will.\nThey retire without the door\n\nLAERTES\nI thank you: keep the door. O thou vile king,\nGive me my father!\nQUEEN GERTRUDE\nCalmly, good Laertes.\nLAERTES\nThat drop of blood that's calm proclaims me bastard,\nCries cuckold to my father, brands the harlot\nEven here, between the chaste unsmirched brow\nOf my true mother.\nKING CLAUDIUS\nWhat is the cause, Laertes,\nThat thy rebellion looks so giant-like?\nLet him go, Gertrude; do not fear our person:\nThere's such divinity doth hedge a king,\nThat treason can but peep to what it would,\nActs little of his will. Tell me, Laertes,\nWhy thou art thus incensed. Let him go, Gertrude.\nSpeak, man.\nLAERTES\nWhere is my father?\nKING CLAUDIUS\nDead.\nQUEEN GERTRUDE\nBut not by him.\nKING CLAUDIUS\nLet him demand his fill.\nLAERTES\nHow came he dead? I'll not be juggled with:\nTo hell, allegiance! vows, to the blackest devil!\nConscience and grace, to the profoundest pit!\nI dare damnation. To this point I stand,\nThat both the worlds I give to negligence,\nLet come what comes; only I'll be revenged\nMost thoroughly for my father.\nKING CLAUDIUS\nWho shall stay you?\nLAERTES\nMy will, not all the world:\nAnd for my means, I'll husband them so well,\nThey shall go far with little.\nKING CLAUDIUS\nGood Laertes,\nIf you desire to know the certainty\nOf your dear father's death, is't writ in your revenge,\nThat, swoopstake, you will draw both friend and foe,\nWinner and loser?\nLAERTES\nNone but his enemies.\nKING CLAUDIUS\nWill you know them then?\nLAERTES\nTo his good friends thus wide I'll ope my arms;\nAnd like the kind life-rendering pelican,\nRepast them with my blood.\nKING CLAUDIUS\nWhy, now you speak\nLike a good child and a true gentleman.\nThat I am guiltless of your father's death,\nAnd am most sensible in grief for it,\nIt shall as level to your judgment pierce\nAs day does to your eye.\nDanes\n[Within] Let her come in.\nLAERTES\nHow now! what noise is that?\nRe-enter OPHELIA\n\nO heat, dry up my brains! tears seven times salt,\nBurn out the sense and virtue of mine eye!\nBy heaven, thy madness shall be paid by weight,\nTill our scale turn the beam. O rose of May!\nDear maid, kind sister, sweet Ophelia!\nO heavens! is't possible, a young maid's wits\nShould be as moral as an old man's life?\nNature is fine in love, and where 'tis fine,\nIt sends some precious instance of itself\nAfter the thing it loves.\nOPHELIA\n[Sings]\nThey bore him barefaced on the bier;\nHey non nonny, nonny, hey nonny;\nAnd in his grave rain'd many a tear:--\nFare you well, my dove!\nLAERTES\nHadst thou thy wits, and didst persuade revenge,\nIt could not move thus.\nOPHELIA\n[Sings]\nYou must sing a-down a-down,\nAn you call him a-down-a.\nO, how the wheel becomes it! It is the false\nsteward, that stole his master's daughter.\nLAERTES\nThis nothing's more than matter.\nOPHELIA\nThere's rosemary, that's for remembrance; pray,\nlove, remember: and there is pansies. that's for thoughts.\nLAERTES\nA document in madness, thoughts and remembrance fitted.\nOPHELIA\nThere's fennel for you, and columbines: there's rue\nfor you; and here's some for me: we may call it\nherb-grace o' Sundays: O you must wear your rue with\na difference. There's a daisy: I would give you\nsome violets, but they withered all when my father\ndied: they say he made a good end,--\nSings\n\nFor bonny sweet Robin is all my joy.\nLAERTES\nThought and affliction, passion, hell itself,\nShe turns to favour and to prettiness.\nOPHELIA\n[Sings]\nAnd will he not come again?\nAnd will he not come again?\nNo, no, he is dead:\nGo to thy death-bed:\nHe never will come again.\nHis beard was as white as snow,\nAll flaxen was his poll:\nHe is gone, he is gone,\nAnd we cast away moan:\nGod ha' mercy on his soul!\nAnd of all Christian souls, I pray God. God be wi' ye.\nExit\n\nLAERTES\nDo you see this, O God?\nKING CLAUDIUS\nLaertes, I must commune with your grief,\nOr you deny me right. Go but apart,\nMake choice of whom your wisest friends you will.\nAnd they shall hear and judge 'twixt you and me:\nIf by direct or by collateral hand\nThey find us touch'd, we will our kingdom give,\nOur crown, our life, and all that we can ours,\nTo you in satisfaction; but if not,\nBe you content to lend your patience to us,\nAnd we shall jointly labour with your soul\nTo give it due content.\nLAERTES\nLet this be so;\nHis means of death, his obscure funeral--\nNo trophy, sword, nor hatchment o'er his bones,\nNo noble rite nor formal ostentation--\nCry to be heard, as 'twere from heaven to earth,\nThat I must call't in question.\nKING CLAUDIUS\nSo you shall;\nAnd where the offence is let the great axe fall.\nI pray you, go with me.\nExeunt\n\nSCENE VI. Another room in the castle.\nEnter HORATIO and a Servant\nHORATIO\nWhat are they that would speak with me?\nServant\nSailors, sir: they say they have letters for you.\nHORATIO\nLet them come in.\nExit Servant\n\nI do not know from what part of the world\nI should be greeted, if not from Lord Hamlet.\nEnter Sailors\n\nFirst Sailor\nGod bless you, sir.\nHORATIO\nLet him bless thee too.\nFirst Sailor\nHe shall, sir, an't please him. There's a letter for\nyou, sir; it comes from the ambassador that was\nbound for England; if your name be Horatio, as I am\nlet to know it is.\nHORATIO\n[Reads] 'Horatio, when thou shalt have overlooked\nthis, give these fellows some means to the king:\nthey have letters for him. Ere we were two days old\nat sea, a pirate of very warlike appointment gave us\nchase. Finding ourselves too slow of sail, we put on\na compelled valour, and in the grapple I boarded\nthem: on the instant they got clear of our ship; so\nI alone became their prisoner. They have dealt with\nme like thieves of mercy: but they knew what they\ndid; I am to do a good turn for them. Let the king\nhave the letters I have sent; and repair thou to me\nwith as much speed as thou wouldst fly death. I\nhave words to speak in thine ear will make thee\ndumb; yet are they much too light for the bore of\nthe matter. These good fellows will bring thee\nwhere I am. Rosencrantz and Guildenstern hold their\ncourse for England: of them I have much to tell\nthee. Farewell.\n'He that thou knowest thine, HAMLET.'\nCome, I will make you way for these your letters;\nAnd do't the speedier, that you may direct me\nTo him from whom you brought them.\nExeunt\n\nSCENE VII. Another room in the castle.\nEnter KING CLAUDIUS and LAERTES\nKING CLAUDIUS\nNow must your conscience my acquaintance seal,\nAnd you must put me in your heart for friend,\nSith you have heard, and with a knowing ear,\nThat he which hath your noble father slain\nPursued my life.\nLAERTES\nIt well appears: but tell me\nWhy you proceeded not against these feats,\nSo crimeful and so capital in nature,\nAs by your safety, wisdom, all things else,\nYou mainly were stirr'd up.\nKING CLAUDIUS\nO, for two special reasons;\nWhich may to you, perhaps, seem much unsinew'd,\nBut yet to me they are strong. The queen his mother\nLives almost by his looks; and for myself--\nMy virtue or my plague, be it either which--\nShe's so conjunctive to my life and soul,\nThat, as the star moves not but in his sphere,\nI could not but by her. The other motive,\nWhy to a public count I might not go,\nIs the great love the general gender bear him;\nWho, dipping all his faults in their affection,\nWould, like the spring that turneth wood to stone,\nConvert his gyves to graces; so that my arrows,\nToo slightly timber'd for so loud a wind,\nWould have reverted to my bow again,\nAnd not where I had aim'd them.\nLAERTES\nAnd so have I a noble father lost;\nA sister driven into desperate terms,\nWhose worth, if praises may go back again,\nStood challenger on mount of all the age\nFor her perfections: but my revenge will come.\nKING CLAUDIUS\nBreak not your sleeps for that: you must not think\nThat we are made of stuff so flat and dull\nThat we can let our beard be shook with danger\nAnd think it pastime. You shortly shall hear more:\nI loved your father, and we love ourself;\nAnd that, I hope, will teach you to imagine--\nEnter a Messenger\n\nHow now! what news?\nMessenger\nLetters, my lord, from Hamlet:\nThis to your majesty; this to the queen.\nKING CLAUDIUS\nFrom Hamlet! who brought them?\nMessenger\nSailors, my lord, they say; I saw them not:\nThey were given me by Claudio; he received them\nOf him that brought them.\nKING CLAUDIUS\nLaertes, you shall hear them. Leave us.\nExit Messenger\n\nReads\n\n'High and mighty, You shall know I am set naked on\nyour kingdom. To-morrow shall I beg leave to see\nyour kingly eyes: when I shall, first asking your\npardon thereunto, recount the occasion of my sudden\nand more strange return. 'HAMLET.'\nWhat should this mean? Are all the rest come back?\nOr is it some abuse, and no such thing?\nLAERTES\nKnow you the hand?\nKING CLAUDIUS\n'Tis Hamlets character. 'Naked!\nAnd in a postscript here, he says 'alone.'\nCan you advise me?\nLAERTES\nI'm lost in it, my lord. But let him come;\nIt warms the very sickness in my heart,\nThat I shall live and tell him to his teeth,\n'Thus didest thou.'\nKING CLAUDIUS\nIf it be so, Laertes--\nAs how should it be so? how otherwise?--\nWill you be ruled by me?\nLAERTES\nAy, my lord;\nSo you will not o'errule me to a peace.\nKING CLAUDIUS\nTo thine own peace. If he be now return'd,\nAs checking at his voyage, and that he means\nNo more to undertake it, I will work him\nTo an exploit, now ripe in my device,\nUnder the which he shall not choose but fall:\nAnd for his death no wind of blame shall breathe,\nBut even his mother shall uncharge the practise\nAnd call it accident.\nLAERTES\nMy lord, I will be ruled;\nThe rather, if you could devise it so\nThat I might be the organ.\nKING CLAUDIUS\nIt falls right.\nYou have been talk'd of since your travel much,\nAnd that in Hamlet's hearing, for a quality\nWherein, they say, you shine: your sum of parts\nDid not together pluck such envy from him\nAs did that one, and that, in my regard,\nOf the unworthiest siege.\nLAERTES\nWhat part is that, my lord?\nKING CLAUDIUS\nA very riband in the cap of youth,\nYet needful too; for youth no less becomes\nThe light and careless livery that it wears\nThan settled age his sables and his weeds,\nImporting health and graveness. Two months since,\nHere was a gentleman of Normandy:--\nI've seen myself, and served against, the French,\nAnd they can well on horseback: but this gallant\nHad witchcraft in't; he grew unto his seat;\nAnd to such wondrous doing brought his horse,\nAs he had been incorpsed and demi-natured\nWith the brave beast: so far he topp'd my thought,\nThat I, in forgery of shapes and tricks,\nCome short of what he did.\nLAERTES\nA Norman was't?\nKING CLAUDIUS\nA Norman.\nLAERTES\nUpon my life, Lamond.\nKING CLAUDIUS\nThe very same.\nLAERTES\nI know him well: he is the brooch indeed\nAnd gem of all the nation.\nKING CLAUDIUS\nHe made confession of you,\nAnd gave you such a masterly report\nFor art and exercise in your defence\nAnd for your rapier most especially,\nThat he cried out, 'twould be a sight indeed,\nIf one could match you: the scrimers of their nation,\nHe swore, had had neither motion, guard, nor eye,\nIf you opposed them. Sir, this report of his\nDid Hamlet so envenom with his envy\nThat he could nothing do but wish and beg\nYour sudden coming o'er, to play with him.\nNow, out of this,--\nLAERTES\nWhat out of this, my lord?\nKING CLAUDIUS\nLaertes, was your father dear to you?\nOr are you like the painting of a sorrow,\nA face without a heart?\nLAERTES\nWhy ask you this?\nKING CLAUDIUS\nNot that I think you did not love your father;\nBut that I know love is begun by time;\nAnd that I see, in passages of proof,\nTime qualifies the spark and fire of it.\nThere lives within the very flame of love\nA kind of wick or snuff that will abate it;\nAnd nothing is at a like goodness still;\nFor goodness, growing to a plurisy,\nDies in his own too much: that we would do\nWe should do when we would; for this 'would' changes\nAnd hath abatements and delays as many\nAs there are tongues, are hands, are accidents;\nAnd then this 'should' is like a spendthrift sigh,\nThat hurts by easing. But, to the quick o' the ulcer:--\nHamlet comes back: what would you undertake,\nTo show yourself your father's son in deed\nMore than in words?\nLAERTES\nTo cut his throat i' the church.\nKING CLAUDIUS\nNo place, indeed, should murder sanctuarize;\nRevenge should have no bounds. But, good Laertes,\nWill you do this, keep close within your chamber.\nHamlet return'd shall know you are come home:\nWe'll put on those shall praise your excellence\nAnd set a double varnish on the fame\nThe Frenchman gave you, bring you in fine together\nAnd wager on your heads: he, being remiss,\nMost generous and free from all contriving,\nWill not peruse the foils; so that, with ease,\nOr with a little shuffling, you may choose\nA sword unbated, and in a pass of practise\nRequite him for your father.\nLAERTES\nI will do't:\nAnd, for that purpose, I'll anoint my sword.\nI bought an unction of a mountebank,\nSo mortal that, but dip a knife in it,\nWhere it draws blood no cataplasm so rare,\nCollected from all simples that have virtue\nUnder the moon, can save the thing from death\nThat is but scratch'd withal: I'll touch my point\nWith this contagion, that, if I gall him slightly,\nIt may be death.\nKING CLAUDIUS\nLet's further think of this;\nWeigh what convenience both of time and means\nMay fit us to our shape: if this should fail,\nAnd that our drift look through our bad performance,\n'Twere better not assay'd: therefore this project\nShould have a back or second, that might hold,\nIf this should blast in proof. Soft! let me see:\nWe'll make a solemn wager on your cunnings: I ha't.\nWhen in your motion you are hot and dry--\nAs make your bouts more violent to that end--\nAnd that he calls for drink, I'll have prepared him\nA chalice for the nonce, whereon but sipping,\nIf he by chance escape your venom'd stuck,\nOur purpose may hold there.\nEnter QUEEN GERTRUDE\n\nHow now, sweet queen!\nQUEEN GERTRUDE\nOne woe doth tread upon another's heel,\nSo fast they follow; your sister's drown'd, Laertes.\nLAERTES\nDrown'd! O, where?\nQUEEN GERTRUDE\nThere is a willow grows aslant a brook,\nThat shows his hoar leaves in the glassy stream;\nThere with fantastic garlands did she come\nOf crow-flowers, nettles, daisies, and long purples\nThat liberal shepherds give a grosser name,\nBut our cold maids do dead men's fingers call them:\nThere, on the pendent boughs her coronet weeds\nClambering to hang, an envious sliver broke;\nWhen down her weedy trophies and herself\nFell in the weeping brook. Her clothes spread wide;\nAnd, mermaid-like, awhile they bore her up:\nWhich time she chanted snatches of old tunes;\nAs one incapable of her own distress,\nOr like a creature native and indued\nUnto that element: but long it could not be\nTill that her garments, heavy with their drink,\nPull'd the poor wretch from her melodious lay\nTo muddy death.\nLAERTES\nAlas, then, she is drown'd?\nQUEEN GERTRUDE\nDrown'd, drown'd.\nLAERTES\nToo much of water hast thou, poor Ophelia,\nAnd therefore I forbid my tears: but yet\nIt is our trick; nature her custom holds,\nLet shame say what it will: when these are gone,\nThe woman will be out. Adieu, my lord:\nI have a speech of fire, that fain would blaze,\nBut that this folly douts it.\nExit\n\nKING CLAUDIUS\nLet's follow, Gertrude:\nHow much I had to do to calm his rage!\nNow fear I this will give it start again;\nTherefore let's follow.\nExeunt\n\nACT V\nSCENE I. A churchyard.\nEnter two Clowns, with spades, & c\nFirst Clown\nIs she to be buried in Christian burial that\nwilfully seeks her own salvation?\nSecond Clown\nI tell thee she is: and therefore make her grave\nstraight: the crowner hath sat on her, and finds it\nChristian burial.\nFirst Clown\nHow can that be, unless she drowned herself in her\nown defence?\nSecond Clown\nWhy, 'tis found so.\nFirst Clown\nIt must be 'se offendendo;' it cannot be else. For\nhere lies the point: if I drown myself wittingly,\nit argues an act: and an act hath three branches: it\nis, to act, to do, to perform: argal, she drowned\nherself wittingly.\nSecond Clown\nNay, but hear you, goodman delver,--\nFirst Clown\nGive me leave. Here lies the water; good: here\nstands the man; good; if the man go to this water,\nand drown himself, it is, will he, nill he, he\ngoes,--mark you that; but if the water come to him\nand drown him, he drowns not himself: argal, he\nthat is not guilty of his own death shortens not his own life.\nSecond Clown\nBut is this law?\nFirst Clown\nAy, marry, is't; crowner's quest law.\nSecond Clown\nWill you ha' the truth on't? If this had not been\na gentlewoman, she should have been buried out o'\nChristian burial.\nFirst Clown\nWhy, there thou say'st: and the more pity that\ngreat folk should have countenance in this world to\ndrown or hang themselves, more than their even\nChristian. Come, my spade. There is no ancient\ngentleman but gardeners, ditchers, and grave-makers:\nthey hold up Adam's profession.\nSecond Clown\nWas he a gentleman?\nFirst Clown\nHe was the first that ever bore arms.\nSecond Clown\nWhy, he had none.\nFirst Clown\nWhat, art a heathen? How dost thou understand the\nScripture? The Scripture says 'Adam digged:'\ncould he dig without arms? I'll put another\nquestion to thee: if thou answerest me not to the\npurpose, confess thyself--\nSecond Clown\nGo to.\nFirst Clown\nWhat is he that builds stronger than either the\nmason, the shipwright, or the carpenter?\nSecond Clown\nThe gallows-maker; for that frame outlives a\nthousand tenants.\nFirst Clown\nI like thy wit well, in good faith: the gallows\ndoes well; but how does it well? it does well to\nthose that do in: now thou dost ill to say the\ngallows is built stronger than the church: argal,\nthe gallows may do well to thee. To't again, come.\nSecond Clown\n'Who builds stronger than a mason, a shipwright, or\na carpenter?'\nFirst Clown\nAy, tell me that, and unyoke.\nSecond Clown\nMarry, now I can tell.\nFirst Clown\nTo't.\nSecond Clown\nMass, I cannot tell.\nEnter HAMLET and HORATIO, at a distance\n\nFirst Clown\nCudgel thy brains no more about it, for your dull\nass will not mend his pace with beating; and, when\nyou are asked this question next, say 'a\ngrave-maker: 'the houses that he makes last till\ndoomsday. Go, get thee to Yaughan: fetch me a\nstoup of liquor.\nExit Second Clown\n\nHe digs and sings\n\nIn youth, when I did love, did love,\nMethought it was very sweet,\nTo contract, O, the time, for, ah, my behove,\nO, methought, there was nothing meet.\nHAMLET\nHas this fellow no feeling of his business, that he\nsings at grave-making?\nHORATIO\nCustom hath made it in him a property of easiness.\nHAMLET\n'Tis e'en so: the hand of little employment hath\nthe daintier sense.\nFirst Clown\n[Sings]\nBut age, with his stealing steps,\nHath claw'd me in his clutch,\nAnd hath shipped me intil the land,\nAs if I had never been such.\nThrows up a skull\n\nHAMLET\nThat skull had a tongue in it, and could sing once:\nhow the knave jowls it to the ground, as if it were\nCain's jaw-bone, that did the first murder! It\nmight be the pate of a politician, which this ass\nnow o'er-reaches; one that would circumvent God,\nmight it not?\nHORATIO\nIt might, my lord.\nHAMLET\nOr of a courtier; which could say 'Good morrow,\nsweet lord! How dost thou, good lord?' This might\nbe my lord such-a-one, that praised my lord\nsuch-a-one's horse, when he meant to beg it; might it not?\nHORATIO\nAy, my lord.\nHAMLET\nWhy, e'en so: and now my Lady Worm's; chapless, and\nknocked about the mazzard with a sexton's spade:\nhere's fine revolution, an we had the trick to\nsee't. Did these bones cost no more the breeding,\nbut to play at loggats with 'em? mine ache to think on't.\nFirst Clown\n[Sings]\nA pick-axe, and a spade, a spade,\nFor and a shrouding sheet:\nO, a pit of clay for to be made\nFor such a guest is meet.\nThrows up another skull\n\nHAMLET\nThere's another: why may not that be the skull of a\nlawyer? Where be his quiddities now, his quillets,\nhis cases, his tenures, and his tricks? why does he\nsuffer this rude knave now to knock him about the\nsconce with a dirty shovel, and will not tell him of\nhis action of battery? Hum! This fellow might be\nin's time a great buyer of land, with his statutes,\nhis recognizances, his fines, his double vouchers,\nhis recoveries: is this the fine of his fines, and\nthe recovery of his recoveries, to have his fine\npate full of fine dirt? will his vouchers vouch him\nno more of his purchases, and double ones too, than\nthe length and breadth of a pair of indentures? The\nvery conveyances of his lands will hardly lie in\nthis box; and must the inheritor himself have no more, ha?\nHORATIO\nNot a jot more, my lord.\nHAMLET\nIs not parchment made of sheepskins?\nHORATIO\nAy, my lord, and of calf-skins too.\nHAMLET\nThey are sheep and calves which seek out assurance\nin that. I will speak to this fellow. Whose\ngrave's this, sirrah?\nFirst Clown\nMine, sir.\nSings\n\nO, a pit of clay for to be made\nFor such a guest is meet.\nHAMLET\nI think it be thine, indeed; for thou liest in't.\nFirst Clown\nYou lie out on't, sir, and therefore it is not\nyours: for my part, I do not lie in't, and yet it is mine.\nHAMLET\n'Thou dost lie in't, to be in't and say it is thine:\n'tis for the dead, not for the quick; therefore thou liest.\nFirst Clown\n'Tis a quick lie, sir; 'twill away gain, from me to\nyou.\nHAMLET\nWhat man dost thou dig it for?\nFirst Clown\nFor no man, sir.\nHAMLET\nWhat woman, then?\nFirst Clown\nFor none, neither.\nHAMLET\nWho is to be buried in't?\nFirst Clown\nOne that was a woman, sir; but, rest her soul, she's dead.\nHAMLET\nHow absolute the knave is! we must speak by the\ncard, or equivocation will undo us. By the Lord,\nHoratio, these three years I have taken a note of\nit; the age is grown so picked that the toe of the\npeasant comes so near the heel of the courtier, he\ngaffs his kibe. How long hast thou been a\ngrave-maker?\nFirst Clown\nOf all the days i' the year, I came to't that day\nthat our last king Hamlet overcame Fortinbras.\nHAMLET\nHow long is that since?\nFirst Clown\nCannot you tell that? every fool can tell that: it\nwas the very day that young Hamlet was born; he that\nis mad, and sent into England.\nHAMLET\nAy, marry, why was he sent into England?\nFirst Clown\nWhy, because he was mad: he shall recover his wits\nthere; or, if he do not, it's no great matter there.\nHAMLET\nWhy?\nFirst Clown\n'Twill, a not be seen in him there; there the men\nare as mad as he.\nHAMLET\nHow came he mad?\nFirst Clown\nVery strangely, they say.\nHAMLET\nHow strangely?\nFirst Clown\nFaith, e'en with losing his wits.\nHAMLET\nUpon what ground?\nFirst Clown\nWhy, here in Denmark: I have been sexton here, man\nand boy, thirty years.\nHAMLET\nHow long will a man lie i' the earth ere he rot?\nFirst Clown\nI' faith, if he be not rotten before he die--as we\nhave many pocky corses now-a-days, that will scarce\nhold the laying in--he will last you some eight year\nor nine year: a tanner will last you nine year.\nHAMLET\nWhy he more than another?\nFirst Clown\nWhy, sir, his hide is so tanned with his trade, that\nhe will keep out water a great while; and your water\nis a sore decayer of your whoreson dead body.\nHere's a skull now; this skull has lain in the earth\nthree and twenty years.\nHAMLET\nWhose was it?\nFirst Clown\nA whoreson mad fellow's it was: whose do you think it was?\nHAMLET\nNay, I know not.\nFirst Clown\nA pestilence on him for a mad rogue! a' poured a\nflagon of Rhenish on my head once. This same skull,\nsir, was Yorick's skull, the king's jester.\nHAMLET\nThis?\nFirst Clown\nE'en that.\nHAMLET\nLet me see.\nTakes the skull\n\nAlas, poor Yorick! I knew him, Horatio: a fellow\nof infinite jest, of most excellent fancy: he hath\nborne me on his back a thousand times; and now, how\nabhorred in my imagination it is! my gorge rims at\nit. Here hung those lips that I have kissed I know\nnot how oft. Where be your gibes now? your\ngambols? your songs? your flashes of merriment,\nthat were wont to set the table on a roar? Not one\nnow, to mock your own grinning? quite chap-fallen?\nNow get you to my lady's chamber, and tell her, let\nher paint an inch thick, to this favour she must\ncome; make her laugh at that. Prithee, Horatio, tell\nme one thing.\nHORATIO\nWhat's that, my lord?\nHAMLET\nDost thou think Alexander looked o' this fashion i'\nthe earth?\nHORATIO\nE'en so.\nHAMLET\nAnd smelt so? pah!\nPuts down the skull\n\nHORATIO\nE'en so, my lord.\nHAMLET\nTo what base uses we may return, Horatio! Why may\nnot imagination trace the noble dust of Alexander,\ntill he find it stopping a bung-hole?\nHORATIO\n'Twere to consider too curiously, to consider so.\nHAMLET\nNo, faith, not a jot; but to follow him thither with\nmodesty enough, and likelihood to lead it: as\nthus: Alexander died, Alexander was buried,\nAlexander returneth into dust; the dust is earth; of\nearth we make loam; and why of that loam, whereto he\nwas converted, might they not stop a beer-barrel?\nImperious Caesar, dead and turn'd to clay,\nMight stop a hole to keep the wind away:\nO, that that earth, which kept the world in awe,\nShould patch a wall to expel the winter flaw!\nBut soft! but soft! aside: here comes the king.\nEnter Priest, & c. in procession; the Corpse of OPHELIA, LAERTES and Mourners following; KING CLAUDIUS, QUEEN GERTRUDE, their trains, & c\n\nThe queen, the courtiers: who is this they follow?\nAnd with such maimed rites? This doth betoken\nThe corse they follow did with desperate hand\nFordo its own life: 'twas of some estate.\nCouch we awhile, and mark.\nRetiring with HORATIO\n\nLAERTES\nWhat ceremony else?\nHAMLET\nThat is Laertes,\nA very noble youth: mark.\nLAERTES\nWhat ceremony else?\nFirst Priest\nHer obsequies have been as far enlarged\nAs we have warrantise: her death was doubtful;\nAnd, but that great command o'ersways the order,\nShe should in ground unsanctified have lodged\nTill the last trumpet: for charitable prayers,\nShards, flints and pebbles should be thrown on her;\nYet here she is allow'd her virgin crants,\nHer maiden strewments and the bringing home\nOf bell and burial.\nLAERTES\nMust there no more be done?\nFirst Priest\nNo more be done:\nWe should profane the service of the dead\nTo sing a requiem and such rest to her\nAs to peace-parted souls.\nLAERTES\nLay her i' the earth:\nAnd from her fair and unpolluted flesh\nMay violets spring! I tell thee, churlish priest,\nA ministering angel shall my sister be,\nWhen thou liest howling.\nHAMLET\nWhat, the fair Ophelia!\nQUEEN GERTRUDE\nSweets to the sweet: farewell!\nScattering flowers\n\nI hoped thou shouldst have been my Hamlet's wife;\nI thought thy bride-bed to have deck'd, sweet maid,\nAnd not have strew'd thy grave.\nLAERTES\nO, treble woe\nFall ten times treble on that cursed head,\nWhose wicked deed thy most ingenious sense\nDeprived thee of! Hold off the earth awhile,\nTill I have caught her once more in mine arms:\nLeaps into the grave\n\nNow pile your dust upon the quick and dead,\nTill of this flat a mountain you have made,\nTo o'ertop old Pelion, or the skyish head\nOf blue Olympus.\nHAMLET\n[Advancing] What is he whose grief\nBears such an emphasis? whose phrase of sorrow\nConjures the wandering stars, and makes them stand\nLike wonder-wounded hearers? This is I,\nHamlet the Dane.\nLeaps into the grave\n\nLAERTES\nThe devil take thy soul!\nGrappling with him\n\nHAMLET\nThou pray'st not well.\nI prithee, take thy fingers from my throat;\nFor, though I am not splenitive and rash,\nYet have I something in me dangerous,\nWhich let thy wiseness fear: hold off thy hand.\nKING CLAUDIUS\nPluck them asunder.\nQUEEN GERTRUDE\nHamlet, Hamlet!\nAll\nGentlemen,--\nHORATIO\nGood my lord, be quiet.\nThe Attendants part them, and they come out of the grave\n\nHAMLET\nWhy I will fight with him upon this theme\nUntil my eyelids will no longer wag.\nQUEEN GERTRUDE\nO my son, what theme?\nHAMLET\nI loved Ophelia: forty thousand brothers\nCould not, with all their quantity of love,\nMake up my sum. What wilt thou do for her?\nKING CLAUDIUS\nO, he is mad, Laertes.\nQUEEN GERTRUDE\nFor love of God, forbear him.\nHAMLET\n'Swounds, show me what thou'lt do:\nWoo't weep? woo't fight? woo't fast? woo't tear thyself?\nWoo't drink up eisel? eat a crocodile?\nI'll do't. Dost thou come here to whine?\nTo outface me with leaping in her grave?\nBe buried quick with her, and so will I:\nAnd, if thou prate of mountains, let them throw\nMillions of acres on us, till our ground,\nSingeing his pate against the burning zone,\nMake Ossa like a wart! Nay, an thou'lt mouth,\nI'll rant as well as thou.\nQUEEN GERTRUDE\nThis is mere madness:\nAnd thus awhile the fit will work on him;\nAnon, as patient as the female dove,\nWhen that her golden couplets are disclosed,\nHis silence will sit drooping.\nHAMLET\nHear you, sir;\nWhat is the reason that you use me thus?\nI loved you ever: but it is no matter;\nLet Hercules himself do what he may,\nThe cat will mew and dog will have his day.\nExit\n\nKING CLAUDIUS\nI pray you, good Horatio, wait upon him.\nExit HORATIO\n\nTo LAERTES\n\nStrengthen your patience in our last night's speech;\nWe'll put the matter to the present push.\nGood Gertrude, set some watch over your son.\nThis grave shall have a living monument:\nAn hour of quiet shortly shall we see;\nTill then, in patience our proceeding be.\nExeunt\n\nSCENE II. A hall in the castle.\nEnter HAMLET and HORATIO\nHAMLET\nSo much for this, sir: now shall you see the other;\nYou do remember all the circumstance?\nHORATIO\nRemember it, my lord?\nHAMLET\nSir, in my heart there was a kind of fighting,\nThat would not let me sleep: methought I lay\nWorse than the mutines in the bilboes. Rashly,\nAnd praised be rashness for it, let us know,\nOur indiscretion sometimes serves us well,\nWhen our deep plots do pall: and that should teach us\nThere's a divinity that shapes our ends,\nRough-hew them how we will,--\nHORATIO\nThat is most certain.\nHAMLET\nUp from my cabin,\nMy sea-gown scarf'd about me, in the dark\nGroped I to find out them; had my desire.\nFinger'd their packet, and in fine withdrew\nTo mine own room again; making so bold,\nMy fears forgetting manners, to unseal\nTheir grand commission; where I found, Horatio,--\nO royal knavery!--an exact command,\nLarded with many several sorts of reasons\nImporting Denmark's health and England's too,\nWith, ho! such bugs and goblins in my life,\nThat, on the supervise, no leisure bated,\nNo, not to stay the grinding of the axe,\nMy head should be struck off.\nHORATIO\nIs't possible?\nHAMLET\nHere's the commission: read it at more leisure.\nBut wilt thou hear me how I did proceed?\nHORATIO\nI beseech you.\nHAMLET\nBeing thus be-netted round with villanies,--\nEre I could make a prologue to my brains,\nThey had begun the play--I sat me down,\nDevised a new commission, wrote it fair:\nI once did hold it, as our statists do,\nA baseness to write fair and labour'd much\nHow to forget that learning, but, sir, now\nIt did me yeoman's service: wilt thou know\nThe effect of what I wrote?\nHORATIO\nAy, good my lord.\nHAMLET\nAn earnest conjuration from the king,\nAs England was his faithful tributary,\nAs love between them like the palm might flourish,\nAs peace should stiff her wheaten garland wear\nAnd stand a comma 'tween their amities,\nAnd many such-like 'As'es of great charge,\nThat, on the view and knowing of these contents,\nWithout debatement further, more or less,\nHe should the bearers put to sudden death,\nNot shriving-time allow'd.\nHORATIO\nHow was this seal'd?\nHAMLET\nWhy, even in that was heaven ordinant.\nI had my father's signet in my purse,\nWhich was the model of that Danish seal;\nFolded the writ up in form of the other,\nSubscribed it, gave't the impression, placed it safely,\nThe changeling never known. Now, the next day\nWas our sea-fight; and what to this was sequent\nThou know'st already.\nHORATIO\nSo Guildenstern and Rosencrantz go to't.\nHAMLET\nWhy, man, they did make love to this employment;\nThey are not near my conscience; their defeat\nDoes by their own insinuation grow:\n'Tis dangerous when the baser nature comes\nBetween the pass and fell incensed points\nOf mighty opposites.\nHORATIO\nWhy, what a king is this!\nHAMLET\nDoes it not, think'st thee, stand me now upon--\nHe that hath kill'd my king and whored my mother,\nPopp'd in between the election and my hopes,\nThrown out his angle for my proper life,\nAnd with such cozenage--is't not perfect conscience,\nTo quit him with this arm? and is't not to be damn'd,\nTo let this canker of our nature come\nIn further evil?\nHORATIO\nIt must be shortly known to him from England\nWhat is the issue of the business there.\nHAMLET\nIt will be short: the interim is mine;\nAnd a man's life's no more than to say 'One.'\nBut I am very sorry, good Horatio,\nThat to Laertes I forgot myself;\nFor, by the image of my cause, I see\nThe portraiture of his: I'll court his favours.\nBut, sure, the bravery of his grief did put me\nInto a towering passion.\nHORATIO\nPeace! who comes here?\nEnter OSRIC\n\nOSRIC\nYour lordship is right welcome back to Denmark.\nHAMLET\nI humbly thank you, sir. Dost know this water-fly?\nHORATIO\nNo, my good lord.\nHAMLET\nThy state is the more gracious; for 'tis a vice to\nknow him. He hath much land, and fertile: let a\nbeast be lord of beasts, and his crib shall stand at\nthe king's mess: 'tis a chough; but, as I say,\nspacious in the possession of dirt.\nOSRIC\nSweet lord, if your lordship were at leisure, I\nshould impart a thing to you from his majesty.\nHAMLET\nI will receive it, sir, with all diligence of\nspirit. Put your bonnet to his right use; 'tis for the head.\nOSRIC\nI thank your lordship, it is very hot.\nHAMLET\nNo, believe me, 'tis very cold; the wind is\nnortherly.\nOSRIC\nIt is indifferent cold, my lord, indeed.\nHAMLET\nBut yet methinks it is very sultry and hot for my\ncomplexion.\nOSRIC\nExceedingly, my lord; it is very sultry,--as\n'twere,--I cannot tell how. But, my lord, his\nmajesty bade me signify to you that he has laid a\ngreat wager on your head: sir, this is the matter,--\nHAMLET\nI beseech you, remember--\nHAMLET moves him to put on his hat\n\nOSRIC\nNay, good my lord; for mine ease, in good faith.\nSir, here is newly come to court Laertes; believe\nme, an absolute gentleman, full of most excellent\ndifferences, of very soft society and great showing:\nindeed, to speak feelingly of him, he is the card or\ncalendar of gentry, for you shall find in him the\ncontinent of what part a gentleman would see.\nHAMLET\nSir, his definement suffers no perdition in you;\nthough, I know, to divide him inventorially would\ndizzy the arithmetic of memory, and yet but yaw\nneither, in respect of his quick sail. But, in the\nverity of extolment, I take him to be a soul of\ngreat article; and his infusion of such dearth and\nrareness, as, to make true diction of him, his\nsemblable is his mirror; and who else would trace\nhim, his umbrage, nothing more.\nOSRIC\nYour lordship speaks most infallibly of him.\nHAMLET\nThe concernancy, sir? why do we wrap the gentleman\nin our more rawer breath?\nOSRIC\nSir?\nHORATIO\nIs't not possible to understand in another tongue?\nYou will do't, sir, really.\nHAMLET\nWhat imports the nomination of this gentleman?\nOSRIC\nOf Laertes?\nHORATIO\nHis purse is empty already; all's golden words are spent.\nHAMLET\nOf him, sir.\nOSRIC\nI know you are not ignorant--\nHAMLET\nI would you did, sir; yet, in faith, if you did,\nit would not much approve me. Well, sir?\nOSRIC\nYou are not ignorant of what excellence Laertes is--\nHAMLET\nI dare not confess that, lest I should compare with\nhim in excellence; but, to know a man well, were to\nknow himself.\nOSRIC\nI mean, sir, for his weapon; but in the imputation\nlaid on him by them, in his meed he's unfellowed.\nHAMLET\nWhat's his weapon?\nOSRIC\nRapier and dagger.\nHAMLET\nThat's two of his weapons: but, well.\nOSRIC\nThe king, sir, hath wagered with him six Barbary\nhorses: against the which he has imponed, as I take\nit, six French rapiers and poniards, with their\nassigns, as girdle, hangers, and so: three of the\ncarriages, in faith, are very dear to fancy, very\nresponsive to the hilts, most delicate carriages,\nand of very liberal conceit.\nHAMLET\nWhat call you the carriages?\nHORATIO\nI knew you must be edified by the margent ere you had done.\nOSRIC\nThe carriages, sir, are the hangers.\nHAMLET\nThe phrase would be more german to the matter, if we\ncould carry cannon by our sides: I would it might\nbe hangers till then. But, on: six Barbary horses\nagainst six French swords, their assigns, and three\nliberal-conceited carriages; that's the French bet\nagainst the Danish. Why is this 'imponed,' as you call it?\nOSRIC\nThe king, sir, hath laid, that in a dozen passes\nbetween yourself and him, he shall not exceed you\nthree hits: he hath laid on twelve for nine; and it\nwould come to immediate trial, if your lordship\nwould vouchsafe the answer.\nHAMLET\nHow if I answer 'no'?\nOSRIC\nI mean, my lord, the opposition of your person in trial.\nHAMLET\nSir, I will walk here in the hall: if it please his\nmajesty, 'tis the breathing time of day with me; let\nthe foils be brought, the gentleman willing, and the\nking hold his purpose, I will win for him an I can;\nif not, I will gain nothing but my shame and the odd hits.\nOSRIC\nShall I re-deliver you e'en so?\nHAMLET\nTo this effect, sir; after what flourish your nature will.\nOSRIC\nI commend my duty to your lordship.\nHAMLET\nYours, yours.\nExit OSRIC\n\nHe does well to commend it himself; there are no\ntongues else for's turn.\nHORATIO\nThis lapwing runs away with the shell on his head.\nHAMLET\nHe did comply with his dug, before he sucked it.\nThus has he--and many more of the same bevy that I\nknow the dressy age dotes on--only got the tune of\nthe time and outward habit of encounter; a kind of\nyesty collection, which carries them through and\nthrough the most fond and winnowed opinions; and do\nbut blow them to their trial, the bubbles are out.\nEnter a Lord\n\nLord\nMy lord, his majesty commended him to you by young\nOsric, who brings back to him that you attend him in\nthe hall: he sends to know if your pleasure hold to\nplay with Laertes, or that you will take longer time.\nHAMLET\nI am constant to my purpose; they follow the king's\npleasure: if his fitness speaks, mine is ready; now\nor whensoever, provided I be so able as now.\nLord\nThe king and queen and all are coming down.\nHAMLET\nIn happy time.\nLord\nThe queen desires you to use some gentle\nentertainment to Laertes before you fall to play.\nHAMLET\nShe well instructs me.\nExit Lord\n\nHORATIO\nYou will lose this wager, my lord.\nHAMLET\nI do not think so: since he went into France, I\nhave been in continual practise: I shall win at the\nodds. But thou wouldst not think how ill all's here\nabout my heart: but it is no matter.\nHORATIO\nNay, good my lord,--\nHAMLET\nIt is but foolery; but it is such a kind of\ngain-giving, as would perhaps trouble a woman.\nHORATIO\nIf your mind dislike any thing, obey it: I will\nforestall their repair hither, and say you are not\nfit.\nHAMLET\nNot a whit, we defy augury: there's a special\nprovidence in the fall of a sparrow. If it be now,\n'tis not to come; if it be not to come, it will be\nnow; if it be not now, yet it will come: the\nreadiness is all: since no man has aught of what he\nleaves, what is't to leave betimes?\nEnter KING CLAUDIUS, QUEEN GERTRUDE, LAERTES, Lords, OSRIC, and Attendants with foils, & c\n\nKING CLAUDIUS\nCome, Hamlet, come, and take this hand from me.\nKING CLAUDIUS puts LAERTES' hand into HAMLET's\n\nHAMLET\nGive me your pardon, sir: I've done you wrong;\nBut pardon't, as you are a gentleman.\nThis presence knows,\nAnd you must needs have heard, how I am punish'd\nWith sore distraction. What I have done,\nThat might your nature, honour and exception\nRoughly awake, I here proclaim was madness.\nWas't Hamlet wrong'd Laertes? Never Hamlet:\nIf Hamlet from himself be ta'en away,\nAnd when he's not himself does wrong Laertes,\nThen Hamlet does it not, Hamlet denies it.\nWho does it, then? His madness: if't be so,\nHamlet is of the faction that is wrong'd;\nHis madness is poor Hamlet's enemy.\nSir, in this audience,\nLet my disclaiming from a purposed evil\nFree me so far in your most generous thoughts,\nThat I have shot mine arrow o'er the house,\nAnd hurt my brother.\nLAERTES\nI am satisfied in nature,\nWhose motive, in this case, should stir me most\nTo my revenge: but in my terms of honour\nI stand aloof; and will no reconcilement,\nTill by some elder masters, of known honour,\nI have a voice and precedent of peace,\nTo keep my name ungored. But till that time,\nI do receive your offer'd love like love,\nAnd will not wrong it.\nHAMLET\nI embrace it freely;\nAnd will this brother's wager frankly play.\nGive us the foils. Come on.\nLAERTES\nCome, one for me.\nHAMLET\nI'll be your foil, Laertes: in mine ignorance\nYour skill shall, like a star i' the darkest night,\nStick fiery off indeed.\nLAERTES\nYou mock me, sir.\nHAMLET\nNo, by this hand.\nKING CLAUDIUS\nGive them the foils, young Osric. Cousin Hamlet,\nYou know the wager?\nHAMLET\nVery well, my lord\nYour grace hath laid the odds o' the weaker side.\nKING CLAUDIUS\nI do not fear it; I have seen you both:\nBut since he is better'd, we have therefore odds.\nLAERTES\nThis is too heavy, let me see another.\nHAMLET\nThis likes me well. These foils have all a length?\nThey prepare to play\n\nOSRIC\nAy, my good lord.\nKING CLAUDIUS\nSet me the stoops of wine upon that table.\nIf Hamlet give the first or second hit,\nOr quit in answer of the third exchange,\nLet all the battlements their ordnance fire:\nThe king shall drink to Hamlet's better breath;\nAnd in the cup an union shall he throw,\nRicher than that which four successive kings\nIn Denmark's crown have worn. Give me the cups;\nAnd let the kettle to the trumpet speak,\nThe trumpet to the cannoneer without,\nThe cannons to the heavens, the heavens to earth,\n'Now the king dunks to Hamlet.' Come, begin:\nAnd you, the judges, bear a wary eye.\nHAMLET\nCome on, sir.\nLAERTES\nCome, my lord.\nThey play\n\nHAMLET\nOne.\nLAERTES\nNo.\nHAMLET\nJudgment.\nOSRIC\nA hit, a very palpable hit.\nLAERTES\nWell; again.\nKING CLAUDIUS\nStay; give me drink. Hamlet, this pearl is thine;\nHere's to thy health.\nTrumpets sound, and cannon shot off within\n\nGive him the cup.\nHAMLET\nI'll play this bout first; set it by awhile. Come.\nThey play\n\nAnother hit; what say you?\nLAERTES\nA touch, a touch, I do confess.\nKING CLAUDIUS\nOur son shall win.\nQUEEN GERTRUDE\nHe's fat, and scant of breath.\nHere, Hamlet, take my napkin, rub thy brows;\nThe queen carouses to thy fortune, Hamlet.\nHAMLET\nGood madam!\nKING CLAUDIUS\nGertrude, do not drink.\nQUEEN GERTRUDE\nI will, my lord; I pray you, pardon me.\nKING CLAUDIUS\n[Aside] It is the poison'd cup: it is too late.\nHAMLET\nI dare not drink yet, madam; by and by.\nQUEEN GERTRUDE\nCome, let me wipe thy face.\nLAERTES\nMy lord, I'll hit him now.\nKING CLAUDIUS\nI do not think't.\nLAERTES\n[Aside] And yet 'tis almost 'gainst my conscience.\nHAMLET\nCome, for the third, Laertes: you but dally;\nI pray you, pass with your best violence;\nI am afeard you make a wanton of me.\nLAERTES\nSay you so? come on.\nThey play\n\nOSRIC\nNothing, neither way.\nLAERTES\nHave at you now!\nLAERTES wounds HAMLET; then in scuffling, they change rapiers, and HAMLET wounds LAERTES\n\nKING CLAUDIUS\nPart them; they are incensed.\nHAMLET\nNay, come, again.\nQUEEN GERTRUDE falls\n\nOSRIC\nLook to the queen there, ho!\nHORATIO\nThey bleed on both sides. How is it, my lord?\nOSRIC\nHow is't, Laertes?\nLAERTES\nWhy, as a woodcock to mine own springe, Osric;\nI am justly kill'd with mine own treachery.\nHAMLET\nHow does the queen?\nKING CLAUDIUS\nShe swounds to see them bleed.\nQUEEN GERTRUDE\nNo, no, the drink, the drink,--O my dear Hamlet,--\nThe drink, the drink! I am poison'd.\nDies\n\nHAMLET\nO villany! Ho! let the door be lock'd:\nTreachery! Seek it out.\nLAERTES\nIt is here, Hamlet: Hamlet, thou art slain;\nNo medicine in the world can do thee good;\nIn thee there is not half an hour of life;\nThe treacherous instrument is in thy hand,\nUnbated and envenom'd: the foul practise\nHath turn'd itself on me lo, here I lie,\nNever to rise again: thy mother's poison'd:\nI can no more: the king, the king's to blame.\nHAMLET\nThe point!--envenom'd too!\nThen, venom, to thy work.\nStabs KING CLAUDIUS\n\nAll\nTreason! treason!\nKING CLAUDIUS\nO, yet defend me, friends; I am but hurt.\nHAMLET\nHere, thou incestuous, murderous, damned Dane,\nDrink off this potion. Is thy union here?\nFollow my mother.\nKING CLAUDIUS dies\n\nLAERTES\nHe is justly served;\nIt is a poison temper'd by himself.\nExchange forgiveness with me, noble Hamlet:\nMine and my father's death come not upon thee,\nNor thine on me.\nDies\n\nHAMLET\nHeaven make thee free of it! I follow thee.\nI am dead, Horatio. Wretched queen, adieu!\nYou that look pale and tremble at this chance,\nThat are but mutes or audience to this act,\nHad I but time--as this fell sergeant, death,\nIs strict in his arrest--O, I could tell you--\nBut let it be. Horatio, I am dead;\nThou livest; report me and my cause aright\nTo the unsatisfied.\nHORATIO\nNever believe it:\nI am more an antique Roman than a Dane:\nHere's yet some liquor left.\nHAMLET\nAs thou'rt a man,\nGive me the cup: let go; by heaven, I'll have't.\nO good Horatio, what a wounded name,\nThings standing thus unknown, shall live behind me!\nIf thou didst ever hold me in thy heart\nAbsent thee from felicity awhile,\nAnd in this harsh world draw thy breath in pain,\nTo tell my story.\nMarch afar off, and shot within\n\nWhat warlike noise is this?\nOSRIC\nYoung Fortinbras, with conquest come from Poland,\nTo the ambassadors of England gives\nThis warlike volley.\nHAMLET\nO, I die, Horatio;\nThe potent poison quite o'er-crows my spirit:\nI cannot live to hear the news from England;\nBut I do prophesy the election lights\nOn Fortinbras: he has my dying voice;\nSo tell him, with the occurrents, more and less,\nWhich have solicited. The rest is silence.\nDies\n\nHORATIO\nNow cracks a noble heart. Good night sweet prince:\nAnd flights of angels sing thee to thy rest!\nWhy does the drum come hither?\nMarch within\n\nEnter FORTINBRAS, the English Ambassadors, and others\n\nPRINCE FORTINBRAS\nWhere is this sight?\nHORATIO\nWhat is it ye would see?\nIf aught of woe or wonder, cease your search.\nPRINCE FORTINBRAS\nThis quarry cries on havoc. O proud death,\nWhat feast is toward in thine eternal cell,\nThat thou so many princes at a shot\nSo bloodily hast struck?\nFirst Ambassador\nThe sight is dismal;\nAnd our affairs from England come too late:\nThe ears are senseless that should give us hearing,\nTo tell him his commandment is fulfill'd,\nThat Rosencrantz and Guildenstern are dead:\nWhere should we have our thanks?\nHORATIO\nNot from his mouth,\nHad it the ability of life to thank you:\nHe never gave commandment for their death.\nBut since, so jump upon this bloody question,\nYou from the Polack wars, and you from England,\nAre here arrived give order that these bodies\nHigh on a stage be placed to the view;\nAnd let me speak to the yet unknowing world\nHow these things came about: so shall you hear\nOf carnal, bloody, and unnatural acts,\nOf accidental judgments, casual slaughters,\nOf deaths put on by cunning and forced cause,\nAnd, in this upshot, purposes mistook\nFall'n on the inventors' reads: all this can I\nTruly deliver.\nPRINCE FORTINBRAS\nLet us haste to hear it,\nAnd call the noblest to the audience.\nFor me, with sorrow I embrace my fortune:\nI have some rights of memory in this kingdom,\nWhich now to claim my vantage doth invite me.\nHORATIO\nOf that I shall have also cause to speak,\nAnd from his mouth whose voice will draw on more;\nBut let this same be presently perform'd,\nEven while men's minds are wild; lest more mischance\nOn plots and errors, happen.\nPRINCE FORTINBRAS\nLet four captains\nBear Hamlet, like a soldier, to the stage;\nFor he was likely, had he been put on,\nTo have proved most royally: and, for his passage,\nThe soldiers' music and the rites of war\nSpeak loudly for him.\nTake up the bodies: such a sight as this\nBecomes the field, but here shows much amiss.\nGo, bid the soldiers shoot.\nA dead march. Exeunt, bearing off the dead bodies; after which a peal of ordnance is shot off\n`"},"relativePath":"keyboard_frequencies/hamlet.js"},{"fields":{"contents":"<svg width=\"115\" height=\"85\" viewBox=\"0 0 115 85\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url(#clip0)\">\n<path d=\"M992.055 -680H-508V320.037H992.055V-680Z\" fill=\"white\"/>\n<path d=\"M30.0345 8.18841L30.4671 9.23409L30.4075 9.64978L30.0504 10.8691L30.0335 10.8929L30.0246 10.9474L29.216 13.1767L27.9213 16.9745L27.0781 20.4349L27.0701 20.4478L27.0652 20.4835L25.9461 24.4956L25.9441 24.4975V24.4995L25.2447 26.9232L24.697 29.0513L24.693 29.0572L24.6911 29.0701L23.9242 31.853L23.9172 31.8639L23.9133 31.8867L21.4925 39.9068L21.4667 39.9436L21.4528 40.0219L20.2921 43.1371L20.2911 43.1391L16.415 53.4768L16.414 53.4788L15.5518 55.7477L15.5508 55.7497L14.3276 58.9333L14.6828 59.0812L15.03 59.9195L14.8207 60.5931L13.3186 62.7708L13.3018 62.7797L13.2938 62.8055L12.8781 63.3631L12.8107 63.3968L12.7759 63.4831L12.5259 63.746L12.4674 63.7708L12.4317 63.8353L11.5358 64.1696L10.5685 63.7688L10.4733 63.5397L10.3354 63.4573L10.1816 63.1756L9.99707 62.4593L10.004 62.3184L10.0506 61.8283L10.0625 61.8035L10.0804 61.6428L10.3126 60.607L10.3175 60.5991L10.3205 60.5772L10.5814 59.5405L10.5864 59.5336L10.5884 59.5147L11.005 58.0077L11.007 58.0047L11.008 57.9978L12.015 54.5354L12.0249 54.5215L12.0299 54.4907L12.7839 52.1752L12.7878 52.1702L12.7888 52.1623L16.3654 41.7065L17.3713 38.5864L17.3723 38.5854L19.9816 30.6565L20.7961 27.9352L20.7971 27.9342L21.4062 25.816L22.062 23.3973L22.0729 23.3804L22.0789 23.3418L23.3111 19.3634L23.3497 19.3099L23.3716 19.2017L24.7744 15.8445L26.3181 12.0457L26.327 12.0348L26.331 12.0169L27.2437 9.93451L27.5731 8.80848L28.0989 8.05349L28.9888 7.75586L30.0345 8.18841Z\" fill=\"black\"/>\n<path d=\"M30.6072 9.2095L31.015 10.1927L31.014 10.2175L31.006 10.7026L31.0527 12.8574L31.2908 15.3317L31.8563 18.4678L32.8087 22.2794L32.8117 22.3022L32.8156 22.3082L35.912 35.3097L35.9209 35.387L35.9318 35.4059L38.046 46.3636L38.0509 46.4132L38.0559 46.4232L39.2623 53.4978V53.5018L39.5044 54.8143L39.5073 54.8233L39.8218 54.9403L40.305 55.8144L40.4191 56.5733L40.6542 57.7946L41.0282 58.7778L40.9965 59.1468L40.934 59.504L40.8328 59.6776L40.7306 60.0983L40.2891 60.6142L40.2088 60.7521L40.1522 60.7729L40.0917 60.8443L39.9588 60.9406L38.7107 61.3503L37.2196 60.7322L37.159 60.5864L37.04 60.5269L36.7146 60.1042L36.5797 59.7114L36.3445 59.3572L35.403 55.8322L35.3872 55.7152L35.3683 55.6834L35.0925 54.2945L35.0875 54.2488L35.0826 54.2389L33.8256 47.1732L33.8216 47.1315L33.8167 47.1236L32.0517 36.1043L29.6181 22.9957L29.6161 22.9739L29.6131 22.9699L28.9236 19.0462L28.9206 19.0174L28.9177 19.0124L28.4048 15.7663L28.3938 15.6353L28.3889 15.6234L28.2847 14.0123L27.748 13.791L27.3154 12.7453L27.4394 12.1531L28.0764 10.6957L28.2728 9.8623L28.5486 9.43272L28.6409 9.2095L28.7093 9.18072L28.7589 9.10433L29.624 8.80273L30.6072 9.2095Z\" fill=\"black\"/>\n<path d=\"M17.4932 39.5266L19.3881 40.0078L20.2572 40.1735L21.285 40.351L22.2791 40.48L23.427 40.5207L23.4607 40.5356L24.0004 40.603L25.2752 40.9265L25.2832 40.9314L25.302 40.9344L26.814 41.3461L26.9013 41.4056L27.0947 41.4443L27.9103 41.7826L28.818 41.9473L29.8568 42.0813L32.6793 42.3342L32.712 42.3511L32.9412 42.3759L34.0811 42.6319L34.6605 42.995L34.9591 43.119L34.9948 43.2053L35.0901 43.2648L35.1486 43.4305L35.5137 43.7391L35.7588 44.5546L35.3262 45.6002L34.3877 45.9881L34.0692 46.1866L32.9551 46.4376L32.4848 46.4902L32.4243 46.4892L29.5482 46.4048L29.5393 46.4009L29.3379 46.388L28.191 46.2401H28.19L27.2267 46.1201L26.3378 46.1866L26.1463 46.1935L26.0263 46.1905L24.4736 46.1151L24.4667 46.1122L24.3685 46.1072L23.0658 45.9891L22.9716 45.9425L22.4378 45.8542L21.3098 45.4683L20.3028 45.1945L19.2482 44.9603L19.2363 44.9534L19.2006 44.9484L18.3563 44.7371L16.4505 44.4206L14.9693 43.5754L14.373 41.9533L15.1062 40.1824L16.8761 39.4492L17.4932 39.5266Z\" fill=\"black\"/>\n<path d=\"M47.4647 14.7571L47.563 14.8821L47.6661 14.9247L47.7445 15.1152L48.0025 15.4466L48.2683 16.144L48.3675 16.6788L47.935 17.7244L47.5987 17.8633L47.7624 18.4388L47.805 18.7374L47.8189 18.7671L47.9598 21.1908L47.9638 21.295L47.9628 21.3149L47.9271 24.5045L47.9261 24.5055V24.5392L47.5134 37.8284V37.8333L47.3179 43.3663L47.2653 45.7126L47.3169 45.6769L49.0878 45.159L49.5769 45.0876L49.6265 45.0647L52.8191 44.8822L52.9471 44.8782L53.1892 44.8921L55.2111 45.1213L55.2617 45.1481L55.5265 45.1858L57.1665 45.654L57.4393 45.8425L57.7637 45.9477L58.8699 46.7473L58.9294 46.8634L59.4314 47.3853L59.7112 47.8942L59.8223 48.3238L59.9255 48.5043L60.0386 49.173L60.0674 49.4964L60.0485 49.7564L59.9354 50.561L59.9086 50.6106L59.8779 50.8219L59.6447 51.5898L59.6021 51.6503L59.5773 51.7713L58.7161 53.7387L58.6219 53.8498L58.5812 53.9827L57.096 56.2259L57.0226 56.2655L56.981 56.3777L55.1644 58.5196L55.0851 58.5563L55.0484 58.6436L53.0612 60.5524L52.9461 60.599L52.9014 60.6883L51.8528 61.4761L51.6564 61.5415L51.4659 61.6993L50.5313 62.0912L50.2386 62.1517L50.1424 62.2062L49.2922 62.3541L48.9896 62.3809L48.6503 62.3461L47.8953 62.1933L47.5223 61.9671L47.1691 61.8372L46.6046 61.357L46.5639 61.2697L46.4716 61.23L45.9101 60.6189L45.8496 60.4611L45.6571 60.2459L45.2295 59.3659L45.1978 59.226L45.1442 59.1506L44.7295 57.8519L44.7027 57.6843L44.6759 57.6376L44.4101 56.1445L44.4001 56.0364L44.3932 56.0215L44.1729 53.9053L44.169 53.82L44.166 53.8141L44.0638 51.7783L44.0628 51.7396L44.0618 51.7376L44.042 51.0213L43.8505 50.7257L43.7979 50.5173L43.7831 50.3993L43.7692 50.3735L43.6938 49.8863L43.6541 49.7018L43.6789 49.7445L43.665 49.5689L43.7017 49.4826L43.6055 49.2514L43.9706 48.418L43.916 46.4299L43.915 46.3813V46.3793L43.92 43.3137V43.2938L43.9934 37.747V37.746V37.7292L44.3138 24.437L44.3148 24.435L44.3168 24.3656L44.5251 21.1779L44.5301 21.166L44.54 21.042L44.8992 18.6283L44.9289 18.5737L44.9637 18.3703L45.1631 17.7949L45.1393 16.7333V16.7036V16.6966L45.1422 16.019L45.1393 15.9764L45.1363 15.8851L45.3744 15.1192L45.4924 15.0259L45.5321 14.9307L45.7018 14.8603L45.9944 14.6281L46.0718 14.5974L46.6205 14.4922L47.4647 14.7571ZM53.1574 49.1522L50.3131 49.6681L48.8626 50.1185L48.3656 50.3725L48.1513 50.4241L48.0292 50.5143L47.2296 50.7832L47.2256 51.6523L47.3387 53.6166L47.5253 55.6485L47.7713 57.0146L48.0798 58.1406L48.3725 58.7567L48.5134 58.9383L48.5471 58.9502L48.7951 58.9561L49.2128 58.85L49.8835 58.4938L50.8121 57.9144L52.6663 56.2338L54.3688 54.2903L55.6555 52.2862L56.2895 50.6066L56.3619 50.1889L56.344 49.8199L56.3143 49.7226L55.8023 49.3724L54.7557 49.1244L53.1574 49.1522Z\" fill=\"black\"/>\n<path d=\"M63.8354 44.6338L65.9982 44.6685L66.0101 44.6735L66.4318 44.7221L68.3485 45.1626L68.6064 45.3253L69.0033 45.4433L70.5053 46.4206L70.8525 46.7956L70.9726 46.8551L71.8724 48.0278L72.0173 48.4524L72.2157 48.7857L72.4181 49.8254L72.4508 50.1558L72.433 50.3949L72.3129 51.2332L72.2405 51.3632L72.1522 51.7253L71.8883 52.2363L71.678 52.3632L71.6284 52.4704L71.7881 52.8553L71.1869 54.2591L69.9259 55.4626L69.8148 55.5072L69.663 55.6729L68.1074 56.7086L67.9973 56.7424L67.903 56.8287L66.1639 57.7136L65.7879 57.8039L65.6202 57.9071L64.765 58.0896L64.515 58.1164L64.4833 58.1313L62.6568 58.2861L62.4693 58.294L62.0735 58.2573L60.368 57.9349L60.1101 57.7821L59.6587 57.6491L58.487 56.8981L58.0525 56.4328L57.9453 56.3773L57.5525 55.8197L57.4731 55.5727L57.3124 55.3614L56.8282 54.023L56.7181 53.401L56.7102 53.3821L56.6973 52.5041V52.4763L56.732 52.1132L57.0683 50.3612L57.1447 50.2332L57.2161 49.9118L57.9989 48.2381L58.108 48.1141L58.1517 47.9732L58.7221 47.1369L59.0803 46.8154L59.1428 46.6864L59.866 46.113L60.0327 46.0545L60.2103 45.8908L61.9236 45.0128L62.4167 44.8927L62.5933 44.7945L63.4683 44.6596L63.8007 44.6338H63.8354ZM64.0815 48.8621L63.5874 48.9931L62.2104 49.5258L61.8453 49.8304L61.4326 50.26L60.8423 51.4178L60.5506 52.6837L60.5555 53.023L60.7629 53.6311L61.3413 53.9347L62.4356 54.025L63.9277 53.8524L64.6499 53.6807L66.2413 53.2522L67.411 52.5527L68.4695 51.4872L68.8832 51.3146L69.0906 50.8691L69.1501 50.8185L69.1303 50.5894L68.9457 50.1886L68.3911 49.6489L67.2463 49.1826L65.7403 48.8542L64.0815 48.8621Z\" fill=\"black\"/>\n<path d=\"M77.3084 45.6538L77.3649 45.6379L78.358 46.0496L78.7697 47.0437L78.7668 47.1419L78.7231 47.756L78.6904 47.8255L78.6031 48.2739L78.2965 49.0388L77.7618 50.5994L77.5306 51.7899L77.4393 53.0518L77.4711 53.4804L77.605 54.5003L77.8302 54.9468L78.1437 55.2097L78.5882 55.3892L79.234 55.3912L80.1041 55.2275L81.1984 54.7414L82.6439 53.6908L83.4267 52.8584L84.1995 51.4923L84.4971 50.7492L84.5051 50.7105L84.5705 49.2342L84.5864 49.1975L84.6519 48.7809L84.8146 48.2709L85.1083 47.8671L85.1995 47.6479L85.2968 47.6072L85.3811 47.4911L86.3166 47.1846L87.2532 47.4911L87.3355 47.6062L87.4347 47.6479L87.529 47.8751L87.8227 48.2828L87.9784 48.768L88.03 49.0934L88.0578 49.1479L88.281 51.4665L88.6312 54.043L89.0102 55.6412L89.5787 57.1641L90.0906 58.2068L90.2394 58.438L90.8853 58.1026L91.9428 58.5411L92.3804 59.5987L92.3059 60.066L92.1085 60.6672L92.1055 60.6712L92.1046 60.6781L91.9686 61.071L91.9597 61.0829L91.9557 61.1057L91.8635 61.3518L91.542 61.7625L91.4359 62.0284L91.2752 62.1018L91.1214 62.2992L90.2662 62.5671L90.0529 62.6653L89.7543 62.6822L89.6392 62.6851L88.8306 62.5204L88.0131 62.1752L87.5508 61.7893L87.3177 61.6891L86.518 60.8498L86.4297 60.6295L86.1351 60.3061L85.513 59.064L85.4238 58.687L85.3206 58.5193L84.9307 56.7097L84.9118 56.5371L84.8969 56.5073L84.8374 56.0252L84.8037 56.1026L83.2352 57.5312L83.0794 57.5917L83.0239 57.6969L81.6994 58.5739L81.4762 58.6413L81.3006 58.7753L80.1041 59.2118L79.5505 59.311L79.5009 59.3328L78.2856 59.3854L78.1953 59.3874L77.6834 59.3209L76.5137 59.0114L76.0554 58.7048L75.6883 58.5669L74.8152 57.7981L74.7408 57.6324L74.3985 57.2901L73.7606 56.1948L73.6545 55.8069L73.5225 55.5956L73.2021 54.1967L73.1445 53.6997L73.1505 53.5419L73.1981 52.8911L73.2031 52.8792L73.211 52.7701L73.4174 51.2274L73.4402 51.1837L73.466 50.9833L73.8469 49.5408L73.9432 49.3969L74.0096 49.1291L74.8728 47.4881L75.0722 47.2758L75.1347 47.1151L75.7131 46.4712L75.8549 46.4087L76.1337 46.1319L76.1784 46.1062L76.1972 46.0595L76.2915 46.0198L76.3738 45.9077L77.2429 45.626L77.3084 45.6538Z\" fill=\"black\"/>\n<path d=\"M95.553 11.3604L96.3894 11.6193L96.4935 11.7502L96.5987 11.7929L96.6741 11.9774L96.9281 12.2959L97.1205 12.783L97.1582 12.9775L97.1999 13.0459L97.7515 15.7315L97.7535 15.7504L97.7555 15.7544L98.3448 18.7525L98.3507 18.8061L98.3567 18.817L99.6931 26.9284L99.7 27.0097L99.7069 27.0226L100.273 31.6111L100.283 31.7718L100.288 31.7817L100.682 39.6769L100.684 39.7781V39.7791L100.718 45.0064V45.0094L100.743 49.9352L100.768 51.719V51.7507V51.7785L100.745 53.4968L100.773 54.6625L100.774 54.7181L100.77 54.8481L100.641 56.9513L100.727 57.1606L100.611 57.7827L100.492 58.0902L100.213 58.4395L100.175 58.497L100.041 58.7817L99.9649 58.8115L99.9103 58.8929L98.8141 59.2689L97.6563 58.8432L97.6156 58.7718L97.5481 58.744L97.4112 58.4137L97.0491 57.7777L96.5918 55.0832L96.5679 54.8074L96.562 54.7925L96.5193 53.5881V53.5871L96.4469 51.843L96.4459 51.7805V51.7795L96.4211 49.9858V49.9759L96.3725 45.06L96.2356 39.8693L95.8983 32.005L95.6155 27.4314L94.8586 19.2743L94.8576 19.2555V19.2545L94.5996 16.2455L94.3407 14.4726L94.0381 13.7424L94.0391 13.6829L94.0758 12.7761L94.3774 12.1084L94.5073 11.7929L94.5222 11.787L94.5282 11.7731L95.553 11.3604Z\" fill=\"black\"/>\n<path d=\"M91.1718 42.0149L93.6153 42.245L93.6173 42.247H93.6312L101.477 43.0675L101.533 43.0962L101.849 43.1409L103.782 43.7054L104.235 44.0209L104.477 44.1211L104.516 44.2163L104.628 44.2937L104.962 45.2918L104.593 46.3345L104.509 46.386L104.477 46.4624L104.193 46.5805L103.656 46.9099L101.714 47.3305L101.395 47.3652L101.368 47.3791L93.5101 47.8335L93.3405 47.8385H93.3246L90.8801 47.8246L90.8761 47.8226L90.4822 47.7948L87.3671 47.3464L86.6954 47.3315L86.6319 47.3037L85.616 47.0736L84.5624 46.5716L84.0961 46.4902L83.0107 45.8622L82.5742 44.6687L83.0107 43.4752L84.107 42.8462L84.5783 42.7639L85.6368 42.2778L86.7569 42.0307L86.9325 42.0357L87.6419 42.0833L90.8206 42.0029L90.8979 42.002L91.1718 42.0149Z\" fill=\"black\"/>\n<path d=\"M26.4049 70.6787L29.8782 70.8643L29.8792 70.8653L29.901 70.8662L41.2487 71.6589L49.0813 71.9873L49.0833 71.9883L49.1061 71.9893L53.2888 72.2264L57.528 72.3435L67.1395 72.2691L76.8601 71.8455L81.8246 71.4883L81.8762 71.4863L81.8791 71.4853L85.7582 71.3226L89.0054 71.1311L89.053 71.1301L89.055 71.1292L93.6742 71.0042H93.7109L93.7794 71.0051L97.1555 71.1867L97.8906 71.527L98.1922 72.284L97.8906 73.0399L97.1525 73.3812L93.8081 73.5608L89.2445 74.0172H89.2425L86.0013 74.3614H85.9993L82.148 74.8069L82.0646 74.8118L82.0577 74.8148L77.0655 75.1392H77.0446L77.0426 75.1402L67.2794 75.667L67.2149 75.669L67.2129 75.67L57.5429 75.8387L57.5102 75.8396H57.4993L53.2045 75.8109L48.995 75.8059L48.8759 75.8019L41.0225 75.3009L41.0175 75.299L40.959 75.296L29.651 74.1402L26.2392 73.9378L23.8641 73.8564L22.0168 73.8931L21.3789 73.9894L21.2628 73.9973L21.2519 74.0033L20.7191 74.039L20.614 74.043L19.5683 73.6104L19.1357 72.5647L19.5346 71.5548L20.5138 71.0895L21.0465 71.0538L21.1279 71.0508L21.1289 71.0498L21.8025 71.0399L23.6915 70.8206L23.7857 70.8147L23.7927 70.8117L26.2243 70.6797L26.3176 70.6768L26.4049 70.6787Z\" fill=\"black\"/>\n</g>\n<defs>\n<clipPath id=\"clip0\">\n<rect width=\"1500\" height=\"1000\" fill=\"white\" transform=\"translate(-508 -680)\"/>\n</clipPath>\n</defs>\n</svg>"},"relativePath":"about.svg"},{"fields":{"contents":"<svg width=\"311\" height=\"109\" viewBox=\"0 0 311 109\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url(#clip0)\">\n<path d=\"M1078.06 -433H-422V567.037H1078.06V-433Z\" fill=\"white\"/>\n<path d=\"M48.8608 14.6655L51.4383 14.6893L51.4502 14.6943L52.1079 14.7955L53.8739 15.354L54.5356 15.8322L54.8005 15.9473L55.6338 16.8472L55.7846 17.2311L56.112 17.7599L56.2073 18.1855L56.2529 18.5903L56.1785 19.1042L56.0922 19.3949L56.0624 19.7867L56.0257 19.8621L55.9384 20.2808L55.4414 21.4168L55.3273 21.5507L55.2807 21.6936L54.8382 22.3097L54.7082 22.3751L54.6398 22.5349L54.0098 23.1222L53.9483 23.147L53.9245 23.1966L53.1635 23.8097L51.2517 25.4318L50.2934 25.784L49.2477 25.3514L48.8151 24.3058L49.337 23.1787L51.2289 21.5735L51.8569 20.9634L52.3321 20.4128L52.6605 19.9564L52.7994 19.6826L52.472 19.5109L51.2726 19.2808L49.3052 19.4107L46.5164 20.3473L44.9965 21.0378L41.0668 23.4387L36.782 26.7771L36.7373 26.793L36.6937 26.8436L34.4227 28.4904L32.4296 30.3536L30.2649 32.8716L30.2272 32.9013L30.2172 32.9261L28.1328 35.208L26.3183 37.8569L24.6426 40.8014L23.0632 44.2212L20.7367 50.8117L19.699 54.0747L18.816 57.2822L17.4588 63.1336L17.1037 65.7269L17.2961 67.6933L17.7604 69.6477L18.2158 70.9136L18.8914 72.1022L19.3557 72.5913L20.2853 73.0199L21.6038 73.3105L23.3896 73.4891L25.4532 73.4584L30.7143 72.6964L30.7282 72.6954L30.7301 72.6944L33.9793 72.2242L40.5242 70.4731L44.0451 69.238L44.1622 69.2171L44.2068 69.1864L47.0671 68.3917L49.5185 67.4214L53.0941 65.5999L54.2776 64.8777L55.0683 64.6535L56.1349 65.095L56.5753 66.1605L55.9721 67.3669L54.8084 68.2379L54.7439 68.2598L54.7231 68.2985L51.2507 70.5714L51.1763 70.5932L51.1148 70.6527L48.6405 71.992L48.6197 71.998L48.6068 72.0099L45.9013 73.4286L45.7287 73.4723L45.6236 73.5536L42.0371 74.889L41.9448 74.9058L41.9052 74.9336L35.2373 77.026L35.1807 77.0339L35.1609 77.0478L31.8859 77.9873L31.4623 78.0478L31.3929 78.0835L25.9324 78.6371L25.7052 78.649L25.7002 78.651L23.3211 78.6897H23.2775L23.0225 78.6768L20.9222 78.4695L20.833 78.4248L20.3558 78.3464L18.6593 77.773L18.3358 77.5319L17.9876 77.4168L16.5858 76.3771L16.3457 76.0934L16.2177 76.0348L15.305 74.9773L15.2147 74.7362L14.9568 74.4405L14.1899 72.7847L14.1055 72.4077L14.0192 72.2629L13.7057 70.6517L13.665 70.24V70.2281L13.6789 67.982L13.6799 67.979L13.6968 67.7389L14.0103 65.5126L14.2762 62.6812L14.2841 62.6653L14.295 62.5482L15.4022 56.5153L15.4151 56.4935L15.425 56.4131L16.2604 53.1064L16.2663 53.0975L16.2693 53.0747L17.2158 49.6986L17.2396 49.6638L17.2535 49.5855L19.6593 42.8987L19.6831 42.867L19.695 42.8094L21.2506 39.1853L21.2754 39.1565L21.2854 39.1119L22.8539 35.9133L22.8757 35.8895L22.8836 35.8568L24.5246 32.815L24.5295 32.81L24.5305 32.8041L26.1109 29.9558L26.3113 29.7494L26.3768 29.5718L28.5961 26.914L28.6527 26.8694L28.6676 26.8317L30.7182 24.5865L30.7301 24.5786L30.7321 24.5716L32.757 22.394L33.0239 22.2035L33.1886 22.012L37.7185 18.7242L37.8941 18.6677L38.0598 18.5109L42.3982 16.1864L42.6324 16.1269L42.7782 16.0158L44.6186 15.3521L45.0194 15.2806L45.1285 15.2201L48.456 14.6963L48.8399 14.6655H48.8608Z\" fill=\"black\"/>\n<path d=\"M64.5863 56.7326L66.1697 56.9023L66.2848 56.9618L66.7759 57.062L68.3771 57.7386L68.5081 57.8487L68.6718 57.8963L70.2582 58.9073L70.4209 59.0819L70.5429 59.1295L71.8475 60.3498L71.914 60.5016L72.0459 60.5661L72.9735 61.7566L73.0351 61.9342L73.1918 62.1177L73.4587 62.713L73.5579 63.1674L73.6025 63.2586L73.6898 64.2567L73.6958 64.3926L73.6809 64.6049L73.55 65.5107L73.4994 65.603L73.4359 65.8956L73.1035 66.6258L72.8942 66.8679L72.8317 67.0227L72.5777 67.2856L72.4547 67.7479L72.4071 67.8203L72.3743 67.981L71.7146 69.5833L71.5945 69.7291L71.5419 69.9057L70.536 71.4326L70.3435 71.6091L70.2939 71.7282L69.0171 73.0159L68.8454 73.0874L68.777 73.2223L68.1867 73.6588L67.7144 73.8146L67.3523 74.0378L65.7957 74.3761L65.3284 74.4277L65.1766 74.4227L63.4434 74.2987L63.3105 74.2352L62.6269 74.0745L61.1775 73.3523L60.8203 73.0259L60.6189 72.9405L59.4423 71.7272L59.354 71.5109L59.0623 71.1746L58.2518 69.4176L58.2071 69.2202L58.1436 69.1259L57.9006 68.2598L57.8639 68.0029L57.8401 67.9552L57.591 65.8103L57.5771 65.5772L57.5871 65.3798L57.8024 63.2666L57.8371 63.1981L57.8976 62.837L58.5861 60.8161L58.7925 60.5403L58.8877 60.2605L59.9929 58.82L60.2261 58.7059L60.3401 58.4728L61.5644 57.5233L61.8124 57.438L62.0624 57.2396L62.8055 56.9479L63.2659 56.8596L63.3591 56.813L64.1419 56.7316L64.3631 56.7207L64.5863 56.7326ZM63.8323 60.9064L63.5803 60.959L62.9266 61.4054L62.2579 62.3836L61.7073 63.9422L61.483 65.6526L61.5793 67.4344L61.6983 67.8669L62.3868 69.0009L63.1656 69.616L64.1429 69.9712L65.1975 70.12L66.2422 69.8412L66.515 69.741L67.4009 69.0148L68.1182 67.8898L68.6579 66.5981L68.8256 65.9244L68.9813 65.6863L69.0855 65.3341L69.3762 64.8897L69.5458 64.3172L69.9774 63.7031L69.4179 63.2031L68.1152 62.336L66.7422 61.587L65.3532 61.1693L64.1716 60.8895L63.8323 60.9064Z\" fill=\"black\"/>\n<path d=\"M88.684 29.0846L88.7813 29.2116L88.8864 29.2562L88.9727 29.4646L89.2515 29.8306L89.3706 30.1561L89.3745 30.1799L89.3815 30.1898L89.5432 30.6581L89.5472 30.6838L89.5541 30.6938L90.8289 34.6384L90.8438 34.7316L90.8647 34.7634L91.6325 37.9827L91.6415 38.0611L91.6524 38.08L91.9808 39.9124L91.9877 39.9937L91.9947 40.0066L92.2348 41.9769L92.2417 42.0831L92.2447 42.09L92.456 46.0435L92.458 46.107L92.459 46.108L92.4858 48.0367L92.4867 48.0605L92.4858 48.1141L92.3469 52.1846L92.3449 52.1896L92.3389 52.2908L91.9629 55.9655L91.954 55.9844L91.9421 56.1074L91.2337 59.7167L91.198 59.7762L91.1673 59.9548L90.7873 61.0193L90.9321 62.2019L91.9748 66.587L93.0542 69.4561L93.4967 70.0762L93.6048 69.9651L94.6555 69.5206L95.5156 69.7994L96.0444 70.5216L96.2339 71.0871L96.3321 71.6804L96.2637 72.1745L96.094 72.7856L95.9194 73.0416L95.8192 73.3551L95.5394 73.7479L95.2874 73.8779L95.2567 73.9712L95.2309 73.99L95.1535 74.1487L94.8747 74.364L94.5602 74.4712L94.2596 74.6875L93.9303 74.7936L93.2636 74.8988L92.0631 74.5317L91.1722 73.9295L90.8389 73.5604L90.568 73.3025L89.4638 71.5445L89.3973 71.3173L89.2694 71.1496L88.0769 67.9114L88.0392 67.7041L87.9935 67.6316L87.8497 66.9818L86.3288 68.9749L86.2107 69.0335L86.1502 69.1744L85.0182 70.2627L84.8724 70.3212L84.8158 70.4294L83.9448 71.0474L83.8168 71.0891L83.6997 71.1943L82.6312 71.7191L82.3306 71.7905L82.2046 71.8669L80.4208 72.232L80.0607 72.2697L79.8057 72.2509L78.8851 72.1139L78.8077 72.0713L78.5348 72.0207L77.7779 71.73L77.6211 71.606L77.4396 71.5494L76.8106 71.1149L76.7421 70.982L76.5715 70.9095L75.501 69.7944L75.4097 69.5672L75.1429 69.2121L74.5843 67.6257L74.5496 67.4253L74.5158 67.3667L74.368 66.5165L74.3482 66.2923L74.3432 66.2824L74.3154 65.3697L74.3145 65.3181L74.3264 65.1246L74.5446 63.2991L74.5605 63.2684L74.5813 63.1017L74.7926 62.2406L74.8204 62.1989L74.8383 62.0908L75.1786 61.1205L75.4236 60.7951L75.5238 60.5213L76.0209 59.9339L76.1578 59.8704L76.2203 59.7315L76.9405 59.1035L77.1221 59.0351L77.3473 58.8327L78.9605 58.042L79.3127 57.9597L79.4466 57.8823L81.2988 57.5559L81.6113 57.5281L81.6471 57.5291L83.6164 57.5688L83.6362 57.5767L84.1174 57.6501L85.9935 58.2335L86.1056 58.3138L86.2901 58.3605L86.3744 58.4061L86.1522 56.657L86.1443 56.537L86.1393 56.5261L85.7335 50.4881L85.7296 50.385L85.7286 50.383L85.5778 42.2984V42.2587V42.2349L85.6522 35.9807V35.9797L85.6551 35.8884L85.9111 31.5837L85.927 31.5509L85.9677 31.2364L86.0996 30.7414L86.1314 30.3763L86.2077 30.2225L86.3516 29.6997L86.4379 29.5538L86.5768 29.4755L86.5996 29.4298L86.672 29.2562L87.7792 28.7969L88.684 29.0846ZM80.4248 61.3179L79.3365 61.9767L78.9505 62.3725L78.6093 62.8755L78.5626 62.9172L78.5487 62.9579L78.0646 63.5898L77.8731 64.0293L77.5656 65.5314L77.5259 66.2159L77.5656 66.7169L78.0328 67.7765L78.6876 68.4799L78.9803 68.6158L79.4446 68.7527L79.9416 68.7845L81.28 68.5126L82.0032 68.1436L82.6411 67.6614L83.5688 66.7387L85.1611 64.5403L86.4111 62.2743L86.2117 62.1225L84.921 61.5114L83.3088 61.179L81.7205 61.0332L80.4248 61.3179Z\" fill=\"black\"/>\n<path d=\"M103.161 53.9496L104.438 54.146L104.716 54.3008L105.244 54.4595L106.135 55.0488L106.808 55.783L106.815 55.8128L106.833 55.8316L107.289 56.7235L107.538 57.7434L107.529 57.9349L107.481 58.5004L107.452 58.5599L107.395 58.9389L107.018 60.1711L106.932 60.2931L106.882 60.5034L106.133 61.9499L106.009 62.0818L105.965 62.2148L104.81 63.7634L104.596 63.8696L104.487 64.1027L102.103 66.0909L101.958 66.1435L101.792 66.3022L100.225 67.1495L100.04 67.1961L99.9299 67.2765L98.8961 67.6128L99.2821 69.1208L99.7384 69.7528L100.253 70.0157L101.523 70.0831L103.154 70.0325L103.879 69.8172L104.449 69.7329L104.512 69.7031L105.256 69.6555L106.004 69.3976L107.088 68.8251L107.521 68.717L107.7 68.6138L108.972 68.3876L109.244 68.3628L110.311 68.8053L110.753 69.8718L110.494 70.7161L109.761 71.8014L109.512 72.0266L109.27 72.3074L108.15 73.1199L107.3 73.7718L106.673 74.4136L106.28 74.5793L105.51 75.124L104.446 75.4553L104.342 75.4712L104.306 75.495L102.275 76.0268L101.488 76.131L100.774 76.0447L98.8078 75.5665L98.2423 75.2014L97.6957 75.0049L96.2899 73.8481L95.9377 73.3987L95.7115 73.1775L94.7353 71.5604L94.5795 71.0068L94.4079 70.7191L93.9624 68.4501L93.9128 67.9541L93.9158 67.835L94.0031 66.0234L93.8672 65.6703L94.0398 65.2536L94.0448 65.1603L94.0626 65.1206L94.1231 64.6603L94.8563 61.938L94.8871 61.8923L94.9059 61.7832L95.4337 60.3199L95.5597 60.1552L95.6232 59.9349L97.0677 57.6124L97.2473 57.4408L97.2979 57.3148L98.9666 55.525L99.1789 55.4328L99.2672 55.2621L100.001 54.7403L100.228 54.6679L100.429 54.5072L101.379 54.1292L101.894 54.029L101.979 53.9883L102.694 53.9327L102.857 53.9258L103.161 53.9496ZM102.632 57.9656L102.067 58.1859L101.686 58.42L100.409 59.8109L99.3783 61.8775L99.0073 62.9539L98.9319 63.8299L99.6482 63.2644L101.659 61.2018L102.616 59.9905L103.032 58.9914L103.143 58.2394L103.129 58.0698L103.122 58.039L102.748 57.9517L102.632 57.9656Z\" fill=\"black\"/>\n<path d=\"M164.073 11.0718L165.386 11.1343L165.391 11.1363L165.462 11.1393L167.619 11.3318L167.728 11.3853L168.198 11.4935L168.627 11.7018L169.374 11.8099L169.431 11.8407L169.645 11.8774L170.252 12.0927L170.421 12.2217L170.61 12.2822L170.752 12.4737L170.952 12.6255L171.016 12.8288L171.144 13.0005L171.263 13.3447L171.348 13.8368L170.915 14.8825L169.869 15.315L169.007 15.0372L168.694 14.6166L168.689 14.6146L168.264 14.5223L167.954 14.6146L167.752 14.6444L167.707 14.6702L165.687 14.9658L164.556 15.2783L164.518 15.2833L164.506 15.2912L160.895 16.2228L156.072 17.7268L153.93 18.5205L153.927 18.5215L151.229 19.5761L151.186 19.584L151.166 19.5989L148.992 20.4025L144.142 22.5931L141.689 23.8382L139.766 24.9275L137.626 26.25L134.468 28.761L132.222 31.5676L132.153 31.6232L132.134 31.6718L131.012 32.9357L130.461 33.8862L129.977 35.2364L129.785 36.3575L129.882 37.7176L130.101 38.8318L130.648 40.2902L131.281 41.4777L132.334 42.942L133.347 44.0453L134.89 45.3905L136.654 46.6287L140.792 48.6734L140.793 48.6744L145.673 51.0693L151.505 53.501L157.284 55.5913L159.867 56.4217L159.889 56.4376L159.933 56.4455L165.377 58.4059L165.47 58.4773L165.626 58.514L169.791 60.5994L169.938 60.7334L170.095 60.784L171.818 62.0172L171.981 62.2047L172.095 62.2513L173.152 63.296L173.228 63.4775L173.518 63.7632L174.304 65.0758L174.427 65.5193L174.582 65.7673L174.888 67.1185L174.949 67.6483L174.932 67.933L174.787 69.1097L174.756 69.1702L174.713 69.4619L174.268 70.9788L174.172 71.1167L174.113 71.3647L173.474 72.6128L173.278 72.8231L173.212 73.0106L172.029 74.463L171.851 74.6039L171.81 74.6952L170.449 75.9601L170.288 76.0226L170.075 76.2449L166.392 78.5138L166.141 78.5852L165.958 78.7281L161.322 80.4702L161.084 80.5149L160.997 80.5694L156.267 81.6697L155.937 81.7084L155.896 81.7282L150.799 82.1538L150.585 82.1637L150.457 82.1598L145.93 81.9266L145.896 81.9107L145.505 81.8661L140.898 80.8105L140.846 80.7778L140.702 80.7549L138.393 79.992L138.369 79.9742L138.322 79.9662L136.183 79.1616L136.025 79.0376L135.811 78.9771L134.357 78.0872L131.369 76.4135L131.361 76.4056L131.351 76.4026L130.27 75.7716L129.669 75.1664L129.439 74.3172L129.934 73.1227L131.129 72.6287L131.799 72.7666L132.918 73.2497L135.981 74.4353L137.551 74.8103L137.62 74.8549L137.798 74.8867L139.847 75.6456L141.943 76.2389L146.348 76.9284L150.564 77.2122L155.313 76.8123L159.739 75.8153L164.045 74.2011L167.459 72.2298L168.558 71.335L169.453 70.2149L169.942 69.3527L170.267 68.4122L170.28 67.8755L170.13 67.1979L169.649 66.4637L168.92 65.7256L167.543 64.7583L163.641 62.9795L158.272 61.2374L158.271 61.2364L155.656 60.4L155.632 60.3832L155.584 60.3742L149.692 58.2442L149.638 58.2025L149.54 58.1817L143.632 55.5536L143.576 55.505L143.492 55.4842L138.6 52.8829L138.488 52.7767L138.367 52.738L134.463 50.0088L134.441 49.983L134.418 49.975L132.48 48.5256L132.455 48.474L132.384 48.4482L130.665 46.9759L130.625 46.8886L130.53 46.8489L129.331 45.6058L129.276 45.4699L129.171 45.4173L127.935 43.7744L127.898 43.6643L127.791 43.5562L126.995 42.1603L126.938 41.9529L126.836 41.817L126.222 40.0788L126.169 39.7723L126.125 39.6919L125.912 38.2941L125.889 37.9825V37.9538L125.913 36.2315L125.914 36.2295L125.917 36.1313L126.023 34.5806L126.033 34.5578L126.052 34.3455L126.393 32.5587L126.409 32.5319L126.421 32.4357L126.808 30.9386L126.823 30.9158L126.831 30.8593L127.398 28.9951L127.785 28.4485L127.951 28.003L130.503 25.0565L130.774 24.8531L130.952 24.6438L134.58 22.0028L134.708 21.9611L134.83 21.8401L137.187 20.4958L137.253 20.4789L137.301 20.4353L139.348 19.3856L139.378 19.3777L139.397 19.3618L141.955 18.0999L142.018 18.085L142.057 18.0522L147.03 15.8359L147.041 15.8339L147.046 15.8299L149.222 14.8607L149.357 14.8319L149.426 14.7793L152.185 13.8051L152.24 13.7951L152.262 13.7793L154.506 13.0481L154.61 13.0312L154.648 13.0064L159.628 11.6691L159.882 11.6343L159.935 11.6066L163.666 11.0907L163.97 11.0688L164.073 11.0718Z\" fill=\"black\"/>\n<path d=\"M182.516 22.6472L182.679 22.669L182.964 22.7464L183.738 23.2692L183.781 23.3992L183.85 23.4389L184.298 24.2256L184.496 24.9637L184.063 26.0094L183.832 26.1046L183.953 27.9241L183.954 27.9559L183.955 27.9579L184.102 30.7923L184.474 34.4551V34.4561L185.599 43.9962L185.605 44.0904L185.609 44.0993L186.264 53.1473L186.268 53.2753L186.269 53.2783L186.355 58.9302V58.966V58.9967L186.317 61.601V61.602L186.314 61.6913L186.062 66.1964L186.057 66.2073L186.049 66.3412L185.846 68.005L185.838 68.0199L185.832 68.1002L185.435 70.4446L185.429 70.4555L185.424 70.4971L185.28 71.2273L185.26 71.2601L185.246 71.3712L185.048 72.1014L184.566 72.8167L184.41 73.1947L184.274 73.2512L184.169 73.406L182.651 73.9229L180.892 73.1947L180.163 71.4357L180.269 70.9624L180.237 70.3156L180.236 70.2481L180.235 70.2461L180.204 68.7342L180.203 68.6875L180.4 67.7867L180.636 67.2738L180.791 66.619L181.355 65.74L181.483 65.6954L181.869 61.4274L181.951 58.9312L181.939 53.3695L181.476 44.397L180.583 34.851L180.581 34.8004L180.578 34.7964L180.321 31.0731L180.318 30.9848L180.316 30.9828L180.245 28.1017V28.0541L180.248 27.9509L180.372 25.7187L180.379 25.7018L180.397 25.5104L180.647 24.1373L180.662 24.1115L180.675 24.0173L180.801 23.5569L181.079 23.1482L181.169 22.9319L181.248 22.8992L181.311 22.8069L182.187 22.5103L182.516 22.6472Z\" fill=\"black\"/>\n<path d=\"M194.382 53.6217L194.953 55.0007L194.685 55.9869L194.278 56.6804L194.144 56.8133L194.102 56.9334L192.893 58.4175L192.83 58.4473L192.8 58.5237L190.178 61.3363L189.003 62.629L188.926 62.754L190.222 62.5179L190.261 62.5149L190.268 62.51L191.503 62.3165L191.726 62.2986L191.731 62.2966L193.602 62.2649L194.23 62.2361L194.31 62.2341L194.747 62.2907L196.239 62.6826L196.318 62.7352L196.49 62.7709L197.94 63.3999L198.09 63.5269L198.26 63.5794L199.395 64.3612L199.639 64.636L199.767 64.6936L200.483 65.5091L200.621 65.8761L200.934 66.3305L201.15 67.0667L201.178 67.2631L201.207 67.3127L201.349 68.1411L201.381 68.5082L200.766 69.9934L199.282 70.6085L197.906 70.0965L197.204 68.8157L197.126 68.286L196.969 67.9615L196.612 67.3772L195.923 66.7482L194.897 66.0547L193.69 65.5567L193.384 65.4495L191.874 65.4624L190.735 65.6192H190.733L189.009 65.8851L188.948 65.89L188.939 65.894L187.95 66.0051L187.861 66.0111L187.856 66.014L187.084 66.0577L187.047 66.0587L187.046 66.0597L186.541 66.0785L186.47 66.0795L185.58 65.8494L185.29 65.6896L185.14 65.5428L184.643 65.0924L184.468 64.8325L184.111 63.6717L184.131 63.387L184.244 62.5734L184.352 62.376L184.487 61.8522L185.367 60.2549L185.465 60.1557L185.498 60.0495L186.644 58.4503L186.852 58.2717L186.901 58.1526L189.656 55.466L191.001 54.1277L191.115 54.0811L191.16 53.9848L191.773 53.4888L193.004 53.0513L194.382 53.6217Z\" fill=\"black\"/>\n<path d=\"M207.945 56.0907L208.983 56.2644L209.394 56.4985L209.87 56.6671L210.558 57.2257L210.634 57.3864L211.155 58.0561L211.475 58.9004L211.609 59.6296L211.601 59.82L211.483 61.0661L211.422 61.1881L211.304 61.7278L210.686 63.0712L210.563 63.212L210.513 63.3698L209.546 64.7627L209.2 65.0692L209.139 65.1952L207.906 66.1774L207.716 66.2439L207.513 66.4215L206.344 66.9741L205.492 67.1685H205.478L205.468 67.1675L205.477 67.2727L205.744 68.1527L206.032 68.5267L206.29 68.6983L207.159 68.866L208.245 69.0426L209.602 68.7073L211.23 67.9543L212.827 66.978L214.151 66.601L214.676 66.6566L214.794 66.6824L215.101 66.611L215.47 66.5683L216.601 67.0366L217.068 68.1666L216.836 68.997L216.667 69.2748L216.652 69.4067L216.531 69.6408L216.342 70.3611L215.951 70.7659L215.834 70.9921L215.672 71.0546L215.468 71.2649L213.745 72.3225L213.593 72.3661L213.477 72.4673L211.514 73.3781L211.246 73.4376L211.117 73.5249L209.057 74.1033L208.938 74.1192L208.903 74.141L207.282 74.5011L206.64 74.5736L205.858 74.4654L204.414 74.0577L204.116 73.8533L203.688 73.7283L202.545 73.0011L202.533 72.9892L202.52 72.9852L202.431 72.88L201.602 71.9971L201.566 71.8572L201.486 71.7629L200.919 70.4762L200.754 69.7063L200.692 69.5783L200.573 67.9245L200.566 67.739L200.596 67.361L200.914 65.3093L200.931 65.2806L200.944 65.1575L201.473 62.8886L201.536 62.7904L201.583 62.5563L202.509 60.3607L202.582 60.2714L202.616 60.1494L203.661 58.3458L204.047 57.9608L204.116 57.814L205.277 56.8656L205.581 56.7574L205.906 56.5223L207.029 56.1612L207.629 56.0649L207.945 56.0907ZM206.949 60.577L206.181 61.9094L206.035 62.4541L206.286 62.207L207.053 61.1872L207.422 60.2923L207.456 60.0839L206.949 60.577Z\" fill=\"black\"/>\n<path d=\"M229.321 32.7695L229.455 32.9243L229.572 32.9729L229.584 33.0007L229.868 33.1098L230.126 33.3429L230.611 34.4382L230.243 35.3261L230.286 35.9482V35.9492L230.912 43.7987L230.916 43.8899L230.918 43.8949L231.418 56.06L231.42 56.1662V56.1702L231.413 60.579L231.412 60.58L231.407 60.7418L231.008 66.5743L230.986 66.6199L230.937 67.0069L229.87 71.1489L229.752 71.3265L229.671 71.632L229.4 72.1102L229.159 72.3543L229.096 72.5071L228.947 72.5696L228.718 72.8007L227.752 73.0636L226.408 72.5071L225.852 71.1638L225.853 71.132L225.861 70.5913L225.862 70.5883L225.865 70.4862L226.158 66.2261L226.534 60.4957L226.527 56.186L226.344 44.0249V43.9892V43.9415L226.508 36.0454L226.51 36.0404L226.52 35.8708L226.709 34.2309L226.906 33.8529L227.092 33.335L227.299 33.082L227.366 33.0503L227.398 32.9729L228.486 32.5225L229.321 32.7695Z\" fill=\"black\"/>\n<path d=\"M228.436 54.7432L230.731 54.8394L230.74 54.8434L230.89 54.8513L235.738 55.3752L235.82 55.4168L236.214 55.4863L237.865 56.0845L238.222 56.3603L238.421 56.4427L238.464 56.5459L238.591 56.6441L238.875 57.538L238.542 58.4983L238.454 58.5549L238.421 58.6342L238.167 58.7394L237.695 59.044L236.016 59.4567L235.693 59.4964L235.655 59.5142L230.811 59.8664H230.81L228.559 60.0569L228.49 60.0599L228.486 60.0629L225.149 60.2652L224.379 60.3803L223.975 60.4111L223.751 60.4012L222.988 60.3357L221.114 60.5182L220.874 60.5311L219.551 60.1293L219.415 60.039L219.347 60.0152L218.929 59.6997L218.697 59.6045L218.651 59.4904L218.513 59.3872L218.186 58.3693L218.546 57.3068L218.705 57.0985L218.918 56.7899L219.033 56.6877L219.066 56.5994L219.245 56.4992L219.753 56.0468L220.295 55.9119L220.5 55.7968L222.415 55.4922L223.168 55.2561L223.819 55.1549L223.868 55.1321L224.695 55.0984L228.041 54.7551L228.324 54.7402L228.436 54.7432Z\" fill=\"black\"/>\n<path d=\"M243.545 58.1536L244.466 58.3689L244.691 58.5118L245.014 58.611L245.352 58.8402L245.979 59.0743L246.663 59.608L246.93 60.4553L246.497 61.501L245.451 61.9335L244.841 61.8016L244.483 61.6399L244.439 61.6468L243.775 61.8393L243.298 62.0565L242.648 62.5169L242.072 63.1052L241.184 64.6509L240.795 65.6479L240.673 66.4803L240.734 67.0805L240.927 67.5081L241.316 67.9417L241.893 68.277L242.925 68.6262L244.448 68.8495L246.354 68.9258L248.948 68.7631L251.489 68.3137L251.666 68.2978L251.687 68.2879L253.898 68.0994L255.33 67.8206L255.637 67.7899L255.907 67.8137L256.26 67.8752L256.597 67.897L257.37 68.2641L257.688 69.0657L257.214 70.0072L256.991 70.1719L256.788 70.3951L256.618 70.4696L256.231 70.785L254.8 71.3773H254.798L252.687 72.2712L252.412 72.3278L252.307 72.3932L249.67 72.9677L249.535 72.9825L249.508 72.9974L246.715 73.4042L246.454 73.423L246.444 73.428L244.299 73.4895L244.23 73.4905L244.053 73.4836L242.171 73.3407L242.115 73.3129L241.697 73.2544L240.192 72.8188L239.901 72.6165L239.521 72.4994L238.451 71.7722L238.261 71.5609L237.971 71.3357L237.125 70.3237L237.001 69.9834L236.709 69.5965L236.31 68.4715L236.184 67.7502L236.173 67.7244L236.151 66.4674V66.4277L236.186 66.0319L236.429 64.6658L236.46 64.6142L236.487 64.4306L236.922 62.9802L237.165 62.6339L237.289 62.2659L238.642 60.492L238.898 60.2787L238.951 60.1656L239.926 59.3332L240.092 59.2717L240.289 59.0822L241.313 58.5257L241.694 58.4284L241.875 58.3183L242.7 58.1457L243.106 58.103L243.545 58.1536Z\" fill=\"black\"/>\n<path d=\"M257.572 33.7668L257.63 33.8541L257.707 33.8859L257.8 34.1101L258.075 34.5228L258.23 35.1052L258.275 35.4435L258.308 35.5L258.599 37.1648L258.623 37.4287L258.361 38.0597L258.363 38.1093V38.1103L258.537 43.7166V43.7444H258.538L258.675 51.325V51.3637V51.3826L258.564 64.1757L258.79 63.7937L259.047 63.5407L259.105 63.4088L259.976 62.6161L260.109 62.5645L260.285 62.3959L261.059 61.9712L261.835 61.7708H261.845L262.224 61.7728L262.238 61.7788L262.955 61.9583L263.342 62.1657L263.39 62.2471L263.551 62.3016L264.391 62.9544L264.469 63.1141L264.636 63.1935L265.941 64.759L267.657 66.6361L268.012 66.9456L268.802 67.273L269.3 68.4745L269.123 69.2314L269.004 69.4715L268.967 69.5112L268.953 69.5628L268.822 69.789L268.746 69.8644L268.563 70.3059L267.062 70.9269L265.795 70.5073L265.631 70.3852L265.599 70.3208L265.561 70.3059L265.539 70.2523L265.419 70.2027L264.778 69.5727L264.71 69.409L264.447 69.1471L263.086 66.8256V66.8246L262.1 65.1946L262.04 65.1281L261.714 65.5458L259.484 70.5797L259.43 70.6432L259.407 70.7315L258.916 71.6164L258.87 71.6631L258.854 71.7186L258.581 71.9597L258.144 72.4062L258.041 72.4349L257.965 72.5014L257.573 72.6879L256.62 72.9052L255.247 72.422L255.092 72.298L255.076 72.2653L255.067 72.2623L255.038 72.1889L254.912 72.1363L254.25 70.539L254.251 70.5073L254.336 64.4495L254.516 51.334V51.327L254.653 43.7424L254.654 43.7404L254.656 43.669L254.976 38.0606V38.0597L255.127 35.4286L255.141 35.3998L255.178 35.1161L255.338 34.5129L255.613 34.1032L255.703 33.8859L255.78 33.8541L255.838 33.7668L256.705 33.4712L257.572 33.7668Z\" fill=\"black\"/>\n<path d=\"M273.784 59.0674L275.139 59.1637L275.216 59.2004L275.713 59.2966L276.821 59.7421L277.159 60.0169L277.401 60.1101L278.134 60.7798L278.243 61.0268L278.696 61.6489L278.966 62.4674L279.074 63.1291L279.07 63.2442L279.021 64.1321L278.975 64.2293L278.827 64.906L278.476 65.6629L278.17 66.0131L278.08 66.2364L277.419 66.9189L277.136 67.039L276.582 67.4537L275.022 67.9963L274.483 68.0896L274.437 68.1104L272.501 68.1948L272.42 68.1967L272.216 68.1848L271.985 68.1581L272.054 68.2781L272.791 68.7861L273.912 69.2196L275.104 69.3942L276.203 69.298L277.489 68.8317L278.527 68.6462L279.232 68.7553L280.133 68.1848L281.627 66.6511L282.814 66.151L283.985 66.6362L284.47 67.8069L284.179 68.7444L282.84 70.6968L282.743 70.7474L282.691 70.8843L281.617 72.0719L281.436 72.3209L281.373 72.5253L281.023 73.0174L280.856 73.4946L280.546 73.689L280.309 74.0234L279.686 74.2297L279.196 74.5373L277.493 74.9301L276.829 75.0065H276.773L274.964 74.9708L274.947 74.9639L274.427 74.9073L272.615 74.5105L272.31 74.322L271.791 74.1742L270.242 73.2217L269.915 72.8805L269.475 72.4826L268.527 71.0758L268.452 70.8338L268.293 70.6343L267.668 69.04L267.541 68.3753L267.52 68.3277L267.489 67.3733L267.488 67.3068L267.551 66.8118L267.65 66.4338L267.388 65.9873L267.82 64.9417L267.934 64.895L268.051 64.1569L268.1 64.0706L268.155 63.7879L268.87 62.0199L269.027 61.8275L269.092 61.632L269.647 60.8989L269.821 60.8125L269.911 60.6221L270.49 60.13L270.65 60.0715L270.84 59.8978L271.478 59.5754L271.753 59.5089L271.883 59.4276L273.221 59.1141L273.654 59.0635L273.784 59.0674ZM272.815 62.8682L272.615 62.9714L272.313 63.2184L272.004 63.6043L271.539 64.6758L272.133 64.645L273.586 64.2422L274.587 63.6857L274.775 63.5041L274.843 63.3523L274.871 63.2105L274.811 63.136L274.374 62.9148L273.598 62.771L272.815 62.8682Z\" fill=\"black\"/>\n<path d=\"M294.602 53.9937L295.516 54.2248L295.712 54.3548L296.021 54.4421L296.287 54.7328L296.5 54.8727L296.552 55.0205L296.691 55.1733L296.772 55.33L296.794 55.4223L296.838 55.4779L296.902 55.6356L297.023 56.2517L296.873 56.9333L296.729 57.2458L296.641 57.4571L296.29 57.8797L296.23 58.0087L294.376 59.5584L293.425 59.9036L292.38 59.4711L292.114 58.8272L290.383 59.5713L289.182 60.3133L288.465 60.8124L288.211 61.2191L288.058 61.6963L288.047 62.1289L288.208 62.6616L288.617 63.2797L289.811 64.4375L291.521 65.4812L295.665 67.5646L296.053 67.9218L296.233 68.0021L296.718 68.5408L296.945 69.1311L297.224 69.6867L297.289 70.3435L297.3 70.5528L297.058 71.5211L296.622 72.3445L296.238 72.7483L296.158 72.9279L294.924 74.0113L294.804 74.0559L294.66 74.2087L292.332 75.684L292.184 75.7276L292.068 75.8278L290.646 76.4756L290.47 76.5143L290.384 76.5759L288.777 77.0709L288.372 77.1334L288.317 77.1592L287.404 77.2287L287.246 77.2356L286.423 77.059L286.281 76.9955L286.035 76.7832L285.828 76.7078L285.709 76.5034L285.442 76.2723L285.298 75.7921L285.148 75.5312L285.119 75.3665L285.087 75.0113L285.661 73.6224L287.05 73.047L287.47 73.163L287.661 73.1313L288.95 72.6878L290.144 72.0568L292.28 70.7393L292.586 70.4685L289.653 69.0865L289.569 69.0121L289.463 68.9813L287.492 67.762L287.295 67.5567L287.158 67.5011L285.642 66.0368L285.587 65.9058L285.363 65.6995L284.671 64.6568L284.594 64.4018L284.444 64.2024L284.056 63.1021L283.95 62.488L283.936 62.4573L283.91 61.3977L283.909 61.3441L283.94 60.986L284.126 59.9225L284.287 59.6447L284.436 59.1397L285.084 58.1347L285.303 57.9313L285.36 57.7944L286.333 56.8142L286.537 56.7299L286.866 56.4174L288.293 55.6465L288.429 55.6118L288.517 55.5404L291.016 54.5175L291.349 54.451L291.461 54.3855L293.709 53.9669L294.097 53.9302L294.602 53.9937Z\" fill=\"black\"/>\n<path d=\"M167.258 90.9404L177.004 91.0972L177.03 91.0982L182.405 91.3075L187.391 91.5059L187.393 91.5069L187.415 91.5079L192.572 91.8234L192.573 91.8244H192.586L202.963 92.6101L207.468 92.8889H207.469H207.48L223.376 94.0755L233.939 94.6221L239.416 94.8047L244.811 94.9436L255.818 94.9207H255.821L261.927 94.9188L267.228 94.7253L272.805 94.3999H272.806L278.076 94.0626L278.16 94.0606L279.05 94.4287L279.418 95.3186L279.082 96.1747L278.254 96.5736L272.984 96.9684L272.972 96.9694H272.971L267.384 97.3514H267.369L267.368 97.3524L262.038 97.6698L262.013 97.6708L262.012 97.6718L255.89 97.9377L255.822 97.9387H255.819L244.79 97.9159H244.765L239.34 97.8117H239.339L239.306 97.8107L233.809 97.5786L233.807 97.5776L233.773 97.5766L223.186 96.8543L223.185 96.8533L223.165 96.8524L207.266 95.4743L207.264 95.4733L207.247 95.4723L202.766 94.9961L192.404 94.2203L187.263 93.877L182.307 93.5893L176.964 93.4336L167.238 93.3701L157.519 93.4356L147.86 93.7947L138.875 94.3691L134.524 94.7531L134.495 94.7541L134.493 94.7551L130.101 95.0695L114.201 96.4109L114.174 96.4119L114.172 96.4129L110.072 96.6976H110.07L106.774 96.9446L106.754 96.9456L106.753 96.9466L103.144 97.1807L103.114 97.1817L103.112 97.1827L99.952 97.3355L99.9282 97.3365H99.9272L96.9132 97.4436L96.8655 97.4446H96.8646L88.6827 97.5052H88.6698H88.6658L85.9663 97.4972H85.9604L76.7031 97.4367L74.6137 97.4228H74.6008L72.4837 97.3891L70.6493 97.4099H70.6314H70.6245L63.8336 97.3821H63.8326L63.7403 97.3792L60.5854 97.1807L60.5676 97.1718L60.386 97.154L57.7193 96.6341L57.6915 96.6172L57.5992 96.6043L54.7826 95.7878L53.4284 95.5061L52.5951 94.9951L52.2617 94.0606L52.6943 93.0149L53.7399 92.5824L54.0415 92.6131L55.4563 92.9088L55.4771 92.9217L55.5436 92.9306L58.3125 93.7064L60.8384 94.0209L63.901 94.2084L70.6533 94.3017H70.6543L70.6691 94.3027L72.5115 94.3473L74.6346 94.3622L76.714 94.3721L85.9643 94.3374H85.9663L88.6549 94.3294L96.809 94.1945L99.7982 94.0824L102.944 93.9187H102.951L106.564 93.7382L109.857 93.5477L113.941 93.2481H113.943L129.869 92.0506L129.877 92.0496H129.878L134.27 91.7301L134.313 91.7282L134.315 91.7272L138.701 91.5268H138.713V91.5258L147.741 91.1756L147.77 91.1746H147.771L157.469 90.997H157.485L167.231 90.9404H167.238H167.258Z\" fill=\"black\"/>\n</g>\n<defs>\n<clipPath id=\"clip0\">\n<rect width=\"1500\" height=\"1000\" fill=\"white\" transform=\"translate(-422 -433)\"/>\n</clipPath>\n</defs>\n</svg>"},"relativePath":"code_sketches.svg"},{"fields":{"contents":"�PNG\r\n\u001a\n\u0000\u0000\u0000\rIHDR\u0000\u0000\u0002\u0000\u0000\u0000\u0002\u0000\b\u0006\u0000\u0000\u0000�x��\u0000\u0000\u0000\u0001sRGB\u0000��\u001c�\u0000\u0000\u0001YiTXtXML:com.adobe.xmp\u0000\u0000\u0000\u0000\u0000<x:xmpmeta xmlns:x=\"adobe:ns:meta/\" x:xmptk=\"XMP Core 5.4.0\">\n   <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n      <rdf:Description rdf:about=\"\"\n            xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\">\n         <tiff:Orientation>1</tiff:Orientation>\n      </rdf:Description>\n   </rdf:RDF>\n</x:xmpmeta>\nL�'Y\u0000\u0000@\u0000IDATx\u0001�]\u0007|\u001c��֝eI�r��\fr0\u00180؀���@\u0012Z�`L��[B\t!@\u0002!��\u0003�ދ\t\u0004BL\u0007\u0013\bƀ�\u0018\u0017�e[�r�d˒�,���[ݬfwg��I{w�~?iwgfgg��fޛ7-��?F�\u0011�:\u00021$�gQQѠ��ݺu\u001b�H$\u0006�m`,\u0016\u001b���2\u0010���\u0013~\u0005��ͅ�/@x��\u0002�\u0017���\u0017���G\\�x'���Ԍx�\u000b\n\n����[[[��]�Y�ý\u0019�l�_\u0015��#�*��okkӮ\b[գG��+W���?�\u0018\u0001F �\bPÒ���I�����8>��\u000fw2�/\u0005}��ݪ{��e\u0010����x\u0019\u0004t\u0019d�P\u0012�\u0010�Bؓ�Θ\u001f��F�i=�S�<T!/��<T@\tY\n��޽{/]�f�rdh�K�2�|]�g���r�g!��CJ|��\u0003��?��n旧N��jv������1~^ْ��\t|�?~����R\b��D��,/���\u0010�e�5�B��\u0004�\b�8�z�\u001d�ȅl�2P\te�\u0002J�R��b˖-K�,,��P�aÆU(�69�\\?d4��3�~�s��kF��9��\r���\u000e<��n�����}��IL�>����?����3��\u0013I��\u000e\f�`�\u0019�}\u001c��\u000b�v��\u001f\u000b\u0001�Ú\u0005vqC\u0000J�����yݻ��\u0016\u0014\u0014�I$�1��-\u0014�j�wM��䋔FN\u001f�\u0012\u001d\\oC�.�]?�\u0011 6a|TL�]T�ĬY�Z\u0010$����\u0018�\u000ez��E���n\u000f��8\b��!�ơ';\u000ec��\\S�\u0001RF\u0000x��b5\u0007�oa-�\u0003�k\u000e�\u0005\u000b\u00111�O0���\u0017s��gN\u001f�\u000f�\u000fn���E\u0017�n_M��F�\u001e]PZڢ�WY��(//��\u0017H�s|��G�Q���_\f�~\u001b\b��`��\u000f����~{������M\u001a\u0018k\r< �\u0011;�ׁ��\u001d\u0014�-(�\u0005P\ff@\u0011�\u001f���cP���;�W�>�����\u0015�)\t��a�/϶\u0011S$\u0003f��¦��XSS�oa᪔�?���)xf��Y���,��I�c��~�n�\u000b�?X$\n�E�Z����x\u0006p����\u0006��\u001d�ǡ��*s.\u0014�<(nk���fl�\u0010�R\u0010�ѷ����\u000b�\u0010.Pg��+n��32��ګ��o�JL�ɻd,\u000e3}\u0011&���a\u0002%�#�3L�q�Gxs|�����k��R__߿��fo\b��1!oO$��|ϸo\u0017�R�?�5/��?�\u0017>~��M\rh�>G9�\u000fe�?\f\u001b��u\u0003��~i��0��\u0002\tOW.���G\f\u0013\b�p��\u0005�\u0003��q���@oH\u000f�1�Ĝ9s\u001a�N ���1~\u000e|3{��?��\u000b7m�>\u0000�≉D�C�e��\u0007a\u001d�V�8�i��,��;t!~\t�#�\n\\x\u000bixs���31���2ɿP���9>�\u001f2�����6����$�E\u0001�>ޣG�����\u0015�͛7�6�\b$�ǎ\u001d۳w隸�5�'��t�3~��7bĈҺ�����?\u0002��P����h���p��Ba휰�o���\b��\u001d�'x\u000b�>o�:�����&\u0015\u0014�Wђ��\u0004B*�\u001f��Gm�\u00008�\u0001��Eb�KKq,?�&����k�ѽ[Z�b��8��IU��6��y�_A�~��Cc~8L���!�\tf�<�'C��_F��>E�j�<�����?\u0001�<N��b^���V�z����{}������fn�,�h���U��6�\u0010�<A����f�\u0000h\u0013\u0018��;��IXϜYN\u0013h\u0002��ۅW�>�����\u001b�{�21~v�+--\u001d�����;\u0012\u0013�\u000eACޛ�\u0014��\"(l\f\u0005���0��(��[Z\u0012�aEA����ރb�/(��a�@��\u0000�\u001f����pf��7t�`\u0002+f/��[W(�?}Q9\u0007@�\u00140F\u0010߼ys\u001c=$Mh�����\u0002�<\u0019��z�L����\u0017C�\u001f�ɩ'�zXr&�%N\u0016��\u0014��r�0K\f���\u00162�Ұa�^_�pa�!3�\u0007�|6�f���2aK\u000e��6a\u0012\u001d�\u0004��[��W\u001bd{����ȓ/jc\u0004}�Tukj\u001a\u0016#\u0005��S���=��(Hi��ڸ�\u00193�\u000f̲�D\u0004'B��\fW�uy�d���ߎl*w�|�ũ\u0011&�i\u0018jz\t�L�@�tP����Y\u0004�x��X�{��\u0016L��Gw�z�j#\u0005��v`��i�A\u0001�����֭���l��\u0002\u0000R�RY����\u000f�:5n=������D�a\u001d��~�$\u0012���6�.ѱ2\u0001�2���V�\u0006�T�\u0002e�\u001e��\u001b\r\r\r/b\u000f�����t��S�#<�)��tuj\u000fؒ�\u000e�6\u0001����\tR\u0000 ��̛��䤃\u0005�,Y\u0012�I�\u0000ЋӧW�&\u0003\f6���c�������\u001c�7�b�X�����_@��t.\u0002�o���16�$\u0010\u001e,�ͬ�\u0006�6��5O��/zaȐ�\u000f{�,h�9T�x�|�=\r�=%Li�\u001d)\u0000\u0003\u0006lj�<�-��9\u0000�N��\"@/���/\u0017^\b���=��k+G��5���V������>��&Zz���ga�,\b�&���\u000b�Ǯ�ǯZU���y�#X��؊\u0015+*��\ra�=���\u000fet��ŉ^�M�T��z|]\u0001�%\u0002f3\u0001\u0005���?.³�K �隓�a�ւիW\u001e�lٲ64��\u0001R���cr}��Ԙ\u001b��=a\u0003\u001c�\u000f\\\u001e�26\u00128܈��0q�߃\u0006\r:��[\u001d�k���� W;?T�a�K�N��k��\u000b�\t�\u001f�\u0010@\fc\u00041�\u000e\fz�/��5U�+/���\u0011%8E��t�����K,\\�@�\u001e��k��\u0005�Vaf���{\u0004K\f�*J��SnO\u0015��u��\u0005C��n���\u0005@����-�f\u000f\u000b�akn�\u001a_YYY\u0011zA�`R߇MM��!�/\u0005�,��\fsyf៹�\u0016�����\u0016��\u0012L\u0018|\u0017��6\u001f\u0012+Z�}a�O4��S��M�S��\u0002@W���C\n�\u001f�\t/\u001e�k\u000f�\u0013�\r\u001e<x\b4�\u000b��?\u001f��\r4��=3\"��,�3[�ۗl�:ԃ`����V�J����@29�����5R�\u0015\n��>_��ʌ\"圾.֤���\u0011\u0002�rl��k�O!\u000b��\u0015^Z���M�|a\u0015h��=��^�z�?lX�\"�L)Zv�\u0013��>��T\u0014\u0000\u0006�'�&�f3~1�b\u000e�\u000e}W@\u0001���7\u000b�ԅ��R\\�r\"�p�f �\u0012P\u0006��tߎ���\bc?V�ln_T���\r ��*\u0000\fv\u0000�%�f+~�1�y<�\u0012\t�ݤ��k���\t�@h@��!\u0003�aN�/6\u0019�\u001c+�����_\u0015۸:�p��/vY��\u0006�GA\u0014\u0000\u0006; �I�f\u001d~\u0003\u0006\f����\u0010��`��Hs-ea�=3'���/�|�@=�sӦM�\u0001C:���˺�ŜA�3�7\u0005y�W\u0001`�S\u0000\u001b��6����\u0005\u001a�����k���#7掍�\n2�\u001b���\u0019\b��\u0011��.�|yguu���s��/\u001d�U�q~S�G�*\u00005�FW\u0006;5��\u0006?�񷴴\\\n�t9(Rl�I�\u0013\u000b/\u0016^\u001dlp�c���\u000b�\bTC��9\u0002���+y��\u000e\u001fY�^��\u0010�n���M�\b/�l꾜_���\u000bk��@��\u0012��<\u0002h�\u001e�Í���\\g\u001fn\u0018?�O��=x�\u0003~�����욚-mP\u0006��*��K\u0007�\u0010S��Z{\u001f���ϟ��E\u0001�N\u0015��{�\u00061��$�s�xr����@�r1&!��L\u001e�lt����\u000b��<k���\u0007\u000b�ύ#��/=�}�!�\u0004�\u001a[\u000e7}����\u0010f�\u001c��}ƷW\u001e�)��Z~c؆�\u001bN\u0007�#\u0005@\u0017�\u0002\r�U;O�w�&=\u001c\u000b\u0013BΏ�N�B��_�Fe1\u001a�;�Um�>�,��b���\u000f�\u001f�%\\��\u00020\u0014\u0013ro�ٳ�B�.x\u000e��n���9��+��)�r-��\t\u0013&�����s�t����\u0002\u0017�'�\u0007f�@��)���\r���hD�G\u0003}\u001f\u001a\u0015ڶ��Ǎy��9\u0001Ζ\u0004W��\u0001�\u001d|��8�|�!(�\u000b1<0�L�:P�Ln���zu�ʮ�ѣG\u0017`7V]��3a�\u0000�LPV\bMR\u000f��_���>c+\u0013\u001a��0��\u001b4\u001eSЈl��d\u0000n|;\u001a_����\u0018?�O�۽W� �(\f�=>mڴ���\u001fl\u0013oƶW�\u000f\u000b�B���$�KK[ty��K��BMS(,\u001c\u0012'\u0005\u0000��Xss~��\u0017nf�%H�o3�2����\u0011(��1��&d���/g�kc$��t��0t�ُ���\u0017`4$\u0016��\u000e��x(�_l޼yC\u0012ǌl�x{ds-�}��%?/�\u001f�\u001a�˫�/H`\"w\u0002\n�6Iɬ\u0011hc\u0004}�Tukj\u001a\u0016\u0003I4\u000b��9s\u001a\u0010=kZ�\u0018�\u001e\u0019W�6n\\�wݺ�˱��B����Q�g�n��uo|\r��\u001e\u0018?��D\t�ǐ���<�\u001f2d�_JJ�\t^:��K\u0007�s$�\u0012�ä����U��ځ��f�j������\u0002�ف��a*ޫזXkk\u001fM9�={v#\u0002��'\u0014�\u0019%�\u000b\n\u001a�-[������g��?\u0018fB�� �\\��\u0018��s|,\fu2x�a�\u0004�\u000b��?:xg��4n�ٳe^�n�\u0012<��t\u001dA\"�ޏ\u001d;�V��0�K�O'V�nL��`Z\u0019��)�[\u0000h�Ȓ%K�4I�����?}zE3\u0002���(t��ȓ\u0001���\u0016�~ee����nE�'�\f��s�\u001b��ՠe�\u0018?�:&���/�! ~�r����Mn�e���\u0019��S���\n���Ā\u0001�Z!ϛ�\u000b�\u0017�>]\u0011 ����D20��\u0000q�e\u0004\u0019H�WW�.[�l�3�Y�o\u0016�΅*�����>ų�eĝ�<BW�vihhx\u001bc���o+g�-�\u0019����皥\u0003\u0016^!�\r�(\u0000��%Q^^N=K`\u0001�Õɠ�A�\u00012�WZ�۰!^\u0000�E]]�L|�\u0017,l\f�;>��\t]���FG�\u0019=;�'����l�J\u001a\u000e6�D����JX*鋹&���/����?\r�+幘\u0003\u0010�xA\f�¼\u00193f��@e`*\u0010�\u001f�!�¿��a\u0002\u000e\u000b�\n\"\u001c���g���`�W'7����?r�X9qgIG\b/|�\\��\u00183�����ѯ_�ϱ���\u0018\fw��G����������s�:N�\u0017\u0016\u0000�dq�4\u000b\u0003�m\u001f\"O�����K�T�\n��=���H9a�o[�\u0016\u000f/���%\u0007\u0007����@\u000f�WW�\u0005m�n\u0010�_b����\u0015�)��o��9O���{֙\u0010\u001f&��#���b쟮Az��-�!b����\u0003�jk�݅����X�\u0013U�����uK%���\t7���!�\u001c���ٸq㇈�������(;b\b@拟{&C��0t��\u0012L�x$\u0016�ߌBԏ�e���!4���q|,�\r�py�(_\u0006�&BH�Ȓ���{�\u001aD�ɵ_&�y� QZ�k*\n\u0000\u000b��\b�\u0018fJ�\u0006����������}D\u001b_=ќ>V&t2x�\t�/4,��\u0002�l���C�\u001e��\u0017\u0014lI�p�P\u0010�A\")/�\u0010��\\$\u0003F23R&r&}#F�(�inJ�\u001e=\u000e��ݲ�7#b�\u001cvc�񱰶g��'����\u0004߀�񼪪�\u0015�ܸ��L��D\"��\r�\u0000D63Q\u0007;���О�16�\u0010\u001a���*��ߌ��s�5��\u0013._��4�p���/P\u0002��\u0004��\u000e�kf�\u001d�Y~D�r��w\b�\u000b/\u0002�7f̘>\u0010�\u000f��\u00164n�\u0019�,\u001c\u001cZ\u001f�\u0017\u000b��\b\u00073�^��<2�<PV=1�x\u0012��a�\u0006\r�\u0000���6�N?�\u001f\u0011�\u001fr\u0001��\u0000p�E��p��^د�Y\u001cܳ\r7���Xʕ��=�/��W�P���\u000b�\u0001\u000b���)555_٤��G\u0004䇩lb�}\u0000L��#\u0017^\u0017\u0017\u001e�Հ�9~\u000f���X��S���r\u0015u��J����v_N_f+;� 8\u0006��V\\\\|\u0015J�,WX~t��0��\u0018�\u0013�ż\f\u0001��T�x��^����\u0004��c\u0018�/���x\u001d\u001a�$4�qn,3��t�K�����F��?柊'h��aHఞ={�\u0018�hH`\u0013��ɟ��RS&b��\u001b6xʛ?�ES����8�'ܻw\u0013\u000b�\u001d���%�S&+L�����A���\u001b_n|m��tf�0_�İq\f�/��t0v\u0011��=\u0003�Ke�\u001aE\u0012SnOMq�Z|�\t\u0013&�C1Ӈ�u�n\u0002�\u001e)p\u0011̬z`��+P�wJ�\\X�_��gP!��y�/}&��)'��c� �����|q���\u001f���ŋ��_�fMorg�!��~���PD\u001f\u001b=ztAcc�.�\u0011&a�\u0000�LPV�1\u001d=0\u0017�\u0002R{��\n\u000f�'�Ҿ@���Op�ˍ����+���'\"L�����\u0010:�[�r4o\u001a$�v��$?\u0014��I������<\u0019F�\u0000h�BS�0=p]]a\u001b\u0017�\u0002V�SJ��I4'@�\u0006�y[\u0011}�*��\u00027�\u001dH��qy0_�Y�\u0011���7��jӇ��|d\u0007*��RjO\u0015_ɹ�Ȓ/�s\u001c���:u*\u001d�g�\u0003��\u0011Ț\u0002ț�r��\u0002h-~\u001e\u0003��]&�����;p\u0014�\u0010��\u0004��x��\u0011\\�re�0_��D��,�`\u0018�\u000f:6�º���\ft�\u0004�k�\t��%��-�EEE�䩿\u001a�z/��H\b�[�.^R�9N\u001a\u0003�v�f͚�\b/�#\u0005��������\u001c��~/��\u001c(��Y�S���{N\u001f\u000b\u001b�=\u0002\\?��\u0003r�\u001dX\u0003NY�bE�=z�z �awZ�G���\tȗ6������f8�'��s\u0000H+�g\u0007\u0016\u0016�J��w���+���^��X2�\u0015\u000b�T^�o$��\u0013\u000b\u001b��q�L�c�:\u000f?�u?�*�Y\u0018��M.\u0003�>p{*�!��d|��=��f�O\u0000\t\u0005�`\t��̇����|䞿L#�}Pr�\t~�aW����?B��\u001b��k�d���<�<측rg�x���\u0018��\u0014�ѓL\u0018\u0006mOM��9\u001f\u001f�j\u0016�\\��\u000bt,\n\u0000�\u0011�4\u0005��5���b�)--�^����\u0001���.cʍ���C��p��1~\u0006B�<0_��/��<�qXA\u001f@1\u0015���ac\u0015�-���o\u0011�\u0014�P\u0000��hv ��-xP\u0006�\u0002���|܋0��.k�0\u0002每��?Üwn���12\u0017\u0007�\u0000Dx\u0018�B\u000b[\u0007����\u0002��C�h:֩�ji)֭�,?l����_Z�7gΜ\u0006\u0004���\u001b\u0014���@\u0016�*x�n\u0016���\u0015��� �L\b�\t��x�\u001f���\u0015��,l�/���D�/\u0018\u000e�\u001b�\nPYY�=��K{jͥ�\u0012�}�߶�dd|^V�\tm��A\u0004?A���t��\u00060sM���e\bmW,�cQ���>\u001662_��/�\u00177���&�lB;y��ի�D\u0018۞����呏a\u0004a\u0001`�ob��c ra��������?[:�Wl鰩]\ng�p�B0~\n�l�2\u0010���6mz\u0015�\u0004m�%'�@��C�Y\u001f�u�\u0003\u001a&��\u0007'��Ʊ��\u0016h���\"\neK�6\u0003+'\u000b/���o�|Y�qgIG\b�K;_�^ҩ��`�`^SS�;\u0010r�cy��/�\f�\u00000�.`���\u0015��O�R�'���\\�Y8�|p�g�0_�8\"�g\u0003_0/�@(\u0001��\u0004LC޴�k�<J�,�\\䑄��V�\u000108�<0�.`c5� �)��%~���̆ʩʗ�\u001b病�\u001d7T��\u0017��\u000b�\u001c���͛\u0005�\r�{�呋<R`�;�U\u0000\u0018l\u0017�1�o4LX�0ޯ\u001f棣�\u001bnܸq���v�|a��qD��V��������\b�B�/�#\u0017y$a����\u00000�.`C��E��`�\u001a�B;[+�*����e�e�\r�;����p�\u0012�\u0016���555_��呋<\u0012�9\\c��i6�\u0019l\u0017�\u0007\r\u001at\u0000z���og\u00107�ܘ۴%Jg�\u000b�EI\f�\u0011V���:�Ò����>5/��%Od��\u0000��T!ޡ��\u000e\\T�K�L��aw��T����ܸq�&�c���\u0017�+I�\u0000��\u0017t����}{���\u0003\u0004\u0004�i�@��5�S���n\u0016�8�',�*�`\u001bA�z�c@��1������K��r��eᥪ\u0007vn�\u0017�\u001d7T�I��ܲ�m�\u0015?`s��Dgo�JW�-��؄\t\u0013��S�\u0014\u0000\n\\�1\u0017}�\u0000�m,z����e˖��\u0003}D(nܸq\u0013\\�re�0_��D��e���UX_���E�?\u0003\u001eJˬ���\u001aua\u001dv�b8k����Q���%a�\u0000�LPV\b�\u0007f�o�\u0011��\n�4LR�9E\u000e�˕S�\u0000�Q���2~,\f�����{|A��C\u0011x\u001eˮO��\u0015�\r[�F>>�祥-�<O�P\t/MS(,\u001c\u0012'\u0005\u0000\u0000ǚ��\u0013_�p3^bM\u000b ��)�w?ǹj�rc�{�\u0011+;\u001a�=������\u0013Q��\\�\u0012ÆAG�#�\u000e\u001b\u0006}�!��\u000b�'$�%?/�\u001f\u000eX�˫�/H���?1m�4�wfV\u0000�1�������>1R\u0000\u0000n�ܹs\u001d�\u0014t\u0000=���\u0001���_���BV��l�9>n,mɡ�`�0_\u0014��u�\u0016��M�9�b�\u0004|j��\u001c���\u001c����\u0018\u0014�\u0004)\u0000mm}�f̘��f\r\n\u0000f\u0007�� \u0006�_�%F\n\u0000\u00019{��F\\���>��\n�\u0007;�eKe�˟ٝ�����\t�g�\u000b�ŉ\u001ff?�|�>\u0001����3����9.<g[gT�E���z�,�ԉ'\u0005`���\u0004�\bނP���\u0002@�\u0002׬Y\u0013�:K\b�-1�\u0016f�XЄ�,���\u001f ^m�Xz�KV�U�-�Ǎ��\u00186��\u0017�\r5��Y̗\u0003�\u0004�A\t�.e<�?\r#\u0014\u0014�j���\u0000��S���WK���.�\t\u001f1\t�0�]Y���>����A0�_��?\t\u0006.Y�xtdR����p���z�|�Z���{\u0003&i_�,��\u0014��=ݻw\u0017�� �\t��$H�\u0002PTTd1\u0013$�x�d\u001d�4�\u000f\u0019��]湲wme7�\u000b�\u0007���\u0013N�̗��\u000b��B�]��\u000e����a��f\u0003�\u0013�f͢a|��z!,\u0000Z\u001d�r\n\n�b\u0017X\u000bd�/�r�ߝvY��#;\u001b\u000fQ�\\�\\��\u000b^�̗h�\u0005V���.�p�(�\\\u0013�uu�ms��q��oP\u0000�O�N�\u0003���\u0000��u6��\u0016��M~�\f\u000e`x�\u001d;��,\u001c�/VVػ0_��\u000b&�߷b�\u000fG���b�_=\u0018�8�O���\u001aD�\u0013��N������\u001f4H}�$eT��r�S9\u0005�teeBF�����|qf��7������\u0002K��\u001b6��ۈ�����or��\u0002 ����:p�`\u001fL\"���������D���V1C��|a����ve���/MX\u000f\u0004�\u0012�@���5��9��!\u0000���sցCG�B���¿��1J[c�R���\\\u001e\\\u001ejf�]�/\u0006�\u0014\u0002��\u0007\u000f\u001e��\u001a-�k��7K\u000e�\u0010�\u0002�u�`�������\u0000�V\u0001ŕ�P�T\u00109�1~��#AL��\u0017拉\u0012��>�R\u0003K���\u0004|�\u0010a��7��\u0006�\u0000d\u001d8\u0010��a��\u000f\u000b�v���Lv�2�s|ܘ\u001b\b���|a��P���/���n\u001a\"(3D��u�#k�;�\u0016��\u0003\u0007K\u001f\u0007��?\u0003Ќ��Û�\u0010&<�b���gc��Dr���\u0012\u001d\\o�/���m�\u0017TWW�p�F\tԬ�oRޔ�~,\u0000Y\u0007NYYY\u0011�ۿ�\f\u000b������CY�\u0018?\r\u0016V\u0016��au���u�\r��\u001d0��\u0015�JA�d�N�Y\u0019gq�yU\u0000�\u0011�84��1�o?\u000b,p���u��˃�G\u001c`eBU\u0013�n�^��\u000b�y\u001f4`��)@�[�G�F<�\u0018���|{R\u0000�S��m;E���'T��TՉ+���$���1~2\u001f��/�\u00177���a�\u0005���KJ�ߔm�M��t\u001fé���6n\u0016�8�'ܻw�\u001e.\u001bvT�-~\u0001�5&`��0�E\u0011r|ܸ�xf��|a��qC��|I�/�D�kW�\\~2�\r�Mœ�[l\t������?]�+^��4F�\u0007�\u0006p0�\"f�>��/\u000bk��fW\u00153�n��2_��P�2_�˗͛\u001b�Y�b��3g�ס�\u001c��U�n�wč�\u001e=����Q���G�N\u0001����\u0010��ꁳA��X��\u0010p�-~�rF�r�\n�ʉ@���|f>���#D��\u0005�\u0001�755=���\u001d�x���\u001c9�祥-�<O�L�\u0000h�BS�0=0�*�\u0005��\b,��\u000f\n���Xs���\u0007\u000bW3+쟙/�\u0017{vX}�/\u0019×b�\f�VRR2�Z��.�\u0017�dɗ�9��;u�T:��x\u001c0��1\u0002YS\u0000y=�*d\u0003O$�)--�ٞ�a��\bs:�rfL�4\u0017��g._._ODI\u0006b��<_�Fg�UС�\u0003o\"!�\u001cҩ��-�EEE�䩿�k�l@z����M�6�{��\u0012km��Y\u0000fϞ�\b�L\u001e\u0013�a��� ���r,��ʞ�]b��-���Β�\u0010̗��K)��\u001f\b����Ҵ�E^��\u001d;�'�^\fyɃ�;�zu#u� '�ɿ�\u001c\u0000Z\u0017(�\u000e,,\\��5kV�\u000b�<,�;\u0007 �a.>��\u0019[9�E�|����U\u0012�Ƒ��|����a·��t�M����}\b��{$���˛�\u0007]�S~�\u0002����cee>�\u0004\u0015M���\u001ef�\u001d�R��\u001fWv��2\u001f��/�\u00177���̗��\u000b�\u0002\u001e�|�]��}F\by_\u0003L~\u0017�� �)_\u0016\u0005��\bT��\t\u0004��Ȁ�c\u001f������h_���Q9�\b����k�\r�;����\u0005�Av\u0014a��+#F�\u0018�\f\u0013\u0019�f�fK��oaɷ\b�C(\u0000Z|4;\u0010f�\u0016<(\u0003k���Y>�UK\u0007i.��͛_0O���Εݞ�V\u001f�\u000b���\n{\u0017�KV�l�ƍ�a&}��o�k���zoΜ9\r`��%_L\u0002�a�@lڴi\u00140��?U�u���\u0015�\u001eN�{��ʙ��S\u0014/o�\u0004$x)�N\u0007�\u001bn\u000f�/�$I\u0006\u0000W�ٴiC��}�},��έ���j\u0011�����^�\u0019�l�?�!���\u001aD�S\u001cʏwվ\u0001��p\"�<^���\u001fWv��\u000b^��\u0017�\u0017��0̗��KAA�S�\r+�O&\b��W(\u0000��~��\u0012�C�\u000e\u001d���<\u0013��^\"#\\9s�r��+��e4��~0_�\u0019b��e�`Y`m�~�\u000e\\�l�l��س6��?EJ^R�RQ\u0000\"�\u0019,�+��b_@�o+��e�\n\fX\u0018\n$ܯ�\u0017\u0016��,�\b�|�=���9\u000f{��\r\u0016Й\u0001~~���\"�b\u000e�x�z�\\fz���(\u0012��\u0000W�ܫ���\b��_�~p�pgIG\b�K;_���`��5��\u001d��EN^�\u0014\u0007Q\u0000\"�\u0019��?\u0015��G=Sݬ�b� �q�reg��Β�\u0010�\u0017�K\u0007\u001b��2�/X^�\u001b���b��\u0002��Fk��9��e�fO�s�?�X\u0006��\u000f��L'�ȇ�+�\u001b_�\\�p�\u0017�\u000b��\u001e\u0001��\u0003\u001d·\u0011��l\u0019S�Q���$�Q\u0000\"�\u0019Z�߳g�g��/��k�\u0019\u0010px����t��ŋ��|��������|����r\u0003�D������K\u0005\u0015cV[�\"\u0014e2�� `��ka�9��̕)s+��rFW._._##���/�\u0017g�\u0018}\u0003��GXr^���3��ES^Ji���?��Ϸ�^��yq:UH�[8\n� 1�\u0017&b��\u0012\u001a���<\u001a�9>n<\f�py`�0_\\(b�f�d\u000f_0�|+�\u000b�E*�Hv����`9�;�v�\u000b\u0011^;OX>U(\n�̘1}0\u0001�Y�aP����4�:p\u001d\t�\u001b�/{\u001a#Uis�r��xa��|��\u0017:k������Ç�\u0004��\u0017���8_>��I\u0001�!p\u00114\u001c}��(\b\".���\u001b�o�d�GVs�g�\u0018?3'���/�\u0017'~��r�/�n���;�8L.�Il���\u0005����<�_�N\u0001����\u0010&v=pT�?&^\u001c��~��\u0015r�\u0002��r�+����|a�x�\b�|I�/��~���\u001b�\u0010xFE^&�\u0013'y^Zڢ��{�j?�)\u0014\u0016\u000e��\u0002\u0000a\u001bkn��t��ȼ�\u001a�Y\u0004�2�\"M�@�\u001e�o���\f��3W��*;���9T/�\u0017�%7��ɀ\u0007ay��}�4�y݋�B�4\f#�%?/�_^~~]^}}A\u0002��&p�_+}۬\u0000��?��ds���O�\u0014\u0000d(o�ܹ�G\n*2!�B\u0013��0����\u0002�-;��ŕ7�\u0011H�_�1ʍ�Hf\u0002�\u000f\u0019\r�{�\u001f\\?�\u0019b�������\u000f�Uy�ʧ\u0011*\u0012g\u0005�\u001b7�\u0007�f\fr3A\n@[[߶\u00193fhrb\u0018\u0002�ف�\u0018\u0001�8$��\u00136�ax\nS��Ak9\u0019��\u001en�\u0002\u001e�q3#b�,�U�b�\u0004\u0012�WƏ�;K:B0_r�/(��p`�Q\u001d,�|\u0017���W��{h�u�ee~b֬Y-��O��\u0015\u0000Z\u0017(�\u000e,,\\E�\u001b\u0011��5�!C�\fFF�1C��ˌ��37F��\u0018q���\u000ff\u001f�\u001f\\?̜pzv�\u000b,����~N��B\u0017�4!Q^�G򼼼�\u0019�Յ?�A(\u0000��@��)L�^ф�.\u0017��F���\u0005\u0013�@J��q�&�p�:���mk\b��\u001bK++�]�/�\u0017{vX}2�/�U�`��͚3�KZ���o\u000fY��� �)5\u0016\u0005���H�)(�nu\f=3�\u0007\u000f<\u0012�8Y�\u0014\u000b\u0019\r��L�Lι��r~Y�XYa��|a�س���/�\f\u001a4�\u0000k\f\u0006���y)\"�+,�\u0016�O)\u0011\n���>}�X�\b\f�u~\b=3[o=h\b�/�-������\u000f�:G�������D\u0014�\u000e\u0013�W:\u0014�7�־`���eee�����./�¿����m\u000e�A\u0001�>}:�\u000eTj\n�,t8�%3�����'�\u0012���$�p�f[er�1痕\u00137����\u0017��\u0007�� |�\u0012�mkjj�Wĝ\u0016y)��i\u001f�y����ێ��b쟮A\u0004?�--����ݽ���]��>�P��\u000bBV��9>�\u0013?�~�\u0017拙\u0013N��̗���\u0016L\n�\u001d�$1H��4\u000b��\u0010\b\u000b@����\r��چ{\u0001\u0018\u000b������ʤ�.\u001f\u0004\u0005PX9V1C������f��5U�`��|\f�?B����H\tʱy# 5\nj״ef��՗\u0001���ܸ��W��JVs�\u001c\u001f���\t�g�\u000b�ŉ\u001ff�\u001c���K�֌\u001b7bnО�\u0019;<�\"�\u0010�\"~G�P>.}A���zuY]]�L��\u0014��\u0010r�͡ʤ!��ea�R%\f��\u0017拁\u0010.\u000fa�\u0005\u0013\u0002\u001bJJ��(..��OG�\u00001\u0004�\u0002��[\u0017��5����6����@��5l�r|�Xzc^{(�\u000b��b�\u0000�\u000f���Q]��\u0006\n\u0015��L5>�\u0016��\n����\u001f���o��ۓ��Í/7�fN8=3_�/N�0�1_��\u000b��\u001f�fM�\u0007��qv��\u001c��a�_�>\u00006\u001f\u0015�a�\u0010_AAc7�Ine�/�v�r�\f�r\u0012��?wމ\u0010�?����+�%/��a�-^�R�1�K�Oђ@Qļ\u000e\u0001��qK|K��?���e'JU�\u001f��\u001b#?�a�0_�/�\bp�HO�\u0000�{ఠ_�#�����\u0014�,�*��\u0002��*��ً\u001b7��[WWG��\u0004�1Y�C�@����<�<�p���|�%�`O�� ��=�9t�O���o�Y\u0000�t��|�P���23���]�\u0003\u0014\u0006�D��r���\u0007��\u001e\u0001�\u001f\\?��a�a���/tXP߾}���oqQ�K���Xb��\t��N\n\u0000\u0005.�>Q0\u001d���\u001f6����\"Eb]����'�k!H\u0001�<�<$:��2_�/�$�\u0002d\u0013_��+q��(){��Ѕ��ѣ\u000b\u001a\u001b\u001buy�\u000f&�\u0014�؁\u0007�\u0015�T�\u0007N��'MfӦM��nI�ܻ=g\u0013\u0019��J��_n,��D�a�0_\u0004\u0017�\\�/�ΗB\b�ڔM��?N򼴴E����*\u0015�\u0018i\nMM���t�P\nf\u0007���\fr\u0018�!?�\u0001�֙���d�-\u000b�����p$�ɓ��|1Q��1[�\u0012�ǏS\u001c\u0019l+/\u0001R���dɗ�9��;u�T:�ϲ\fP\u001b#�5\u0005���T!�\u0012t�L����;m޳u�V2�e��ˍ�\u001d7T��\u0017拊\u0017vn̗��\u000b��w%g�S\u00119��@��ɖ����D��_�\u0012�l@z���|���zm�����,\u0000�g�n�W����'��\u0011���ό�b��Tx��d�Z����˃���\t�g�\u000b�ŉ\u001ff�\\�\u000bd����n\u0011��\\'yi��ó�z\u000f���`iȃ�=�zu#u��]��?}\u000e\u0000i!�����U�Y�f�E�#\u00014�@uN�m�r�\fr�9��X�|p�g�0_�8\"�3_��\u0017\b�\u001bv�y�Ⱇ�˫�H����7�\u0003��'>\b\u0005@\u001f�'���|�\t*�p\u001bzϟ����Y��7������!+�\u0017�\u0007���z+�0_�/�\u000b^�9ȗ�UUU�\bldK�p�q�\f#�\u001c\u0002!�\r�(\u00004F��\u0014<&��qsfJKK{`i�u\u001e�ca\u0003�x{Z�la儐b�0_�\u0010�A�j�\"������w555\u0005fyiI���E����%�\"�)*�\u0000h���@��[�\f�\u0005��g��*3�����F\b��t�0Y�1�`��\u001d���Β�\u0010�\u0017�K\u0007\u001b���̗�\u0018�?5��v�zoΜ9\rș�%ߠ\u0000$g\u0007�M�#!���e\u0007$��\u0003�(j�H�����P�ޤ��о���Z\fz\u0000.\u000fn_t2x��\f�`^ܕeee\u0005\u001e�c\u000e��|c�_=\u0002�\n�D_\u00050�|ǀ�/J�ʏ�4����_�����U�v\u0006��X*�W:rypc�$��#��bC\r�3�E�K_X��555�T\u0002�v�,U�\u001b&��\u0002��y���\u0001\u0003�\"cKa�\u001f�\u0014'�A'�\u0013L�~�\u001f�gK\u000e�\u0007������\u0013�%�|�\\�5X\"���+WR����Y��Ed\u0018\u0002�\u000bd�������R\u0016�F$�2��2\u0019�v����pgIG\b�\u000b�\r�w^�\u0002\u00199d���\u0017��\u0016ΦAA-\u0000��?2\u0003����\u0016�e�\u000b8v��9>��*^ع1_�/v�P�3_�/*^ع��\u000b�\u0000UX-7j��6����6јV\u0001؆2z��8��_�(X�'q�C\u0006#��'��\u001b#53Ԯ�\u0017拚\u0019jW�K��\u0005V��k׮�X]\u001a���E�~-\u0000��?z���h�#S}�G�+��s�%c������P��΍��|��ʝ��/��՘\u000b0�4\u0017���U����g\u000e@��c��,\u0016��3���_&�|��1~2\u001f��/�\u00177���Q�\u000bd怺��IR�\u0002�_�}�m̫\u0002\u0010��ݱ��\u0012՗�\u00046��w�#\u000e��PUMP�q�e����ve���\u000b0�,yR`P��.���X2^O\n�v�P��\n0��j�&�2�%��1~2\u001f��/�\u00177���̗��e���{Tȧ\u0004�p꯾���\u0005 N�\t˧\n�����#��H�V��g�1�\"C.�\\�<�<\f\u0015����|q������\u001a_p��o�t�\r���\u0010�0aB�|ꯓ\u0002@�� ����>�^�~�\u000e�8�n\u001d�f33a�ff�\u0011���x0_�\u0019b�e�0_��p~�\u0004�@\u0001�k��{RN��_E�c�G�.hll��9�$�\u0014\u0000�\t�\n�7�\u001e������\t`�AcamF���˗\u001b_{vX}�/�\u0017++�]r�/mm�\u000b��_\u0013�q�祥-�<O�'�\u000e�i\n%%%q�H\u0014\u0017\u0016\u0000/\u0007\u000b����c�^���\\.<�\u0001+\u0013\u0002\t�+󅅃;K:B0_�/\u001dlp��@�$b�ؘu��-rϝ%D�,��ɉ��U�u�z�A����?:��x\u001c0��1\u0002YS\u0000X\t?\"�ѣ\u0007\u001d���2\u0010l6Ӌ��p�����\u0003M� �\u0017�N\u0006\u000f7�\u0017�/1,�W��s�P��'[򋊊\u0012�S�W\rC\u00004;P\u001e#�޽{��<as\u0002�]\fŸ�i�΅Ǖ��\u000f�g�\u000b�ŉ\u001ff?�\u000b���\t��L�\u000b\u000eқ<bĈ�N�3�i���\u0005��*+�\u0013�f͢�B��\u00177�.pɒ%��\u0000�\u000bf̨h���c���\u000b\u0000tA&�-0�s\r#��Ǐ��n�����ֶ2�H4�㉆���\u0016���T��\u001b-�Ӯpk�nQmtE�6,�l��H�\"�\n�O\u001b�C�K�\u0004]\u0011�\r�$���\u0013�J�(�\u0004){�\u0007\u00050A�\"�{CC�~�w\u0013\u0018\u0012��I�$����\u001e\u0016\u001f�P\u0018�ITVV�ѕ_�>}��\u0003\u0007�UIx�A\u0011�\u001f9\u000e\u001f>��\f�U\u000b\u000b���9J�Ǝ\u001d��/\u0005�no��\u0006Cx`g\u000e\u0012Ƴ�\u001baD��q�Z0�\u0017\u0006\bo��F�񃿎�n`\u001e\u0015}F�G7y����Ά\r\u001bt7�7���J{�gjӻ�{1�\u000fO��=]Q?���[�Ut�P�b�Ӛ\u001b�y\f�S�G}��W�����3ڎ\u0018�}\f�L\\�ӕ�Q/��`��gďf�[\fXv�������x>��ÿ;�\n�W��\u001e��b��Щ��;���?��QQN=pT�y\u0000��\u0016`�\u000eھ\u0001yyMyuu���&y^^^ь�\u0006�k�\u000fG�\u0018 \u000e\u0005 N$\"򔗗[\u0002[�ct)+++\u0002�+A8���˅gD���w��y�]w���{�\u0015$��C�\u000f#�\b0\u0002��\u0000)\t������z�E\u0010d�\tg᯶�@�[\u0003Ep$���\u0000��i\u0010M\u001c$\u0005\u0000J_\u001bz�\rx� �)\u000e1\u0004 \u0014\u0001�G\u0017D�Sd555ǲ�W\u0017\u001e����֏y����/9昣�}��7��³?#�\b0\u0002QG\u0000\u001d�!�\u001cŝ믿������(;��\f�|��)\n�Q\u0017��\u0011�ٿ\u0011�\u0016�Oa�\u0002��'3�y�@���/\u000e������7#b�,���'�\u001bs��G�y��\u0007���+g�o�\u000f#�\b0\u0002�B�ڮ)S��p�\u0001\u0007��裏�uK�h��p,?d4�~��E�\b�������\u0000P4�فJMA���&>bD�8\f%�D���p�7���vs�5�\\3��\u000f>�����1.�l7s��}\u0019\u0001F�\u0011�4\u0004�f�<��^F�u�����?z��\u0012��P\u0002��P�2��\"���?o^9�\f�9|�\u0002��:u*�9\u0007\u0012��WqSS��R���d0\\�ȏ����o���?��S{�D�ތ\u0000#�\bt9\u0002�>��>��o5\u000buQ8���7\f���={N�\\�����:�q\u0014�\u0014��\u0000H\u0011���>�aC�����\u0014�\"kn\u0002\t��\u00172lܸ��%�\\��)�����_~��=V\u000e�\b0\u0002�@�\"\u0000��\u0013O<��+���S�\u0007+��u/ퟗxD�\\�\u000f�urX�\u0004�2��k\u001e\u0015\u0015K~\u0019�u{�\n������5\bY\u0007\f\u0018����n���SO\r�+�{�8\u0004#�\b0\u0002>\u0011x���`Y�'X�8��A�?��s+��#��n�G�\u001e\u0014$,\u0000N���t�O�\u0010������\n*�[P�VWW\u000f���\u000b�?���~OKkԱ�+#�\b0\u0002�G�� X&o��⋿c�o�w���>��sS\u0015�\u0014w\u0010\u0005� �׮��u����/*�O\u0018dx�7n�~��\u0017���\u001cf���\u0019\u0001F�\u0011H7\u0002/���\bl\\���7����o�������� oV]�j(��AA~{�\u0006�O\u001f߰a�\u0005--���}�_.\u0016�\u0019���\u00136�\u0018�����\n̶]�u�_c\u0015G�I����3#�\b0\u0002�\b��\u001f���8�;�x\u001f��\f�\r����>�ar�\u0018onn�0hP�S�\u0013�\u0014���\u0002`\u0011�=z4c���SU\u0011{qc2\u0018�0j�(/��a\u0004~ӦM{��\u0017^�\u001c\u001a��ʨG�7�\u0000#�\bx@��W^\u00198f̘/_��x\bn\bB���[omp\u000b���HD�'G�K�!����w]�'�c��y\u001d\u0002�\b��u�\u0015�c���\r�M1�=�z�\u0011>f�b��#����ܰ#3~�ׯ��-���:�,�<�\u000b�\u001c�\u0011`\u0004<#�^l���'�y������_L\u0006��\n+���N��\u0012��?���jn��\\�\u000fY�\u001a�\u001cHy��������I\u0001�N\u0015RM8�ź��燵�\\xj�\u0002�\u0015�^{�]�=���8��v�g'�0'`�N;���\u001f~�;H��;�\u0000#�\b�\b���k}pP�����ꋲ�����>\u001b���Q�\n�et\u0018g�{�&�ӕ_(f~e0\u000e�:P\u001f�w�\u0000h�\t��ݤ��&\u001c��nD��J\u0002\u0011�Ix�0~��\u0014\u001f\nS\u0013�\u0018ϟ\u0005��\u0010\f\t,6c�%�؅�c�=���\u000b.8�4ws\u001c��\b0\u0002��\u001b\u0002�v�}��\u0013'M��qժU\u0007��W�o��63�{��'�|r\u0005�C\u0001�J�0T}���K{�\u0016����񡌎��=���p�\t\u0013&��'M�]�D�\u0002\u0017��t\u0001\"\t��������l�:\u001b\u001cۄ�xtu�P�-\"i�ƍۀs\u0019����u��g��?��s���aL\rx������\u0000#�\b�!@m\u0006ڠW^~��\u0010�IN�F�����o_|����\u0015�N��~8~�V����l�\\�ϒ��\u0007\r\u001a4�5�\u0010��G�.\u0010GF'�'�\n\u0016f��B:3ZD,\u000br\u0003x'\n?/�,\u0001�KV�0A�\u000b혶c�8\u0012�\u0005�mN>����/H|\u0014���ˏ;��.���}���\u0011`\u0004\u0018\u0001\u001b\u0004�^�\u0007����J�]\u0006���7�9\nC\u0007W�\r3oG\u001b�L���]�)>t�O��g�=N򼴴E��Iw�\u0002�i\nMM���t����\u0000�@�@�8�壺w6��g��&h~QY\f\n\u0000}\u0002n����\u0001���\u000e\u0005A�\u0017�ǌ\u0006�B�'�|���v���y��\u00158$��\u0018\u0001F G\u0011��c�.���$z�����x5+\u001b�����r˨���u�G�\u0001m�n\rP��܂�����-�⃌8������\u001b'K�,������?\u0016ӎ6F k\n\u0000\u000b�\n�3,5�x�/a�/�\u0003Xv�6�弩�S�/*�Y[�?�\u0019��p �P��\\�G��\u0011�f�ҥ�q4皋.�h�����\u0000#��\b�M�\u0015��u���&h�2x��/�/����?��\u0001�&\u0007?�W*��%28dc|��������\"��\u001c>ْ��\u0004\u0013�S���!\u0000�\u001d(�\u0011t��=as��'�6��\u0000YwJ5�\u0018\u001f�U\u0000�#?��Ϫ�}��146���M2}����ٻ���\u001fz�!>X�\u0007~\u001c�\u0011�6\u0004�\r@\u000f�\u001e�\t_!o}�\n�q��7߼\u000f�\u0015G\u0013?z��^1L�=5'��\u0003�f����Cy�����\u0004��<3}�8]\u0001�u������U\u0014�\u0011�\rB����\u0000R�m\u0018��f�\r\u0019M>��_(\\\u0006�U�A\u0005�\u0002\r�_��W�������N^�]w�u��\\s�vv�;#�\bd/\u0002�\u0017�\u0003��\\�l�E�ˠ�\u001f+�N~��.>�\u0013,C�f��[Շ1�~򳹽\"���w�=����_\"��(��i��ȫ�H������\u000b- ��O�\u0012�4���+�Tc\u0011H(����8���`\u0013F�/������!�Ӽ\u0000\f\u0007���+��\u000f�2��ҽ]���\u000f>��½���&���6��>?3\u0002�@� �=B���s�??��3�Q����\bW�C\rظl�G\u001f}�\u0005���B[�\u0000صWAK \u0017�\u0015y8)���Y6�#K~R�[�HX\u0000t\u0005��\bT��\u0000\u001f�\tfS��Ү�\u0000���0��U\u0001\u0010߇��)*�0l\u001a�Z���^�����__RR��ꫯ.3��ό\u0000#�=\b\\y啣N:�%�]+r\u0015D����{��?>\u0004\u001b�}'��r�<'G+�����wD�\\�\u000f�x�^{��-oڇ�\u000bK�E�\u0013FB\u0001��ف�1\u0002\u0001d��\u001f\u001a�OMn�c.�p\u0015�\u0000\u0000@\u0000IDAT�M�\u000e;���ͮ�y\u001d��\r�ok�L�R6jԨ��~~�\u0007��x�ҽ����(c\u0003/���3#�\bd\u0016\u0002X��\r��k�x�%T�E�\bl�\u0003\u0003�S�\u001cu�Q����m��:\u0011i\u0010W?�x��k�\u0001�#V�h�#0��{6s�D\u0010�\u0002��\u001d��\u0014�\r�\u0012���!_[��5�ӑ_TF[�%�-�G\u001cqDӑG\u001eyď��?\nϠ�[�p�m(�����?\u000e\u0017q�\u0011`\u00042\u0017\u0001��\u0019�Y�\u000b\u0017/^|��� ����\u000e:\u000f��L��V���0�c�@i\u0001\b�^��\u0017Ϲ\u0018\u001f�`\u0016��m��絟�c\\�'�����'�\u0005:\n L48R~Y��\"�\"��\u001a�2�w\u0005~\u0018^q�_�W]!�۰iЍضs��O\u000e�'}\b�-��Bq>[\u0003d\u0014��\u0011�\u001c\u0004��b\u0017��`٫D��FN��� ��\u0016\u001c46\u0001�\u0001>Ds���ܫ\u0014�T�+��s9>Ȑ�͛���u\u0005@v��/�2�C�~�\f��\"@e\u0012�\u001a�\u0011z��\u0019�b�\b���wn��ƭP.��-h��Ν��\u0011#F̆r1X��WF�\u0011�>\u0002\u0018�\u001f\u0002K�\u001c��ǜZ��\u0001z��n��������)��\n\u0000ˏpW745�\u001c�9\u0000�ْ��d�\u0000�\u0016j�~���Fi8a�\u000b/���ի%e\u0005�\n\u0012�x.��]��4h���.\u0013��\u0017�\u0012v����`_��Q��dQ9\u001c�3\u0002�@4\u0010��\u001eG]=�\u0007\u001e���cͩ��\u001e\f\u00192�ul�-z�z��\u001c��g�)�`b�\u0011���r\u0000��\u0017-Z4�k�xV\u0000��\u001d.Gʅ\u0017~����\b�vO\u0007p|��w��0����d.����?1t��\u0019��zk� ��;�\u0000#�^\u0004�\u0005�@\b�Ͽ���G�����W�cϑ�\u0017,Xp4�=\u0012V��n�a�ON\u0013��Q���\u001bd����޳\u0002���6��\"`�;�6\u0003���\u000e?,�\u000b�\u0002 �\u0000��\r\u0013;/�l]��\"�+��.}��^��_�\u000f=��\u0013�\u001a`��\u001f\u0018�.C��\"vq=\t&����\u0013�ꯟ\u0004��W�:��w߽\rmH�m\u0012)\u0000a�O�\u000b�g�G��W��2N�{O\n\u0000ƁK1\u000e�3E�`\u001b�V����\u001f*G��M�\u0003K�bÎ1��46��sJ�x\u0011KE_�5�ÿ��/���\u0000#��\b���\u000ff��������^�K*���\u000f\u0018��#�Lw\t\u0017�\u001b���!\u0000\u0011�_˄x��!�W�.+��J�=�OC�!c6\u000f�\u0014\u0000q�\u0000��>�oS>�9cR���q\u0007m�a\u0017���EO��n��\u001a�\u0013\u001c��\u0000;Dٝ\u0011H\u000f\u0002T�\u000e9䐣�Zg\u0003�*�\b���*..�\u0018��G^v�e�ғj��4trX�{G�G�\u001cé����H_�yR\u0000���>>.�o��Y�\tڈ�\u001e��}h�\u000e���G?��S��\u0002�G|�̙�\r\u001f>�����0A�\u001c??3\u0002�@8\b@��\u0003\u000bܻ_}�ի\"ƀ�W��7z����\u0003����I�O>����w���/�;\r\u0003���\u001f|�]\u0001\u00001�\\���I��3#b����5\u0004 ��6����/'a��y��k�Dx�\u0015cN\u0013�-q��\u001f�S�\u0006���gF \u001c\u0004�nM�8�g\u0018z�\b\u000b��$;���6�Xl�s\u0015�\u0019\n'����6��=Ff���;\u0011�:�4_����S\u0005\u0010~t�o�T}\u0000\u000e\u0013з\u0017$G.<B��/`�y�<`(����k�=4y��ݑ>K�\u000fX���>�����\u001a�\n6\u001e�\u00190i�\u001a#�\b(\u0010�\u0004�^������&��v;��\u0005���s�=w[��uK��ӡ:�Y3\u0001�\u0017-\u001d��W��,��\u0004����\u0001c8�9_>�W'�\u0002\u001c\n\\\u0004��4\t�ǅ�C�z�\\UUU�q�\u0019��;�E�� ��D���oCC�Ѱ\u0006T��\u0003\u0010'�\u001b ��+#\u0010\u0000\u0001��òv0��mhhh��\u001c���E~\u0017����I�CaM(���}/,\u0000A��J~U����hW@)�1X�\u000b`���d�C_`&(+D\u00041�\u0012{��$U� �\u0011W�O �~�۷oZ�\u0000\u0018���t�\u0017V�{���(�7�*\u000f4Z�3f̘>r���1�H�]vc\u0004\u0018\u0001g\u0004�����(--}\t���\u0011��\u001c:\u0015�5lذ'V�^��\t'�P'��\u0019�d\u0001\b�T��^.ć<�y\u0000q�祥-��'X�\n��)45\r�����G$�(dX�\u001f�׎C\u0014��!h�!@G��.�\u0005I�]e��\u0013����c�9f� ��;�@�\"\u0000\u000b��7�|�\u0006��Ǚ1��o�p�gXuϙ7o�d������\t�\r�\u0007ː�[���W\u0015w\u000eŷ\u0017�ߗ,�$�\u0005\u00164�|�ԩZ���\u0000�1\u0002�)����M/��\u0016й_�&��\u0017�\tA�\u0002>���[�>�h}r�����\u000bk@\u000flF�iYYٓ��s\u000fM(�\u001f#�\b� @\u0016�����O>��c\u0004��\u0017��f\u0013-9o���\t����T�\u001d¥�\u000b��׷Sȯ2\u001f9\u0016_|Р�?&K�\u0000�,0�S5'�\u0002@�\u0003�1\u0002�4ݛ������*������\"�!�\u0000}�^{)�t���O~�L�\u0006�\r�N:������`\u0004�\u001f\u0001(�{���$�SU��S�L�/����N�2%��|L��~�3\u0007 ��*ӕ���by�\n0*+�\u0013�č�q�匮\u0000к@yv`a�\u00046\u0013�S�����`�1JEy2�ՙϘķ\u00023�Ka*���w��/�\u0001��~��/F�\u001a5套^*����\u0019�\\B�,c[o���\u001f}��L�#��\u0007�o\u0014\u000f�\u0015������_�Ы��UnA�k��\\����M��<///o\u0006>��'��\u0002��\bȑ4���+\u0012MMM{г�_��-㔩�_�\u0001�\u0002\u001a�-[��m���N�&����ƍ\u001b���5'�x�x\u0011'_\u0019�\\D\u0000u`�\u001bn�aݦM�&��?h}�v�m����8��������^,\u0000A�k��\u001c�o�\u0001\u0003Zc��M�� �\t/�\u0002@c\u0004�)@s�\u0015{\n�����`k\u001c\f*��n�R@Z�]�\u000fc�m�4�r\f\r�\t�X���y��P0�E\u000f�0ù��˟e\u0004:\r\u0001��aG�\u0007P\u0007fᣆ}V�D\u0004�o�&�P�\u0019pKW�����z\u001f4�v��z|�ç��yk�\u0005>J�\"\u0014\u0000\r?�\u001d(�\b`�����\u0003V��`\u0013&A�?��j�*�D��ꫯN=�3Ơ|-�\t��_�\u000b�\u0006\\x�u׭>��-g�G\u000e\bN\u0010#\u0010\u0002\u0002��z��d\u0001۰a��\u001b�*ڀ�i��g�=��_�����aB�R\u0010QB\u0003��6�\u001c_�<�%_�\u0007`\u0006ˠ\u0000$g\u0007j\u0005\u0004���\u0002�`�&�U��\u000b�+��&�{�A>\u0004�\\ ґ��\u0017��:\u0000G���n����J�|ɝo\u0019��A�,]�x�5mڴ9�T?����\u0003���%v3h�\u000e��t��+�p\u0018�R\u0001\b�_�|p|\u0006y��\u001dVB\u0001\u0010�\u0002E�М\u0000�\n\u0000�m\u0000�\u000ek[w\u0015~������3Ϭ}�\u0017�a��Y���)���R|�֭�\u001c琯�4i��N�\u001f#�i\b�v�i;\\}��+���/qK�]�pz\u000f��܋�}���;N��\u0017$�N�����\b�.le��\u0000Ȁb�\u001b\f\u0001\f����\u0019l#�v8ٹ��Em\u000e�*�t��w�}w����/T�����\u0015aee�x�s\n\u0016l�����5@ ��LE�8<f̘����\u001b�An�p�\u001f����c���ϟ\t��Q�G��<\u0004\u0010$�N�����\bs�Fb�ב*܄\u0002`��:��`[�6\u0000�����Hx��\"\f\u0017����NS�\u001b\u001dU~e�/gn͚5��\u001a�\u001cV�Ѳ;�3\u0002��\u0000��#��ڵk��f?�#\u0019_\u0013��\u0011\u0013\t_ĳ��z�T����;\u000f�_�ts|��\bK��V\u0000�\u0002�3���e�\u0019l{�e���U�م�����>��UW]5\u0014\n�J�4��k'�E\\PD�⤲E;���\u001f1kZ?�R��\u0011�\"\u0002��\u0005�Ϙ��0]�TԹ�����<��#���(baN�8�,H{`�K~����\u00116�S�t�\u0002���{�3��`��T݇���\u001b��v��׮éb�0��m�o���\u0015+V܀Y�Kqp�(�o�;#\u0010\u0005\u0004�9�m�+_\u0006\u000bֵ^��~\u0014\u0017\u0017����s'�)����(��_��s|��\b�z�LW)\u0000��Zm'a1��`;\u0011�\t����N�u�R\u001em4\u0002S�\u0011X�|�9�S~�a]�G>��Kv�y�߳5�\u0005)��t\u0004���T݀CV��~\u000e��\u0000��\u0003+e.]�t��4\u0017��7�\u0014N\u001e\u0002\u0010�r�\u0004�p��_�Tq�n�\u001a\u001f��\u001f��\\,+�,\n\u0000��m�I\u0003��\u0004R��#\u0013@��z~�v�=��o�\u001e\u0012\u0000��3�Ӂ\u001f�J���\u000b.X����:��}F�\u00108����B\u0005K�\u001f� �~�as��fΜy7����(��J\u001fCrX�\u001b�p|��\u0017C\\��߷�~k�O\u0015�(\u0000�д�\ro�!����g��jI())�؊-�\u0018�\u0006�5y��2�o�p\u0013װ*;zX�^|��\n\u001c_�[�\u0006\bt���\b\u0010�ƍ\u001bw-��\u0014�Vβ�K���\u000f\u0002���?\u001cs\n>��/\u0013��j\u000fD�9>�����B����\u001f��*\u0000mmm;�_�CV�g��*�U8e��\u001dwܱ����PX�h�S헎ʉ�\nnC�k!\u000e:����4�\u0011\b��%�\\�\u0015��h����\u001b���\u000f��|��3ϔ�r�-k�~'����\u001e\u0004ͯ����Ƈ�\u0013��\u0018��+�a�\u0000@�\u0014Z�\u0016&��\u0011\u0019ȵ�|G��Ʊ����kРA\u000f���o�#��0a�� ���QǉӗY\bP���v��SO=�\f)�=)�O{5|�����?�#���\\��\t��4�\u0007�p�S\u001e^\"�x|��N�˧�Z\u001aL�\u001b�+\u0000ت���³@b�\u00106\u0019l?\u0014Q\u000fL\u000el]�`��h0'\u0005I�\u001f��,Yr\u0007�P����F\u0004�\u0016��\b�!���#��Ix���U������~Լy󮦹5��r��\u000f~^�ɵ�\n\n���d�����ǄÀ\u0006��4�\u0002�\u000b�\u0006��_���6lr�|.��4a����\u0012cN�Xn�� ����>��\u0013�{��El\r��4�sC��D\u0016���\u0007���-���+�Q_6�����\u0018����t����z��+>�\u0017����[�l�+adT\u0000\u0000�e�_\u0004f�/�p��M.�/F?Ĕ)S���o;\u0004)�\tS��T�[�h�=�\u0006��\u001e\u0005�2��1�d\u0004\u001c\u0010 �Ґ!C�#\u000b�C0G/\u001f|���o\u001e����1�\u001c��'dr/�\u000eX6mj\u001bK��b�j+�\u001a�\u00000\u0001P3��M�,�;\u0000t�\u000b�\\n��$�k��f\u0003z6c�iп��\u001d\u0016~��\u000e\u000f<���}���|�\u0006ء��v\b\u0010g��k�K�~��J�_O�\u0007�y�3�Ɵ�I~�byk]�\u000fe�K~�<������f|\u001d�|py�䩿\u001ad\u0006\u0005\u0000.�\u0018�lM�|��\u0004ۄ N��_\u0007\u0002\u0018����\u000f?\u001c����^���~�\u000e�|����\u0018:t�\u001cX\u0003���?F�\u0015\u0001�\u001c�3s\u0017/^|Wgt~P\u0017�ü��4g�5q9\u0014 \u001d�\u0019��(_�7�ӝ_\u0012E\r\r\rc�}}���\u0000$�\u0005�$'.\u0015ٕ��P:����rȶ{�\u0017���߆��\u000e\u0016yK'_���0����O~r.[\u0003\u0004�|5#@��g��.\u0000WV�3;tB��v衇�\u0010�\tszr�9����\u0013�W|���\u0019�M&�0�/\u0014�\u0018��속\u0002H;�`m�sM�M���L6\u0017�\r�Y猃~>�4iR)�Rm�\\:�\u0017;a=8x��٘Y��ks��9{\u0011�C��R�h���(����\t���K`\b�bg�ܳ���$@�\u001fa�,�����I���J\u0000]\u0001�>���.�G����K��R�?�޿��;W��Z��*f����񅒻3�'X��0΂\" �/>��\u001cC�8��\u001f�w\u001e��X\u0005�%;@�-�^�?l��&��G���s\fn��z��5\u0012)\u0000�g��c�__L�ևC�\u0006\u0010\rp��[�[\u0006;5�_QQ\u0011\b�L\t;�5`r�� ���\u0014�2N�|������?��\u000ek%�;��\u000e\u00024/\u0004\u0013Eg/X��\u0001��t�oĈ\u00117b?�_�\u0001Z�|mG��Gj��+~uuu�\u0006V�\u0002�H4��BD�\u001f��\r��+R�\u0011\u000e��6l\u001at\u00196\r:)H���\u00053bw�����b\u001c�\f�\u0006\u0004A=3ߡ�>��\u0003Φy!\u0010���h��?��8|�ܹ�<o�cfN��k�C~��앉���2��P\u00000\u0001��������\u0007�\u000b�*�����ahӠ\u0017q���ț��OU��i�q��cd\r����6(\u000b1�,I\b@�\u001b\f��W�eo���1��SN9�����~K�&߷#�j�5���9�#,��X\u0000\u0012\u0018\u001b-3\u0003���v\u0006�\rC\u0015~n�d��#�<��w���\u0010X\u0005\u0016��U��\u001f�/�'k\u0000\u000e0Zw�a�M�\u001e�p�kv @e��=��n[��\u001e/�*\b_��\u001e��5-+������w�ځ�\u0007�:\u0002{�����Q<\u001e/\u0013P�\r\u001d�ӵ\u0002��ve���v�P��S�\\���k����\rR���[�_����_�8\u0014���ﾁv�e��B�z���|��}؜�T��\u0014\u001f�V\u0018ֆ=��`�9\\�>c����t�_=��M:���-���\u0017��^W\u0000p\bP�[\u0006d��dFN�|���+++������'�\u0005\u001b����6�\\f\u0006#��\u00033&�Ǹ\u001e������1��93\u0010�^�ĉ\u0013Ϡ�ta�4��)\u0007�\u0014\u000e;��dL�=�7�Qs%��W|1��+���\u001a��\"-e\"�B\u0001(�\u0012�R��v�RfTi͵��0�\u00167� ��/��\u000b��~,��Y�;cƌ�F�\u001c9��\u0001\u0002�̹�s�=%�}�Mv\u001e�,�$�قI��~�駏\u0013w3\u0007��Ki'���e{����:��_�Y\u00000Um\u0005�<�t�\u001d\u001c3[��_sz����W_�䬳�\u001a��Xk�c:5�͛7�q��ׯ?���\u001a`\u0006>������\u001bn�a-,9�vr�]��}�bs��\u0011�&�IJg����N����ގ}���~�Cg�;&[\u000f��5\u000b\u00006�(\u0013�9]���\u001c?Ǘ�\u0019R�2\u0017�1��\u001a[��\u001f���%�x��~���G\u001f=��V[�5@\u00060b���\u000fz�ᇿ���1���%+N|�\u0006+o���A\u0001��j�%�\\\t��>\fV�Ϊ�^�u*_/��D9>L�-Czc�\u0002�\u0015\u0000�̉7?G93��\\K��|r���3�h\\�r�����o��x`\u0003\r�\u001a�e���\u0001�a\u001c����_N���u����R�:�=(--�~���G��>�8����)u��\u0017�t����>(���[�\n��,@���?��q�_�3�n�i\u0010ή�j\t����\u001c.U�}��\u0007O�\u001a5j�O>�+\u0005d`���z��=�ؗ�|����󩖯�G\\���c�=~�3&����\u0002-oW\u0016��p�PN��\u001e�1d�\u0002�>\u0004��l�\u000b`�\u001f��X�\u001b�\u0018����{\u0005�����6x�%,�����q饗�gk�W��\rG��c�=V�����j�~�BX�+R�\u0010�ƓO>y�w�y�]\u0011���\u0010`��\r'\n��?�(B����!\u0000L\n\u0018�\b��[]��ع���쾗���\u0001.Jn\u001a��-�a�\u0007Ň�\u0001O�\u001e�#�\u001b�\u0006~���=�� \u001c���\u001f~���)�t��9���A���/��\b�-������C���7h\u000e��>9_\u0018��\u0003�\u0012�\u0002��L�\u0016���ߨ\u0001��!t�\u000f�\f�_�m_(\u0000��4h\u001cV�<k�D��!�WSS�\u0007z���#�\u0001v\u0005\u0010�;���|i�\u0005\u0017\\�nӦMz�����C|*\u001d�U���\u001f�o�s�=�^|���G���7hN��>�#�ܑ�oW\u0000�Ѻ�e��2\u0019���!�`\u001b������\u000fhr6(m\u001a��WN�v�m/2��Y|y뭷`\r\u0018�s\u0003�\u0005\u0010�3��K�׏a\u001fC�����\u001d3f̤ŋ\u0017�\u001fo�\u0013B�������G�\fA��>Cr�\u0007X\u0000\u0006�\rY\u0000bf\u000b�ISHIxE\u001f�p�u���J��yB�&ba���\f�\u0017�襰��-���jmn�i��J\u0001O��\u0018�z����q�\u0015W�5��;�|�`o�q�}�ٓ�1�\u0004�g�\b��7�\u001f����2\u000e<֬��\u0000��_�\u001a�V\u0016�j`��a�K�\u0011vtE��W^���3ϤM�V�\u0003�b��S�o���S�o��\u0017H��u͜F~nG੧�\u001a���O\tˊ��ߌ���0��z��o)��C�}��oU�[�\u0010�)��\u001f���0}E�a\u0019`_<t��l`���\b%� ܼ^s\u001dl�)\u0015a�\u0015g\u000e�F\u0000G����\u001f�P\u0006��/B�R\u001eA��v��\tPD�c�ө'+��Wg\u0004`9�Àr&v�[\u0003��a�_�\u0019�<Ļ��*>����~c�A�\u000e��\u000f\u0001Uytv�u�]&�Ϝ\u001fl�40�\u0015\u0000�\u001e\n\t~\u0016�f���&�����\u000f\u0002\u0017_|q�9��Sl\u001atkW6\u001e��׿�x�\u0017>����m�l��W6���d0,'_���]>îo���\u000e\u001dz-6�9\u001a��-v�`w�\b�[��u�yUyte�5�2��G�|s.��сqdƢ\u0000X�zw�<pR멇�_�HsH/\b��M�\u0006]���\u001f�%�9LX�f͚\t���o��<�3�\u001a`F\u0019ӑ��4i�ٰ�����rr�x#��p�\u000f��\u001c2w��[y�_��y��(��S&�凝M\u0007��\u0013\u0000�A��rᥦLxC�C\u0005A��w�}\u001dK�F�Q�|6{:�\fk�c8,�K\u001a�\u000e��l|��^\u001b��sg�:�)�(\u000f���1�p�o���ɝ\u001f;\u0001�N(ߔ�e�-}P�\u0006Ѹd(\u0016�l\u0003Ǎ_�4��?\u0004�L����o�M�\\'t��|a\r����/_s���E=_�ȞД���>�<��W\u0003���r���H~w��^[z��V:���҃@'�/\u000bS�a~���X\u000e`���ȅ�Z�_���\u0002���\u0011�&2u�=p����'�^R�G:̆�\u0017��q㾢\u001e�]Z��\u001d\u001b7\r�i������\u000f��1��Q\\��>�M�\u000b���--�\u001f>\u0002�._Jq:�oP$\"��Aql\b��\u0005 B�Q�G&���\u0004\u0019e&��\u0017\u0002���ҥK'cc�s�/v6_*++�S\u000f\u0018\u0013\u0016��\u0005k\u0000���λ\u0010s!p��ʱf����.������ŋ�^����o����\u001c.\u000289�\u0010a�˗>���\u0000��@��̏�g&s�O.�t�&�\b�\u0004/l���\u001e�;>�%�\u0006�\u0019�z�\u0007v�u�9��^y.�\u001c6S�\nb\u0004,\u001e�_|��{��!��\u000bʿ��\u000e��Of<����>^\n$�0�,_�T\u0016�\u0002\t�\u0015+\u0000�9\u0000�\u0011��\u001f\u0017^��߬\u001d�.\u0014~�7\u0002��7\u000b=����r�˝�x,[�l,N�[u�e�]�M�\u0000��E\u0017]t)VA��Q9ƌ��9����SO=u���??O�mvK?\u0002i._-\u0003�]�P�h~{�2�\u0002����\"�\u0019=���>=�|\u0013\b�[o��\n'���޽�4\u0011AW6\u001eO<�ĽX�6����\u001f!ғ�׷�~{$,\u001b�=��3wz�C:�/z=/����ᮻ���5=\u001c.\\\u0004�Y�\"�]YE\u001a�5���\u0010@a����f\u001b`�|�5��\u0011�̵�|�55\u00040/�\u0019cҿ\u00182d�\u001f��x�Й1'�xb%&�]��K/Y7�N-�i\u001b��n�^z�oO:�\u001f`����\u0007�Y��ϕ�@����x-��\t\u0017��&r�N��oD%��k\u0001�\u0003��\u0002�K�PaE=��P|\r\u0007\u0001�\u00170o޼����i�\u0018��\u000b�\u0001�\u0005܁m�\u0017b\u001f�����+��<�2`���'�������O�o��v;\u0000���Ae�'M\u001c6�\bDE\u0018R.e��\\gs���Og\u0001x�\u0000�\u001a8Qϯ (_�G��w�y�裏&���L�N�,Y�d�_���ˮ���k�g\u001d~�É��v�W^�\r��1�O���\u000f\u0002=�U\fG���Oz8lz\u0010���ҷ\u0002�f�.>˥�\n~\u0014\u000fu�=Y\u0000���lI�\\9����G\u0000g�/����C��t�zg�\u000f�z�\u0003\u000f<t˾����?��[�:����>�v�����G\u001f��oÔF�>ƾ\u000f#�\u0001Ԫ�ƃ�猀_�ȱ��/�g�9}\"����9\u0000�C\u0000\fv���S!�(<��\u001f\u0001�\u0018\u0006Jپ}�����k�]?���9��8��&h��v��,wJ\u0003,\u0013���W��\u001e��~��.�����w�q �]h��&\u000e�^\u0004Ri���\u00179�ٜ>9��\u0005\u0000��\u000e\u0001tS\u0018\u001b�\u0019���K.<��\u001c\u0004`\u0001h�$����n���_�*�P\u001dĖ��\u001fp�\u0001�?����������{oGX$V�2qM�v!]����//_r\u0005�]ga��I?\u0002�⋜� <\u0016�G=}\"���\u0001���WZ\u0000څ�Q\u0003�fp2��D!�S\u0010H̜9����;�kM��(���o�\u001dz�G.�馛�6߽S��G0Q���k��\u00073���\"\u0011�P�4��p�!���R�rga���\u001c\u0004��\u0017C�[�Q�e�.�a��\u0000�k�\r�\t�.��aÌ%�O�B\u0000;�-��KhӠ��uU����y睗\u001f|���g͚5Μ��������v��y��\u0007/\n��45�\u000b&O�<\u0004e�}�y���C H\u001b�&�\u00182\u0015��\u0014I��gȪ��οz\u001f\u0000�����DC�S��$@�������\u000b/�p'l\u001a��Hd\u0014���ٳ\u0007\u001cq�\u0011��x�S`\r�\u001d�\u0013i�{��\tE�\u0014�(f�Ϛ7o~?����h,1��Y�ɸ������;|�\u000e\u0004��\u001732Q��\"M�ɯU������\n�i\"����ڊ���իKz2c�z6\u0017�1��\u0014\u0015\u0004�\u0004��ޜ���;�X�b�=A�\u0015v�����\u0001gcF�)\u0018�8l����\u00114m�=�3����o?l��΂\u0005\u000bzD���\u00181�\"(?�c�����B���O''�����)dyA\u001c[c��\u0016\u0014/x�V��M@��Xz\u0006�\u0003v\t\u0002$p��\fmٻ7\u0012�{�Y:�ǜ9sza\u001f�O�#~\t\u0002<�Y\u001f\u0004��ի{�|��/���q\u0004�۞{��7�|s\u001f\u000b�.�\u0002i�h:�Hx*�s&�O�[\\\u000b\n\n\n�4@}c\u0006�A����@��\u001a6\u0019ܿ�!��\u00006��\ta;\u0014Bh��4��\u0017U|���y8����\u0013'n��2�z�^�Ga1��\u0017��rʦ{���-[���̪җb����\u001b6m�4�=\u001a���E\u0007�4�Œ�\u0014��a�-�\u0018\u0002��>\u0000)\u0018�-8d��\b�xHT�PSS㹑�\"�.]�\u00006\rZ���\u000f��\u0012�[\u001a:�q��/���۷����7n���-}���[n��#���7,\t�A����ĥw�\u0007B\u0019�^�\u0017��\u001e\u0002nm\\g�\u000f�\bef�ls�\u001a�\u0019 4\u0005 3�\t����k[L�\u0011y\u0004�0��/������?�%6l�x���\u0001�\u001cx��'�\\\rS�$��5�.���0o�,\b�*�*�1���\u0017\u0015��2`��?ag��\u0001gm)&��/{\u0010��g�9����/&϶�a\u0006\b.\u0001��`�����Rު�S\u0006d��\"�Ɂm\u0015\u0015\u00157��\u000e\u0013͉T�og\u000b��>�,��C\u000f}�����\u000e\u0002_�N\u0018\n���o��{\fe<�\tuz�;;}��\u00157;���q������2\u0004���\u0012eJ�P?�\tK:fc��\u0006��C\u000bhōS�]��\u0011\u001c�LwF~���~�F\u0000���`����~��9Hi����Wa]__�\u0007\u0013��8]p�E�\u001eCO?\u001f��7_~��\u0001T��\u0019^J>���Z�c\u0018��\u000b/T���n��@�|�ahP�K���:\f�%\u0015\nq�y\u0003�\u000ec\u0019?;���]v�.\u0002\u0010X8Lh�p��e����i�3�/\"L��p�P\u001e6\u000f���\u0001Q\u0016�_�y��X���ξkX|\u0016�p|��\u0011\u0016\u0000��$��\n\u0000��\u001dlAP�j�oӦM<\tP\u0006(��/���\u0006\u001cH�/6\r�[d%��\u0016��B�����@����k*�>X&\u001f~衇������ِ@~�h\u0004�6.L�\u0010(\u001c������1�6?�iY\f�?�͵V��9\f?g>\u0002X\u0019@c֗��N�bӠ\u0017��Hŗ�\bk�S���j��&c.�\u0013�.��ɠ`�{iG L�Pb9>��\b��\u0006\u001a\u0002��[�\f��e���\u001b8p�\u001c��\b\u0001��i�}�\u0019\u0003���7[v|�\u001b�\b\u001f�����~�`s��Y���ʾk�����+�C\u001d��#��\u001a�\\\u0001GT���W����G\u0000\u001b��L�!H�<���:�BL�RL�\u001c��\u001bo|�\u0015\u001b\u000e�\u001d\bd�%�J'���\u0015v��Q��\u0003{�\u0000����\u0015��Ǵ��Y��c�=V����о�p�\\��7��_��_�<��\u0003\u001b�0a��F\u0000�a\f�X�{/ϰ�\u0003�\u0000��_\u00034\u0001�T��q�/�a\u0004�\u0002�\u0000�E\u0000�\u0006����eee�����*��R?0�u5�#�\u0015�{#�\u0002��2\u0016\u0001\u0016�ދ.�����8��\u0001\b��\u001c�Z�c�3���\u0019�\u0000\t�e˖=�M�vEFڷ�K�(W��رc\u000f*//���FS9P�Y�{�-��@|\u0019��>���\u0013\u000e�k�\u001f�������5��T��nم\u00006\r�}��Ӽ����\u001c�\u001f���\u000f��O�S���;\b����X�{/��\u0003��b\u000e�F�Q��f=7'�u�ag&��ˆ�\u0007��{n\u0003��\u001d�%�/�s����Ǘ\\r��g�yf�9����\b���z\u001e�-\b��އ�_3�ho6�\u0005@�\u0000�\u000b�\u0006�����I�`�\u001d��P��J\u0004�L��e�ڵ'`��e\"��V߰���!�\u000f�~���\u001e\u0011��5�\u0010\b�=ͽ�Ⱥh�MKKK5�\u0006�T\u0000�A����p���\u0003ۄ4@�ҘC#�!\u0000\u0015�rč��W�Zuװa��\u0005_\u0002\u001fz\u0013��6jԨ_!oW�a>9Bf�l�\u0010����s\u0014�,'6��Sk��H�\u0000-\n�YS�\"�\f�J\u000f�\u0007'����h�\r;����!'\u0010���og��\u001eà\u0010������j|��fl��W_}��߼pxF U��\u0011����2�p�\u001c���6�����z�f��sn�-r�~MEy2��O���;Ｓ\u0016�ޏB�����\bַo���0l��k\u001e8\\v#Я_?�\u0019� �\riϴ���\u001a�O\u0013��\u0016\u0000\u0011���p�r�4p(O�\b�0�y�f��1/e�a2\u0013\u0001�˛�����_疃0�'#��0��\u00046<ڕ6>�����F�k\u001b�*��(s|fD��PG7�c\u000e�:L\u00060��\"�)\"\u0006;5e�P\u0018���\bм\u0000\u0000p\u000b6\r�����C\u0015\u0018Q�o8����\u000b\u0017>�L�*���\b�\"\u00105>�\u0013�y�#K�9\u0017yy���k����X���d\u001e8�\t�0�[\\\\\u001c\u001cx~3�\u0011�����\u0013\u0005�C���3\u001a&�(�\u0014�ۂ4N����\u001ff�/�\u0012�{E E�Y>��|���9`8fM���~��ۿ+���2��W�\u001ft~#g\u0010���W\u001dy�[C��O��X}[v��\u000eE\u001a�ʙ\u0002��F���\u00131>[�M�kjjj�����\u0000linn���֧C6��%���o\r�/��t�'�x�\u0011�\u0003\n��l\u0006�\u000b簼��|�}��GSnG�y���B�n\u000e@:�S3r]X?�I�r�\u001d{r�%�-�RVXX�\u0006K\u0002\u0002oDυ�Z�_���\u0000X�\t;(\u0010H�������?���\u000e\u0005�ƭW�^W/_��\u000f�Q�\u0013;yC@�r�Ⳝ\u0006q���\u0005@\u001b��}\u0000�ăȰ�k6����ȯ��ُ\u0011\u0010\b�\\���\u0011#F���\\/��^S�3&&\u001e\b3\"\u001f��\u0017t\u000e�#�\n��H�\u001b��[g\u0000�~m.��\u0000\u0000�@�r3�����i�5㗟_��\u0000\r\b�\u001b\u0002�|�͊��ǏD������#�=��\u0007\u001dt�����7�i���B@�r��?%h\u001c���K�i2_S\u00000�h�\u0012Q\u0007G\u0006�\u0017�\u0016$U������c\u0007F�\r��ӧ7b���Q���\u0016V����Q�t�QG�|�W\u0002u\u001a�����\b��?%p\u001c�oy�\u0003\u0001�)\u0000\u0018��\u001e��*\u001c\u0019l�`\u001bP\f\u001b?C����\bм\u0000l\u001at=���n\u0000\u0004�\u001fzo���A\u0013\u0011ݾ����\u001d\u0002A���#\u0010\u0006~P��N��\u0000`3 �\u0016�0>.\u0017$�סL\u0000\u000b\u001e\u0002�����\u0011�\u0012�\u000e&��E开��m���G�[��j>��w��\u000b\u0012\u0002\r\r\r�6Σ�I���6(�;b0��P|\u001d\u0016\u0000�C\u00009\u0004�Ɗ���H]~b\u0004�\u0011��<m^\u0000굶_��% �k1�`Tyy��E<|e\u0004�B���w$\u0003�_�\u0007�\u0016��f\u0001����\u0016�0?N)��:z��\u0012bGF \u0005\u0004h^\u0000�\u0017\u0000%��\u0014M���w�8���\"�\n���@�\b����f���\u0014;�e��F�\u0015����*,\u0005��{!�s|j�\u000f\\,�1�2awF�\r�伀\u001b����a=4��\u001dr�!�L�2Ŷ]0��ό�\u001b\u0002����?ۨX~��-`V�\rP���Y�\u0000������\u001a.X�A\u0015�p��K��\u0004�|e\u0004<!�~���wC\u0010��~ץ~={�<qÆ\r\u0017O�:�f\u0017qO��@��\u0012\u0001\u0016�JX��a�K��,�\u0002���\u0000��\u0014t�fvqo<�ot����l�O5A�\u0003=�c\u0004�#�f͚�C�\f\u0019�����],h\u00186o���ۭX��%��S\b��\b��\u0000���V�lk�݀\r;��{8�wq�>�+\u0000�\u0019Ƞ\u0000�\u000b�\u0006���������s�2�`\u0004�\b̛7�\u0019�\u0004�����\u0010���?t��ً\u0014~��\bt)\u0002a���\u0017\u001fY�ۋ�[7��ߡ\u0000�Kh\u0005ʂfᯄE�\u00186��\u001faGF \u0018\u0002\t��\u001fDo,���Q���C\u000f�\u0000��6.\u0018,Z~�\u0011pG\u0000\u0013�}[\u0000�nOs/>c��b�\u0017��=�\u0002\u0010��u\u000b��\u0014�k,�\u0005\u0012��Tȅw}W\u000e�\u0014q\bF��\u0000,\u0001�1�_��}~\u0002��\u0002� XC�\u000b#�u\b�Ҟ�R���\u0019-�\u0018�_(��N\u0003���������\u000b��\u0015\u0013�LN>\u001es\u0013l#@�(OƘ��\u0011\b\u0017\u0001�\u0017Ѐ\u0018?\u000e7V��\u0011�G\u0000�T�{�|X~�;�N�r(���_�\u0000�\u001d;v%�\u0002\u001a��\u0014/����#\u0017���\u0003fl\u0001��.\u000e�\b0\u0002��\u0000d��6���!�A�_ҿ\u0006;zjG\u0001ӳP\u0000b;�c+�\u0004�#G\u0012�,�\t\to?\u0015�����\u001d�b\u0004\u0018\u0001F@F ����3X��\u0003k}���\u0000P\u0001�L�\u0005rA\u0004�g�S�܂`��0\u0002�\u0000#�\t\b`މc2Y~�&?��u@\u000e\u000b̼��\u000e\u000b@ҭ��)\u0007�r��x�I\u0004�\u0016�W󘗲�0�\u0000#�\bD\r\u0001�6.�����oQQ\u0011Y\u0000���\u0000h\u000e�Dl����+2�'���>?�㰌\u0000#�\bd*\u0002��>�2��U��&@J\u0005 Aˀ�KX \u000b@We�+�31}^���\u0018\u0001F�\u0011�d\u00042�}�D�O\u001c�ӧ�A�\u000b\u000b�6)`�ĉKa���A�\\x��`/\u0006O3d=\u0017\u000e\u0007d\u0004\u0018\u0001F B\b��8�\u001f��\u000fQ�\u000e�I\r��^!��U(\u0000�[r3�9r\u0000�{.��\u000b�\to�c\u0004\u0018\u0001F [\u0010`�\u0011��p\u0010�y���\u0006w�\u0015\u0000�#�\u0002@\u000e�$�k������/<`�\u0016\u00007�?#�\bd,\u0002b\u0012 ˏ�凓�'�\u0000s�l�(\u0000�\u000b�\u0012��6.��/<s\u0019�3#�\b0\u0002��\u0000-\u0003d��5�\u0003\u0016\u0000�l�(\u0000n\u0016\u0000.��)�L��^F�\u0011`\u0004�\b��כ���\u001c/\u0015��b㐊�Uu�-\n\u0000f\t~��ܬ,�T>��\u000f�gT&�\u0013dT��\u001b#�\b0\u0002��\u0000d�a������LQ^6��/m�_�1�\u0002PQQA�\u0001\u0018�\n�\u000b)~\\�f�-�g\u0014����rX@c\u0007F�\u0011`\u00042\u0018\u0001���\u0002���{A�*/���\u0016_ے�b��㏧#\u0002�\n\u0000\u0005�q�3�\u0001�K�\u001f��{��*��\u0018�3#�\b0\u0002ي\u0000\u000b�%\u001b���dz��\u0003\u000f��\u0007�X\u0000(Yݻw�\u0015�0>.g��\u0017�ئQ���\u0019\u0001F�\u0011�:\u0004X�{/Ұ�%�˟᫱\t\u0013&�����V\u0018�\u0002��h\n���5�\\xVL�\\�\u0016\u001e\u000f\u0001�!��\u0000#�\r\b�Mԅ����mO��ϥ��י�G�.hll��O(\u0015�����%\u0003�P\u0001\f\u0018��7���\u0010�\\=z�p��=\u0019\u0001F�\u0011�d\u0004�Z9���N8�R|�XV��۷���E\u0016�\u0004�R\u0001�UVVv�0�,\u0019@\u0016�2\u001a��a���k��\b0\u0002�@�\"\u0010v{���}1r�H� X駝�C\u000ef\u000b�6F��\u0014>\u0017o��\u0017H�_S!��%��+\u001c�\u0011`\u0004\u0018��C����\u0012(;���~OO���nI��nK�;��\"¨\u001dL 38`3\u001eB ��'\t\u001c�0$\u0013B�IL&�\t��@\u0018�Y\u000e�mB�!�8�\u000ev�36�(N#F��(n�\rnk�V��z�~o���n��[U��-���W�tW��ݺ���{���Z�R�j�� t��\u001e��yBa�\u001e������c\u0000��@5F�ͦ\u000fc�\u001a7iP�ŸWK�r+G�,1\n\u0011 \u0002D�a\u0010(g�S���Y褦��mx\\����\u0014GFFV��\u0007�\u001a\u0000�.P�\u001d����86h*� �u'\u0015l\u001d�jzN�t�L\u0004�\u0000\u0011H\u0012\u0002�\u001f����@�o��w�\u0013�������\u0012~�*IG\u0019\u0000��\u0001b)<��3烶\u000e,��n�j��V�D��\u0016�\u000fD�\b\u0010�\u0016B �$�����Y^���tuu�\u000f\u000f�/�F\u001e�/��\u0019\u00002F�,����,�{�Y\u0018��V5&��\u001eSX�N\u0004�\u0000\u0011h\u0016\u0004��8ꏚ}�;�\u0000����_v��)��\f\u0000'��\u000e��\b0&�����(��\u0017\u0013fF#\u0002D�\b�\u001c\u0002�\u001f��\u0010��\u000e��\u000e�{\f���@�R���~4.�B^\u001e��xILoyy�3\u0014�\u0003�\u001eD�\b\u0010�&F\u0000�z`\u001b����\u0014c�{����Wgff�i�Gw+\u0003@�\u000bt��D�~\u0000S��!�' �\u0014^m,7�\u00020�E7\u0011 \u0002��@�\u0010\u0000�Gm��\u00131&��l����g�\u00000\u0003�\u001bk\b\u001fV�Aw\n���\u000b~D�\b\u0010�VC�����C�$D�n�2\u0000ByeK�«��B\u0005�\u0000\"@\u0004�@�#����\u0012P�^(�/ �\u0004@�ǻĉ4\u000001�1�P'�\b=\u0017�W{��,���1\u000f�t\u0010\u0001\"@\u0004�\u0014\u00015ω����CW�\u0018j��x񢻛o\u0018]\"\r����\u0005�\u0007��\fH᭯�E\"@\u0004�@3# \u0006\u0000����\u000f`�\r�d9�+�\u0006�$�\u000f\u0003Px�'<e\u001dG\t��D�\b\u0010�VA@�r-�L�G��(��_��e\u0000`v��\u0012�`��-�D^Q���c��1\u0002\u0011 \u0002D��\u0011��/�(����^��tw�s*�\u0001��������D(<\u0013�pw\u001c�\u0007 \u001c?�\u0010\u0001\"��\b�K��?��3��P�A�?u�ҥg�;�����\u001f�\u0000H�۷�\u0003߾N/�J��SHD��\u0011^tj�A\u0004�\u0000\u0011hn\u0004�?�˯\\����gI=%����\u001e�����;��\u0017a�m�{�#\nO!\u0011}/Gx�u\u001c�2c\u0010\u0001\"@\u0004�\u000b\u0001�/����/�r�J\u0015=�a\u0006@jhh(���k3\u0000$r;��,M۾}�l)8G�)����\n�C\u0000ј2\u0006\u0011 \u0002͋\u0000\u000e��x�s��i\u0014J-���m���x@�S���م�\u0005\u001d�b�\u0001�n��9]!uu-����ŚY\u0018�rN \u0004(�\u0018OA�ҏ\b\u0010\u0001\"�\u0004\u0004ZTY�����B�<�3}V��Ӣ���Wt�/Q\u0002\r\u0000�RX\\��F��s�#G�����6\u0012�嬴0a��jz\u001c\u0002\b�8��\u0000\u0011h\u0005\u0004�ʸ�i��>��Ք�P(���nZz�u}.��\u001e<xpU�=\u0000�\u0018�n) 3����9�-����-v\u00054�\u000b�}^g5��t����e�٠\"ӏ\b\u0010\u0001\"�\u0012\b��Թ��� �VY��k������3�O7�0\u0004S,���D�\u0018\u00002;P\u001f#ظqc�رc��',�\u0003b���0\u0014몲0�w$-=\u001f\u0000� \u0002D�\b$\u0004����Ֆ\u0017��\u000f�8q�r�\u001e�z�\u0013~nO��D�822\"\u001f��\u0001 �\u0002�ف��i�,g\u00008�_q\u000e_�_V϶{��1�NBz��f��n\"@\u0004�@�#�\u000fHW!�ʒ��^/-ʋ\u000fv��ӷ�>�-���;D����-��*\tS\u0011<B\u0011Kaxx|\u0011�\u001e�/?�Kd\u001e��_��U�¨�䞔�8\u0007@�:��\u0000\u0011h5\u0004d\u0019`T����+\u001cjQ^\f�/ONN>�4\u001d忲���,=�%}�Q��~�\u0001 c\u0004A����s��b���p \u0015&�Z\u0014&���e�3\u0011 \u0002D I\bPT�Z\f��<\u0002��ȗ��������)�2\u0000\u001c���@s��\t0�a��/\u0019^��«Lx\nK,�t�6��;\u0011 \u0002D�U\u0010�\r\u0001PT�?гr���e��>�/�C\u001e\u0003�4;0�R��\u001e��8o�YF��)�ʅ'\u0018\n~�ʡp�\b\u0010\u0001\"Ь\b�\r\u0001PT�?\u0016w���5��?���޳qE\u0019\u0000j]`������y\b�k*a\n�*�\u0005\u000e�(ly'\u0002D�\b�\n\u0002AK��?��\u001f��C��;���6Q��o\u000f��s��S�\u0001 �r.,/�_\u0012�«NxA��#\u0007�%\u0002D�\b4+\u0002A�\u001ftK��Ibz�t��\n�r���F\u0019\u0000����;v�x\u0000C\u0001�G���<pX\u001d&Y�\n�\n\u0017\u0003�\u0000\u0011hr\u0004�!\u0000����Q�\u0017�����w���٢�\\�/o��\u0000Hoۖ.�rY\u001e\u0011\u001c_^��A��.Y�\u0004�A�\u000e\"@\u0004Z\t\u00015�)����/i�_{�ƿ��X�D���*1\u0000�u���/�,Sx\n��\u0012�\u001e�\u001a��t�L\u0004�\u0000\u0011hd\u0004j��%9�T*�*�H�\u0006������]��u�\u00068S��J��\u0004C�\u0014~�:����D�\b\u0010��B\u0000m���S���4��\u0003�}\u0017��|3 |�1\u0000<�_\u0012K�V���>\u001b�p\u001c�$\u000bOᣓ_\u001f\u001fS�\u0013\u0001\"@\u0004Z\u0005\u0001���ۿr˘t��ɴ}a|||\u0006�E��\u000f�6\u0015�\u0000�)��m\u0006?\u0015���;��\u0013p�!�\u0015\\\u0006\u0012\u0001\"@\u0004\u001a\u001c�j�?ꏶ��R�\u0010q%�?%g�෱\f\u0000�T!s�\u0001��p�\u0013\u0010���p��\u000bV�\\\u0005P\u000e�\u0018�\b\u0010�fC@�qT��%\u0017�/1���K�.=\u001b?\u00157fJN�U��\u001e\u0000�<a�T!��\u0004\\�\u0003�\u0000�V\tF݃\nC2\\A��\u001e��D�\b\u0010�fB@�8���%fї�������2���6\u0003@\"�CX �/E�%�EX$�NDaų\u0014&�'V���g\u0005��D�\b\u0010�\u0006G\u0000C�\u0015�0i�}Xy�k'�l��2�L\r\u000e\u000ef\u0017\u0016\u0016\\}��\u0017�\f\u0000t\u0013����Ӈ)�R&����s�\f�\u0015��\u001b[X+�WM�a�0\"@\u0004�@# Pi\u001b׊��M\u001e��B�~\u001a��\u0016l�7�Ң���}G1\u0007\u001a\u0000�����˵\u0014�T!5�o$�;�\\w�϶����>�jz\\\u0006\u0018�\u0001�G\u0004�@3\"PI\u001bת�}���ʋSc?\u001e��\u0000������\\N�=x�߲�\u0003��\u0011�\u00022\u0013�T��\u0017/>����������IK/\n\u000f�\u0013\u0001\"@\u0004Z\u0015����Q�Ő�#гOǔ�3�O��Ǿ\u0001�ҩ�N\u0012\u001e\u0003@f\u0007�c\u0004�)F�'�g$��xz\u0001�\n��6�s���Ϸ��\u0007�\u0010\u0001\"@\u0004�\t\u0001�\n N�[��71�S^(s��5�����=]�LLd�###+���ߗ�\u0000\u00002�IDAT��\u001a\u0000�.P�\u001d�˝��2�����\u0012\u000f|����2\u0002�K`��\u0004&\u0012♄�*�\u001e\u000b���D�\b\u0010��C �J�$���p�\u0017��N���?��.��ٷG_�'�|lll\t�]�/�͔\u0012p���-�BP�R\\�\r�\u0013�\u001f���|�\u0019\t���\u0015�\u001d\u0007�؉!b��w����o}����+N��g$!���F�|�\n� _ȗPr\u0004\u0004�×\u000f�ï\u000bH��ը���d���\u001f����+\u0007��+ww�>��/^ғ?<<��G��0����\u0001H�<y��\u00110�\t$b�+}���7\\�03�̺�=��c��h�\"W�\u001c2��8\u0011�`\u0004�\u0017�%�\u0019���K0_�a�\u0000l\u0006�K!\u00189��U��\u0012\u0003`~�s�6��\u000e\u0001�\u000fdv`5����\u0007�7o�q.���Q��\u0017d�]$0��G�Ipb}��\u0016�|��\u0015�Y��\u0019G�~�\u001c�/���{6�/q<\u0006@iv���@\"F\\��s&*�1�@M\u000b�'��l�>2T���\b\b _ȗ\u0000Z�z�/v��\u0000�P(x����mn�?:::��X��!\u0000�W��%O�/��wN\u001dB�_&\u0011ʽH\u0006;\u0019��$~�/�#z8�B��|�z&_�._0��a���*D.��7ƾ=Nr�\u0007���_^�9\u0000\u001f\bɰ՛人�\n\u0003��\u0007�\u0011�\u0011=�|!_t>D=�/�|���?\r��*�/i�\u001e�����Q/Owuu\u001d�!p�5\u0015-�d�&�\u0006���\u0011?\u001f),\u001e�\u000b�b��/�|�\u000b_�a��[!\f�#=J���\u0017�z\u0000��l~q^^�\u0010���\u0012��H���K\u0017���<<��p�/�K\u0004E<��K<�`\u001e��\u0001ܺ(\u0011H%\u0006@\u001c��\b{jj�������#\u0019�!\fB�G�¸\u0011�O��/A�\b�#_�Ɨ�\u0003\u0007\u000e|ɐKl�k�.й!�7ܳܗ�b{`���\u000e���1f`��\u0012�3C�\u0018�/&'ln�|���\fk$�@/��ĉ\u0013G�<����\u0006?�3\u0007������M�b�x}���F\u0002�̛��?6\u001eA�\b�#_ȗ0n\u0004��/�K\u0010/J~�;::��:uJ���U���������C\u0000\u0015�\u001c�\u00003\u0018\u0006�33\u000b$?�or��&_�\u0017\u001b?�0�|19as7 _�]G埒��G,\u0003�9U��d �:C\u0001\u001dF�\u0007��qF\t�\u0001�VYs��\u001f\u001b\u000f\u000f!\"\u001c�\u000b�\u0012A\u0011O0�B�x\ba8�+'�o����w�\u001f�F�ʙ�S�#�\u0007�9OX?UH�\u0017.G��^t\u0011�\u0000�NF$?ɯ�\u0017�N��/qx��/��B�{#�\u0005��>�����͕���PF?��f\u0000�\u0010�\u001d\u0013\u0011�y\u0002\u0015*G\u000e}}}V(\u0014�P8\u0001�D$�݈d�s������\u0010�L��/Q\u001c�Ó�\u0017|�O�ܹ���5W����م�\u0005W��\u001d�0\u0003\u0000�\u0004{s8�э\\���\f\ft.�X��t�R��h؟�@~\u001d\u0001���A�C�3�B�DqD\u000foT�`�{��?\u001b��\u0005=��i����+�>/\u0005\u0014M\u000f�O���m۶4�\u001fN�\u001e�8\u0007\u000b��\u0019wגAz�O�>}\f�@\u000f�����٨dUYf���*.Ĺ�/�K\u001c��8I�|�C�ްcG�P͜;�[鞖�|\u0018\u0016�\\�t����\u0002�Q��+\u0012n�\u0000H�F�\u0014\u0000~�\u0016�_^���/f��\u000fS�\u000b\u001a񮤐_���R9(.Ĺ�/�K\u001c��8��\u0017���������\u001dzO~{{{�t�\u0003��\u0000�ف�\u0018\u0001�ԋQ�\t+`\u0003�\n�a����\f�y�Wν��'�`��\u0018���\b�~�~���\u001f�$�Ȏ�{�\\�\u0017���߷o_���\u0017t'&2ő�\u0011��w�\u0016v\r\u0000Y\u0017��\u000e��\u0002D^@d�yp�\u0015��e\f��ɓ���?\f���+Id\u0010 X^6��\na\u0004�/�A\t��|i,��c��7n�[TB�vΝ�!�W�>\u001f\u001b\u001b[B���w)\u0003�3\u0017@,���q�LM��J\u000f�\u0003޷����d �E�6\u0016Y)\u000f�#N�Uq�\u0017�Eq!�=�|9����\u0005�M-��ޓ =�%}�Q��>�\u0001 c\u0004A���\\�=��\u001f�s�����\u0005�\u0007�o\u0011i9�\t$�\u000f\u0016Ι�A\u0012�A�Pل�# �|!_\u0002h\u0011�\u001e|�f7�aOOϲ����\u001f�U=�>�/�S\u0006�<�!\u0013�1\u0002' ޿X�_%���B��*w�}=�6�C�j\"\u0012�<�X���\u001fB��/~V��$�/�����n�}EP�����s��9|\u001e\u0003�4;0�R\b\u0017�\u0013R��_�2\u0004(�_\rK7�d0��qb\"\u0012�&_�l���\u000f!_�\u0017?+�}֋/��\u001d���n+�Z�KzqV况�W��\u0005����\u000e3�\u0002�\u001ek\u0014=�\u0005�\u0017��{�\\u4�ϔ\u0007\u001bK;C���\u000b��e�ݕT���.}����M���n\u001a�z\u0000���\u0016P��\u000b��\u000fH*\u0019�*B�DG��L�P��\u0019�\r%_�\u0017/#���\u000b6�Y�����z*)�{*�\u001d��Ъ��U��w�\\:�\u001e�&\b\u0007�\u000bl�.�S��h؟)\u000f���\u0010o(�B�x\u0019aw%�/\u001b7n���@�_��R\u000f@�&�W\r\u0001\u0004�o�����\u001b\u0006\u0006\u0006v��̜�r�n�'w*k\u001d\r�s�+�B�|QHD��\u0017�/�,Y�A�Ԏ/������\u0007�\u001a�{@���^C;�f�W\r\u0001D�Q�P����L�ޝ�c(���;��u0\"�Y9kW9\u0015�4&\u0014\u0012�w���f�Z���\u0005���\u001aA��D�5\u0000j��թG�\b�c���U2��WP�w%�2\tJ�K<�H,�|��\u0016�E��e�����g�\u001e9_��\u0003��\u0001X7�/��\u0006D�KK�Ocn�O�̕{g�V[�\n��$?�+���3�W\u000ecȗ��\u000b��gl���ȵ\u0014���W�M��\u0001���\u0003�;u��\u00038\u0014�+\u0000�_6\u0000��:>s�X�/���/a���K|Ƅ�/_8���Sqc\u0006��*&\u0010���\u001f�\u001e�\u0000H˩B����tajj�WpN�\u001cB\u0014�\n\u0001;��͈L�����M��/6~�a�K��R(\u0014��k�fr!����_N�U��\u0001H�y���B��K�\u001a��r��2\u0018ugeJ^e�HT�X\u000bg�`�XcC�\u0013��>|�\u0001�[sss��%��Qs�?44��O��\u0019\u0000)DnGc�.\u0015�\n��)�ŋ\u0017?�\t�Oz�\bp���C�\u0000�cyQ\u001e�G,��\"�/�K\u0012��a��뮻>ZNY\u0011���pp0�}w\\}�w\u0014�\f��\u001dw���\u00027��R�%���E�;m���`�a�\u0019F��/&'ln�|���\f�𥀰w\u001c<xp����]k�\u0016}�߿���һ��X����X\n�܎�\u0018\u0000�b1���)\u001e=zb\u0016q��҅����:::v�CZޜG\u000b�f�Xn���\u001e�(�H�\u000b�B��#���V?Ѓ�A�h&\u001c-_H͕��䷵���|��\\��y���C�\u001c�Ĵ\b��?��3�aqqW\nJ��!�:R�W�5�j\u000b�\u0019=\u0001Oa�\u001d*I�k�\\\n�r�ď��/�\b�~�~���\u001fb�\u000b&�=�q�[����>��K3Qg\u000e�xB�\u0016r���˗��������9��3\u0004 �\u0003�1\u0002l�[���|_Ą�w˃\\6���(�?�ce/�1�\u000b�B��#���\u001f�]?\u000f���e��>�ob\"Sԕ�H�5\u0000d]�>;P�\u0005D��xW��_2d^X\u0016x?fP~�����)�M��_\u0014G�p�|��\u0010�L�x�\u0002��Yt�\u001f�­\u0014^�/�aW_�'�|lll\t����\f\u0000�P�X\n��㋈\\W��ٶmۯ�\u0001\n%�s\u0003����g��Kֲ�Cd�G���\f�B�$�/�Ug7m����e^\u0017���#=�%}�Q��?�\u0001�-y\u0003-�z\u0016\u0006�\u0004\\������\u0003��B\"��Ɨ�o4K�b�/��\u001a\u001b���\u0017?_�pabbb*\u001a��/��\u0019\u0013�����)ɟ2\u0000�������\bb\u0014BE񽼖K\u0007w��>�\u0017=H�����r�+g4jk1�\u001f�[cC�\u0013�B�`������8�ٯ��\u0014���B�\u001c>�\u00010<<,�ꁖB\u0004�׽0�\\��%�oG�J\u001c�ʗ]VNVN\u001f),\u001e�\u000b�b��/�|!_���aΚ;i�G�5�uח��=:::�WZ���ؿ�+Q�R��R\u0018u���-[�!�%yq܋���3.W$\u001e�B��/�\b�~\u0004�\u000f,�{-��=\u0010��\u0013rU�eD^ڂ6\u0002���\u001e~�\u000b3??\u001c\u001b\u0004\r\"\u0013����=���d\r���'~����M��/6~�a-ėO`\u0015�\u0007��\u0019/�����\u0007�\u0017\u0010ã���������~[>[�\\�b�a,/\u001b_�\f1\u001e�\u0017�%\u0006M�(�K0_��\u0012_�/\u0004P�5��ԗ�\f�\u0007�\u001c\u00003��wa������ݸ\u0000�\u0013&m\f�q#_�����\u0017��\u0010찗{\u000b��N�K�+\u0019\u0002���wp���,�\u0002��x���c�d���\u0010�H��/�$�\"�/䋢\u0003>���ҥK�Q�{C�ˀ|9^��\u00004Ta���o�Q�z�X9Y9u>D=�/�K\u0014G�p�|Q|�G�7\u000f\u001c8��\u001dpo(}\u0019���r�\u00004da���`&�9��\u0001ݬ���A$\u000f�#_ȗ0n\u0004��/�ƋiLH�\u0015g�|W��\u001f\u001bR_�\u0019�s*n\u000f@�\u0016ffff\f�ػX9Y9\rr[��\u000b�b%�\u0011H��/:%���ۚX����\u001f�'�\u0001��S����k�ß�Zmz/x���\u0001=��\u000b�\u0013�t4��l�ظ�\u0019�\r%_�\u0017/#�V������Ν;��R7��r)�)9�W�=�\u0007�9OX?U�Ze-�\u0014��1�����(�\t)\u0018��\u0012o���*gT�Y^֏(����\u000b���\u0001�ǰe��\u0018~����hh(���k3\u0000R��\u000ee��\u0013hT�/��ر#��\u0014ߌ����aE\u0017+;+{9�!_�\u0017�%\u001c�V�\u001f؆~\u0006��\r�N�\n�1\r��\u0007\u0007\u0007�\u0018�p�9$W\f3\u0000�M�7����Fnd�/\u0014���939�\t�o\u000f�dxH��5��WBX^*�(����\u000b���!�\u0015�R(\u0014~\u0016�͞\u000e({�+������\u0015W���Pt�\u0002�B��R��v��\u0000�����R�x��Yı\u001e,���?^Up  �!p\u0007\f�\u001f�3a{nE���k\bP�T^kl�~\"_�\u0017�%�\t�wvv�C�?�WU�\u0005�?�+-=�mm}�Hη��e��7o.\u001e:tH\u000e��\u001e\u0007\f�t�gtK\u0001�!֩B!��\u000b8�y��?@H��c �ᜉ0v���\u001c�\u0017?+�}ȗ��\u000b��Ǳ��\u0004H�.�- \u001fa^�\u001c>�'����X:����g\b@f\u0007�c\u0004X�P�:O8���'8�2V�1�\u000b��Q�\u0003\u001c*\u001bC�al��\u0017/#�.���\u0002\u001dr\u0006���\ri�S�\u0019Y\tt:��о���\u0013\u0013�����\nb�'��\u0006��\u000b�g\u0007�r�%�\u0002\"7|�P�e�&\f�{ @��Ì�����Ӕ��|)_�\u000fQ��\u000b�br\u0004���\u0018�=>&O\u0019a\r��e���zO�����\u0012��*)�2\u0000\\+A<�R\u0018\u001e\u001e_�cS*)�\\�����l������������!��|!_�Y�\u0016�|i\r��\u0003�]����d���P��R{��/�s����\f\u0000\u0019#\b�\u0014\f\u0010\r\u0007\u000e�\u000b�\b�\u0003|Ze���5*���y�|)_�\u001367�B�\u0004�\u0003_��C~>i�5�~��\u001f��z�}�_~�\f\u0000'\u001dlp�\u001b#0^`s6*8E�\u0017�.\b�\b+;+���f\u0018�B�����ɗ��\u000bt�c��7{�\u001bU�)J����\nQs�<\u0006@iv`����\u0012r�����\r\u0018\u001f\u001f_ڹs˛1\u001b�y=��\u0000��af��\u001a�[��)_�7�\u001bA���\u0017�g����(�������\u001b2\u0019����Qٰ�:�����^��\u0017�\u0002_~��X>����k��{��^�I\u001d�wvQ�\u0007 \u001f�ժ�=��\\\u001d\u0002`X?����g�h\r��N�H�!܏kR^7}��QϏe�\u0003���_�\u001e\u0018\u0018x2�I�\u001c\u001a�J�K�\u0000\u001c�\u001cTՍ�S9�/�,Y�A�ԇ/�Z,������(a�2\u0000�\u0018\u0018��)-�3g�ߏI��_̵������k\u0012�>Q\u001e���\u0011v\u0017�B��1\u0004���=55��\u0016ޔ��ܞ����5\fB\u001f�\u001a\u001c,�8\u0002���X�m�%4\u0002�x��0(au�/䋕 F �R?�����X-�\u0007�H�Z�i�|��\u0007�\u0015�)\u001e8p�\u0017��\u0003�\b!\u0002+g�*g�|(\u000f�#�\u0017a~�\u000b�\u0012�\r�\t�\u001f_�z�p+跰����$@_@�G�������\u000f\u0018��=��T�\u0000�c�a���Sِ/~V���/u�ˣ�����*1��V�V�oWJe�_N\u000f@+�3�a�\u001f\u0003>cA\u0018�rֵr�DByP\u001e>RX<�\u0017�%�\u001e������Ǔ���M*�\u0001Њ���F>�?�n��A�s:Y�x����\u0010�L��/Q\u001c��ɗ��\u00053�O���'&&�J2iY��sN{N��?p�2\u0000�S�����nQ+�z�Zx���\u0019ts�\u001aĸ,��r֯r*��wʃ���\u0010�L��/\u0016�L#�nL��^)N���xW����SU��z\u0000���S�ZM�+ `\u0004���t�.���!H��c�\u001e8�\u000e6�l|�\u00041\u0002�\u0017�Š��Y\r_���\u001c\u000e������c��4���u�RCCC\u0019��_�\u0001 �ۡ�܉����\u0015\u0019���\u001bA���Ȧ\u0010��T�\n��{5�3(u�G�\u0010ċ0?�|\t�\u0006��2>�^�ܹ�Kqj�\\\u001b=����`vaa�����\u0018f\u0000��`o\u000e�\"��[]����2̱gϞ\u0007��̻�$T���\u0012��Ɨ|�A\u00137\n�B��d��P%_�8��M333�\r�\\���k�?����+�>�\u0002C[�\u001d\u000b(y�ͱ\u0014r�\u001di1\u0000�E�ZZ�\u0014�\u001e=1�0��\u0002Z\u001a�c�\u000b���zI���k�I?y���)�\u0010x�zG9�*��{\u0015�cc�#�Ń|!_,��\u0005�:_0�����ӟ+\u0015���Q��Mz�����2�|��\\��y���C��^n�\u0000p�\b�m�M�����\u0000�\u0012l{��'�\u0001^\"��\u0002[�\u000f�xQ\u001e����X<Z�2�Egy�lLN���\u000b�b�\u0019V\u0003��\"��}�t\u0013������\u0001\u0003(��o�b\u0000\u0014\n�\n�\u000f\u001fv��=\u0006\u0000f\u0007f�M���ZN�\u0001 �}��ߖM\u0012\u0012��Uy1\u0017�06\tZ�\u0012�W\n\u0016QW\r��y\u0005�cc�!D��|!_\"(�\tnu���~/f��T��)�}��uJ\u000f�|ċ\u0001p��B\u0011G\u0004/\u0003\u000f�0<�\u0000�u�gϞM�����\u0000\u0010k���dF|\"���)�\tx\f�\u0001�;�_н�+�Yf������M��/6~�a5��oB��I)��)\u0019&�fW��{1\u0000zz&\u000b����%��*�FM\u0002�L\u000e���\u0014���\u0013��K�iC����\u001f*�y�\u0001Y=I2=6�\u001eBD8�\u0017�%�\"��V�\u000b&o�\u000e��\u001f�\n�H��ۃ�l��=�_��\u0019\u0000�-Y\u001c\u001b\u001b�Y\n\u001e\u0006�;Z\u0015�\"\b�>\u0010K?1�A��+�)j������M��/6~�a��E�?>�~��n��#\u00136���\u0017x\u0016GFFd\u0018ߧ��Gj\b ��\u0014�����L\u0010\b���\u0012r��\\M�C��\u0018F�p��e,\u0005]*?\"\u0018TKV\u0013G������M��/6~�a\t��obC7�����Ȑ���ssm��\t��\u0007�IkxxXf\u0007R�\u001b��N\u0019\u000e����N@eҋMc\u0007hp_\b\u000f%�\u000e�\u000f��J\u0010#�Z��&��ۿ��||c��\u001c�֏o�\u0003�v��qkDC^��gy�ڗ�^X<�o�u���Ӌ�/�+T\u0018��B\"�^me7����lLN���K���\u0017�<ۿ�}q\\\u0003�Va,a�S�\nl�#�O�n�\u00046���0�\bb��r��G/��!D��J�\u0014�\u001b��$��W�H�\\��w5\u0006@b��\u0002��kR#�1�8�N�\u000eD�\f��8�{���%�����Ha� _�\u0017\u000b=|A��\u0017��\u001f��\n���&^\u001f���\u00057��?���=\b6�X�\u001c\u0019�\u0003�Bgg���%l\u001a�-\u0017�]�T��r��Q9\u0004�\"̏|!_¸\u0011�_\r_����`\u001f��J����~�+���Պ\u001fR�k�_����{\u0000F���9�\u0002�v���A�2=6�A�\b�#_ȗ0n\u0004�7\u0018_�������u?�+��Wrv\u0013Q\u001e\u0011w*C��xa^�\u0010*�!l��]�ן\u001b�2�Ys��?*\u0007\u001f),\u001e�\u000b�b��/�\u001a��\u0003�4\u0012�{vv�X)a�#�>�\u001f�Q�\u0001@�c�\r#�\u0006�\u0013�\u0010�\u001e4��fZ�fzl|�x\u0011�G��/a�\b�o$�`��S���\u001b���W�+�Q\f}\u0014$W�/\u0015w\b�`�\u0004\u001b+\u0003��)�/�8�\u0011\rh*k���\u0012:#�ύ��\u0006��#��x\u0011�W%_\u001e�\u0010�\u000fS�צ�\u001f2J��?r�c\u0000��T!}o�j�\u001c�Җ7&�������W��\u000f���\u001f\u0018P�\u000b\u0013�]U6���0=��G\n�G#�\u0005���G��&&&�JYny�a����M��_w�_�\u0001��󄻻\u0017�xT��xB��N��۽{�\u001b��ԧ�(T�&\"��Fj��r��Q�\u0006�\"̏|��\u0017t�\u0010=�?1>>.{��Uke���RCCC�˗/�C��b����Dn��r#S�{��r�a8�\u000f\flz/��[��l�L�\u001f\u0005�Z8\u001b����\u001ajkOď���!��Q���~�%�/LMM�\u0007w�CmҔu�˛\u001a\u001c\u001c�.,,��\u001c�\u0016�\f\u0000t\u0013��a,ۍL�\u001f]��\u0018��6l�Z���>�ɤ~\u0012�Y�o@EW�Tΰ�3T6a�\b�'_ȗ ^��\u0012�S�\u000f\u0018�O\u000bw�S�G}���uO�>��_q�y�W�\u0006�c),.�r#����&�뼑(<L <s����\u0018�2�=�'��ƒ�e4K�b�/��\u001a\u001b��\u001a�/�\u001d}\u0016K�^�/���\\SĜ��a�?��'_��===Ń\u0007\u000fJ/K��\u0003��\u0011�\u0002�\u0011�T!���3��\tO֯vuu��\\!���{l����XɃ���\t�F�?�B�\u0004�\u0002m�c�!�\u001d��ǵp�\u000fMh��}t���=�����ҩ�N\u001a\u001e\u0003@f\u0007�c\u0004�k�x�رy�T�0q_,�(�\u0000�?�\fv\u000e|9��\u001ch��ƒ���\t��|!_l�0�\u001a�/\u001fE��JY=���#@h�D=:���9|\u0013\u0013�����\n~��G�\u0004\\\u0003@�\u0005�\u0003s��\u0012Yf_R�\u000bR��\\�.bv�� �w��\u0015���\u0006�����\u0007�Ge\u0013H�\u0010O�|1���o\u0019\u001fBo�x�Bؒ\u0016^n{��4�1����D����\tƮ�\u0017��\u0001�����X\n���x��\u0017@�W��*b?�`��;��uA\u0005\u001bK6�:\u001f���\u0017�%�#zx#�E����~/Ǉ�'������H�u&>=��/�s��\u0017�|\u0006��\u0011\u0004Y\n.���ă]���\u000b\u0017.�c6�\u001dBo�\u0013\u0002m#TN���?*\u001b\u001b?�0�|19���q(�����\u000f\u001ba�\u001fUv���\u0004����|��\u0017�\u0001��Af\u0007�c\u0004��lN\n�B��\u0016��\rxy6��\u0013&��,�Wl7\u001b_6��ɂ��\u000b���|A{v/ں;0��x\u0017�G�����\u000f?Y�\u00175��c\u0000�f\u0007\u0006Z\n��L����~\t\u001b\t&1����{~mÆ��\u0003�9����`��I�E�X��\u000b\"_�._��?�\t��\u0011���\u0010Ʋ!�$���뽽����\u0011�0�\u001a��{%�_�H���r{���\u001b����A7��\u0002p�\u0017\u001b��۸Eɇ�<�8��� _���\r����^��3�G��G9\u001fߪ\u0007��?��\u0001^W��g�L�`3�\u0017c\u000b�\bȃի\u0005\u001b\u000f�WC��1��!��|YYY�XGG�\u000fQ�;��*���M�T\u000f@$�\u0002\"4\\a�<�D�6m��F\f\u0005܇��=F�|�zWv_�\f\u000f��ˠ��I�45_�1��m�Ν�r��[�}\u000e)[�wC��R\u0003�!\u000b���R��q�7�1��̜���ydc�ԍ�G�A\u000eʗ�\r�E�_=����ob}��0��ݐ��T�\u001cRFݻa˫�\u0000��F=7laJ\u0019o��a��3\u0018\u0012x\u0019��'��\r�Գ�G�E?*�8<Qqȗ��K\u0001�����\u0017��\u000e*��ƞ#Wn\u000f@�)WWL�\u000f\rW޾��\u001f�����Ĭ\u0001�2\u001b˦m,�\u0019g�R���A\t��^|�W�I�Io���oZ2�p���פ�ϻ\u000f�\u0001��L\u001a8\rY����o���\u0000,��ի���\bs3T^a�\b�'_��/�\u0018\u0018\u0018�������\u001f�\u001c����\u000e\u00014za\u0012�?T��7߼�ݹ�Ʒ�7`J\t��\u0006($��T6M�l���\u0018����\u0017�������h��q�ĉ�\u0016�$�}\u0006\u000e�^ޔ���|�2\u0000�S��{ӂr�.\u0018Dkt��-;w��ۭ[�_\n��U*�\u0015\u0016'���+\u0007\u000b�� ʣ��\u0001��%�K�\u0001���'P�Ǻ��5�{W���I�_JN�U��\u0001p�\u0013�O\u0015\"�\n�X�u'��흧a��\u000e��O�7`2V��Hl|�����\u0017�H�R��$�\"D�\u0005m�Y��\u000f��'�s�O�\u001e׽��>\n�=�/544��O��\u0019\u0000\u0012�\u001d_��DA�\u001d\nlP��$�*\u000e\u0015�����-��_\u0005e&�/��\u0007������ll�0�ȗ��\u000bt�g7o�|\u000b\u000e���)�\u0000��l����\u0006�M�������`\u0016ƛ�ρA1�\u0000@7�����\u001b��?�F���\"�9�\u0006�$�\u000bx=,�3�Y���Ʒ�\u001a_�,��(_�7�\u0017a~6�`��9��G���OOLL�s��҂��?K�<A�˟����\u0015W���(�c\u0001\u001a<�����H�\u0001\u0000e�ZZ�\u0014�\u001e=1�8��4�B\u001e�N.Xy����-�lol\u001e�\u0011����������l�\u00041\u0002ɗ�ዬ���|>\u000fڔQC�aκ�a\u0019+�'.ғ���ז�����E��\u0014\u000f\u001d:�\u001c3k\u001a\u0000�\u0018��m���՞�\u0018\u0000�t���'��\u0007xT�\u0011�BpÐ\u000b\u0015v\u0011����C�ዑ�\u001d�}6�M����ʾ(_ʷ\u001c҄�\u0005���\u0019���\u0016_��AzK1�l��/$�������; �\u0014�@Q\f�BaS�����\u0019�!\u0000�\u001d\b��~-b/�b�y�!@�w������u?���\u0012��G0,p\u001bH���\u0013C�sq��\u0007\u000e�#�����\u0012����-��\u0005]\r���ȣ���^��W�\u0004;�~˗�p\u000f��u<�/@,��=}\u000e��D�822����n�n\u000f��\u000b<{�l\u001a�7����Sb-\u001c>��\"\"��?\u0000]ë���v�\u0003�I�6�����.��9f��ߐ��y5\u001a_��\"\u0000#���yC���k1K�\u001f�\u001f?�*\t\u0003� g����_6��\f�K/~O�d�[�:)=9\u001e��\u001e\u0000��_�+����8�\u0010��~MC���m\u0013�]w��f2�נ��\u001d�󕘍o�\u001b_*\u001f�B=ȿ��\u000f�����Coᛱ��t(��\u0001M����'mB�����G�\u000b\u001e>\u0003����866�\u0014\u0014x\u0011w�������%Μ9� *��P�\u0019��L�L=�l|k��\n�T�\u001e�Y\u001d�_����\u0011x����\u001f:��V��\u0003��7x{\u000f�J��\u0002��S�\"R5\u0004�ڷo_\n����w&\b\u0004F\u000e��K248\u0019\f˷��=G0��S�\"����\u0001�E\u0019��P�\u00076��k|\u0015�T�\n��;�W\u001b�A�lܸ��6��������ӧ�Ia�Rpc��o��~n��\u00105����\u000f\u000f\u000f\u000b\u0011��]��>�\u0012�ϡ��]0\u0004��a�jX���֦�����Ѱ?�������Wq��K����~c||�{@�s��ԓЦl�GGG�����^��oZpʝM/\u0005-]MI���ݺu��\r�\u0000ʺ_\u0015��om\u001a_��ܩ�u4���_M���\\.�;�}��\t���\u000fm���_��T�q�{�\u0003@�\u001f �\u0000��'����#w�y�\u0001,\u0005�i���oM\u001a_\u000f���=pX\u001d�_u�\u0003מ�f7�m׮�WP�[�\u0016\u0014�����\u0001\b*|�_˃c\u0000����x��-��+?��!~\u0015\u001bIl\u0017<��\fVX�T^䋅\u001e��Z�\u0005\u001b�����?����BOOϲ��_�>�m\u001e�h�+5\u0000\u0012\u0001�ƎD�7�?�599�����\u0006&�\u001a.�\u001fkٸ�K�\u001e�kl�%�/��3�e��߳皿ظ�O�r;\u0017��B\"�=1��Z\u0005\u0010\u000b�R�Ā��^A��se�駟\u0018=\u0001�uvvʒ�\u0017�\u000f�Kǻ�����1�J,�|����W��c\u000eϛ���y\"��sg�S��þ�\u001e�7�(�\u0000��o�\u001f�\\�\u0017p\u0014�\u0018\u0002\u0018\u0012X���[A(�!�Ƽ��\\��ď��|0���'E��޽��X����n�f��J�۳��큙�(7�Gc�\u000f�)q\u0011ң�\u001aKxu�\u0007N��Ŝ�_��/� �b�ʋ����M���\u000b\u0014�\u0005Թ\u000fl߾�#'N��\f\\��\u001e�d��5�\u001c\f\u0011Wʵ\u0014)<\u000f\u0002�L�\u0019;ݛ6mz\u001b6���\\.7 H�1�ߘ{�Wr\u0010?�\u0017�\u000b�����\u001f8��ӧN��u�r��*�����������?�\u0007\u000f\u0016�2�5(�OΩB�V\u001a�\u0003\u001an����䱵�\u0007���\rX>�3P^�bF��\u0001\u0013�p7�?�\u0000;���/|�\u000b�\u001fu�#T�\u001c�\u0000\u001f*�G)9�W�+�\u0000H�y��݋n<�))�bݓfY�b\f����@��M���D�\u001f�+N$*�Eg\u000b��Ø��j\u001c�}+��\u0012���q��JZ���V�ӑ\u001a\u001a\u001a��G���U�Q�]\"���v#S�k�D?&����={\u001e�����A��\u0001LR�4��\u0003�ʺ�\f�\f�!L��\u0005gt�J�O��\u0007fgg_u���\u0007�ln֖��Eq��H!\u0011�\u001a\u001c\u001c�b\u0002��υSa\u0006\u0000�\t��?�\u001b�`�\u0002YEb�,Y�0\u0000�NMM�\u001c6%�\u000e������\u0002�vo���VF=�奱��!G�\u000f�k����;����\u0011��Ku_�O�y����K\\*�\u001e��X\n۶mK��L�\u001e�8\u0007\u000bh\u0004�\u001f\u0013\u0007v�\u0011�q�fց+=�\u001a~Y�N��0����#\u0001��\u0004B��a� f\u0004�5��$��8�>,�}\u0000%tv�\u000b.���j큥�,� P�Ƿ�䣭-�r����w\u0015��\u000bj(�4\u0000�1����\r���Rb\u0000H\u0006�\u001d;6�[%\u0013\u000eHVZ�B��\u000b���\u001bL\u001a|�L\u001cD�>��썹�����M��\u0003�?�F���!�8�����\u0019��lOcRŉ��ᓧ����\u0018\u0000�/o]\u001d\u0019\u0019�y$ΐ��\u0000���\fƛ�۶ͦ�\u0000\u0000IS�,�QT����b嬰rb\u0013�N4���+�h\u0014��\u000e3��u4��4&\u001aޘ(�M�:���-[�|\u0005��J�\u001a�b�Ra�R\u00028q��۷�Sʎv�(\u0006\u0000t{allL�b��I\\\u0003\u0000�\u00027�<y2-�\u0004�\u0000�\u001f\u000e\u000f�Kd*\u0001�~%�\\�5�15uf����\u001ba\f�\u0011c��v��C�\f\u001b^\u0019&f�\u0003F�w���oܘ��3g��Y\u001b\u001a����?�\u001c\u0001\u0001\u000e_�?��\u0015�\u0000زef\u0015�\\Άp����I��! �\u0013\u0013�b)2��\u0000b�X9kX9�l�9~�[��ҥK�\u0007\u0003�.4���*\u0002ك!�E�O�\u001f�,��\u001e|�\u0004��\u001b6�}\u0001K�^�9/�NN^��T��������� �\t�J�{���e�\u001f.�\u0000hoo/bLD�Evb��Qx5\u0016^�\u0013@��K]�`=�799�\b��\b�\b~\u0001=S?���o�߫���F�~�\u001e���\u000e\u000eK����\u0013&\u000f��z\b_�\u0007\u0007\u0006\u0006\u001e\u0001O\u0017ֳ~��\u001e\u001a��9a�3�_�4�\u001f�ϕ\u0001�0\u0006�F�R\u0018�S�\u0002#���J\u0000ɕ0r]�ƭ���A�L�6â}\u0003\f�{��\n�\u0019pw�J��Y�/�+Uy�?��5,��0�o\u0019_������޽�k��;e_~�Z�C�/���9a��t����'�{\f\u0000*��*�\u0016��T��t\u0011�\u0003�I�'��������/pOGGǝ�ˮ����:\u0016Q�4����\"\f��`�~\u0019�We��L3��Eq# ��_�ڿ\u0000q\u0004�\u00051::&gEX��U׿�+��̐\fM@�V߇�bo>��\u0017\n�Wc����?�#��2,K\u0019� nQ����\u001f���7�^{���\t|Rv�l�|u���P|Q\u0006�%�֠�*L@N��\u0004V��ɶ�\u000b\u0017.�\u0014��k���@!�\u0018��@�\u0016U^�e\u0015O�7����ӧ�G��aB���v�m���S40پ$�}i���j\f\u0000�������Ǻ��k��\u0011�\u0002wC�݅F�\u000e4��A��2\fW�Ax�~͎\u001f82�2|\u0003�z\u0018<y\b�KϘe��u㳖\u0007�#�����\u000f'�R\u0003�9\"X?%�ʄ���1��\u001c1=g�\u0006�\u000b��]\r_�8K�%��\u0010\u0013���L�\u001fD��fW^&@Qn���\r[�\u0002�#��''�}�[n����� (��\u001f�C}�Mj�?���Wb\u00008�\u000bb<��-*Q�����a�g��\u0019�j��(�*��w�޾˗��+P�\u000e����(8��\u0005\u001b�G\u000b�� *׆�IX�?CƏA�_����&$Y�\u001e\u0013���VE}#~Wv�k\u0014}�*q{�憦�`\u0001��@�d��킙\u001e�s�\u0015�����\u0016���O�o�0�\u000f#;�C��\u0004���Y�\u0012\u0003���rW&�y\u0015;�]\t��?ӫ\u001c?t�OB~O����\\n�㽽[�����l�b3q��\u001b�GlYH�Z�cm\u0003�\u0018�p�\b�3\u0002T\\9\\ h{A\u0015\u001eqgz�/�\"��z�%�9\u0004ߏ�Ɨ@��\u0004_�����\u0005șgɡ����\u0006ʟ�y\u0011\bu-B6߁�v\u0004r��P�G6m�4�\ry�\u001f��r���P��\u0016'o\u0012���N8\u0018z�\u0001� �\u001c\u0011�ֶ�&�H��v�cc�Y\u0001�,\u001fdz��B7_P=�RĊ�E��ﳒ3���ŗ���5�EXi�\"\u0018\u0004�/ݺaC�]zX�W��ü��\u0007�K���P�Gq?\n���ŋ��\u0018�(]�/W�??����\u0007�(G=�[T�$���R�����\u0007��׼\u0005u�`9$Hő�э�\u001e)��cޙ\u001e�I\u0015'ZS�\u00053��\u0018S�_^��\u0019s\tn�b�\tCe���n���\u001a\u0006�\u0014�q�.\u0001���mo\u0014m�q��\u001c�n����؇GS���)�G��]s>���\r۶m+�1\u0000��rǆ˗/�ʿ�킙^u�-\u0013���/��ٹ\u0013_��0\n\u0006q�A�a\u0018\f���\u00064\u0002}1\u001b�V�v\u0011X��r\u0006s��R���\u0000�\u0013\u0018�\u0006Ǘ�E��\u0014}\u0010\u001e�\u001f�W?��\u0018�G��H��_}!�\u0000�#�MI�G\u0015Oibz�̞���\nu'�/7�tSϳ�>;�!�����נ\u001fK\u0013��8�.��C1n\u0007@�ыો��5@\u0000��W��~\u000e��(�9dI�⿇��ϩ{>�?\u0005\u0019{f�~�\u0017^\u0012ꇎ\u0006�[[���Vp��u�K�\u0012���%^�5n&���\t��|Y�K\u001a��n�\u0017�\u000eLl�\u0006��\u000f�t3���`$H\u000fB\u001f��݅��N�;�8\u001d%w\u0007\f�\f��\rbH <�.h1(d\u000e���U(�\u0015�]E�U(�\u0015(�U��\u0011w\u000e�9����u�\u0017��)�v\u001a��\b���4�=���wvbbb\u001aa�}�)�5�\u0002��/�G��!M _�?\u0012�}Z�w��\u0000\u0000\u0000\u0000IEND�B`�"},"relativePath":"email.png"},{"fields":{"contents":"\u0000\u0000\u0001\u0000\u0003\u0000\u0010\u0010\u0000\u0000\u0001\u0000 \u0000h\u0004\u0000\u00006\u0000\u0000\u0000  \u0000\u0000\u0001\u0000 \u0000(\u0011\u0000\u0000�\u0004\u0000\u000000\u0000\u0000\u0001\u0000 \u0000h&\u0000\u0000�\u0015\u0000\u0000(\u0000\u0000\u0000\u0010\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\u0003���<DFO�3/(�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���'��ؗ���낞��l���EFO�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000L��@`��������������������;\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000L��@L���M���_���������������U��\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000L��@M���M���M���M���_���������ٕ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000L��@L���M���M���M���M���M���`����%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000L��@L���M���M���M���M���M���L���L��@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000L��@L���M���M���M���M���M���M���L��@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000L��@M���M���M���M���M���M���L���L��@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���@����R���M���M���M���M���L���L��@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���A�ɼ���������R���M���M���L���L��@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000mY�?���������ɽ���������R���M���L��@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000nY��ua��¸�������ɽ���������L��@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000mZ�nY��ua��¸�������ɽ����@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\u0002mX�nY��ua���������A\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\u0002mX�nY��oZ�>\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u0000 \u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000***\u000620*[3.(�3/(x\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\u000e���S��ڞ^k��3/)�3/)�3/)�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\f���a��ظ������������z���:9:�3/)�3-(Z\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\u0010��ٌ����������������������������{���_l��333\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016[����������������������������������������ٛ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���M���Y�������������������������������������Q\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���M���M���M���Y������������������������������v��\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���M���M���M���M���M���Y������������������������ٶ\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016M���M���M���M���M���M���M���M���Y���������������������_\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���M���M���M���M���M���M���M���M���M���Y�������������퀙�\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���M���M���M���M���M���M���M���M���M���M���M���Y��������م\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���M���M���M���M���M���M���M���M���M���M���M���M���M���Z��Ҁ��\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���M���M���M���M���M���M���M���M���M���M���M���M���M���L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���M���M���M���M���M���M���M���M���M���M���M���M���M���L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���M���M���M���M���M���M���M���M���M���M���M���M���M���L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���M���M���M���M���M���M���M���M���M���M���M���M���M���M���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016M���M���M���M���M���M���M���M���M���M���M���M���M���M���L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���M���M���M���M���M���M���M���M���M���M���M���M���M���L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\u0016����c���M���M���M���M���M���M���M���M���M���M���M���M���L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\u0017�����˿�����c���M���M���M���M���M���M���M���M���M���M���L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\u0018����ù�������˿�����c���M���M���M���M���M���M���M���M���L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\u0017������������ú�������˿�����c���M���M���M���M���M���M���L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000t]�\u0016�����Ź�������������ú�������˿�����b���M���M���M���M���L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000qU�\u0012nX�ӊy�������Ź�������������ù�������˿�����c���M���M���M���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000nY�nY��nY���y�������ƹ�������������ú�������˿�����b���L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000nZ�nY��nY��nY���y�������Ź�������������ú�������˿�����F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000mY�nY��nY��nY��nY���x�������ƹ�������������ù���������\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000``�\bnZ�nY��nY��nY��nY���y�������Ź������������յ��\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000fM�\nmY�nY��nY��nY��nY���y�������Ź����ֿ��\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000qU�\tmY�nY��nY��nY��nY���y���������\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000qU�\tnY�nY��nY��nY��nY��t]�\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000``�\bnX�nX�nY�qU�\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000\u00000\u0000\u0000\u0000`\u0000\u0000\u0000\u0001\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001;''\r4.''3.)d3/'�4.),\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000m��\u0007���,p��]52-�3/)�3/)�3/)�1/(�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000��\u0001���&���v��������w���;:;�3/)�3/)�3/)�1/*b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\u0001���\u0010���)���s���Ȃ���������������~���PXk�40+�3/)�2/(�6/(&\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001|��%���l��ٯ�����������������������������u���R[o�<=?�41.�'''\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\t���t���ۂ�������������������������������������������~���w���n��Z\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U��\fY���x����������������������������������������������������������ᆟ�(\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���M���Y���x�����������������������������������������������������ٽ���\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U��\fN���M���M���M���U���z��������������������������������������������������r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U��\fL���N���M���M���M���M���U���x�������������������������������������������|��#\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���M���M���M���M���M���M���M���Y���x���������������������������������������\u0000\u0000�\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U��\fL���M���M���M���M���M���M���M���M���M���U���z����������������������������������o\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U��\fL���N���M���M���M���M���M���M���M���M���M���M���U���x��������������������������탣�'\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���N���M���M���M���M���M���M���M���M���M���M���M���M���Y���x���������������������٭���\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U��\fL���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���U���z������������������f���\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U��\fL���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���U���x����������ׄ��\u001f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016N���N���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���Y���w������k\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U��\fL���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���W������\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U��\fL���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���L���U��\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���N���N���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U��\fN���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���L���U��\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U��\fL���N���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���L���U��\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���N���L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U��\fL���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���N���L���U��\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U��\fL���N���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���L���U��\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000F��\u0016L���N���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000U��\fL���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���N���L���U��\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\f��҈����O���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���N���U��\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\u0017û��������������M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ı�\r��������ż��������������M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���M���L���U��\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\r��ˎ�Ǻ���������ǿ��������������P���M���M���M���M���M���M���M���M���M���M���M���M���M���L���U��\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\u0018�������������Ǻ���������ǿ��������������M���M���M���M���M���M���M���M���M���M���M���N���N���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���\r���������������������ʾ���������ż��������������M���M���M���M���M���M���M���M���M���M���L���U��\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�j�\f��͏�������������������������Ǻ���������ǿ��������������P���M���M���M���M���M���M���M���L���U��\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000hQ�\u0016pZ锩�����������¸�������������������Ǻ���������ǿ��������������M���M���M���M���M���N���L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ff�\nnZ�nY��s_��������������¸�������������������ʾ���������ż��������������M���M���M���N���L���U��\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000kY�9nY��nY��nY��r^�����������������������������������Ǻ���������ǿ��������������O���M���L���U��\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000oY�nY��nY��nY��nY��r^��������������¸�������������������Ǻ���������ǿ��������������L���F��\u0016\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000nX�nY��nY��nY��nY��nY��s_��������������¸�������������������ʾ���������ż��������ЉU��\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000oY�SnY��nY��nY��nY��nY��nY��r^�����������������������������������Ǻ���������û�����\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000fY�\u0014nX�nY��nY��nY��nY��nY��nY��r^��������������¸�������������������Ǻ��������\u0017\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001iU�'mZ��nY��nY��nY��nY��nY��nY��s_��������������¸����������������͏ı�\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000q^�\u001bmX��nY��nY��nY��nY��nY��nY��r^�����������������������������\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000kW�&mY�nY��nY��nY��nY��nY��nY��r^���������������������\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001kW�&nY��nY��nY��nY��nY��nY��nY��s_��������͏���\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000lX�\u001amY��nY��nY��nY��nY��nY��nY��oZ�jj�\f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000nZ�%nY�nY��nY��nY��nY��mY�mU�\u0015\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0001sY�\u0014lX�WnX�oY�nX�:fM�\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"},"relativePath":"favicon.ico"},{"fields":{"contents":"�PNG\r\n\u001a\n\u0000\u0000\u0000\rIHDR\u0000\u0000\u0004\u0000\u0000\u0000\u0004\u0000\b\u0006\u0000\u0000\u0000\u001d+�\u0000\u0000\u0000\u0004gAMA\u0000\u0000��\u000b�a\u0005\u0000\u0000\u0001YiTXtXML:com.adobe.xmp\u0000\u0000\u0000\u0000\u0000<x:xmpmeta xmlns:x=\"adobe:ns:meta/\" x:xmptk=\"XMP Core 5.4.0\">\n   <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n      <rdf:Description rdf:about=\"\"\n            xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\">\n         <tiff:Orientation>1</tiff:Orientation>\n      </rdf:Description>\n   </rdf:RDF>\n</x:xmpmeta>\nL�'Y\u0000\u0000@\u0000IDATx\u0001��\tx]U���&9Iڤm����\u0007B\u0007�ަ\u0006\u000b\u0005�\u0005\u0004��\nX��\n\u001a�z\u0015}_����5��\t�*\b\u0017�\"�\f�W\u0004Q\u0010E\u0006[\u0010Z��B[�\u000eiڔ�i�$͜��os\u000b�6�\u0019�����<�y����Z��Y��Y����I��B\u0000\u0001\u0004\u0010@\u0000\u0001�\u0005\u000e\u001f>�4k֬��������9���ّH$;)))���?#%%e���@Frrr���p�\f\u0005j=&\u001c��q��!��T}O�s�1%E?G����'ehh��9b�n=TGD�\u001e�q�����A=wH������\u0018|�\u0018�X\u001dۯG�\u001e��C�u��\u001e�{ZZZ��У��SSS��z��T��?�������q`ҤI\u00076n�ة��B\u0000\u0001\u0004\u0010@\u0000\u0001�\u0005�\\���\u0010@\u0000\u0001\u0004\u0010\b���\u0005\u000b&\u001c8p`Zooo�\u0006�y\u001a\u0004O��8O\u0003�\\}�� 8[�e[?�{�\u0006��B�ұր<t_r��\t��8 �69X�\u000f(�p��Y\t���ޢ���ؖ��Ƿdgg�Y�b��|�\u000b\u0001\u0004\u0010@\u0000\u0001\u0004�\u0014 \u0001\u0010'\u001c�!�\u0000\u0002\b\u0004[��B_]]����S��\u0016k0?]��<=?MW��y\u001a�N��k ;)�\u001af�N\t�N���|��]3\u000bZ�\u0004�~ޣ��늲)##c�ڵk��\u000f�\u00115Q �\u0000\u0002\b `�\u0000\t\u0000s��H\u0010@\u0000\u0001\u0004\\\u0014����noo/��X�Ek�o}/���\u0001�\u0006�E\u001a�\u0018\u0012U�$��@��u��k�c��]\t�&�mӄ\t\u0013vhFAӚ5k\u000e�T\u001d� �\u0000\u0002\b �\u001b\u0001\u0012\u0000��*\u0002E\u0000\u0001\u0004\u0010�E`ɒ%)��_�\u0001}�\u0006�'j\r}�\u0006��*�R\u0003�R}�\u0018Ky\u001c\u001b8���{hT�\u001a��Р�\n\u001a�4h��J�;��Φ\u0007\u001f|�Z��\u0017\u0002\b �\u0000\u0002�\u0012 \u0001\u0010��1\b �@�\u0004���#\u000f<�@�5��\u001e\u001a�U�J����_�G�\u0006���\u0012��v\b�og@;��hP��AeZ\t�-V���+�ت��A;�\f\u0004\u0010@\u0000\u0001\u0004�\u0016 \u0001�8�!�\u0000\u0002\b�,PWW���3Ϝ���U\u001a���+�U\u001a�Y�g0ȏ��\u0013\u0012\u0010��\u0003J4mҬ�����\u001e�\u0018x��s�ټt�ҁ\u0004��T\u0004\u0010@\u0000\u0001\u0004\u001c\u0017 \u0001�81\u0015 �\u0000\u0002\bD+PUU��[����U\u001a`����\u001b�}�~�\u001e�m��B�H�#�\u00066[I\u0001%�^խ\u001d�k��W'O��i�����\u0013�B\u0000\u0001\u0004\u0010@�s\u0001\u0012\u0000�w\u0001\u0001 �\u0000\u0002�\u0014�������W�+��4؟'\u0005�����@?�\u0012Am����_U�V��j���Vr`MCCCGP\u001bL�\u0010@\u0000\u0001\u0004�\u0015 \u0001`n�\u0010\u0019\u0002\b \u0010\u0018\u0001]ٟ�\u001d��9���Rk�_�\u0006��P`z��� pX�\u0016�j��[I����՚)`�ʐ/\u0004\u0010@\u0000\u0001\u0004\u001c\u0013���c�\u0014�\u0000\u0002\b�S���vjkk멚\u0006}�\u0004j��\u0006��éA�\u0011�^@I\u0001+\u0001�Z�\b^��+�N����d�/�\u00128\u0012\u0001\u0004\u0010@\u0000��\u0005H\u0000��ë\b �\u0000\u0002�\bX��-_�|noo�i��i=N�`ߺ�\u001e_\b `��\u0012\u0001\r�w�R\t���&Mzq�/�٠\r�\u0014�\u0000\u0002\b�T�\u0004@H;�f#�\u0000\u0002�\bh*Iww�i\u001a�X\u0003}��;T��x��\u001c\u0004\u0010�K�WI�U�%�6\u0019\\i%\u0007�����*��\u0010@\u0000\u0001\u0004B'@\u0002 t]N�\u0011@\u0000��\u00044�H*--=Y�\u0017ꌳ��\u0006��ѝ�Q\b �@��\u0002ϩ���_�����W�����S\u0015\u0002\b ��O\u0004H\u0000���\b\u0013\u0001\u0004\u0010pZ���>������\u001a��P�S����\u0011@�v�V+!���H$��5�\\��}\u000f�^\u000b\u0005\"�\u0000\u0002\b�N�\u0004�ﺌ�\u0011@\u0000\u0001{\u0004����<�L����e]����\f��eO锂\u0000\u0002\u0006\t�+����\u000e,��G?�J\t�A��#\u0014\u0004\u0010@\u0000\u0001�\u0004H\u0000�\u0004M5\b ��\t\u0002����Z��\u0006\u0001�)�3u�?ӄ��\u0001\u0001\u0004�\u0013�̀.���\u001eOZ����u��NM\b �\u0000\u0002^\n�\u0000�R��\u0011@\u0000\u0001�\u0005�i������4�?�\u001a��;��s؜�\u0011�\u0012\u0002�\u0015��T����ܧ֯_oݎ�/\u0004\u0010@\u0000�\u0000\n�\u0000\b`��$\u0004\u0010\b�@mmmƾ}��)��\r\f\fXW��W��#�@<\u0002J\b��d�iiiO���?�bŊ�x��\u001c\u0004\u0010@\u0000\u0001�\u0004H\u0000��'D�\u0000\u0002\b�$P]]={���\u0017�\n�{�u����\u001eS\u0001\u001c�\u0000\u0002\b� �d@��S����'���۷o�0¡<�\u0000\u0002\b �\u0003\u0001\u0012\u0000>�$BD\u0000\u0001\u0004�\u0016д�4M�_���\u0017�J���8�u~F\u0000\u0001\u0004�\u0012PB`��{\u001e���&M����\u000b�;U\u0017�\"�\u0000\u0002\b�/@\u0002�~SJD\u0000\u0001\u0004l\u0017��˛��o\u0017���u��<}\u0000�d{%\u0014�\u0000\u0002\b� �Y\u0001�:�OJB>��\u0003\u001eoii�\u0013��\u001c�\u0000\u0002\b ��\u0000\t\u0000\u000fЩ\u0012\u0001\u0004\u0010�F����F\u001f�/ұ\u0017i\n�|}�=;\u001a8�A\u0000\u0001�\u00054#`H�S�f\u0006(Y�ضm�^v=\b*D\u0000\u0001\u0004\u0010\u0018S�\u000f�c\u0012q\u0000\u0002\b ����˝�t��\u0005�\u0000}�>H_�ZKܩ�Z\u0010@\u0000\u0001�\u0005\u001aSSS\u001fR�\u000fi߀\u0015��t��\u001a(\u0010\u0001\u0004\u0010@ f\u0001\u0012\u00001�q\u0002\u0002\b `���%KR^xᅅ��o\r�/�������KI\b `������\u001e��Byh����>����\f\b�\u0010\u0010@\u0000�P\n�\u0000\be��h\u0004\u0010�R��į���\\]\u0011����_�L�2\u001e�F\u0000\u0001\u0004\\\u0014hU]��\u0016�\u000f���Ok�Ӏ�uS\u0015\u0002\b \u0010z\u0001\u0012\u0000��\u0013\u0000\u0000\u0001\u0004�\u0010X�h��-[�\\�Ͳ.�\u0006~\u0017��,7�\u000e\u0004\u0010@�`�\u0003J�>j-\u0015(++{bٲe�\u0006�Jh\b �@ \u0004H\u0000\u0004�\u001bi\u0004\u0002\b�(`M�������׫4𿔝�M�%bB\u0000\u0001\u0013\u0004�>١��z����SO}�e\u0002&�\n1 �@\u0010\u0005H\u0000\u0004�Wi\u0013\u0002\bx*PYYyZ�U�-և\u0014H���P9\u0002\b �?�\u0016�\u0019��\u0014��;w�|��\u00131\u0002\b `�\u0000\t\u0000s���\u0010@�G\u0002��ճ���*]����W�(tBE\u0000\u0001\u0004�\u0015Ь�-J\u0006ܯ�\u0002��n\u0002\u001b�\r��\u0010@\u0000\u0001�\b�\u0000�IG\u0011&\u0002\b�'PPPP�\u000f�W(2k�_c^�D�\u0000\u0002\b\u0004J`�\u0012\u0002����?��а3P-�1\b ��K\u0002$\u0000\\��\u001a\u0004\u0010\b���\u0005\u000b&�*�eڴ�zM�_�V�>\u001a���\u0015\b �\u001f��\n�\u0019%`�...~xŊ\u0015=�\t�H\u0011@\u0000\u0001o\u0005���?�#��O\u0004�u����\u001f�4�+t��>\t�0\u0011@\u0000��\u000b�kV�\u0003Zzu7�\u0005\u0004��i\u001f\u0002\b�!@\u0002�\u000eE�@\u0000�@\nTUUM׺�kո�5�V \u001bI�\u0010@\u0000��\b��d��YYY��[��%8͢%\b ��}\u0002$\u0000쳤$\u0004\u0010\b�@]]]�SO=u�v���\u0006�\u0017�I�\u00004�& �\u0000\u0002a\u0012\u0018T\"�\u000fj�]�}�{�t�ҁ05��\"�\u0000\u0002�\t�\u0000\u0018M��\u0010@ 4\u0002Gv����k�詡i8\rE\u0000\u0001\u0004\u0002,�}\u0002�*\u0019p��/ݶm��\u00007��!�\u0000\u0002Q\t�\u0000����\u0010@ �\u0002���?��\u000f�j3�Ohm�� ��6!�\u0000\u0002\b��@$\u0012����?Z�x�#�\n�\u0002\u0001\u0004�*@\u0002 �=O�\u0011\b�@��\u0006\u0006\u0006>�M�n\u0010C^�)h:\u0002\b \u0010:\u0001�\bx]����ɓ��_�~G�\u0000h0\u0002\b�Z %ԭ��\b \u0010\u001a�����[�.�����\u001a}������\u0013C\u0003@C\u0011@\u0000\u0001\u0004�\u0010P�w�\u001eg)\u0011|��\u0000�:uj��7޸eٲe��\u0005�B\u0000\u0001\u0004\u0002-�\f�@w/�C\u0000\u0001k'����\u001b4��N\u001a%� �\u0000\u0002\b p��f\u0005l�R��J\b��\u001d\u0004���w\u0004\u0010\b�\u0000\t� �&mA\u0000��\u0004���NՇ���J���ғ��\u000b��\u0000\u0002\b ��\b\u0002�c@�g�:==�\u0016m\u001a��\u0011\u000e�i\u0004\u0010@��\u0002ɾ���\u0011@\u0000�c\u00044�?R\\\\|�\u001e+5�_����3�?\u0006�_\u0011@\u0000\u0001\u0004F\u00148�ƕ}}}/*��Byy����[F<�\u0017\u0010@\u0000\u0001�\t0\u0003�g\u001dF�\b p��>���\u0016Ou���)\r���?�g\u0010@\u0000\u0001\u0004\u0010�O@�\u0003����S�L��ڵk��+��\u0010@\u0000\u00013\u0004H\u0000��\u000fD�\u0000\u0002q\bTWW�noo�Q�^�\u000fg\u0019q\u0014�)\b �\u0000\u0002\bD%�D@�\u000e����p���\u001b�:��\u0010@\u0000\u0001�\u0004H\u0000\u0018�!��\u0000\u0002�\u000b�*��d������:�|=x\u001f\u001b��W\u0011@\u0000\u0001\u0004�\u00158�$�\u001f�x�e׮]Oj�\u0000�\u001e`�/�!���\u0002|pv\u0010��\u0011@�>\u0001�柦���Q\u0002�\u000bZ�?˾�)\t\u0001\u0004\u0010@\u0000��\u0005^U\u0002໋\u0017/�o�ҥ\u0003q�\b ��K\u0002$\u0000\\��\u001a\u0004\u0010�O`ѢE\u0013�\u0013��u��ϩ���J�,\u0004\u0010@\u0000\u0001\u0004�\u0013Ќ��*��'�x�O�-[vй�(\u0019\u0001\u0004\u0010HL�\u0004@b~��\u0000\u0002\u000e\t���MKKK������Y�8T\r�\"�\u0000\u0002\b `��\u0012\u0001mڔ������\u001a\u001a\u001a��V0\u0005!�\u0000\u00026\t�\u0000�\t�b\u0010@�\u001e����rM���\u0006�\u001fQ�\u0013�)�R\u0010@\u0000\u0001\u0004\u0010pU�G��L���i�����Le\b ��(\u0002$\u0000F��%\u0004\u0010pO@\u001b���}����'\u001f��?Ž��\t\u0001\u0004\u0010@\u0000\u0001�\u0004\u0006#�����ȸyÆ\rk\u001d���\u0011@\u0000�(\u0005H\u0000D\t�a\b ��@AA�\u0019\u001a�U��\u000b���R\u0011@\u0000\u0001\u0004\u0010�^@��>����u-\rX�}4D�\u0000\u0002a\u0015 \u0001\u0010֞��\bx,�+�g���\u0014ƹ\u001e�B�\b �\u0000\u0002\b�&����Jz������k�R\u0011\u0002\b pD�\u0004\u0000\n\b �@qq�Y�\n�5��?�Պ�\f\u0001\u0004\u0010@\u0000\u0001�\u0004�NOO�Iw�yά��\u0006\u0001\u0004�,@\u0002 ȽK�\u00100H���rQWW��t��E\u0006�E(\b �\u0000\u0002\bx*��\u0006<��\u001bojjjz��@�\u001c\u0001\u0004B!@\u0002 \u0014�L#\u0011�N@���������x�wQP3\u0002\b �\u0000\u0002f\u000bhv�2�\u0011p��\bXfv�D�\u0000\u0002~\u0016 \u0001���#v\u0004\f\u0016���8w``�k\u001a��ip���\u0000\u0002\b ��Q\u0002�\r�\\w\u000e������F\u0005F0\b \u0010\b\u0001\u0012\u0000��F\u001a��9\u0002������+���\t� �\u0000\u0002\b�O�Ȍ���\u0019\u0001+�\u0017=\u0011#���\u0002$\u0000L�\u0019�B�g\u0002�f͚�5�����b��N�\b �\u0000\u0002\b\u0018+��\u0006�V�}U{\u0004�36H\u0002C\u0000\u0001�\b�\u0000�MW\u0011(\u0002f\nhs�\u0013���oҕ�+5�O63J�B\u0000\u0001\u0004\u0010@��\u0002J\u0002hr��}Z\u001a�5-\r��ߖ\u00109\u0002\bx-@\u0002��\u001e�~\u0004|*�����0��z|T��T�6��\u0011@\u0000\u0001\u0004\u0010����\u0007\u0018P\u0012`�ĉ\u0013��~���}\u00138�\"��1\u0002$\u0000��\n\u0002A�\u001f\u0002s���ٷo�\u0017\u0015�g������\u0012\u0001\u0004\u0010@\u0000��\bhF@�Zs�)S��f͚\u0003�i\u0019-A\u0000\u0001�\u0005H\u00008-L�\b\u0004D���6��������\u000bjRv@�E3\u0010@\u0000\u0001\u0004\u0010�\u0012\u0001m�\u0015����[W�X��ۆ\u00108\u0002\b�&@\u0002�5j*B��\u0002����?��O��4���\u0005��l\u0005Q#�\u0000\u0002\b \u0010\\\u0001%\u0002vji�W�n�z�\u0012\u0002���RZ�\u0000\u0002�\n�\u0000HT��\u0011\b���(��\u000f\u0012��:��\u00007��!�\u0000\u0002\b \u0010\b\u0001%\u0002������u��e�h\u0010�@\u0000\u0001�\u0005H\u0000�NJ�\b�_���l�v��\u000e���_�\u0002\u0004\u0010@\u0000��\t(\u0011�����۰aæ�\u0016#��h\u0002)���k\b \u0010.\u0001�󟚖��\u001d�������\u000eW�i-\u0002\b �\u0000\u0002�\u0010�������%''焙3g�u׮]�\u000f\u0010���\u0015\b$,�\f��\t)\u0000\u0001�\u000bTVV�wwwߨ�|Y�,���\u0016 �\u0000\u0002\b ��\u0011�\u0003�\u0011�\r-\r�MK\u0003�PA\u0000�p\u000b�\u0000\bw��z\u0004�\u0015\u0017\u0017_!�oi�\u0019\u001c\b �\u0000\u0002\b \u0010L\u0001%\u0001�i��/m۶�W�l!�B\u0000�h\u0004H\u0000D��1\b\u0004P���|��\u0007ޮ��+�ͣI\b �\u0000\u0002\b 0��\u0012\u0001�*\u0011�i%\u0002^\u0019�e�B\u0000��\u000b�\u0007@�;��!p���9sr4\r�����\b�\u001d�:�#�\u0000\u0002\b �@p\u0005��ZW���=U\u0017\u0003V�����m--C\u0000�c\u0005��}��\u0011@ �\u0002����%%%u���۬���ԃ\u0004`0��V!�\u0000\u0002\b 0���\u0019`pp�ӭ���JKK?j}F\u0018�\u0004^D\u0000��\b�\u0004 0]IC\u0010\u0018Y@��-�t���\u001f~��G�\n\u0002\b �\u0000\u0002\b�T����ݹs�!m?�F 4\u0002$\u0000B��44�\u0002���y���7k���Ͽ�0�\u0011�f\u0004\u0010@\u0000\u0001\u0004�\u00138��~��\f_jii�\u0013�)\u001c�\u0000\u0002~\u0013`���z�x\u0011�B@S�\"���s\u001a�o����S\u0018�G��!\b �\u0000\u0002\b�X����\u0011m\u0012�����F�D�-h:\u0002�\u0015`P\u0010خ�aa\u0015(((8C�y�D\u0003���\u001a�n\u0004\u0010@\u0000\u0001\u0004\u0010HX`mjj�'\u001a\u001b\u001b_H�$\n@\u0000\u0001c\u0004�\u0004̘� \u0010\u0004\u0012\u0013�v�OKK��v��]�i����\b �\u0000\u0002\b \u0010r�<�1�z�- ����/�- �\r4?0\u0002�\u0000\bLWҐ0\u000bh\u0007߫t��\u0007������\u0010h;\u0002\b �\u0000\u0002�\b�hv�g���\u001ep�xJE\u0000\u0001�\u0004H\u0000�%M=\b8 PTTT����#\r���@�\u0014�\u0000\u0002\b �\u0000\u0002\b\u001c-��ĉ\u0013?�iӦ�G?��\b �\u001f\u0001�\u0000����\u0014��\u0004����Ə\u001f�%]�@��g��\u0002? �\u0000\u0002\b �\u0000\u0002�\tT�������\f]~��/�Z�jȹ�(\u0019\u0001\u0004�\u0010`\u0006�\u0013�����\u0002���g����DU�v�\u001a�F\u0000\u0001\u0004\u0010@\u0000\u0001\u0004F\u0014В����������G<�\u0017\u0010@�8\u0001f\u0000\u0018�%\u0004���\u0002�&���\u000f\f\f�PG�0�Q<�\u0000\u0002\b �\u0000\u0002\b8/pd��dee\u0015j����$�ysj@�\u000e\u0001f\u0000ءH\u0019\b8,���_Yvk���UQ<\u0002\b �\u0000\u0002\b \u0010�@s$\u0012�Ď\u001d;\u001e��D�G\u0000\u0001w\u0005�\u0001�7�!\u0010�@mm�Tm�w�\u0006��P�}RL's0\u0002\b �\u0000\u0002\b ���$�Kt��\u00068i�̙�w����N�Ԃ\u0000\u0002�\n0\u0003 V1�G�%����%\u001a����Ce��K�T�\u0000\u0002\b �\u0000\u0002�\t$''���\u0000�lll|(��8\u001b\u0001\u0004�\u0010 \u0001��*e\"��@uuu^[[�\u001d��i\u0002�p*\u0002\b �\u0000\u0002\b ���\u0012\u0001�־E�jii��Y\u0010T�\u0000\u0002�\t�\u0004�8\u0012�@�;����k���c���\u000ef\u0004\u0010@\u0000\u0001\u0004\u0010@ 1\u0001]�8YI��sssw����M�4�F\u0000\u0001�\u0004�\u0001`�$� ���ܹs\u000b����c\r�/J�\u0018NE\u0000\u0001\u0004\u0010@\u0000\u0001\u0004L\u0014�]jj�'�,`���\u0011\u0013\u0002a\u0012 \u0001\u0010�ަ�F\n��������\n.��\u0000\t\n\u0001\u0004\u0010@\u0000\u0001\u0004\u0010H\\��f\u0005|z����&^\u0014% �@�\u0002,\u0001�W��\u0010HP���&[S�~���_QQ�\u0013,��\u0011@\u0000\u0001\u0004\u0010@\u0000\u0001�\u0005�ks�K'M�4sƌ\u0019O)\u0011�gr�Ć@P\u0005�\u0001\u0010Ԟ�]F\u000bTVV.���G��+6:P�C\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\u0017ؑ��~Ͷm۞��hJD\u0000��\u0004�G{��\u0010@�^��������oj��\f�{m)\r\u0001\u0004\u0010@\u0000\u0001\u0004|#P����������\u0011�DM�\b\u0004@�\u0019\u0000\u0001�D��\u000f�Y�f����Oў⏈�\u0012\u0001\u0004\u0010@\u0000\u0001\u0004\u0010pV@�\u0002���U;w�lp�&JG\u0000\u0001K�=\u0000�;@�\u0005���ҏ����F�ߔ�P\u001dU �\u0000\u0002\b �\u0000\u0002~\u0011(��볳�[t�d�_�&N\u0004�*�\f\u0000��\u001cq�B`���S���O5��\u0012_\u0004L�\b �\u0000\u0002\b ��G\u0002�\u001c�!U]��\u0000�=\n�j\u0011\b�\u0000\t��w1\r�J@��{�ַ�B�\u0017x\u0015\u0003�\"�\u0000\u0002\b �\u0000\u0002>\u0013إ%\u0001��ڵ�\u0019��M�\b�B�%\u0000��&���@UUUZjj�ͺ��\u001d�{��b'V\u0004\u0010@\u0000\u0001\u0004\u0010@�c\u0001��u999�EEE����{��x�\u001e�@\t0\u0003 P�Ic�\u0016���N�\u000e��k��\\�c�~\u0004\u0010@\u0000\u0001\u0004\u0010@��\u0002���Үھ}�\u0006����\u00110F�\u0019\u0000�t\u0005��]@����6���6�)�{[�\u001f\u0001\u0004\u0010@\u0000\u0001\u0004\u00100@ _1\\�������\u0003/\u0019\u0010\u000f! �{\u0001f\u0000��\u000bi��\u0002yyy�RRR�R\u001c�����\u0011@\u0000\u0001\u0004\u0010@\u0000��\n�.??��U�V�\u0006�}4\u000b\u0001W\u0004H\u0000��L%A\u0015�ڴ�j���j_^P�H�\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0013\u0004t��u=>�%\u0001O�\u0010\u000f1 �G\u0001�\u0000��׈�s�E�\u0016�����Z��C\u00053��\b\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\b���YN�g��'O���\u0019�޿?\u001b\u0004\u0006��i��\u0002�\u0000�ߔ\u0012\u0003.0k֬9]]]�����\u0002�T��\u0000\u0002\b �\u0000\u0002\b�*�6\u0012�\\�cǎ��\u0006H\\\b�(�lbPĄ��\u0002���Wi����=D\\\b �\u0000\u0002\b \u0010\u0012�9�\u0011�6a�<$���\b�\"@\u0002�\u0016F\n\t�@}}}���𖁁��4��\bz{i\u001f\u0002\b �\u0000\u0002\b `��>�e��.�|���fz�ć�\t\u0002,\u00010�\u0017��h�����\u001d\u001d\u001d��0g\u001a\u001d(�!�\u0000\u0002\b �\u0000\u0002!\u0015HJJZ���s��u�ZBJ@�\u0011�J�\u0004@TL\u001c\u0014V\u0001e�O�f���ߺ\u000f-_\b �\u0000\u0002\b �\u0000\u0002�\n�����`CC�JsC$2\u0004�\u0015�.\u0000��S��\u0002\u0005\u0005\u0005��ڲ\u0007�\u0000�28LBC\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010�\u001f����v]VV�>��|\t\u0014\u0004\u00108^�\u0004��&<\u0013r�\u0005\u000b\u0016L���.1�\u001f=�7\u0012�\u0007��\u0000\u0002\b �\u0000\u0002�\u0011�g�\u0014=\u0016ggg���\u001d������\u0007�\u0013=�\"�\u0000K\u0000�7�\u0006\u001f\t̘1�����aM��룰\t\u0015\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�x��iii�*\t����x\u0006�p\np\u0017�p�;�\u001eF����\u001a����\u0018\u001c�B\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�'0O��V������\u00131\u0002�\b�\u0000pƕR}$�ibI����j�����D��B'T\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000�Q\u0004��.W�ǋ���b}�\u001b�P^B \u0014\u0002�#\bE7�ȑ\u0004jjj�[[[�ц1\u0017�t\f�#�\u0000\u0002\b �\u0000\u0002\b\u0004B�w���׭Z��=\u0010��\u0011\b�!@\u0002 \u000e4N\t���Y��tuuY��+��\"Z�\u0000\u0002\b �\u0000\u0002\b 0���H$rɎ\u001d;֏q\u001c/#\u0010H\u0001�\u0000\u0004�[i�X\u0002���Wi���XR��\u0000\u0002\b �\u0000\u0002\b\u0004J�$-\u0005xQK\u0002.\u000fT�h\f\u0002Q\n�\u0000�\u0012�Â!P__\u001f),,�e``�>\r�3��*Z�\u0000\u0002\b �\u0000\u0002\b \u0010��>\u0003f��.\b}��l\u0018�y\u001c�@\u0010\u0004X\u0002\u0010�^�\rQ\tTUUM�������ό�\u0004\u000eB\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\b��6�^���s��u�Z\u0002�P\u001a��\u0011\u0001\u0012\u0000�)�B@\u0019�ӵ�߯5��\u000fE�i$\u0002\b �\u0000\u0002\b �@�\u0002�222>��а2�\u00138\u000e\u0001�\n�\u0004��=G�Q\u000bh��k4��3����8\u0010\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\b�@a__߲���+��h�\u001aN��p6�V�E@���]m�M���\u001e�N��\b �\u0000\u0002\b �@�\u0002��\u0018\u0019\u001c\u001c�477w�����\u0018O�p\u0004|#�\f\u0000�t\u0015��\"PWW�ZVVv����#��8\u0016\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@ �\u0002I�(�\u001b�C��l\u000e\u0018ڿ��7�=\u0000\u0002���k`mmm��ݻ\u001fR��\r_�i1\u0002\b �\u0000\u0002\b �@�\u0002)))O���[�\u0002t$Z\u0016�#`�\u0000\t\u0000�z�X\u0012\u0016�={v���\u0007���U\t\u0017F\u0001\b �\u0000\u0002\b �\u0000\u0002a\u0016X��/nnnn\n3\u0002m\u000f�\u0000\t�`�g�[SRRR�)��i�?=�\u00104\u001e\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�\u0016\u0001�\u0004ح�\u0000�5\u0013`�-\u0005R\b\u0002\u001e\u000b�\u0007��\u001d@��\bh��\u0006��\u0019���I)\b �\u0000\u0002\b �\u0000\u0002��Yw��\u001d\u0002��-�\u0017�@\u0010\u0004�\u0019=\b�\u0018�6\u0014\u0015\u0015}Z\u0004?�\u001btz�)h>\u0002\b �\u0000\u0002\b ���\u0002�Ȕ���tyVVVkGG��l.��\u0010pU�\u0019\u0000�rS��\u0002ڝ5Y���`hh�\u001a��l'.e!�\u0000\u0002\b �\u0000\u0002\b�%�Ϛ)z�WAA�*!�2�d��o\u0002����ǈ�\r\u0001����gϞ��F�\u0001H\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010pK 99�!]��vŊ\u0015=n�I=\b�%@\u0002�.I�qM���:����w\u001a��w�R*B\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�\u001f\u0002+322ާ�\u0001���)~B�|\u0001\u0012\u0000��\u0011\u0011\u001e%���l\r�\u001f��쨧�\u0011\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001W\u0005�/�ִ��\u000b�m۶�Պ�\f�\u0004\u0004H\u0000$�ǩ�\nTVV.�����j�v�fjC\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�x\u0001�&�M�~������_�\u0019\u0004�\u0013`�4�����\u0011�m���-X��K\f����)\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001�\u00054+5G�>��R]�~�Ԉ@�\u0002�\u00060v3�pY@o�_ӛ��q��W���\u000e\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@`t\u0001�3�\u001e�fgg\u001f�m\u0002�\t0:\u0017�z,����\u000e���\u0005���R���]���gG>�W\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010�^@I�s&M�Tz�W>�jժ!�#\"\u0002\u0004�\u0017`\u000f��Mx�\u0000�\u0005\u000b\u0016Lhll����ǀp\b\u0001\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000��\u0004�\bx|�̙�-[��7�\u00138\b\u0001\u0017\u0005H\u0000��MU�\t�\rs���\u0007\u001f՛�����(\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\u0011�D\"���x��\u0000\u0007͉�H\u0010\u00187�\u0004\u0000\u0005F\t̙3'���\u0003Ԛ��F\u0005F0\b �\u0000\u0002\b �\u0000\u0002\b� ����b�ԩ\u0017�Y��@\f�q(\u0002�\n�\u0000p���c\u0011��˛�{��I�����Ǳ\b �\u0000\u0002\b �\u0000\u0002\b\u0018*�:??�|�\t�jh|�\u00152\u0001n\u0003\u0018�\u000e7��s��-LMM]����\u001e\".\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000�8\u0004��޽��y��\u0015�q.� `�\u00003\u0000l'��X\u0005JKK˵���\u001a���z.�#�\u0000\u0002\b �\u0000\u0002\b `�@JJʖ�\u0013'���k�5�\u001e+�\u0005[�\u0004@����֕������J�\u0016\u001a\u001f,\u0001\"�\u0000\u0002\b �\u0000\u0002\b \u0010���\u0000M����ްaæ8��4\u0004\u0012\u0016`\t@\u0014\u0010�@yy������:������\u0000\u0002\b �\u0000\u0002\b �\u000b\u0001�v-���xv֬Ys|\u00110A\u0006R�\u0004@ ���Fi�?_��?k��4�%B\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004l\u0011����Z��^�bKi\u0014�@�\u0002,\u0001�\u0011��\u0013\u0017���\\�����\u0006��\u0012/�\u0012\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010𗀖\u0003th\u0003��[�n���\"'Z�\u000b�\u0000�{\u000f�,~���@k�\u001fV�\u0013|\u0016:�\"�\u0000\u0002\b �\u0000\u0002\b `���\u0000�III\u001fرcǓ�\u0015JA\b�!�\u0012�1�x�>\u0001�\u0003�\u0012�}��Jd�o\u001f+%!�\u0000\u0002\b �\u0000\u0002\b�P@��3\u000e\u001f>���ƾχ�\u0013�O\u0005R|\u001a7a�L����j�|���R}\u0016:�\"�\u0000\u0002\b �\u0000\u0002\b ���>\u001bG�\bX����Y\u001b\u0004�s�\u0012\nE�(\u0001\u0012\u0000Ga�3\u0002%%%u*�gz����\u0019bJE\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010�@��.�<y�.%\u0001V��\u0019D�\u0007\u0001\u0006d~�%\u001f�X\\\\�9e5o����&|܏��\u0000\u0002\b �\u0000\u0002\b ����YY�����ڔ\u0004xѹ�(9�\u0002$\u0000��\u0017�`�5���\u0006�7;X\u0005E#�\u0000\u0002\b �\u0000\u0002\b \u0010\u0014\u0001+\t�ޜ�����v�\u000e\u0010�^5�\u001d$\u0000\f될�SPP�m���{P�C;\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010pC@��>W�\u0001�:;;�q�>�\b�\u0000\t�p��+�խ�n֕�/�R\u0019� �\u0000\u0002\b �\u0000\u0002\b \u0010<�3�1`��\u0003<\u001d���\"/\u0005H\u0000x�\u001f��5������_\r`�h\u0012\u0002\b �\u0000\u0002\b �\u0000\u0002�\th6홹��\u0003Z\u000e�k�RQ�\u0005H\u0000\u0004���k�������ݫ��\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\b���\u001c��\u0001�ۿ^��\u0004�\u0017�\u0001�Ӻ՟��\u0000�F�\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010�L@3\u0001.P\u0012`'�\b��\u000b\u0002U1\t�@u�7�)**�Z5�LoN��ϛ.�V\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000��\n$%''_4u���mmm��LZ�\u0000\u000367�\u0003\\G~~�%III�R\u0013#\u0001n&MC\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�k�����\u000fn߾��^\u0007B��\u0015 \u0001�߾�<rm�w����V�4σ!\u0000\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0002.���ҧ�o\u0017�ر�ɀ7��9$��P�\u0014\u001bp���ʅ���a\u0006�\u0001�h��\u0000\u0002\b �\u0000\u0002\b `��>{�k��#���g\u001a\u0013\u0014��J�\u0019\u0000��.3�՚�S\u0015ɓڕt�\u0019\u0011\u0011\u0005\u0002\b �\u0000\u0002\b �\u0000\u0002�\u0011�L�����s7n��RxZMK�\u0010`\u0006�\u001d�!*C�ƹ�v�\u0007\u0006�!�t��\u0000\u0002\b �\u0000\u0002\b `��f\u0002L���~b֬Ys�\n�`�\u0017`\u0006��]dN�Z�?kppp�\u0006��̉�H\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\b�@��ɓ�ڰaæ�\n��\u0004H\u0000��\u0015ރKKK�\u0007\u0006\u0006��@ax\u0015h9\u0002\b �\u0000\u0002\b �\u0000\u0002f\th9@�ĉ\u0013�|���\u001a͊�hL\u0014`\t���bXLs��-�U��\u0015\u0016����p\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�-��\u0000�\u0007\u000f\u001e|z޼y\u0005ᖠ��\b0\u0003 \u001a�\u0010\u001f���7-55՚�?+�\f4\u001d\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001�\u0005^���?kժU��\u0007J|�\t0\u0003�;{�k�3gNNZZڟ\u0018�\u001b�U\u0004�\u0000\u0002\b �\u0000\u0002\b ���ݻw����&\u001b\n\u0004F\u0012 \u00010�Lȟ�9s�\u0003\u0007\u000e�QS�憜��#�\u0000\u0002\b �\u0000\u0002\b �\u0017�y����/Z�h�_\u0002&Nw\u0005H\u0000����\u0016,X0A�\u001e���/\u0002&H\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010xC@�w\u0017lݺ�wJ\u0002��\u0004�c\u0005H\u0000\u001c+\u0012�߫���v�����Ç\u0017����#�\u0000\u0002\b �\u0000\u0002\b �K\u0001ݺ��\u001b7>TWW���\u0006\u0010�c\u0002)��L��\u0014\u0018?~�]���/�'h\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010xC ))�M�6\u0015uvv�\u0016\u0012\u0004�\u0014 \u0001�\u0004��\u0015\u0015\u0015�k�ЍP �\u0000\u0002\b �\u0000\u0002\b �@ \u0004�egg\u001f���x6\u0010��\u0011\t\u000b�\u0000H�0\u0018\u0005���_��B�\u0004�5�\u0002\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004,\u0001-�='++�AI��� �\u0004\u0001\u0002���gk����\u001cX#ğ\u0003\u0002\b �\u0000\u0002\b �\u0000\u0002\u0001\u0013HII�W��kjjb&@��6��\t`�b\u0001;���z������\u001f����-�A\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�\u0012�\u001e_i���f��D$�\u0002$\u0000B��\u001a�絷�?.��\u00103�t\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0002/�$@N�㕕�'\u0004��4pD\u0001\u0012\u0000#�\u0004����ڌ���G�FP\u0016��:\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010�\u00044뷢����\u0005\u000b\u0016L@$�\u0002$\u0000B������{��Oo\u0000�\fa�i2\u0002\b �\u0000\u0002\b �\u0000\u0002�\u0015�\u0005�Sw��q�5&\b-B�\u001b�]\u0000B���7o��n���\u00106�&#�\u0000\u0002\b �\u0000\u0002\b ���q�_y�IZ\u000e�'0�%@\u0002 \\�=����Ӻ�SȚMs\u0011@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�(\u0001]\u0010\\����W�\u0007��QO�c�\u0005H\u0000\u0004���n�v�|�\u0006�?׃�?\u001e\r��\b �\u0000\u0002\b �\u0000\u0002\b�P 99�����U�\t�9��\u000fe�\u0019\b���gΜyJww�r���\bI�i&\u0002\b �\u0000\u0002\b �\u0000\u0002\b�!���ҥD�Y���\u001f�P^\u000e�\u0000\t�\u0000t�XM�={v���\u0007Wj�?}�cy\u001d\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�%�$�nks����p�<|�e�ǀ��n������\u0019�\u0007��i\u001e\u0002\b �\u0000\u0002\b �\u0000\u0002q\nh���$�㕕���,��|\"@\u0002�'\u001d\u0015O�uuu��w�~H����9�s\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@ \u001c\u0002\u001a3T����Z�\u0007�����l%�\u0000\u0006������3�C�4�M�i\b �\u0000\u0002\b �\u0000\u0002\b `��6\u000b?q͚5E�3��l*�b\f\u0013 \u0001`X��\u0015Naa�k��9�ʣ\u001c\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\b���\u0000�t{�A%\u0001�\u000b~k��B\u0012\u0000\u0001�����kԬ�\u0002�4��\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\u000e\u000b(\tpvnn�f�\u001ep��UQ��\u0002�\u0005�ep��+((8C\u001bx<���iN�E�\b �\u0000\u0002\b �\u0000\u0002\b \u0010L\u0001�)�t{�st{�\u0017���p��M\u0000\u0003��UUU��\u000f�A\u0006�\u0001�T��\u0000\u0002\b �\u0000\u0002\b ��\u0007\u0002\u001aS�\u000f\f\f<X]]��A�T�\u0000\t\u0000�`�.��񿭭�\u001a��]7�!�\u0000\u0002\b �\u0000\u0002\b �@ \u0005\n�\f�W�\u0019 8}�\u001e\u0000\u0001�˽{��244�$ ͡\u0019\b �\u0000\u0002\b �\u0000\u0002\b `���\u0003(՝\u0001&kS�'\f\b�\u0010\u0012\u0014 \u0001� �\t�\u0017\u0015\u0015]�+�7�\u0010\u000b1 �\u0000\u0002\b �\u0000\u0002\b �@�\u0004�\u00048Mw\u0006ب$��`�,|�a\u0013@��yyy�?\r\u000e\u000e�P\u0002 ��M!|\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u00100T@{�u)�Ӛ��H\u0002\u0018�Gф�\u001e\u0000�(\u0019zLMMM�\u0006�\u000f3�7��\b\u000b\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000��\bh̑������6+ M\ne3H\u0000���5\r'iϞ=��\u001f�>m\u0002a#�\u0000\u0002\b �\u0000\u0002\b ���\u00044���\u0018�\u001ek,⣰\t�(\u0001\u0012\u0000Ga������)��~��X\u0011@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@��\u0002J\u0002\\�=Ⱦ��V�7z27>�����\u000b{{{\u001fS���\u000f���\u0011@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010��\u0003\u0018�c�������v�1v\u0006�>��\u00193fT\u001c<xp����Y脋\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\u0001\u0011P\u0002�-99����q[@�\u0014�f�\u0004�Gݬ\r72zzz~��\u0019����\b\u0015\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000��\th)@�\u001e\u000f/X�`B��\u0016���\u0004�qAk[jj���Gv^��E{\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�\u0002�\fp�f'\u0017wtt<���\u00191\t\u0000���6���\u0006�_�I���\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002!\u0010P\u0012`�I�Z;;;�\u0016������\u0001��.,((8#))���Ǖ�p\t\u0011\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004B$�����\t\u0013\u0016644�\bQ�}�T�\u00000�۪���k��\u0007\u0019�\u001b�Q��\u0000\u0002\b �\u0000\u0002\b �@H\u0005��Jww������BJ��f�\u00000�����R���\u001e���|��$4\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�����W���\u0011(�\u0015`\u000f\u0000s�f�޽{o\u0019\u001a\u001aZbp���\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b�!��\u0000�k֬��M\u0001���L\u0001\u0012\u0000f��8m�w����lhx��\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b\u001c'�$�i'�p�&�d^w܋<�\u0000�\u0000z�\u0005�\u00070k֬9]]]+�\u0000�8�U�A\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\u0015�\u001ef]��&�\u0000�u\u0013{\u0000\u0018�!�\u0016-\u001a�)3\u000f0�7�c\b\u0007\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\u0012�X&S\u0007��5���\u0004\u000erM�%\u0000�QGW���X��\u0017Gw4G!�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002�\th\\3M�\u0002f��\u0007�\u000boD,\u00010��KKK\u0017\u000f\f\f<fPH��\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b�+p8--���۷�1�\u00028�^\u0001\u0012\u0000�z�]Z^^޴��Ե��?-�B8\u0011\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u00100K�%##cNCC�^��\ng4�\u0001`H�'''���ߐ� \f\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010�K ����.�\n���\u0004�\u0003 1?[�������F[\n�\u0010\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@� \u0001�\u00070#;;{�6;��Aa�2\u0014�\u0000x��%%%U���/)\fv���/�\u001e\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u001c\u0013���ͭ]�n�k��@�c\n�\u0004`L\"�\u000e���LW6�~����9fJF\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001�\u0005&\u001c8p�����4�C\to\u0004,\u0001��333��{d~��\u0010�\u001a\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010pE@\u0017?�k?�����?�R!�\u001c'�\u0012��H�yBS�����'T\u001b}�\u000e9� �\u0000\u0002\b �\u0000\u0002\b ���\u0002�Ǐ\u001f�֭[��>��E�\u0012\u0000\u000f����v��_�P�\f�=�J\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010�L I�\u0000~YTT��Y\u0004!��\u0004�\u0007��gϞ;5�?߃��\u0012\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010�Z�@\u0017D�u\u0010a��=\u0000\\�uM������.WKu\b �\u0000\u0002\b �\u0000\u0002\b ��I\u0002�uW�]���7)����\u0014t\u0017{���|����]\t�\f\u0017��*\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�8������\u0013'�{���6\u001b\u0017\\@\u0003b\t�K\u001d[WW����}\f�]\u0002�\u001a\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u00100Z@c�L�\u0000��\u001a+\u0019\u001dh��c\t�K��{��oj��\u0012���\u001a\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�\u000f\u0002\u0005[�l�tttpW\u0000\u0017z�%\u0000. WVV.���{Z\u0019.f\\��M\u0015\b �\u0000\u0002\b �\u0000\u0002\b �\u001f\u0001-\u0005\u0018R�g755=럨�\u0019)\u0003R��mΜ99\u001a�����ah�G\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001_\nXc%=���e\u0003|\u00144K\u0000\u001c�H$�KM�_�p5\u0014�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b�Y ����\\K\u0001~��F�\u001e;\t\u0000\u0007{�����*��\u000eVA�\b �\u0000\u0002\b �\u0000\u0002\b �@ \u0004t�z�ԩ�\u000e\u001c8�r \u001ad`#�\u0003��NѺ�����u*>ˡ*(\u0016\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\b�������իW7\u0007�a&��=\u0000\u001cꅮ����h\u0006�\u000e�R,\u0002\b �\u0000\u0002\b �\u0000\u0002\b\u0004R ����ǁl�\u0001�b\t�\u0003�P^^~�6��7\u0007��H\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@ �\u0002Z\n03++�A�\u0001�\rtC=h\u001cK\u0000lF�����?�W�\u0000ȱ�h�C\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\"�/77�jݺu-ai�\u001b�d\t���\u001a�����fT�C\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000��\tL�f��\u0015�F;�^�\u0000�(\\\\\\|�\u0006��nc�\u0014�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b�R@K\u0001N�<y򫝝���\u0012��F3\u0003�&���ک�\u0003�ͦ�(\u0006\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\b�@RR����ϟ\u0012z\b�\u0000�\u0001`\u0013d$\u0012�khhh�M�Q\f\u0002\b �\u0000\u0002\b �\u0000\u0002\b \u0010z\u0001]d��2�b�\u0002x(�\u00186\u00000\u0003�\u0006DM�����_nCQ\u0014�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b �v�+u�����)~�G�\u0004@<jG�3g�\u001ck��\u001f\u001d�\u0014?\"�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b�(088�㚚�l\u001b�\feQ,\u0001H��5��\u000eMK93�b8\u001d\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@`\u0004\u0001��&������\u0000�\u001b�\u0010��B )�c8d\u0004\u0001M�?KS���e\u001cG0�i\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�&�����\u000b�m���M兮\u0018�\u0000���UUUi�B�D�3��Ӑ�\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000�\u0018\u0004����~\\WW�\u001a�9\u001cz�\u0000K\u0000��Ǵ��/+\u0001�$�s8\u0016\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@ !�\u0013�l�ҧ�\u0000�\u0002�����q�͞=�����Wt��8N�\u0014\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000��\u0005z322�\u001b\u001a\u001a��_D8�d\t@\u001c������?��8�8\u0005\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010HP`��\u0002p'�8\u0010I\u0000Ĉ����N97��8\u001c\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�&\u0001m�~^ii�U6\u0015\u0017�bX\u0002\u0010CW\u0017\u0015\u0015���\rCCC'�p\u001a�\"�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b�,����'''g�ڵk�l.:��1\u0003 ��MJJ�\u000e��\u0018�8\u0014\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010pH@c�immm7;T| �e\u0006@��Z^^~�֙,��Ei�a\b �\u0000\u0002\b �\u0000\u0002\b ���\u0002�U������;\\O �g\u0006@\u0014�h�gҺߤ\u000ee�\u001f�\u0017� �\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002.\t$�������>�R}��&��ѻ\u0014|kk��4��j���\u001a\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000�(\u0005\u000e\u001f><m͚5\u0007:::VFyJh\u000f��\u0018]_UU5]��ۤ\u0004��1\u000e�e\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u000f\u00044\u000b�#++kƺu�Z<��7U2\u0003`��JKK�C\u0019�w�q\u0018/#�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\bx$�1[z�\t�\u0005��G!��Zf\u0000��M����\u0003\u0003\u0003�!8���K\b �\u0000\u0002\b �\u0000\u0002\b ��\u0001\u0002�322Nohh`)�\b��&�#�h\u0013�d\r�o��\f�G0�i\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@� �$m�~�5�3(&�Ba\t�\bݱ}���\u001f:t�#���\b �\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002�\th)@��/�ܬ}�V\u0019\u0016�\u0011�pu{�n(**�զ��Ҕa^�)\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001s\u0005Z�L�2c�ڵm��MdL�\u0018�=))��z���06<�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b\u0018.0���\u0003֘��c\u0004�\u0001p\fHee�<�\u001byI��I�\u001ccï\b �\u0000\u0002\b �\u0000\u0002\b ��\u001f\u0004t[�C�H�v۶m/�!^�bd�{��\u0006��1�?\u0006�_\u0011@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u001f\thL�288x��Bv%T\u0012\u0000G1�W�\u000f匣��G\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u001f\nhlwfqq�\u0015>\fݱ�I\u0000\u001c�]�h�x���[�IS0\u0002\b �\u0000\u0002\b �\u0000\u0002\b ���\u0002��2�t�+5�>n\u0003x�g�������Ԏ\".\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000��\u0004t[�l]�����\u0019̣�\u0004P����\tZ�ߠ)\"���ʹ\n\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\b�@{~~~�U�ZC+p��,\u0001\u0010�\u0006�71�\u000f�?\u0005ڏ\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\u0001\u0015�ڳg�M\u0001m[L�\n�\f��������k�\u0000`9DL:\u001c�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b�F`0--m����7�&b\u0007\u0002\r�\f�������\u0003Y\u0014�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b�#\u0010�m\u0001�kN8�D\u0012�\u0004@EEŹb_�\r=�\"�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b�%�M�/*,,<ǭ�L�'�\t����d�\u0006�=\u0013;��\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\u0017HJJ��5\u0016��d�\u0018�=\u0000������������\u0012\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�\u000e\u0001%\u0001>�k׮��Q���\be\u0002 ///S\u001b@lV\u0002 �o\u001dF�\b 0�@{JJ�v\u001d�M�f��wi�W�~~������9�/l��gX�#��\u001b���0]Ǖ��2����|!�\u0000\u0002\b �\u0000\u0002\b\u0004K`�n\u000b8C�\u0005�>'��+\u0012��\u001ei�\u0006��c�\u001fƞ��A\u0011�\u0000�u�e�\u0006�/�Y?o�<y�k׶�������z�(׆1�J\u0012���OUB�4}/��\u001e�B\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010pU���������j@e��\u0001PTT��\u000f�[e�e�?! ���\u0002���U\u001a�?����r�ĉ+^{��ƱOs������\u0005J\f,���\u0019J\u000e���B�~�0%#�\u0000\u0002\b �\u0000\u0002�\u000b\u001c�2eJ��\u0017�\u001c�:�\nB������;����\u0004�8\u001d\u0001\u0004�\u0015\u0018�U�e��7\u001a�����q���%V��y�\nZZZ.Q��*Q�P�\u0006R\u0012+��\u0011@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\\\u0010�����K.�cL\u0015�J\u0000\u001c��� �\t��\u0000� ��\u001b\u0002\u001a�\u000f)9�����_���;w���G���کJ\u0006�_��+�\bx�\u001f�@�\b �\u0000\u0002\b �@H\u0004z���D�/6��\u0017�J\u0000h��\u001f�\u0003���\u0004�,\u0004\u0010HX���x�Ҕ��ڴi��<'0_��ճ���oT���{OF`\u001aFC\u0010@\u0000\u0001\u0004\u0010@\u0000��\b�\"ԏ���>\u0019��ٌ�$\u0000���RW\u0015_�H(7>\u001c�/�\u0003\u0010p_�Um�y[OO�=�bn��\u001f�/k�\u0011�e�cJ\u0002|J���6��!�\u0000\u0002\b �\u0000\u0002>\u0013Ь́\t\u0013&�nhh����\n79��|x�\u0006����\u0019����\b9X\u0002ʲn�\u001b퇴ުj���?\u000e����=k9��z�\r7�P��\u000e��S��ի�\u0006\u0001\u0004\u0010@\u0000\u0001\u0004\u0010�6sN���ɟ��\u001eu(f\u0000�������[-�P�7�?\u0003�@�\u0015�}�$�?.���\u001f-]�t��\u001a\r����&{߾}_Qx�ь�4C�$,\u0004\u0010@\u0000\u0001\u0004\u0010@ \u0014\u0002�^T���5\u001b6lX\u001b�\u0006�b@�[v=��\\\u001c�Τ}\b�(�7�>\rro����֪U��M�ѫ�f̘Q���}�f(}Ы\u0018�\u0017\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@`�8]�zL�6/\u000e�E�\u0013\u0000\u001a���N�K�;��!`���H�h����Xe���\u0012Sii�eJ\u0002,U�$ה��\u0003\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\b���j��;\u0002�\u0010�v\u0007~\u000f\u0000]}�V�;��!`����\u001d������?����=��h\u001e�:u�\u001c�=9��\u001c�\u0000\u0002\b �\u0000\u0002\b ���.�\u0004~�\u0018�\u0019\u0000%%%���r⏃2\u0011@`D��\u0019\u0019\u0019�i'Օ#\u001e�\u000b�\nh\u0013�$�Yr�f\u0002|[��a\u000f�I\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001�\u0004t��v���c\u0015x\\p�g\u0000����<��z\u0004B%�+؏j]�;\u0018����5q����\u0000\u0000@\u0000IDATXw\u000b�E\t�w����J�,\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000�x\u0005t\u00019�c��&\u0000t��ݺ�f���\u000b\u0001\u0004\\\u0010Ѐ�\u0007���\u0007�-[vЅ�\u0002]�ƍ\u001b_��\u00025�@7��!�\u0000\u0002\b �\u0000\u0002�\t�����\u001c�²'��.\u0001��ω�]�0Q\n\u0002\b�\"0����i]���(��R\u001c\u0002��\u0002[ZZ~��\u0001��8�S\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\u0010Ѕ�g����8N5��@&\u0000�����?m�>\u0001\"�\u0001�j�e�����P_VUU�����\\�_�P\u0015\u0014�\u0000\u0002\b �\u0000\u0002\b p���d��e�ˎy���\u0006r\t�n=\u0016�u\u001b����\u0001A\u0011��\u001b��\f���������q�\u0019�j\u0016����D�\b �\u0000\u0002\b �\u0000\u0002o\n���Կ�s��\u0007n\u0006@ee����?\u0007��h\u000b\u0002�\thZT�\u001e�״�?�\u0016[P�f\u0002ttt�^{��;�m�]\b �\u0000\u0002\b ��I\u0002�صH�\u0000��\u0014S��\u0004n\u0006@WW\u0017W�\u0013���|\u0004F\u0017\u0018LMM�����Hv�j�\u0004��\u0007T.�W�\u001b��\u0010@\u0000\u0001\u0004\u0010@\u0000�a\u0004��+pc�@%\u0000t�!�e\r��S\b�'��5\u000ed�֭LG��4꒴!`ה)S.���Q�ā\b �\u0000\u0002\b �\u0000\u0002q\t薀g����\u0019�Ɇ�\u0014�\u0004@\u001034���\u0010Vx\u0005��{��{��|�[�v�ڶ���K��I���\u0010\u0001\u0002\b �\u0000\u0002\b \u0010l����@�\u0002\bL\u0002���X\u0019�`���:\u0004�\u0013Е�eڌ�+�E@�o\nlذa�f;ս�;�\u0011@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u001c\u00138���\"0��Oq���'M��S\rPNt�Z�C ,\u0002͚z~޲e˸�lH�kC�u\u0013'N��D�)��D\u0018\b �\u0000\u0002\b �@ \u0005t�����3\u0010�`\u0003q\u0017\u0000�������\u001eȿ6\u001a���\u0002�\na�n�����\u0010��\u0002z�K�{�\n=7����\u0019\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�^\u0001]t��k׮5���~i�X\u0002�u\u0019_t��\u001a\u0011\b��֚����}������4��?�\u00013#$*\u0004\u0010@\u0000\u0001\u0004\u0010@ \u0018\u0002�L\u001c�1��\u0013\u0000�\u0002fM��`0��h\u0005\u0002�\tl\u001e?~�������\u0012P\u0012�Uݖ�\u0007o=�\u000f\b �\u0000\u0002\b �\u0000\u0002N\b,�1cF�\u0013\u0005�Y��\u0013\u0000]]]�?t�P`�2p��\u000b��\u0004\"��'���c\u001d���\n�����n\r���(�\u001d\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\b��5��g������N\u0000TWW�i����\tď��\u0002\u001aP޿cǎ�L����.���ҥii�}����\u0000\u0002\b �\u0000\u0002\b `���\u0000\u001f��˛fg�n���\u0004@{{��\u0002\u001b�6\u001a�!\u0010\u0002������\u0015�v\u0006�����\u000f)i��4�� �\u0000\u0002\b �\u0000\u0002�\t��\fYk\f��/�&\u0000fΜ9I\u0019�O�V��\u00110[��u�ֵ�\u001d\"�\u001d+��\u0000�z�s��\u0000\u0002\b �\u0000\u0002\b `��n=�Ik,j_����\u0004���BTY�rQ\u001b\u0002�\u00108��䷆��\u0001k�֭[��&=\u001d�f�\u001c\u0004\u0010@\u0000\u0001\u0004\u0010@�$�l݆��&\u0005\u0014K,�L\u0000TUU�i���bi(�\"�@t\u0002iiiw�ܹstGs�i\u0002zo��i1\u0011\u000f\u0002\b �\u0000\u0002\b \u0010$\u0001�D��5&�c�|�\u00008x��uB��#81#`�@�ĉ\u0013�ox��7���]���^\u0000/�r\b/!�\u0000\u0002\b �\u0000\u0002\b$&P���M�\bo��]\u0002@k.�\u0006\u0006\u0006��\r\u0017�\"\u0010x����?\u0010}��@��F �\u0000\u0002\b �\u0000\u0002�\n|�\u001a��\u001b���.\u0001PVVv��2c���,\u0002\b$\"�+�?I�|�5C��N{T}��\u0019�\u0010\u0005\u0002\b �\u0000\u0002\b \u0010<����Y���\u0017��e�K\u0000\b�{]����x}!����455��E�\u00049���\u000f>xH\u0007���\u0007�\"\u0002\b �\u0000\u0002\b �@B\u0002�{�wcS_%\u0000JJJ�����\t�\u0012'#���\u0002�b|�/�/\u0005�С?}�s\u0004�\u0000\u0002\b �\u0000\u0002~\u0011������ʓ�\u0012�\u0015��\u0012\u0000����p�\u0015\u0001�\bh�?�X��K��9�@cc�ߕ\u0004�0��\u001c�\u0000\u0002\b �\u0000\u0002\b \u0010�@oo��ƨ�I\u0000̟?�\u0012\u0000���1��\u0000\u0002�\n<�\u0001��Q��E�\thZ\u001a�\u0000|�k\u0004�\u0000\u0002\b �\u0000\u0002~\u0012�\u0018�Zk�ꗘ}�\u0000hii��P'�\u0005�8\u0011��o|\u0016/�F!���N�F��!\b �\u0000\u0002\b �@\u0002\u0002\u0013^���\u0004�w�T_$\u0000���Ru�O�*Ce\b�H ++kY��\u001b��644��ƶ���4\u0014\u0001\u0004\u0010@\u0000\u0001\u0004\u0010�@`pp�S���\u0011\u000f���ʔ��������+4���\u001eTM�\b�A�e˖-_\nCC������St���0��6#�\u0000\u0002\b �\u0000\u0002.\tL^�~����6���\u0019\u0000ʨ���\n.��Q\r\u0002v\b,��\u0010�0S@��?�\u0019\u0019Q!�\u0000\u0002\b �\u0000\u0002�\u0011Ќu_�Y�O\u0000������W�\fΟ\u0006-A�,\u0001�\u0001`�Y\u0011\u0011��\u0002�&M\"\u0001`'(e!�\u0000\u0002\b �\u0000\u0002�\b薀�uK�\u0005üd�S�'\u0000��I1�W\t\u0006�\u0018\u0004�S��1\u001cΡ>\u0013ذa�&%y^�Y؄�\u0000\u0002\b �\u0000\u0002\b�N�����Y\u0000F'\u0000t�?_�~��z��\u0011������_��?�\u0012i�\u0002k�<��\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\u0014Ѕ�K����Gy�'�\u0019�\u0000����J�\u0017�)z�{T�@�\u0002۴c�`��P��\u0002��h���\u0011\u001b\u0002\b �\u0000\u0002\b \u0010\u0004\u0001-]O���ư�~\u0019�\u0000X�dIJrr�ǌ�#0\u0004\u0002 �7��\u0001h\u0006M\u0018C@�L\u0002`\f#^F\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\u0010�^\u0000\u001f�Ʋv��D\u0019�&\u0000^z���+v�є�\u0000\u0002�#\u0010�D6a\u0011|\u0001�\t�\u0004@�\u0016\"�\u0000\u0002\b ��\u0019\u0002%/���f�r|\u0014�&\u00004��_�\u000f�g\u0010@�f\u0001f\u0000�\fjbqӦM#\u0001`b�\u0010\u0013\u0002\b �\u0000\u0002\b\u0004R@�/�\u001d�\u001a�\u0000����K8?�\r4\n\u0001�\u0004��͠p\b�!�իW7��\u001e���X\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000��\u000b��L_oʌߌL\u0000��\u001f��#c3�ۈ\u0002\u0001{\u000445�Þ�(�\u0007\u0002�}\u0010#!\"�\u0000\u0002\b �\u0000\u0002�\u0017�Ʋ���q\u0013\u001bb� [�MH��כ�EL\b\u0004M ==�`��D{�\u0017HIIi\u001b�\u0015�E\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010p@�zkl�@�\t\u0015i\\\u0002����2]�<!�Vq2\u0002\bD%����\u0019Ձ\u001c\u0014\u0004\u0001\u0012\u0000A�Eڀ\u0000\u0002\b �\u0000\u0002�\u0010Иv�n\tx�i�\u001a�\u0000��c7L0��\u0007�D\u0005��ۙ\u0001�(��?��P�\u0014\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\b��qc[�\u0012\u0000%%%UZ/qf ��F �\u0003���\"\u0012\u0000>�'�Bd\u0006�M�\u0014�\u0000\u0002\b �\u0000\u0002\bD#���Y���'Gs�[�\u0018�\u0000�4�:�\u001aN=\b 0n\\EEE\u001f\u000e�\u0010�F4��h)�D\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\u0011�\u0012w�Ƹ�$\u0000�\r\u0012�\u0000�ڜ�\"\u0012\u0004�/��+�d\u0004����\u0012�D\"�5\n\b �\u0000\u0002\b ���\u0002����&m\u0006hL\u0002����}�).�\u0007�!\u0010j���މ�\u0006\bQ�`��C��4\u0015\u0001\u0004\u0010@\u0000\u0001\u0004�\u0011�z����M�Ƙ\u0004�6���)(ā@X\u0004222\u0018\u0014���u{U�:$}M3\u0011@\u0000\u0001\u0004\u0010@�,\u0001�ƺF$\u0000�͛W���1���\u0006��\u000b�͈Aa���\u0016j�\u0019}\u001d����\b �\u0000\u0002\b `�@JJ�\u0005����&DeD\u0002`߾}�i��\u0014\u0013@�\u0001�0\t��\u001d�txRR\u0012}\u001d����\b �\u0000\u0002\b `��5��g��L�ʈ\u0004�v�f��\t\r�\u0010:\u0001�\u000105t�\u000ei��\u001f\u000f}\u001dҾ��\b �\u0000\u0002\b ཀ)c^�\u0013\u0000\u0005\u0005\u0005g�;fx�%D�@�\u00044\u001d�2|�\u000e_�kkk�;\u0000\u00181�,|��\u0018\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\u00187N\u001b2��2�ӽ��<\u0001�\u0001\bW���+��0\u000b�\u0014�Ƈ�����\u0012=Iai/�D\u0000\u0001\u0004\u0010@\u0000\u0001\u0004L\u00140a3@O\u0013\u0000yyy�ژ�C&v\u000e1!\u0010\u0006\u0001M\u000b'\u0001\u0010��Vƙ~\u000eA?�D\u0004\u0010@\u0000\u0001\u0004\u00100[@we����L�\u0002�4\u0001�[�]�\u000f��<k=\u0015#\u0010r\u0001mF��0\u0004\u0003J���!�g��\u0000\u0002\b �\u0000\u0002f\u000bXc߽{�^�e��&\u0000�������ԍ\u0000\u0002�\n��B�\u0007�\u000b�\u0000pޘ\u001a\u0010@\u0000\u0001\u0004\u0010@\u0000�h\u0004�\f��1�g\t�ٳg��C�Y� q\f\u0002\b8&���ᵎ�N��\b�bJ ā\u0000\u0002\b �\u0000\u0002\b�Y@3p\u0017VUU�xe�Y\u0002����J5�M���y�E���nI�\u0010��\n\u0014\u0015\u0015�j��9�m!-C\u0000\u0001\u0004\u0010@\u0000\u0001\u0004|%�td,�IО%\u00004�ʓ\u0016S)\u0002\b\u001c+�L�cE\u0002�{$\u00129S�!�\u001a�>�)\b �\u0000\u0002\b �o\u0001]��l,�I\u0002����Z]�\u0015)��\u0012}p\u0004N����\u0004�9��h\u0001�\u0007�\f��A�\u0019\u0001\u0004\u0010@\u0000\u0001\u0004\u0010�X@�������ʋ0<I\u0000���e<�@�N\u0004L\u0016�\u001bP����\u001aq�;)��H\u0000$���\b �\u0000\u0002\b ���\u0002^�\u0002p=\u0001���������\u0010@�\u0010����w\u001b\u0012\na�(�;<LUq56\u0016IQ\b �\u0000\u0002\b �\u0000\u00026\b$''{rQ��\u0004@aa���v��`F\u0011\b `��\u0015�\u0015EI�\b�޽�r�ߺ�>oJ��\u0003\u0001\u0004\u0010@\u0000\u0001\u0004\u00100U�\u001a\u0013�����v|�0LII�$��6,�!�'\u0001�\u0001U������b&ֱ\u0005�Y�z�8\u0002\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�#\u0001��Ʈ&\u0000��ƴ\u0004`�G�T�\u0000\u0002�\b��&��Q|��Ҍ\u00193*���\u0016�-n�E\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\"��p\u001fr{3nW\u0013\u0000w�y�y�@zBX:�v\"�'\u0001�\u0001]yd�\u000e?�M�#\b�����Q\u001e!\u0014�F\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\u0018F�\u001a\u001b���?wu/.W\u0013\u0000j3\u001fH��x�B�\u0004\u0001%\u0000�O:�$v�7�3\u0012��J��qM��p:\u0002\b �\u0000\u0002\b ���\u0002\u0003\u0003\u0003���]K\u0000h7�\fe8>�\u001f�#�@\u0002\u0002�\u001b��J�tN5D@\u001b�,���LC�!\f\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000�\u0011\u0004t��\u0005\u000b\u0016L\u0018�e۟v-\u0001����^E?��\u0016P \u0002\b�&�Y\u0000\u0017\u0015\u0017\u0017W�V \u0005y\"����=��J\u0011@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004b\u0015����b��]�r-\u0001��\r���\"*A\u0000�D\u0004���_L�\u0000��V���r�\u0012\u0000l��m7P;\u0002\b �\u0000\u0002\b \u0010���ceW\u0012\u0000�@���Q]\u0014�\u0000\u0007\"��g\u0002\u001a<^Q�/�\u0002��\u0004�����\t\tr2\u0002\b �\u0000\u0002\b ��Eٍ֘Z]I\u0000���[��Or�Aԁ\u0000\u0002\t\u000bD�\u0014��\u0012.�\u0002\\\u0017���x���|�+�B\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000��\u0005��m�f\u0001�r7\u0000W\u0012\u0000�������\u001c8\u0011\u0001O\u0004�f͚5Ǔ��4.\u0001k���q[\\'s\u0012\u0002\b �\u0000\u0002\b ���\u0002III\u001ft#\u0000�\u0013\u0000���������\u0018�@\u0000\u0001{\u0004�o6����\u000e{J�\u00147\u0004�����o��Q\u0017u �\u0000\u0002\b �\u0000\u0002\b�+`�������\u001e_Z��O��LII�y�����TJC\u0000\u00017\u0004\"��u;v�Ǎ��#~\u0001�fu�={6�?���K�L\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001/\u0005���|}�~��\u0018\u001c�\u0001�i�L�w�\u0007)\u001b\u0001\u0007\u0005����\u0006�Y\u000eVA�6\bh�3�\u001b )\u0002\u0001\u0004\u0010@\u0000\u0001\u0004\u0010�P�����\t\u0000MaHV#.�А�\u0011@ 1�<ݗ���\u0015��N\n\u0014\u0016\u0016����G����\u0011@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\u0017�g�\u000fXch'krt\t�u?����eN6��\u0011@�y����+���\u001ep�&j�E@�����j��\u0017�y\u001c�\u0000\u0002\b �\u0000\u0002\b `��>w/���g�����n����z�r\u0011pQ@3y�Ξ=�$\u0017���1\u0004�,Y��%\u001a���\u0018��a��\b �\u0000\u0002\b ��_\u0004�^\u0006�X\u0002@�'1��/fĉ��\u0002CCC�:;;�hѢ�\u001fɫn\t�X���z�]�V}ԃ\u0000\u0002\b �\u0000\u0002\b ༀn\u0007x�5�v�&�\u0012\u0000���\u000e�a(r*p�E\u0000\u0001w\u0005�\u0004�ihh���Z�m8\u0001�]�b��\u0017�{��\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�+`������9�\u0002�\u0012\u0000�pz�SAS.\u0002\bx#��uJ�}ٛک�\u0012����\n[�18�\u0019F\u001a\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�;\u0001%\u0001.v�v\u0012\u0000N�R.\u0002\u0001\u0015Цs����\u001f\u000fh�n��k��{���at�\u0004�\u0000\u0002\b �\u0000\u0002\b \u0010���\u0017�\u001dI\u0000X;S���q��\u0013\u0011@�h����;���?dt�\u0001\u000bN�3�&�\t5+;`M�9\b �\u0000\u0002\b �\u0000\u0002o\u0017����������͑\u0004�B[�\u0007�S��#JA�8\u0001]�N�\u000e��h}�\u0005�\u0005\u0017���\\&�'�\r�\u0016���$\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000��\u000b$���[cjۿ\u001cI\u000089e�v\u0001\nD\u0000��\u0004�\u0004H�㷚�sU\\\u0005pRT\u0002��V�/�Q\u001c�\t\u001c�\u0000\u0002\b �\u0000\u0002\b �{\u0001��tdO=�\u0013\u0000�����~���i\u0000\u0002\b�)`%\u0001�&�^\rR�4��\u001c\u0010���ۿ6�[.gkY\u0015_\b �\u0000\u0002\b �\u0000\u0002�\u00118�����\u0016۞\u0000�4ճ�a5��()\f\u0001\u0004L\u0016Hҿ�o\u0015\u0017\u0017߱dɒ\u0014�\u0003�Sl�Y�\u001a�?����z�X\u0011@\u0000\u0001\u0004\u0010@\u0000\u0001{\u0004�π���Ȟ��Q��\t\u0000}`ud��?B�'\u0004\u00100Q@oR���������(����\u0012������vͬ�M���G�Ł8\u0011@\u0000\u0001\u0004\u0010@\u0000��\u000b����>���å>��\u001ed�;��#�#���\u0003�\u0015ݮ�\u001c\u001f�lL���n__�Kz\u001f��1A\u0011\b\u0002\b �\u0000\u0002\b ��'\u0002)))���mM\u0000h\np�dJ=ѡR\u0004\u00100E�P�\t|R\u001b��\\WW�jJP&�Q__���\u0013_�4��꪿�>�\u0017\u0002\b �\u0000\u0002\b �@�\u0005�����\u0018�6\t[��fgg_��l\u0000h[�P\u0010\u0002�\u0014�R�$�a��e˖\u000b�M��������gK��zƌ\u0019\u0015+W�|Xf\u001f����d磧\u0006\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001'\u00054\u000b�I�\u0004��]u�:\u0003@\u001f��'�]=C9\b\u0004@@�\t����/k7�\u001f�7��;���&����?{zz^����_�7\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004ƍ�{�m[\u0002 //����t:\t\u0001\u0004\u00108F ���ֽL7+\t�\u0019Mw�\u001c�z�~��EX\u000e{��iP������B\u0005@c\u0011@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\u0016���\u0005G��Q�3ځ�%\u0000Ə\u001f�HW�X�;�6�!\u0010b\u0001\rts�D��;�smEEťֺ�0qX�\u000f����\u001e[o9��S��~ڊ\u0000\u0002\b �\u0000\u0002\b \u0010��u�(33Ӷ٢I��0�\u0019���\u0016%\u0000n\u001c�U�E\u0000\u0001\u0004�.��L[��q�n{w��e�\u000e�����6��)�������Sz\u0003/\nN�h\t\u0002\b �\u0000\u0002\b ��\u001b\u0002�I{�]�>kG]�%\u0000���U\u00054ێ�(\u0003\u0001\u0004B%p --mi$\u0012����agPZn�تA�gt��\u001a�iBP�E;\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\\\u0017x����ʎZmI\u0000̝;�p�޽���n\u0007,e �@l\u0002�\u0011pH��g5h~0++��u�ֵ�V��Gk6�����2��R\r�k���\b\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004� �}\u0000\nW�^ݜh[lI\u0000h�������D��|\u0004\u0010@�\u0012P2`H\u001b\u0007>�Y\u0001\u000fN�:�\u0011;�윐��1�뮻����\u0012=.Ӡ�\u0013�P&\u0002\b �\u0000\u0002\b �@�\u0005����;v��E�\n�$\u00004��>�m�*�`8\u001f\u0001\u0004\u0010\u0018N@WԷ�����׆��_q�\u0015�5�\u001e\u001a�X'��3gNNgg����\u000b��X��N�{�d'�l\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004��������\u0013�H8\u0001��^IJ\u0000��+_�\u0012\r��\u0011@\u0000�(\u0005��&�7\u001d�Y�����[����N�0a��\u0011舲�a\u000f���J��Yi{{{��\u000e�z�+ׁ�c�\u001e�\u0015���7U\u0006_\b �\u0000\u0002\b �\u0000\u0002\bD-��\u0001�Q\u0002`�>�\u001e���a\u000eL�������\u0003��a��)\u0004\u0010@�\u000b�V�A��ͱK����{T�Q�[K\f2t\u0015?S�g�\f\u001d���Yz-_W�Cu�B/:�:\u0011@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004b\u0013HOO�ٶm�˱����#o�5�����<}���D�@\u0000\u0001\u0004�\u0011��+�SG+Z\u0003�7^���\u001bߏ~\u000f{����5\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\u0016�\u001eY�΄\u0012\u0000\t_�\u0012\u0000n7��\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\b�����7�\u0004��VVW�ޕh\u0010��\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002#\u000bXcok\f>�\u0011c��P\u0002���흪b���p\u0004\u0002\b �\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b$ 0��\u0018<�\"\u0012J\u0000h��q�̉\b �\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b \u0010��n�}V�\u0007\u000fs`B\t�����*\u001f&\u001e�B\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000�a\u0004�\u0011`B\u0017��N\u0000,Y�$E��:}��x\n\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004l\u0016����X<�b�>����\u0014�\u0000��x+�<\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010�^@��N߻w�c�\u000b�9���qd�3\u0000�\u0003!�����O\b �\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b8.��X<�\u0004���PBk\u000f\u001cW�\u0002\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0002&��^|q%\u0000�����\u00150G��\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b ���\u0002)))gj)@R<A�uRyy�ܾ��5�T�9\b �\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b \u0010�@zz��m۶�\u0012k\tq�\u0000Hd�A�\u0001r<\u0002\b �\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b�C@c��Ǖ\u0000P�qU��p�\t\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\u0014�kS�x\u0013\u0000g�\u0019$�!�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b �@\u0002\u0002ڔ?�1y�\t�\u00193fT��i\t�ʩ\b �\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b \u0010�@^iiiy��ǜ\u0000\u0018\u001c\u001c<5�J8\u001e\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\u0013��\u0000N����\u0013\u0000���1W\u0012kP\u001c�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002#\u000b��|1_��9\u0001���D\u0002`�>�\u0015\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u001c\u0017HNN�yl\u001eS\u0002���2]��q�%T�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002�\t�;2F\u001f혷�\u0016S\u0002@g�;t�P��J�\u0017\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010pU���|^,�Ɣ\u0000�\u0006�1O1�%\u0018�E\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000��\u0004bݤ?�\u0004�2\f1o2\u0010]�\u001c�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002�\bh�\u001e�E��\u0012\u0000\n$��c\t�c\u0011@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@ &����Q'\u0000����](�)\u0014\u000eF\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001G\u0004�1z^^޴h\u000b�:\u0001������hU9\u000e\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0017\u0004222��\u0005\u0010u\u0002�\r\u0000]�9�@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@ \u0006�X��Q'\u0000T�)1���\b �\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b �@�c��\u0013\u0000Z[\u0010��\u0005�o#5 �\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b \u0010n�Ç\u000f�D+\u0010U\u0002����H\u0005N��P�C\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001�\u0005���N82f\u001f���\u0012\u0000���\\�\u001f��\u0003\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010p_ �1{T\t���d\u0012\u0000��!5\"�\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b 0�@�c��\u0012\u0000��\u001fӛ\u0003\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010�D �1;\t\u0000O��J\u0011@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010�G��\u0004��9sr\u0014R�=aQ\n\u0002\b �\u0000\u0002\b �\u0000\u0002\b �\u0000\u0002\b�,Pzd�>j�c�\u0000ؿ?��G%�E\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@\u0000\u0001\u0004�\u0015�f�\u001e\u0019+�H$2o```��x\u001d\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@�P����\u0001m\u0010գ)�=)))=�gt�B����z.Uϥ\u001d��j}�k���hhs\b\u000b\u0001\u0004\u0010@`\u0018\u0001k쮧�\u0019楷�\u001a3\u0001�� �\u0001�\u0016\u0017? �\u0000\u0002\b �\u0000\u0002�\nh�ާ\b�5Pߥ�wZ����v��.}��5a֎��������;w��u�Y�\u000f>��X�^�dIJccc��(e��R�*;[ue�~�yz\u0014*�P�ߋ����H�0�\u0015��\u0011@\u0000\u0001\u001b\u0005�\u0019�'�U_AA�z\u001ds�X��:\u0002\b �\u0000\u0002\b ���\u0002-*m�\u0006�/�C�˩�������7onՕ�ö�dCa555����3�\u0014���,�8�z���{�\rUP\u0004\u0002\b ���\u0002�677W�vȨ\t�E�\u0016�߲e�A�i��V\b�!�\u0000\u0002\b �\u0000\u0002\b�'���C:�U\r�_֕�7\u001e���/�[��J\u0000�����>��{ϓ�X\u000f��Vm���\u0019�o\u001c\r@\u0000\u0001\u0004\f\u0012��'�N<�ĉ˖-��y\r�5j\u0002����F\u0019��Þɓ\b �\u0000\u0002\b �\u0000\u0002q\t�CZ����S�����ɓ�Y�vm[\\\u0005��$ky��|rgg��ZB�H�X���t�6��\u0011@\u0000\u0001c\u0004�`��k׮5#\u00054j\u0002����*�'�o��y\u001e\u0001\u0004\u0010@\u0000\u0001\u0004\u0010@`l\u0001\rr�����\u001a�[\u0003��֯_�c��uDuu�l-!�\u0012\u0001g��\\}�\r�\u0000�E\u0000\u0001\u0004\u0012\u0017�r�����#�4�&��L��~`�By\u001e\u0001\u0004\u0010@\u0000\u0001\u0004\u0010\b��\u0006�;e����<�\u000fc�w����GZ�`�q`=~d�\u0010X�z�����ޯ�ߧd��&�J,\b ���\u0002c��G�\u0001P\\\\�\u001b��~���\u0011\u0017\u0002\b �\u0000\u0002\b `��\u0006���|���Ǐ�_��=ˠߞ�)))�.J�O\u001fl��;w����R\u0010@ �\u0002�葦��KFjڨ\t\u0000�\u0001`�N<i��y\u001e\u0001\u0004�)���/h��߃ٺ@��z�/\ft\u000b�j���S��Џ�z�\u001f} ��q�\u0006�\u0017� �XB����oծ�/���?.]�t ��966\u0001]������5��:34�y�)q4\u0002\b�X`��\u0004`݁eد\u0011\u0013\u0000����vե\u000fW�\u0001`X:�D �\u0002_�\u001b�w\u0002��\u00006NWȞ�ձ�\u0003ش��tX��#���f\n����_\u0003�Ǧ.樚#���J��d�Ν�c>�\u0013\u0012\u0012��.��_��l�Wu�>�Z3\u0003&$T '#�\u0000\u0002\u0001\u0010�.����g644�\rל\u0011?8�Ժ�+����x\u000e\u0001\u0004\u0010@�\u0004�$�v�&\u0004B\f�\u0012Ї��k&õ\u0017]tQَ\u001d;���ߛ�W\u0002`h�֭Ok��?k�Z�\u001e�����M4Ԋ\u0000\u0002\b�!`�᭱�Hь�\u0000�466\u0000\u001cI��\u0011@\u0000\u0001\u0004�\u0010�-�ҍ\b� \u0002/���\u001e��P\u0003��ݻw��Ts��J����\u001bn��D�Z�ڿ�is�#\u0012\u0004\u0010@�]\u0001�\b=y�\u001aG�\u000b��S�x�H��<\u0002\b �\u0000\u0002n\nh��5\u0003���:�+|\u0002������e۶m\u001b��z�ؚ\u0015��k=��\u0002��+z|HW�F����B\u0000\u0001\u0004�&0���\u0011�\f���\u0004@��\fh\u000f\u0002\b \u00100�����\u0005�I4� \u0001͆\\���i���A\u0006�\u0006uL��h��:=�T��d��=��q(�S9\f\u0001\u0004\u0010��hc�\u0011\u0013\u0000,\u0001�u�\u0013<\u0002\b \u0010\n��\u0013'����\u0001j��Ď�\u0001�)��@�\u0015\r�/ܵk�\"\r�_4%.�O�Jި/�ӦX֚ػI\u0004���Y\b �\u001f�����&\u0000���Ҕ58�?M$R\u0004\u0010@\u0000�0\nh7yf\u0000���5�:ljȊm��\u0016_�u��4����q\u0012W|\u0002�\u0011{��\u001cr�\u0012\u0001��M\u001c\u001f��\u0014�B\u0000\u0001\u0004�\u0017���֘~�H�M\u0000hMe�\u000e\u001eq��\n�9\u0004\u0010@\u0000\u0001\u0004�\u0016��d��r\u001b=��\u001d�����������=G֑\u0007���j�\u0012\u0001�j\u0013��J��/��� �\u0000\u0002\u0001\u0014�\u001c\u0019�\u001f״a\u0013\u0000�@e%\u0000�B\u0000\u0001\u0004\u0010@�h\u0001]�c\t��=��^MMM}�֊j�ƍ���� m\u0011P��ɺ��\u001a���T`�-�R\b\u0002\b `��fI\u000e;��\u0004�n\u001b0�����0\u0010@\u0000\u0001\u0004\u0010xC@Sܘ\u0001��B\\\u0002��߯u�7����kll|!�B8��\u0002�l\u000f���S�L�����|� \u001a�\u0000\u0002\b\u001c\u0011�R�a/�\u000f�\u0000�9�\u001e�&\u0002\b �\u0000\u0002&\th\u0000G\u0002��\u000e�I,�\u001c�o�=b��_�~}�O�&L\u0007\u0005֮]ۦY 7h6�9J\u000448X\u0015E#�\u0000\u0002n\t\f;�'\u0001�\u0016?� �\u0000\u0002\b�.�\u001e\u0000��\u0006�@\r�x��3�u��o,\r�Y@�\u0001�|�'�Qr��:y0�\u0002�?{w\u0002&�U\u001e\b[��E���d���e\u001b��v�8\u0018+`�\u0004\u00026$��d\u0018V�%$�,\u00102�$\u0013�\u001f �!�d�a\u0011Ɛd&,��@�f\f\n�1\u0018�1X�e��RKj!˶��R��w\u0015IH�^���n�����]u�9������W��\u0004\u0002\u0004\bdG��\u0002@,�\u001c����\"\u0012\u0002\u0004\b\u0010 0m�K\u0000�\n*\u0015�Ou\u001f�M�^\u001a\u0013�7�Y�f���\u001cW>�u��\u001d��!\u0014���\"���' c\u0002\u0004� 0ޜ��\u0015\u0000�\u0019J{T=�\u0017!i9\u0010 @�@�\u0005���������!\u0010�k�=V�<#6}�l=��F9\u0004���>^7όl?\\��eI�@�\u0004�=Ҳ���K%�(\u0000�y�+�\u001f;o��4�r!@�@A\u0005bb��UAǶ�i��\r7��Sq���ulSS%\u0011ؽ{��x�\\\u001f+H~=R�W���I�@1\u0004�n��\u0015�S9�\u0000��O^8� ?\u0013 @�\u0000�,\n(\u0000dqT�\u0011SL؎����9&o�%>\u0001q-w6�%�Q�\u0006�\u001f���zz$���&!p\u0002\u0004J'\u0010�2�qi�\u0019\u0005��n\u0017P:-\t\u0013 @�@�\u0005ⶵV\u0000d~��\u0012�1�A\\���M�]��\u0014ظq㶸m�OEq��\u0002\u000b9\"P<����g\u0014\u0000���\u0019U��QȈ\u0000\u0001\u0002\u0004� `\u000f�\"�b}s�U!�fΜyՖ-[�^ߖ�F`ڴ䶑��\u0002�u���ċ�\u0000�L\u000b�5�?�\u00000V� �Y\t�\u0000\u0001\u0002\u0004J+�\u0012��\u000e����Rǯ�'���\u0016��<��\u0004�$\u0010w\txO�2ya4�X���\f\u0001\u0002\u0004�.���r���g\u0014\u0000���\u0019\u0007�=\u0012\r\u0012 @�\u0000�:\bDe���cuhV\u0013\r\u0014���[\u001a�|����^�����{\u001bѾ6\t�\u0016�KL�\u001aE�g��\u001bG?�g\u0002\u0004\bdD����g�q��\u0005�\u0005`FFK\u0018\u0004\b\u0010 0��\u0015\u0000\u0013�d�ٸ~z��q�'��oժU��f͚�z��=\u0002\u0013\tD\u0011�gɒ%W����\u0013\u001d�9\u0002\u0004\b4C`���i\u0005�+����\blF3��'\u0001\u0002\u0004\b\u0010�V \n\u0000��\u001e��|��_ ِ����ڵk��\f�(p�=�<�����x-~!��\u0000�B\u000b�8>�?��io���۷��3�!@�\u0000\u0001\u0002\u0019\u0017�7ݧ�\u001e�x�«�@L�����{C��o��Mk�@U\u0002�w�>t�u׽4Y�RՉ\u000e&@�@�\u0005F��O{�\u0014�R.kp��'@�\u0000\u0001\u0002u\u0013��o�\u0006�n��j(&�\u0013���VlpT�K\n�%!ڬ\b$���%\u0001��\"�{�\u0012�8\b\u0010 0z��v*I�\u0001�\n�SA|O�\u0000\u0001\u0002�\u0016p\t@���a����C1����u�a\u00025\n\u001c/H�iѢE�f��]c3N#@�@�\u0004F��O[\u0001\u0010�h)\u0000ԍZC\u0004\b\u0010 �h\u0001w\u0001h�p�ڏ�*�t�UWݜ��DD��\u0002;w�|S\u0014�>��G|G�\u0000��\b���V\u0000�k)\u0015\u0000�3.z%@�\u0000�\u001a\u0004�\u0000�\u0001-ߧ�1cƌW��/߃X�蓕\u0000�?�\u001b\"�\u000f�!_9\u0012 �]��s��\n\u0000Q��\u0007@v�Nd\u0004\b\u0010 0J �)��QO��@\u00021����\u0017_�����\u0005JK*\u0005\u0016H�\u00007�t�\rQ���\u0005NSj\u0004\bd\\`�\u001c��7N�F�\n��\u000f��\b\u0010 @��\u0002�\t`r����\u000bě��Oy�S^�nݺ�\u0005OUz\u0005\u0013H�P�jժ�FZ�\u0015,5�\u0010 �\u0013��s��\u0005��\u0007*�~QN�\u0010&\u0001\u0002\u0004\b\u0010�f\u0005@)^\u0004����~~�����\"[I\u0016N �d%�^\u001e���\u0014.9\t\u0011 �\u0007�E����b=Y\u0000���?}~<r�]\u0001�\u0018\t\u0010 @��\u0002�\u0000(��Ǆi���������bg*��\u000b�޽�М9s^\u0012y�\u0016=W�\u0011 �9���s�c��,\u0000\u001c:t����\u001b+\u0001\u0011 @��D\u0002V\u0000L������E��u��/�?\u0013\u0019\u0010�6mÆ\r?hkk{qX��A�\u0000�4\u0005N��,\u0000ě(���9\n�\"@�\u0000�)\u000běi{\u0000LY1�\u0006��FEc\u0016��`ǎ\u001d�+���F��\u0002qg�\r�9�/ş����u\u0002\u0004\b�P�Թ��\u0002����S~x��\b\u0010 @�@.\u0004*�L�\"��\u0004\u0019\u0013��\nR��u�]��\n�s\b��\t�ܹ�+Q\u0000xK�\u0002\u00170\u0001\u0002�\u00158u��\u0000\u0010��\u0016�6#�\u0013 @�@)\u0005�\u0017���c�\u0004(fҏEZ��f�\u001a��\u0016s|e\u0015\u0002��(�}\f\u0006\u0001\u0002\u0004�\u00108u��Sl��\u0000���>\b\u0010 @�n\u0002.\u0001�\u001beV\u001a\u001a�M�^��׷=+\u0001��@�\u0004���o��\u001fhT��%@��\t�S��'\u000b\u0000��y'\u000e�7\u0001\u0002\u0004\b\u0010ȃ�M\u0000�0J����������\u000b���H\u0002�\u0015H�\f����K���@~�\u00109\u0001\u00029\u001189�?�\u0000`\u0005@NFO�\u0004\b\u0010 �\u001f\u0002����\u0000�ًa�M\u0000c5�W_��׭�Y:�%0%����MQ\u0000�~J�8�\u0000\u0001\u0002�\u000b���,\u0000�/�\u000fN~�#\b\u0010 @�@�\u0005b��\u0002@󇡪\b��\u00040\u001e�;o޼W�^�z���\u001cL�\u0000\u0002qg�O��\u0003\u001f*@*R @ �\u0002���O\u0016\u0000\"֓�\u00022\u001a��\b\u0010 @��i\u0002�\u0002���c�=��\b�8�|�}���O�\"%P_��3g�^\u0014\u0001z�۪�\b\u0010 pR��\\��\u001b�K.�dv<5��Ӿ!@�\u0000\u0001\u00029\u0010�[iY\u0001��q�(�X��-�ډ��\u001c��\u000blڴ�@\\\u0006�(\u0002X\u0005S���\u001f��\b�8>�v�\u0000p��!���3\u0010z%@�\u0000�)\b�\u0003`\nx\u001985�7[b\u0013�7e \u0014!\u0010h�@�\u0007pg�?�\u0007\"\u0000\u0002\u0004\n)pb��\u0000\u0010�ƓK\u0002\n���\b\u0010 @��\u0002V\u0000�wd�[��6��3�)��@}\u0005���?�\u0016�_�V�F�\u0000�i�N���\u0015\u0000�>�V\u0000xU\u0010 @�@�\u0004�\u0000�ݐ�\f8v>O���\u0007|C������q;���\u001b�!\u001c\u0004\b\u0010����9��\u0002@,�S\u0000����\b\u0010 @ \u0015�x�l\u0005@*���$&7�\u0017.\\�G�mUk\u0004�!�m۶�ĥ\u0000�-F6� @ +\u0002'���\n\u0000\u0011�K\u0000�22� @�\u0000��\u0005\u0006\u0007\u0007\u0015\u0000*��Ɓ1�\u0019�H�_�~��lD$\n\u0002�\u0013X�`��F��\u0007ًLD\u0004\b�X�؜�X\u0001````~�\u0013\u0011:\u0001\u0002\u0004\b�W@\u0001 gc���<���۷-ga\u000b�@�\u0002Q �\u0017+�~?�NuF�@�\u0005N���\u0015\u0000�:����Vr\u0004\b\u0010 PH\u0001{\u0000�oX���'�\u0017��\t�/�e˖�F�w�߳\u001e\t\u0010(���9��K\u0000\u0014\u0000�8�r\"@�@�\u0005�\u0001P�\u0001�\u001e��\u000b̙3�7�R���3H�\u0000��\b\u001c��(\u0000̫O�Z!@�\u0000\u0001\u0002�\tX\u0001����\b\u0010H_��\u0007\u001f|(��{_�=�\u0000��\tĿ%�\u0015\u0000�\u0000(�\bˇ\u0000\u0001\u0002�\u0010�\u0007@9�Y�\u0004J+\u0010�f�-V\u0001�/-��\t\u0010��@\\\u0002p�C�c+\u0000���\u0014\u0000�ª\u0011\u0002\u0004\b\u0010HS�\n�4��E�@3\u0004bC�G���ٌ��I�@q\u0004N���\u0015\u0000���\u0000P���\t\u0001\u0002\u0004J#\u0010�l+\u0000J3�\u0012%P^���;���~}Wy\u0005dN��T\u0005N��[W�^�\u001aՀ�Sm��\u0004\b\u0010 @ m���\u0011\u0005����G�@�\u0002�\n�pKK���;�!\u0001\u0002�\u0011H���ܿ��[nI>��\u0006�0C+\u0011\u0002\u0004\b\u0010 @�\u0000��\t<����P�z�T���C�@j\u0002-��ԧ�ZgΜi�j�:\"@�\u0000�z\n�\u0003����\"@ �\u0002k׮\u001d�\u0002�۳\u001c��\b\u0010ȶ�ѣG��\u0014\u0000�=N�#@�\u0000�q\u0004:::�`\u001b���\u0004\b\u0014O����h\\ǻ�x�Ɉ\u0000�4\u0004�����\u0002@\u001a�� @�\u0000\u0001\u0002\u0004\b\u0010 0\u0005��~w0N�\u0014�p*\u0001\u0002%\u0016H������\n\u0000%~\u0011H�\u0000\u0001\u0002y\u0016p\t@�GO�\u0004\b�\"p�\u0017�\u001a����\\�\u0010 Pn�d��\u001a;(�]n\u0006�\u0013 @�\u0000\u0001\u0002\u0004\b\u0010ȇ��u���O��G��$@ K\u0002�\u0002`Vk��,\u0005%\u0016\u0002\u0004\b\u0010 P���\u0000V*�8\u0002\u0004�$\u0010��7�y�H9Ʌ\u0000��\u000bĭ\u0000g�f��3\u001bߕ\u001e\b\u0010 @�@�\u0005�\u0017�M\u0000�ϪE\u0002\u00042.�iӦ\u0003�\u0019�-\u0019\u000fSx\u0004\bdL ���FL\n\u0000\u0019\u001b\u0018�\u0010 @�\u0000\u0001\u0002\u0004\b\u0010�H V\u0001�?�\u001f��\u0018�\u0011 @`���\u0002�K\u0000F���\u0000\u0001\u0002\u0004�!���n\u0005@>�J�\u0004\b�Y���{s�\u0002�b���\u001c\u0001\u0002�\u0016�a\u0005@�\u0007Xv\u0004\b\u0010(���\u0000\u0014zx%G��$\u0002---�^\u0000�\b\u0010 P��K\u0000*�r\u001c\u0001\u0002\u0004\b\u0010 @�\u0000�,\t\\���E<۲\u0014�X\b\u0010ȴ�K\u00002=<�#@�\u0000��\u0004\\\u00020���\t\u0010(���ի���ڒ�\u0000|\u0011 @�\u0012�\u0019�q\u000b%�\u0000VB�\u0018\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0019\u0013����P\\\n0����C�@\u0006\u0005��kr/�\f�&$\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004&\u0011��\u0000�ĭ��0�a�&@���d��\u001a;(�\u000b�\u0017\u0003\u0001\u0002\u0004\b�R�&��\u001c6A\u0013 Pg��\f��ֹI�\u0011 P@�d��\u0012�\u0002\u000e��\b\u0010 @�\u0000\u0001\u0002\u0004�#�<�qK����X�\u0004\b�\"�\u0012�ZԜC�\u0000\u0001\u0002\u0004\b\u0010 @ C\u0002w�}��Q\u0000��\f�$\u0014\u0002\u00042(p�\u0012��f�#��\t�\u0000\u0001\u0002\u0004\bL*\u0010\u001b_�\u000b��J\u000e @�\f\u0002��e\u0000e\u0018h9\u0012��@2�o��NgM�\r�\u0012 @�\u0000\u0001\u0002\u0004\b\u0010 �d�W���_�\u0010v69\f�\u0013 �a�d��\u001a�)\u0000dx��F�\u0000\u0001\u0002�\u000bD%�\n��y<C�@�\u0004V�^=\u001c�\u0001|�D)K�\u0000��\u0005�Jn\u0003�\u0000P=�3\b\u0010 @�\u0000\u0001\u0002\u0004\bdM���\u0016�x\b\u0010Ȏ@2��\u0002 ;�!\u0012\u0002\u0004\b\u0010 @�\u0000\u0001\u00025\u000b\\u�Uw�ɏ�܀\u0013\t\u0010(���\u0002@[ѳ�\u001f\u0001\u0002\u0004\b\u0014S`pp�%\u0000�\u001cZY\u0011 P��ڵk��2��j8�)\u0004\b�C�-���\u0004�\u001c�-K\u0002\u0004\b\u0010 @��\u0002�_~�������f�?�\u000f\f\f̌�g%�~˳���f��Gb���س�@L�\u000e��\u0007b#����3g��\u0016�pxݺuG�8_\u0004�,\u0010�������SnH\u0003\u0004\b\u0014Qଶ�EtV�#Q���D�\u0000\u0001\u0002\u0004\b\u0010��@l��v뭷>=&�b�~U�>��hx�c�=6w�\u000e��i���\u001a\u001e\u001e���9�+�\u0007�\u000e\u001d:4�x���܃\u001d\u001d\u001d\u000fF�\u000f���[�jշ�OtO=��\u0004&\u0013X�r�\u00177o�|4^{��\u001d�y\u0002\u0004�%����\u0000(ט˖\u0000\u0001\u0002\u0004\b\u0010�P &RO�O�1&�?�f͚��ӒO���\u0015\u0013�dO�\u000b��\u000b��\u0017��஻�zbɒ%_���0}��/vww�8�\t�'\u0010�I\u000e.]��+��u�\u001d�q\u0002\u0004J+�\u0000Pڡ�8\u0001\u0002\u0004\b\u0010 p���E��\u0013\u000f&��_<z��\u0005g\u001c��\u0003sc%��D��r���i1��\u0010\u001f��\u0016�\u0015��b��tC�[�\u0004>\u001b�*\u0000�lЄK \u0005\u0001�\u0000���\u000b\u0002\u0004\b\u0010h�@{{�M\u0000\u001bd[�f��⊮���M��������ͱ\f�ٓ�3� V\n\\�����(\u0006<\u001cŀ�]p�\u0005/�K\u0013��\u0003�\b�&p��g'+G|\u0011 @�4��=rVk��\u001e�\u0003\u0001\u0002\u0004\b\u0010 @�\u0004\u0002�]vُ�D���<������o��%9I�%޿]w�ȑ�>��\u000f>�|��7_t�Esr\u0012�0S\u0010ظq�ñZ�%#)X�@�\u0004ڒ��\u0002@�FM�\u0004\b\u0010 @�@�\u00021a^\u0019\u0013��۷o��1��9�$����+Y�\u0010�\u0006�U�\nx(6\u0012|m�lUL.G�!A'�\u0000�\"@���\u0002g�Fup��G|O�\u0000\u0001\u0002\u0004\b\u0010(�@L�Ϗ����\u001d�7Ť���H��\u0017����˖-�Fl^xe\u0011�ON�\tĊ��Vw��\t\u0010(�@2�o�\u001c�^��#-?\u0002\u0004\b\u0010 Pb��:�����=σ1��͘(�\u0017�#�26/�Ɗ\u0015+>\u001c{\u001b�[�<�5��ܹs�\u0000���\u0011\u0004J%���[㗠\u0002@��]�\u0004\b\u0010(�@�\"�ܹ8�ِL�\u0013��n��dc��\u001d��\\'�\u0012�\u0005�6�6���\u0000\ryY��\r\u001b6�Ƨ}�\u0016���\u0012$�t\u0004��r\t�\u0002@:�z!@�\u0000\u0001\u0002\u0004R\u0012H>�����D��;�gUJ�f��(x,��\u001d��\u0000����\u0004��@�ٷ\n 5m\u001d\u0011Ⱦ@2�O�}S\u0000��X��\u0000\u0001\u0002\u0004\b\u0010�P`��}�C\u001f�bL��{���W�\u0011\u0006\u001d�\u001a�}Q\f�ȪU�fTr�c�#\u0010�JMV��\"@��1���0�\u0014\u0000\u0006y\u0010 @�\u0000\u0001\u0002\u0004� \u0010��������ƛ�\u0017\u0014!�z�\u0010\u001e�ٱcǝK�,�_�6��}�(�ݓ�(EH�@Z\u0002�V\u0000$�\u0001�ա~\b\u0010 @�\u0000\u0001\u0002�\u0012H���\u0006xw�d��F���v�劸\u001c�˗_~��<�!��\u0005zzz6���*?Ñ\u0004\b\u0014Y ������(\u0000\u0014y��F�\u0000\u0001\u0002\u0004\n.\u0010ohZb��;���1�=���N5�g>��\u0013�?�\u0019Ϙ;Ն��}�x�?\u0012��}+����\u0000�4\u0004��k��T\u0000HC[\u001f\u0004\b\u0010 @�@�\u0005.��Ҏ�˗�C�����7^�\u0006��={�|)n\u0013�U�\u0014�u�@��p\u0019�)\u001e�%Pf�d�o\u0013�2�\u0002�N�\u0000\u0001\u0002\u0004r,�L�����O����q\u001aM\t=VM<k��ݟK\f�\u0012�NS\u0013��\u0000\u0015\u0000R��\u0011��\u000b\u001c�\u0004�&��\u001f'\u0001\u0012 @�\u0000\u0001\u0002�\n�t�M�1�_\u001b�����}_�@|2���������pd\u001e\u0005�أ\u0000�ǁ\u00133�\u0006\b�%\u0000���F\u0000\rh[�\u0004\b\u0010 @�\u0000��\b�^�����n�X4�҆tP�Fc5�\u001b��\u0000VP\u0014x̷m۶+�\u0001�Q�\u0014�F�@�\u0002�ܿ5�\u0014\u0000*\u0004s\u0018\u0001\u0002\u0004\b\u0010 �|�\u000f~���ƛ�_j~$ň >\u0011���e�.-F6�\u0018K \n=�����\b\u0010(�@2�o��_\u0003�J[�\u0004\b\u0010 @�@^\u0005�V�-&���k�Y�;&�����.���Y�OLS\u0017����0�V�@�@�\u0005����\u001aK�\u000e�=\u0011�\u0013 @�\u0000\u0001\u0002�\u0017���_\u0011�����g�~�Q\u0000������L�g=�!\u0010o�\u0015\u0000Ҁ�\u0007��\u000b<�\u001a� (\u0000d�DH�\u0000\u0001\u0002\u0004J-p�E\u0017]\u0015��[K����o�U\u0000?��n���@��P\u0000H\u001b]\u00042(���[\u0007\u0006\u0006��`lB\"@�\u0000\u0001\u0002\u0004\b\u001c\u0013�M��\u001f=z�\u00131��D�8��m=x��{c���6Ѿ\n$�`�����H�R�\n\u0001\u00025\b�ms\u000f�\u0004�\u00068�\u0010 @�\u0000\u0001\u0002�\b���-�����ti:=����~֭��zC�\u0015������\u000f�'=��LF\u0004\bT#\u0010�\u0000�\u0004�\u001a0�\u0012 @�\u0000\u0001\u0002�\n���o���?�n���-�\u0000q�W�Sn��e\u001fo�]\u0006P�a�\u0011��\u0004�]\u0002\u0010g�\u0004�*6\u0007\u0013 @�@V\u0004�\r�%�Y\u0019�\u0006��=�����\u0001Mkr\u0002�Xm1����Mp��r(\u0010��@\u000e�\u00162\u0001\u0002u\u00148v\t@�g\u0013�:�j�\u0000\u0001\u0002\u0004\b\u0010�����ꯞ���[��������j\u0005�S�\u001bb��\u0005՞���\nD����F'2\u0002\u0004�\u0010hkk{2��E\u0001 \rm}\u0010 @�\u0000\u0001\u0002\u0015\u000b|�[�zK\u001clG����{`|Z<36^|S}[�Z3\u0005��f\u000f�f\u000e��\tdC�pR\u0000p\t@6\u0006C\u0014\u0004\b\u0010 @�@\b�ȏ��S���W�h��o]s�5g7=\n\u0001�E`֬Y[�ҐF\b\u0010ȭ@�\u0004:V\u0000�\u0002 �C(p\u0002\u0004\b\u0010 P<�\u0003\u0007\u000e�ud5�x��+�X\u00050�����|E-��\u0004^�W��u�YC�=�q\u0002\u0004�/\u0010��<�\u001a�Q\u0000(�Xː\u0000\u0001\u0002\u0004\b�B`ѢE/��v�j``��/��Ҏ�D$�Z\u0005V�^=\u0018E�\u001d���<\u0002\u0004�/���[�\u0012�\u0000����\u0001\u0001\u0002\u0004\b\u0010Ƚ@LP�\"�w�>�b%�(Vd��X)�7���qky��9\u0001\u0002�ܿ5v\u0002<��\u0000\u0001\u0002\u0004\b\u0010 �l�[o�����G�\u001d��O\u0017��F���G��W���v\u001b\u0001�u��M�\u000e\u0002�ܿ5vx}�\u000emi�\u0000\u0001\u0002\u0004\b\u0010 P�@��<&����\u0006��0�����+���u���\u0004�����u�#\u0002\u00042'����\u0015\u0000\n\u0000�\u001b\u001a\u0001\u0011 @�\u0000�r\t\u001c:t(��Y���G�q���]�v�<\u001fъr\"�x��;��#@��\u0002�ܿ���S\u0001���,;\u0002\u0004\b\u0010 �i����؜�3\u001ddɃ�\"�+KNP���\u0016`�\u000b��$\b\u0010�I ���\u001e>|X\u0001�&>'\u0011 @�\u0000\u0001\u0002�\u0010��Kۇ[\u0000\u0000@\u0000IDAT\"�\u001e\u0005���hK\u001b�\u0011���W-Y��ƴ�մ\u0004�\u0012\u0000\u0005����C �\u0002Q\u0000�ۺjժ}\u0011�H\u0006�\u0013\u0012\u0001\u0002\u0004\b\u0010 P\u0002����N\t��}�Q\u0004���'Q�\u0004:::\u0014\u0000J�\u001a�~�\u0005F�����o]�v�P�\u000e�@�)$O�\u0000\u0001\u0002�\u0014�{�+`�r�~\u0018�ʕ+��O�����.�\u0002/�plB�@ >�{���\u001cB�@\u0001\u0005�92�oMr�_�.\u0003(� K�\u0000\u0001\u0002\u0004\bd] v$~c�c\u0014�\bě�����\u0019<�+�aÆ������\u000e��\t�,pb��\u0000\u0010�����fJ'\u0012 @�@�\u0004b7[+\u0000��_�~��g̍� /�CS�HA �<v��\u0000��BW�h���\u0000\u001b��i\u0002\u0019\u001681�?V\u0000�8\u0015\u00002<XB#@�\u0000\u0001\u0002E\u0014ػw�$��\"�VԜ�������%���\u0016�\u0001�e��I�t�cs~�\u0000���'\u0002\u0004\b\u0010 @ %��T��R�J7�\u0013�\u000f@�,��R���F�M��)��\u000b�M\"8q\t��\u001f�\u001e�\u0000\b\u0010 @�\u0000�R\b\\s�5�����K�l������.[X��J����X�\u0004\b$\u0002?\\\u0001\u0010\u0015x�\u0000xQ\u0010 @�\u0000\u0001\u0002�\tlٲ%��OO�C\u001d�M`���W֭1\r�.\u0010����+uu\u001d\u0012h���9��\u0015\u0000q-�\u0015\u0000�\u001f\u0013\u0011\u0010 @�\u0000��\b�2d���t��M��6�t쒰;::��8|�\u0013 P�@{{���?�\n\u0000���k�j�t\u001a\u0001\u0002\u0004\b4O &\"�\u0002�<���|�T\u001bp~s\u0004\u0014\u0000��^�^��\u001b+\u0000ꅩ\u001d\u0002�\u00128�\u0001�\u0002@܃W\u0001 _�'Z\u0002\u0004\b\u0010 �w�K�@Y�[IY\u0001�����\u0000*\u0000�x��N�V�\u0013s�\u0013�\u0000�\u001dH���#@�\u0000\u0001\u0002\u0004�\u0012X�jՌ8ႪNrpf\u0004�\u0013�%\u0017]tт�\u0004$��\u0004b\u0005�\u0002@Ub\u000e&P\f�\u0013�\u0000=V\u0000�J�\u0015\u0000�\u0018WY\u0010 @�\u0000��\u000b����HL\"��\u0007�|�\u0002\u001cS`pp�*�1e��`�a\u000f��\u000f�\b\t�]�Ĝ��/�Y�f)\u0000ԝX�\u0004\b\u0010 @��X\u00021\u0001��,�\u001c=f\u001f�\u001c\r֨Pc\u0013@+\u0000F���@\u0019\u0004N���\u0015\u00006mڔ�Cp�\f�ˑ\u0000\u0001\u0002\u0004�#\u0010\u0013I�\u0000�p8��c\u0005�\u001c�۩!�\u0018>�ԟ}�\u001f��gS\u0001 ?�%R\u0002�\u00128r|�?���wV\u0001ԋW;\u0004\b\u0010 @���\u0002����q��D.\u0004b\u0012�2\u0017�\n�\f����'�x�\u0003\u0004\b\u0014]��\\�d\u0001 ~\u0019�|���ˏ\u0000\u0001\u0002\u0004�!\u0010׳Y\u0001�ϡ��\\>��dԱ��\u0005'�M�\u0004���\\\u0005,X\u0002\u0004�,p�\\�d\u0001 *��\u00040eZ\r\u0010 @�\u0000\u0001\u0002�\t�\u0006��Nv��-\u0010o&��t�M�َRtc\t\u001c<xp`��=F�@�\u0005N~��\u0000\u0010�ܓ\u000f\u0016:u�\u0011 @�\u0000\u0001\u0002M\u0015�ɣ\u0002@SG`�'wq���>�|�-i!m���v+\u0000�F�\u001f��\u000b����d\u0001 �\u0003)\u00004`D@�\u0000\u0001\u0002�\t�\u0004�:�L\u001cm\u0005@&�a�A�%8�\u0001��b�\r(\u0000�o�G\u0002�\u00168u��\u0000\u0010�\u0018��\n4;@�\u0013 @�\u0000\u0001\u0002�\u0014X�p��lF1�+]V\n\u00009\u001c��>�%\u00009\u001c7!\u0013������O\u0016\u0000�\u001a���4�\\\u0002\u0004\b\u0010 @��d\u0002��Ϸ�2��<\u001fo(��$Ta�\"0w�\\�\u0000���[\u0002e\u0010�\u000f�O��O\u0016\u0000b\u0019��2$/G\u0002\u0004\b\u0010(���\u0000�o,\u000f\u001d:tv��\u0016�X\u0002�����\u001e�X�\u0005\u0014\u00002?D\u0002$P_��{��\\�d\u0001 �\u0002���Fk\u0004\b\u0010 @�\u0000��\u0005bš��O'��O\n\u00009\u001c�\u0005\u000b\u0016�\u0004 ��&d\u0002S\u00148�\u0000��g>sWT\u0006��ذ�\t\u0010 @�\u0000\u0001\u0002�\nt�׸Oz\"o\u0002��\u0016�x�M[�v���^\b\u0004J$������O�\u00008��A߉'�M�\u0000\u0001\u0002\u0004\b\u0010���ѣG�\u0000�7j�ڳ\u0002�y�z&@�@�\u0002}�\u0016�N\u0016\u0000��GFFN.\r��5�\u0011 @�\u0000�f\t\f\f\f�\r`��k�w�̙\n\u00005�e����C\u0001 k�\"\u001e\u0002\u0004\b�)pڥ��\u0015\u0000b7�Ӟ<�\\�\u0010 @�\u0000\u0001\u0002\u0004j\u00178|��K\u0000j��ڙ\n\u0000Y\u001b\u0011�\u0010 @�L��>�\u001f]\u00008��3��\b\u0001\u0002\u0004\b\u0010 @�v��t�\n����v�ٗ^z��N�FE<\u0004\b\u00108E >�?m�Z\u0001 n�rړ���[\u0002\u0004\b\u0010 �9����%\u0000�\u001b��\u0003�7\"m\u0013\u001f��<\tĭ8g�)^�\u0012 @�l\u0002����\u0015\u0000FW\u0007ʆ#_\u0002\u0004\b\u0010ȗ@��R\u0000�א��`\u0002�<�\u0015\u001d\u0005\u001bS�\u0010 P,�����.�?�\u0000\u0010U�Ӟ,V�!@�\u0000��\t��-\u0005��\r�|r%0{�l�\u0000�j�\u0004K�@�\u0004Fo�Z\u0001 .�s\t@�^\u0011�%@�\u0000\u0001\u0002\u0004\b�(\u0010E8\u0005�\u001a�F�\u0000�4\u0004F��O+\u0000tww� ��\u0011�>\b\u0010 @��T\u0005����\u0000�*��\tLA �\u001fT\u0000���S\t\u0010 �`�#���'�9�\u0000p�Q�\u0001���\r\u0001\u0002\u0004\b\u0010 @��x\u0002�\u000f�\u0002�x8\u001e'@�@�\u0005b�ֶ�!�Q\u0000�k\u0004�G\u001f�g\u0002\u0004\b\u0010 �E\u0001{\u0000dqT�T&���*S�r%@�@�\u0004���6����\u0002@�RI\u0001`���\t\u0010 @�\u0000\u0001\u0002\u0004�\u00108r�\u0002�\u0019*\u001e @�@6\u0004ƚ۟Q\u0000�P\u0015\u0000�1^� @�\u0000�I\u0004�\u0006p\u0012 O\u0013h�@��9��]h�\u0000\u0001\u0002\u0004j\u00178cn�\u0000P;�3\t\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 @�@V\u0005&/\u0000�}��g\\'��l�E�\u0000\u0001\u0002�\u0016\u0018\u001e\u001ev\u0017�r�\u0004dO�\u0000\u0001\u0002\u0004\b�#0{���\u000b\u0000�{��z�Z��q��0\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 �a�dN��Wo\u001d\u001d�\u0019�\u0000�Y�f \u000e�\u001d}��\t\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000�\\\b�\u001e�۟\u0016�\u0019\u0005��Ϟ�Tള�@�\u0000\u0001\u0002\u00042 �6�\u0019\u0018\u0004!\u0010 @�\u0000\u0001\u0002Y\u0014\u0018sN�\u0000�š\u0012\u0013\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010�]��\u0002@|�b#�ڡ�I�\u0000\u0001\u0002�\t�\u00040=k=\u0011 @�\u0000\u0001\u00029\u0011���+/\u0000�}��<8'�\n�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b�V���}�\u000f�Ǽ\u0004`�jAi�$N�\u0000\u0001\u0002�\u0014�\u0007@&�EP\u0004\b\u0010 @�@�\u0005ƛӏY\u0000����v+�&���\t\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 @�@�\u0002�\\>�ӏuژ\u0005����CCCc.\u0019\u0018�\u0011�\u0011 @�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002�\u0017H��ɜ~�H�,\u0000$\u0007F����N�\u0018\u0001\u0002\u0004\b\u0010Ȋ����M\u0000�2\u0018� @�\u0000\u0001\u0002\u00042!\u0010s�\r�\u00052n\u0001 N\u0018���\u001a�8\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 �T�q?�\u001f�\u0000\u0010\u001b+�{RSS�9\u0001\u0002\u0004\b\u00108.`\u0013@/\u0005\u0002\u0004\b\u0010 @���\u0002\u0013���-\u0000\f\u000e\u000e*\u0000���'\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 �i�(\u0000����\u0002�S���\u0007�ځ�Lg&8\u0002\u0004\b\u0010(��=\u0000��\n�?\u0001\u0002\u0004\b\u0010 pR ��/_�|��\u0007F}3n\u0001`ݺuG��-���#\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 �A��\u000e\u0000���cF7n\u0001����.\u001d\u0018�5\u000f\u0012 @�\u0000�\u0014\u0005��ڬ\u0000H�[W\u0004\b\u0010 @�@�\u0005&���d\u0005\u0000�\u0000d{|EG�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004N\bL8���\u0000`#�\u0013��&@�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002�\u0016\u0018\u0019\u0019�p\u0015��\u0005�Y�fMxr�S\u0017\u001d\u0001\u0002\u0004\b\u0014]```�%\u0000E\u001fd�\u0011 @�\u0000\u0001\u0002\u0015\u000bL�>��\u0015\u0000\u000b\u0016,p'���\u001dH�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004�#��\u0001 ��O���+\u0000���'c\u0017�qo!0QÞ#@�\u0000\u0001\u0002�\u0016���Z\u0001�hd�\u0013 @�\u0000\u0001\u0002�\u0010H���\u001c~�`',\u0000$'F\u0015�މ\u001a�\u001c\u0001\u0002\u0004\b\u0010h��\u0002@\u0013�uM�\u0000\u0001\u0002\u0004\bdG�����\u0005�HG\u0001 ;c*\u0012\u0002\u0004\b\u00108E�\n�S0|K�\u0000\u0001\u0002\u0004\b�]`ҹ��\u0005����I\u001b)���\t\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 @�@3\u0005*��OZ\u00008��s���$�M�\u0000\u0001\u0002\u0004�\u0013�[ݸ\u0004`<\u001c�\u0013 @�\u0000\u0001\u0002�\u0012������I\u000b\u0000��s�c��[*9�\u0012 @�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000��\b��ر����\u0000�4P�f\u0002�u�y\u0002\u0004\b\u0010 �\u0000\u0001+\u0000\u001a��I\u0002\u0004\b\u0010 @ _\u0002���+*\u0000�\n�I�\u0012�G�\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 @�\u0018\u0002���+*\u0000T��@1�dA�\u0000\u0001\u0002y\u0012p\u0017�<��X\t\u0010 @�\u0000�F\tT:g��\u0000p��Q+\u0000\u001a5R�%@�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002S\u0010�t�^Q\u0001���o{Ēl\u0006�\u0000\u0001\u0002\u0004\bdF v��\u0007@fFC \u0004\b\u0010 @�@�\u0004\u001e;>g����\n\u0000I+�n*0i�\u000e @�\u0000\u0001\u0002u\u0012p\t@� 5C�\u0000\u0001\u0002\u0004\b�V���z�\u0005������\u0015\u00118\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010(�@l\u0000��JӪ�\u0000\u0010U�oTڨ�\b\u0010 @�@\u001a\u0002---.\u0001H\u0003Z\u001f\u0004\b\u0010 @�@f\u0005���7+\r��\u0002@,����J;w\u001c\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 P���9s*����\u0002��m�vEH����L\u0002\u0004\b\u0010 P_����o�Z#@�\u0000\u0001\u0002\u0004\b�J`ۆ\r\u001b~Pi�\u0015\u0017\u0000�7Xqe��\u0000\u001cG�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b�$P�J��\n\u0000�\u0001�i@�D�\u0000\u0001\u0002\r\u0012p\u0017�\u0006�j�\u0000\u0001\u0002\u0004\b\u0010ȅ@�s��\n\u0000�\u0001��k@�\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 P\u0002���ΪV�WU\u0000X�r�wb���\u00128J�\u0000\u0001\u0002\u0004r \u0010Uow\u0001��8\t�\u0000\u0001\u0002\u0004\b\u0010��@27_�dɽմ\\U\u0001`ݺuG���VӁc\t\u0010 @�@\u0003\u0005\u0014\u0000\u001a��i\u0002\u0004\b\u0010 @ �\u0002�=>G�8Ȫ\n\u0000I�###Um2Pq$\u000e$@�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004*\u0012�����Ѫ\u000b\u0000�\u000f@U�\u0018T\u0014��\b\u0010 @�@\r\u0002���V\u0000���\u0014\u0002\u0004\b\u0010 @ �\u0002q7�?���\u00000}�t\u0005���Vd@�\u0000��\b(\u0000\u0014e$�A�\u0000\u0001\u0002\u0004\bT%P�ܼ�\u0002@ww���Ѫ\"s0\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 P\u0017�X����ܼ���.\u0000$�ǵ\u0006wVՋ�\t\u0010 @�@\u0003\u0004�\u0005�\u0001��$@�\u0000\u0001\u0002\u00042/\u0010{��4'��\u0000�o�\u0017\u0011 \u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010(�@{{��jI��\u0002@[[[M��\u0012�s\b\u0010 @��x\u0002\u0003\u0003\u0003�\u0000\u0018\u000f��\u0004\b\u0010 @�@a\u0005�=PM\u001f��T\u0000x�+_y_H�+���\b\u0010 @ \u0017\u0002.\u0001��0\t�\u0000\u0001\u0002\u0004\b\u0010����\u001bo��{�4YS\u0001`�������k��9\u0004\b\u0010 @��\u0002V\u0000�\u0011SS\u0004\b\u0010 @�@.\u0004�~|N^u�5\u0015\u0000���2����@�\u0000\u0001\u0002�\u0014�\u0002����\"@�\u0000\u0001\u0002\u0004� \u0010w\u0000�i��[�\u0005��t�\u0007T1\u0012 @�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000�\f\n��a|�\u0005�\u001bn�a}|�r(�\u0018B\"@�\u0000��\b�\u0004�$\u0003-M\u0002\u0004\b\u0010 @��@2\u0007O��r�\\\u0000�k\u000e\u0006����c�\u0011 @�\u0000��\n�\u0004`���'@�\u0000\u0001\u0002\u0004r&�����5�]s\u0001�xo5/=�)Z'\u0011 @�\u0000��\u0005l\u0002x���\b\u0010 @�\u0000�b\u000b�|�¢\u0000P�\u0017��\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 @� \u0002mmmS�\u0010~J\u0005����o��ˣ\u0005��\u0006\u0001\u0002\u0004\b�L����\n����p\t\u0010 @�\u0000��\u0005������ώ\u0013�T\u0000���>:22r�T\u0002p.\u0001\u0002\u0004\b\u0010�U`hhH\u0001�V<�\u0011 @�\u0000\u0001\u0002y\u0013�+��O%�)\u0015\u0000���v��O%\u0000�\u0012 @�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0013\u000btttLy�=�\u0002@,����az�\u0000\u0001\u0002\u0004\b4F�%\u0000�q�*\u0001\u0002\u0004\b\u0010 �=�X}��\u0002�֭[�\r�G��#\"\u0002\u0004\b\u0010(���\u0000\u0016}��G�\u0000\u0001\u0002\u0004\b\u001c\u0017x���{J �X\u00010\u0012o��R\u0014N&@�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004�\u0014�9����q�\u0005�$�z,E\u00183K\u000f\u0012 @�\u0000�\t\u0004\u0006\u0006\u0006l\u00028���\b\u0010 @�\u0000��\bLy�\"Q�\u0002@WWW]�)��H�\u0000\u0001\u0002\u0004R\u0011p\t@*�:!@�\u0000\u0001\u0002\u0004�,\u0010w>�˜�.\u0005�\r\u001b6���\u000065�D�\u0004\b\u0010 P2\u0001\u0005��\r�t\t\u0010 @�@\t\u0005b��`__��z�^�\u0002@\u0012���p]*\u0012�HJ\u001b\u0004\b\u0010 P\u000e����\u0004�\u001cC-K\u0002\u0004\b\u0010 PZ�(\u0000�m�]�\u0002@ggg݂*��J�\u0000\u0001\u0002\u0004�\u0012�\u0007@U\\\u000e&@�\u0000\u0001\u0002\u0004�)P��v�\n\u0000\u001d\u001d\u001d_\r��|z��\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\bdK v�\u001f�1cƺzEU�\u0002��M�\u000eDPߨW`�!@�\u0000\u0001\u0002�\t�\u0003`2!�\u0013 @�\u0000\u0001\u0002y\u0016����8>׮K\u001au+\u0000$��\u001b�/�%*�\u0010 @�\u0000�\n\u0004\u0014\u0000*@r\b\u0001\u0002\u0004\b\u0010 �g�/�3��\u0016\u0000�������i�\u0000\u0001\u0002\u0004\bL$�\u00000���\b\u0010 @�\u0000��\u000b�{�]�\u0002@OO�}�flGޑ�O�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004�)\u0010s���\u001c��1Ե\u0000�\u0004688h\u0015@=GH[\u0004\b\u0010 0���\u0000�K�\t\u0002\u0004\b\u0010 @ �\u0002u�[׽\u0000\u0010w\u0003�{��\u001f7\u0019\u0010 @�@�\u0004F\u001aԮf\t\u0010 @�\u0000\u0001\u0002M\u0015hoo��ܺ�\u0005�E�\u0016}%��l���\t\u0010 @�\u0014\u0002q]�\u0002@)FZ�\u0004\b\u0010 @�\\\u0002����e˒�u]��^\u0000���[\u0015�Q�(5F�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004�#pǺu��;ݺ\u0017\u0000�\u0000GFF�T�މk�\u0000\u0001\u0002\u0004�/���o\u0005@��Q\u0006\u0004\b\u0010 @��(�����̩\u001bR\u00008��s\u001b\u0012�(\u0013?\u0012 @�@�\u0005�\u0006��/\u0000�\u0013 @�\u0000��\n̛7�F�֐\u0002�}�ݷ3���\u0011\u0001k�\u0000\u0001\u0002\u0004\b�\u0010��\u0015\u0000'0�M�\u0000\u0001\u0002\u0004\b\u0014E���s��Ӑ\u0002@\u0012e#v,�{�\u001a$@�\u0000�\\\u000bX\u0001���\u0013<\u0001\u0002\u0004\b\u0010 0��g�~x�6�\u0000\u0010\u001b\u0001�\f`��\u0005\u0002\u0004\b\u0010�@��'��\u0002`\u0002\u001fO\u0011 @�\u0000\u0001\u0002�\u0013�>}z���\r+\u0000lٲ�[��̮�q��\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b4E�o����nT�\r+\u0000\u001c�.�Ӎ\n\\�\u0004\b\u0010 @����\n\u0000/\u0003\u0002\u0004\b\u0010 @�0\u0002q)��\u001b��Q�\n\u0000�\b\f\u000f\u000f�0#!\u0011\u0002\u0004\b\u0010Ȝ�=\u000027$\u0002\"@�\u0000\u0001\u0002\u0004�&��9tC\u000b\u0000?��?�o���S���\u0004\b\u0010 @`l�FV���ѣ\u0004\b\u0010 @�\u0000��\t<z�W~�a�G�\r-\u0000�]�v(>���F&�m\u0002\u0004\b\u0010(���АK\u0000�;�2'@�\u0000\u0001\u0002E\u0013��d\u000e�Ȥ\u001aZ\u0000H\u0002\u001f\u0019\u0019i�\u0012�F�h�\u0000\u0001\u0002\u00042/�\u0000��!\u0012 \u0001\u0002\u0004\b\u0010 P�@GGG���\r/\u0000tuu�\u0011��$a�\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000�\u0012\n<��\u0017�0�;7���\u0005�\r\u001b6��5��ih\u0016\u001a'@�\u0000�R\n�\u0003���.i\u0002\u0004\b\u0010 P8�xO��5k�\f4:��\u0017\u0000�\u0004�V\u0006\r_��h(�\u0013 @�@�\u0004�\u0005 {c\"\"\u0002\u0004\b\u0010 @�z�X����Ϫ��T\n\u0000+V��b�v���A�\u0000\u0001\u0002\u0004�\u0017���\u0007��<�!@�\u0000\u0001\u0002\u0004�!pp���_J#�T\n\u0000�֭;\u0012�|.���A�\u0000\u0001\u0002�\u0011hkkS\u0000(�p˔\u0000\u0001\u0002\u0004\b\u0014R V4�v|����R)\u0000$Ytvv�\f��é\u0003\u0002\u0004\b�N@\u0001�tC.a\u0002\u0004\b\u0010 P,������ʩ\u0015\u0000\u000e\u001f>|[T6\u000e\u0017k�dC�\u0000\u0001\u0002�\u0014p\t@3��M�\u0000\u0001\u0002\u0004\bLU �#\u000f\u000e\u000e��Z>�\u0002��ݻ\u000f\u0005��\u0001L�\u0015�|\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010(����п\u001c�+��Oj\u0005�$����?���N\b\u0010 @�\u0014\u0002�\u0000(�0K�\u0000\u0001\u0002\u0004\b\u0014V �ˤ:GN�\u0000p���~!�8<^�ѓ\u0018\u0001\u0002\u0004\b�-`\u000f����G�\u0000\u0001\u0002\u0004\b�Kౘ#'w�K�+�\u0002��5k\u0006\"���e�#\u0002\u0004\b\u0010(��\u0015\u0000�\u001e^�\u0011 @�\u0000�B\u000b����=>GN-�T\u000b\u0000ǳJu�Cj�:\"@�\u0000��\u0005�\u001e=j\u0005@��:$@�\u0000\u0001\u0002\u0004�!0}����Ʃ\u0017\u0000z{{��\u0000��\u0003L\u001b\u0004\b\u0010 Pn\u0001+\u0000�=��'@�\u0000\u0001\u0002y\u0015H��[�l�z��^\u0000��\u0000G����NT\u0004\b\u0010 P<���v+\u0000�7�2\"@�\u0000\u0001\u0002�\u0017�\u0002�G��qډ�^\u0000H\u0012�[\u001d���!mX�\u0011 @�@*\u0002���L%+�\u0010 @�\u0000\u0001\u0002�\u0016h�\u001d�R\u0000عs�wc47\u0016zD%G�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004�\u0014x����3\u001fn�#M)\u0000$iŒ\u0007�\u0000\u001a?�z @�@�\u0005bE�p�\u0013�\u001c\u0001\u0002\u0004\b\u0010 P8�f΅�V\u0000�1c�\u0002@�^�\u0012\"@�@�\u0002͸v.�\f�F�\u0000\u0001\u0002\u0004\b\u0014M����is�\u0015\u0000\u001ez�-Q���h�)\u001f\u0002\u0004\b\u0010HO�ȑ#�\u0000H�[O\u0004\b\u0010 @���\u0005��m۶��7S[\u000bM+\u0000$ᎌ�|����E�\u0000\u0001\u0002\u0004�Ms\u0017\u0000�\u0002\u0002\u0004\b\u0010 @ O\u0002�!xS��M-\u0000̚5�\u0013\u0001p(O\u0003&V\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 P�@2����\u000b?Q�y�<��\u0005�M�6\u001d�d>Yτ�E�\u0000\u0001\u0002�\u0011�\u0002�<c-S\u0002\u0004\b\u0010 �w�(\u0000�]�n��f���\u0002@�xgggS�@4\u0013_�\u0004\b\u0010 0e��)��\u0001\u0002\u0004\b\u0010 @�@\n\u0002q����}�^\u0000x�ᇿ\u0016���)x�\u0000\u0001\u0002\u0004\n&`\u0013��\r�t\b\u0010 @�@A\u0005�9���ۿ����^\u00008~\u000b��4\u001bB�\u0004\b\u0010 �?\u0001�\u0000�o�DL�\u0000\u0001\u0002\u0004J*��O�\u0013��\u0017\u0000� b)��EEd8��\u0017\u0001\u0002\u0004\b\u0010�T�x\u0011���\u001dG�\u0000\u0001\u0002\u0004\b\u0010H] ��ƥ��z�ct��\u0002@__����1��\u0010\u0001\u0002\u0004\b\u0010\u0018W�\n�qi<A�\u0000\u0001\u0002\u0004\bdD >𾽻�{G\u0016��D\u0001�8ĭY\u0000\u0011\u0003\u0001\u0002\u0004\b�G��'��\t`~�K�\u0004\b\u0010 @��\u0002�\u0002 \u0013��\u0013��\u0014\u0000�~��\u001c�<Q�W��\t\u0010 @�&\u0001�\u0000���$\u0002\u0004\b\u0010 @ %�������\\7\u0013_�)\u0000��\u0010�\u0004�?fBE\u0010\u0004\b\u0010 �\u000b\u0001�\u0000�b�\u0004I�\u0000\u0001\u0002\u0004J+��������hV\u00002S\u0000H@����d\u0005F\u001c\u0004\b\u0010 �}\u0001�\u0000d�DH�\u0000\u0001\u0002\u0004�,\u0010\u0005�L�q3U\u0000���/��.�\u000bD�\u0004\b\u0010 P�@GG�=\u0000*�r$\u0001\u0002\u0004\b\u0010 ��@�m�=��K��I��T\u0001 �6�s�Ҩ\u001d@�\u0000\u0001\u0002\u0004�C@\u0001�+�\u0000\u0001\u0002\u0004\b\u0010Ȥ@�����\u0005��\u0002����?\u0011{\u0001<�5(�\u0010 @�@�\u0004bS\u001d\u0005��\r��\b\u0010 @�\u0000�i�\u001e�5k�ڬAd�\u0000�l\u0006\u0018����&!k\u0003&\u001e\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010ȶ@r�,m�wB+s\u0005�$����\u000f�_>�91J�&@�\u0000�1\u0005\u000e\u001d:�wŘ2\u001e$@�\u0000\u0001\u0002\u0004�(0\u0012_ɜ6s_�,\u0000lܸ�ܑᨘ9-\u0001\u0011 @�@�\u0004ZZZ\u0014\u000025\"�!@�\u0000\u0001\u0002\u0004b.��\u001d;vtgQ\"�\u0005�\u0004*vL�\u0019`\u0016_1b\"@�@�\u0004�\u0005 C�!\u0014\u0002\u0004\b\u0010 @�����`�6�;14�-\u0000��u������:\u0011��\t\u0010 @��h��ӧ[\u00010\u001a��\u0004\b\u0010 @�@3\u0005�n����63����l\u0001`��Ճ�\n�����\u001c\u0001\u0002\u0004\b�[����\n\u0000�~\tȞ\u0000\u0001\u0002\u0004\bdJ �\u001fL沙\n�`2[\u0000Hbloo_\u0013�\u0000�N�׷\u0004\b\u0010 @ऀ=\u0000NR��\u0000\u0001\u0002\u0004\b\u0010h�@2w�Չ��\u0010;�\u0005��m\u0018��4y\u001cuO�\u0000\u0001\u0002\u0019\u0015���\u0002 �c#,\u0002\u0004\b\u0010 P6����9>��l�.\u0000$j���o3�'0\u0002\u0004\b\u0010h��\u0015\u0000M��9\u0001\u0002\u0004\b\u0010 p�@lN�7����o3_\u0000�\nʿ�u\u0014�ͤ��\b\u0010 @��\u0002\u0007\u000e\u001c�\u0002��#�s\u0002\u0004\b\u0010 @���===wf]#�\u0005�\u00040\n\u0000���d}��G�\u0000�\"\n�\u000b@\u0011GUN\u0004\b\u0010 @ \u0002mmm��CԹ(\u0000̞=����;\u000f�b$@�\u0000��\u0004�@l\u0005@z�z\"@�\u0000\u0001\u0002\u0004�\u0010���~\u0010s֏��T�\u001e�E\u0001`Æ\r��&�}��\u0013\u0010\u0001\u0002\u0004\b4U��ѣ\n\u0000M\u001d\u0001�\u0013 @�\u0000\u0001\u0002Q\u0000x_2g̓D.\n\u0000\t�����\u0002�h\u001eP�H�\u0000\u0001\u0002�\b�\u00040\u001dg�\u0010 @�\u0000\u0001\u0002c\u000b$s�'�|��c?��GsS\u0000ؽ{�#��\\\n��\u0000\u0001\u0002\u0004\b\u001c\u0013�1c�\u0015\u0000^\u000b\u0004\b\u0010 @�@�\u0004����1��6-�*;�M\u0001 �+>�\u0019`�\u0003�p\u0002\u0004\b\u0014Y�\u001e\u0000E\u001e]�\u0011 @�\u0000��\u000b�m�s5G�U\u0001 n�p���Ⱥ�\fDH�\u0000\u0001\u0002i\b�ݻ�\n�4��A�\u0000\u0001\u0002\u0004\b�!\u0010;�5��;�\f?��\u0002@☷\nK��^h\u0004\b\u0010Ƚ�̙3\u0015\u0000r?�\u0012 @�\u0000\u0001\u0002�\u0014�K�s�����\u0002�k_���\u0006��|�DDM�\u0000\u0001\u0002�\u0014�5k�\u0002@=A�E�\u0000\u0001\u0002\u0004\bT$\u0010s��׼�5�Z��\u0019:(w\u0005�իW\u000f�߻2d(\u0014\u0002\u0004\b\u0010h��=\u0000�\u0004�[\u0002\u0004\b\u0010 Pr�(\u0000����4W\u0012�+\u0000$�\u0017^x��M_nvZ��+B�\u0004\b\u0010ȑ��?n\u0005@��K�\u0004\b\u0010 @� \u0002�W�X�<��\u0002��u�D��o�\b.f\u0002\u0004\b\u0010����ٳ�Ua�\b\u0010 @�\u0000\u0001\u0002�\t����IS밎\u001d�\u0000��?o޼��*�\u0003u��\u0014\u0001\u0002\u0004\b�L`Ϟ=V\u0000�l̄K�\u0000\u0001\u0002\u0004�,��A\u0017,X�޼��\u0002�w���'ZZZ>�Wxq\u0013 @���\u0005b\u0005�\u0002��\u0019�@�\u0000\u0001\u0002\u0004\bT(\u0010\u0005���_�~_��g��\u0016\u0000\u0012�s�=��q)@�T\u0005D�\u0000\u0001\u0002�\btuu)\u0000�\"�\u0013\u0002\u0004\b\u0010 @ �{Ƈ��γD�\u000b\u0000��{o_��C�\u0007@�\u0004\b\u0010 P�@�\"V\u0000��ϙ\u0004\b\u0010 @�@\u0015\u0002CCC�m۶]U���Cs]\u0000H4c\u0003�w�\u001b@�@e�% \u0002\u0004\b4^���O\u0001���z @�\u0000\u0001\u0002�\u0017H�s��yg�!r_\u0000����4<<��y\u001f\b�\u0013 @�@�\u0002�!�\u0002@�l� @�\u0000\u0001\u0002\u0004�\u0014\u0018\u0019\u0019��\u000f>�P��e���\u0017\u0000\u0012ю���̜��\b\u0010 @��\u0002.\u0001h8�\u000e\b\u0010 @�\u0000�\u0010(ʜ�\u0010\u0005�X\u0005pO\\\n�U�L\u0002\u0004\b\u0010(��\u0002@��;��l�_�\"&@�\u0000�2\u000b���_ٲe˷�`P�\u0002@2\u0010Q\u0000x{\u0011\u0006D\u000e\u0004\b\u0010 P���}�\\\u0002P9W&�T���0\b�\u0000\u0001\u0002\u0004�\u0010��]o���L\u001fZ�\u0002@Td�\b�gZ[p\u0004\b\u0010 PW\u0001�ɺrj�\u0000\u0001\u0002\u0004\b\u0010\u0018%\u0010�5�\u000b�ڼ0\u0005�d�b\u0015���\u001a/?\u0012 @�@�\u0005�?�|+\u0000\n<�R#@�\u0000\u0001\u0002�\u0016hoo/�\u001c�P\u0005����/��\u0019���\u0017��\t\u0010 @ \u001d��\u001b7*\u0000�C�\u0017\u0002\u0004\b\u0010 P:������+�\u000b�{�\n\u0000ɨ�-\u0001\u000bU�)�+M\"\u0004\b\u0010h���%K\u0014\u0000\u001a�I\u0002\u0004\b\u0010 @`ڴ����Es(\\\u0001����K1H�(�@ɇ\u0000\u0001\u0002\u0004�\u0014�[�(\u0000���\u0011\u0002\u0004\b\u0010 @`�\u0002���d��\u0014����+\u0000$���*�̽�\u0004D�\u0000��\u000btvv*\u0000ԟU�\u0004\b\u0010 @��\u0002E]Y^�\u0002�֭[�\u0010�k|���Z\u0000\u0004\b\u0010(���={�\u000b���\b\u0010 @�\u0000��\u0005�q|ey�=7��B\u0016\u0000\u0012���\u0011�\u0000\u001a���<\u0001\u0002\u0004�-��<�\n�f\u000f��\t\u0010 @�@�\u0004�����\u0005�\u001d;v|>6m�V�^��!@�\u0000�S\u0004\u0016-Z�\u0000p��o\t\u0010 @�\u0000��\t$+ɓ\u0015�Sk%�g\u0017�\u0000�����Y\u0005��מ�\b\u0010 0e�\r\u001b6(\u0000LYQ\u0003\u0004\b\u0010 @��\t���$/t\u0001`۶m��\u000b��K��\u0004\b\u0010(����^�\u0000P�a�\u0011\u0001\u0002\u0004\b\u0010h�@��w���)���i�\u000b\u0000�a\f�\u001f�d�\u001b\u0002\u0004\b\u0010HY�����\u0014\u0000R6�\u001d\u0001\u0002\u0004\b\u0010(����������ȫ�\u0005�X\u0005��X\u0005p����M�\u0000\u0001\u0002�\u0011��^\u0014\u0000�3�2!@�\u0000\u0001\u0002M\u0013�9㗺���5-��:.|\u0001 q�9sf�+9)�^tC�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000��\t�ć\n��3��\u0000�iӦoǥ\u0000�*ګT>\u0004\b\u0010(��O�K�\u0002�>\u0001\u0002\u0004\b\u0010���'{{{�ש�L7S�\u0002@2\u0002qG�?�e\u001dC�\u001e\r�\u0011 @�@�\u0002�o�p�\u0007;�\u0000\u0001\u0002\u0004\b\u0010 0�@2G�����1�*�C�)\u0000Ľ\u001c\u001f\u001c\u001a\u001a��B���\b\u0010 PB��7�\n�\u0012���\t\u0010 @�@�\u0005>��ӳ��mf���\u0014\u0000�\u0011�7o���\u001c��h\b�\u0000\u0001\u0002\u0004*\u0016�\u0001`�T\u000e$@�\u0000\u0001\u0002\u0004�\u0010H����Ta\u001f*U\u0001`Æ\r�����/�hJ�\u0000\u0001\u0002%\u0012��]�\u0000(�xK�\u0000\u0001\u0002\u0004\b4@�}}}�\u001b�nf�,U\u0001 \u0019�\u00193f�=�:��\u0011\u0011\u0018\u0001\u0002\u0004\bT*�\u0000P���\b\u0010 @�\u0000��\u0004⃄\u0003�w�;N{�\u0004?��\u0000\u0010�v������\u0012��\u0014\t\u0010 Ph\u0001{\u0000\u0014zx%G�\u0000\u0001\u0002\u0004\u001a-���ׯ�ѝd����\u0005�F<Q\u0000��x�xs\\\u000ep^\u001a��@�\u0004�z�KW�X�\u000by����ƿk\u000b�d\u0010��V����x�N����E<�@���:�?�?��\u001eϦ@6\u0003\u0013\u0015��\u0004vϚ5�]�u���Z�\u0013J���/�߈�ޗn�z#@�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000�f\n�-�o���]��\u0018��w�.\u00018\u0001��g=���\u0003'~�7\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0014[ V\u0010nx�����bg9~v�]\u0001��\\p�\u0005/>r��m��x�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004�\"���q�֭[�P�|�ͣ�\u0005�\u0004k�ҥ����/�\u0016��\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 �\u001f����K۷oQ~\"����\u0004�\u0004e\\���x!\f����\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 P,�d�\u0017\u001b���XYU��Y՟R�3�x��]]]�GFF�Y��dC�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002�@��>���sK�5J�\u0002 y\u0001����IT�\u000e��� \u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0014P��y����yU�R�W\u0000$b���;8����\u000b৫\u0016t\u0002\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\bdV����m�7o�\\f\u0003L10+\u0000�c�s�9\u0015���h�+\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010h��Χ<�)�jl\u0017�i�\n��c�k׮�9s�<\u001e?�,?�'R\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010\u0018O����\u000f<����{�l���6��\u000exl\fѲdɒo���:�q�\u0013 @�\u0000\u0001\u0002\u0004\b\u0010 @�@�\u0004b��o�����K\u0000F�\u0015y�u\t�)��\u000b�����!/�S\\|K�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000��\t���������Qs\t��\u001e�ⶀ;�Ν��m\u0001G���\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002�\u0011�P|������N�V\u0000������G��1��\u0010\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\bd[���3g�q�ClNtV\u0000��~(����\u000e�*���x�C\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 �Q�X��\u0007===�2\u001a^Sò\u0002`\u001c�\u001bn�άi���<�a\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010Ȟ�������e/�lD�.\u0000\u0013��E\u0017]t��Ç�:�!�\"@�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000��\b���k����-#�d.\f�\u0000L0$�?���ٳg�h\u001cr�\u0004�y�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004�,\u0010+�?�u��w59�Lw�\u0012�I�'*Ho�\u0017ҡI\u000e�4\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b4I ��͟?�-M�>7�Z\u00010�P�*����͛6<<��I\u000e�4\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b4A \n\u0000��C\u000f}�\t]�K+\u0000*\u0018��E2YF�p\u0005�:�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004�\u0015x(.���t��go\n\u0000\u0015�[l\"qt���o��P�\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 @�@�\u0002��olذ�?�.sەK\u0000*\u001c��{��tuu]422�c\u0015��0\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010h�@,������w7��B5m\u0005@\u0015�\u0019�\u0000~?^`�Wq�C\t\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 @�1\u0002��w�yonL��l�\n�*�56\u0004<<gΜ�b\u0015�K�8͡\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 Pg�����޸q�׹�B7�R��\u001a�\\L�[�-[�oCCCW7�yM\u0012 @�\u0000\u0001\u0002\u0004\b\u0010 @��$\u0002�2�k��������I\u000e��)\u0002.\u00018\u0005��o�\u0017Xgg�o��\u0003�\u001c�\u0018\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010��@L�����&�՛�\u0004�z�iq)���s�v�j���p�S\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 @�F����wl۶mm����4+\u0000j\u001c�\u000b/��mQu�\\��N#@�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000��\u0005\u001e^�r�;�?�\u0019��=\u0000��:��\u0000~vpp�KSh©\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 P�@ܙ�\u0005[�l����\u001d6J�%\u0000�@��q߾}[�R���R�˫9ϱ\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 P�@kk�������,G�*�\u0012�S5j�>6\u0004��8��\u001aNu\n\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\bT \u0010��=\u000b\u0017.��\n\u000eu�\u0004\u0002V\u0000L�S�S�!��X\u0005�\u001b�\u0000~���\u001dC�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002�\tttt\\��\u0003\u000f|���\u001c=Z�\u001e\u0000�Ej�y�ҥ�\u001e\u001a\u001azY��;�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004�\u0010�����Ν;y��<T��K\u0000�\u0004\u001b��9s�!�\n�w��=N�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002�\t�\u001c��y���fug9z<\u0001�\u0000�'S��{��9x�9��U\u0000�X�\u000e'@�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000�1\u0004���o�]��\u001e�)\u000f� �\u0012�\u001a�&:���Ͽ-���x�c<G�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002�\n�����s�\u001e倊\u0005\\\u0002P1Ue\u0007Κ5��X�����\u001dE�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002c\b�[�`��c<�)\b�\u0004`\nxc�\u001aw\u0005�\u001fw\u0005x,����X�{�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004&\u0016������\u000f?�o\u0013\u001f��j\u0005\\\u0002P�X��/Z���q��+<�a\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 \u0010\u0002�����۷�\u0010F�\u0005\\\u0002P�c-�}*o�o\u000e6�y�\u0012 @�\u0000\u0001\u0002\u0004\b\u0010 @��\u0002\u0007�>��\u001b��X\u0016rr\t@�F���[\u0003>\u001e�۴�Aƚ%@�\u0000\u0001\u0002\u0004\b\u0010 @�X\u0002mmm��y��\u0014+��d�\u0012�\u0006��ҥK?\u0013�\u0006�\u001f@��5O�\u0000\u0001\u0002\u0004\b\u0010 @�@�\u0005b��������;�lG�\u0012�\u0006�Ogg�����\u0006w�y\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b�V �L��;��2j_\r\u0014�\u0002���'�^�bŋ���?\u001f?�>��o\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b���H,�Qoo��@\u001a+`\u000f���\u001ek=�\u0003�\u001c�\u0001̋\u001f�J�;]\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 @ 7\u0002�������r\u0013p�\u0003u\t@J�7cƌ?����Rw�!@�\u0000\u0001\u0002\u0004\b\u0010 @�@�\u0005b����\u0000�Ǚ\u000f� \u0001Z���@Ɔ��ņ�ߊ.��ح�\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 �E�#���'���\rY\f��1�\u0004 �Qݿ�#]]]\u0007FFF�K�[]\u0011 @�\u0000\u0001\u0002\u0004\b\u0010 @ �\u0002��cǎ۲\u0018XQc�\u0002 呍�˲e�>\u0017+\u0001�M�k�\u0011 @�\u0000\u0001\u0002\u0004\b\u0010 @ \u0013\u00021/�ܮ]�^��`J\u0014�=\u0000R\u001e얖��X\u0005�����=)w�;\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b4] �B�\f\u000f\u000f��達0\u0000\u0005�&\f���߿;^��7�k]\u0012 @�\u0000\u0001\u0002\u0004\b\u0010 @��\u0002\u001d\u001d\u001d�۽{�#M\r����\u0003�I\u0003�o߾��Ν�0��<�I!�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002i\u000b������ݩ��C�\n�&�\u0012�,Y���~c\u0013C�5\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004�\u0012x��/���:�ϙ\u00026\u0001<�$�G\u0016/^���\u001c���)`G�\u001d�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002)\t�u�YG�����/�.u3��K\u0000�@I�\u0003\u0007\u000e� 6\u0005<\u0012�\u0002�0�~�E�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000��\u0004�CϷn۶���O?c\u000bX\u00010�K��&�\u0006��\u0000�G��O�c�\u0011 @�\u0000\u0001\u0002\u0004\b\u0010 @��\u0002����q����;�5�+�O\"`\u000f�I��x:�\u001fa��\u0005���1\u001eO�?}\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 @ %�����ט���=I7\n\u0000�\u0000���}�ݷ����ƴ��\u000f\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\u001a-\u0010\u001fr�\u0010K�w5�\u001f�W&`\u000f�ʜR9j�޽\u001b�րK㒀\u001fO�C�\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 @�A\u0002����\u001d;v�U���l\r\u0002V\u0000Ԁ��S���'���}h�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002�\u0014�����\u000b\u0017�^#��v�\u00026\u0001�ެ�g,[��X\u0005pW�\u001a����\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002�\u001582s�̟����jm�\u0002.\u0001��`\u0003�߷o߮y���`xx��\rh^�\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010h�@GG�M[�l�|�:�p�\u0002\n\u00005�5��(\u0002|���kq�\u0004���=i�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002�\u0011�������է5��[�\u001e\u0000�\u0016�c{ӧOc�.�[ulRS\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010h�@�������'{��ʨ�=\u00002:0'�Z�h���@c}\\\u000e���c�&@�\u0000\u0001\u0002\u0004\b\u0010 @�@�\u0004b��H|�yE\\��#Kq��t\u0001+\u0000N���O}}}�c\u0019ͯG5m(s�\t�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000��\u000b$s������?�/\u0005{\u0000d��\u001d8p�gΜ9OF!�gs\u0010�\u0010\t\u0010 @�\u0000\u0001\u0002\u0004\b\u0010(�@[[�[{zz>Z��s��K\u0000r4tK�,�d\\\n��9\nY�\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0014[`m�Z��b�X��\\\u0002����5k��\"܍9\nY�\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0014W���/����W�̬\u0000�٘�X��i�����J��9\u000b]�\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0014D ���\u001f\u001fP>��\u0007\u001f|� )�\"\r+\u0000r6�[�n}����9\u000b[�\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0014G`$Ry���\u0006�&��\u001b�i{���8{��\u0019\u0011�ss\u0018��\t\u0010 @�\u0000\u0001\u0002\u0004\b\u0010ȱ@KK�_�ر�9N���[\u0001�ӡ�s��_#�;r\u001a��\t\u0010 @�\u0000\u0001\u0002\u0004\b\u0010ȡ@,����\u001bo��\u001c�.�\u0010�\u0007@�_\u0006W\\qŹ�v�Z\u001f),�q\u001aB'@�\u0000\u0001\u0002\u0004\b\u0010 @ \u001f\u0002���dW�s�=��#\\Q�\u0016P\u0000\u0018-���/�䒟8|��ׇ��:s\u0016�p\t\u0010 @�\u0000\u0001\u0002\u0004\b\u0010ȏ������l۶�;�\tY��\u0005�\u00010Z$g??��c}s���522�Ҝ�.\\\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004r\"\u0010\u001b��\u0014����$\\a�#�\u00000\u000eL�\u001e޿��]]]��\bpE��\u0016+\u0001\u0002\u0004\b\u0010 @�\u0000\u0001\u0002�\u0017�y��cӿ�e?R\u0011N&`\u0013�Ʉr������\u0018�q~+'�\n�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000�\u001c\bĦߜ?��� T!V `\u000f�\n��rȢE������\u001f\u001e\u001e^����I�\u0000\u0001\u0002\u0004\b\u0010 @�@6\u0005bn�H|�xEww��lF(�j\u0005�\u0000�V,�����m��9�\u001e!\u000ef8L�\u0011 @�\u0000\u0001\u0002\u0004\b\u0010 �}�������?�\u0003UM��\u0000�F+\u0007�\u001e8p�g޼y�c\u0015��� \\!\u0012 @�\u0000\u0001\u0002\u0004\b\u0010 �A������[�~:��\ti\n\u0002\n\u0000S������[\u001f�\u0002N��\u0000��j��\"@�\u0000\u0001\u0002\u0004\b\u0010 @ �\u0002q���cӿwe3:QME�\u001e\u0000S���1�oY�l�G���^��0�F�\u0000\u0001\u0002\u0004\b\u0010 @�@�\u0004>�s���\u001c\u001b��d+,��C�\u001e\u0000�P�`\u001b����������]\u0019\fOH\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\bdL �\u000ewΜ9�u&�\u0019\u001b�:��\u0000PG̬5\u0015\u001bv\u001c=���!�G��Zl�!@�\u0000\u0001\u0002\u0004\b\u0010 @ S\u0002\u000f�*�%s�LE%��\n�\u0004����llɒ%\u0017Ŧ�߈���f��\"@�\u0000\u0001\u0002\u0004\b\u0010 @�Y\u0002��ߞ��UL�77+\u0006��#`\u0005@:�M�%6�HV\u0000�B�9��@tN�\u0000\u0001\u0002\u0004\b\u0010 @�@�\u0004����\u0017L��6,��G\u0001�1��k����dO�\b�f\u001e�\u001b\u001d\u0001\u0011 @�\u0000\u0001\u0002\u0004\b\u0010h��H[[۫b�wSz�i�\u0002n\u0003�:y�:|�'6�s�9G��\u0000/h^\u0014z&@�\u0000\u0001\u0002\u0004\b\u0010 @ \u000b\u0002�W�[�o�~K\u0016b\u0011C:\u0002\n\u0000�8g��(\u0002���յ(6��\"3A\t�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000�T\u0005b>�����M�S�5]�%\u0000M\u001f��\u0003��\u001b~+z�b�=�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000�f\u000b���s�}�s��q�?}\u0001w\u0001H�<\u0013=^r�%�\u000f\u001f>|g\\\u000e��L\u0004$\b\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\u001a.\u0010;����.�zݺu\u0007\u001bޙ\u000e2'�\u0000��!I/��\u001fI\u0014\u0001��\u0003.N�W=\u0011 @�\u0000\u0001\u0002\u0004\b\u0010 �\f���ǹ���{ｷ�\u0019���\u0002\n\u0000�\u001f��F�r�ʧ\u000f\f\f�9<<<����\u0000\u0001\u0002\u0004\b\u0010 @�\u0000��\t����uOO��\u001a։�3/�\u0000��!j|�K�,�����q9�M!\u001bϭ\u0007\u0002\u0004\b\u0010 @�\u0000\u0001\u0002i\u000b\fF�/�[�)���-\u0001\u0013�l�GS�ٿ��ٳwG�?ה\u0000tJ�\u0000\u0001\u0002\u0004\b\u0010 @�@�\u0004���oޱc�چu���\b(\u0000�f�\u001a\u001b�\u0003\u0007֟s�93c\u0015�s\u001aۓ�\t\u0010 @�\u0000\u0001\u0002\u0004\b\u0010HK ���Eoo�;��O?�\u0016p\t@��'���v -�\u0017/�xt���v�3\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004�.\u0010������\u0015q��H�\u001b�`.\u0005Zs\u0019��\u001b\"���p��\u0017�:\n\u0001�\u001aҁF\t\u0010 @�\u0000\u0001\u0002\u0004\b\u0010HE n������ך���N�\u0000��P�\u0017�5�\\s��͛�\u001c�\u0003<;�^�D�\u0000\u0001\u0002\u0004\b\u0010 @�@=\u0004b�w���gw��}�\u001e�i�8\u0002V\u0000\u0014g,�ɺu�\u000e�~\u0000�ƒ���֨�\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010HC�ޅ\u000b\u0017^g�\u0006u���\u0002 c�Z�\u0017]tт#G�|mxx�i�u�#\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004j\u0015x���������?Zk\u0003�+��\u0002@��w��=��O_�裏~-�\u0005�`ʍi�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000��\b���ͱ���m۶�jH\u0007\u001a-��\u0002@!���I����\u000f������=i�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000�j\u0005b���Ͼz�ƍ۪=���\u0012�\u0007@�ƻ�l��W[[�\u000b���HM\r8�\u0000\u0001\u0002\u0004\b\u0010 @�\u0000��\b���\u00071���Cx\u000bר\u0015\u0000�\u001b��%�r��\u001f\u001b\u001c\u001c\\\u0017+\u0001�5�\u0017-\u0013 @�\u0000\u0001\u0002\u0004\b\u0010 P��cQ\u0000�f����Wx��J.`\u0005@�_\u0000դ����X\tpm�\u00048P�y�%@�\u0000\u0001\u0002\u0004\b\u0010 @��\u00021��?{��kM���Z�֬\u0000(�\b7 ��K�>/V\u0001|!��р�5I�\u0000\u0001\u0002\u0004\b\u0010 @��\u0004\u00021�?�����-[�|}��<E�\f\u0001\u0005�3H<P�@�\u000b��(\u0002|&�tTr�c\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010��@L������\\ooޚ\u0016�&�\u0012���x��}\u0001�\u0018M�<�\f֩I�\u0010 @�\u0000\u0001\u0002\u0004\b\u0010 0��`\\��k&�\u0013#yv|����3\u0004&\u0016ؿ������\u001c\u0015�_\u001c\u0019\u0019��db.�\u0012 @�\u0000\u0001\u0002\u0004\b\u0010�Y >�\u001f���^�m۶O�܈\u0013K/�\u0000P����\u0000������s��\u001a\u001e\u001e�����l\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004�\u0011\u0018�������?��\tT$�\u0000P\u0011��&\u0012�\"�w�9�}�\u001f��\u0013\u001d�9\u0002\u0004\b\u0010 @�\u0000\u0001\u0002\u0004�\u0017�����ر�\u0003՟�\f\u0002�\u000b(\u0000���\u001a\u0005�x�o�J���\u0014�gjl�i\u0004\b\u0010 @�\u0000\u0001\u0002\u0004\b�\u0012�k��8>�ר��H�&\u0001\u0005��؜4�@�\t�\u0017irk�����\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010�\\ ��{L�����p$��\u0005\u0014\u0000&��l�\u0002\u0007\u000e\u001c�r\u0014\u0001΍Ӯ��T�\u0013 @�\u0000\u0001\u0002\u0004\b\u0010 p\\ 6���X��V \u0004�)�6�����1��;w�)���8\b\u0010 @�\u0000\u0001\u0002\u0004\b\u0010�^������?�\u0019\u0004&\u0016P\u0000��ǳ5\b�?X#}}}o�S���ӝB�\u0000\u0001\u0002\u0004\b\u0010 @��\u0002�^�\u001d���&�K� �\t�\u0004�a�\u001aN.\u0007�1��\u0001\u0001\u0002\u0004\b\u0010 @�\u0000��\u0004�\r�b���Wv��\bT/�\u0000P��3�\u0010H6\u0006t��*�\u001cJ�\u0000\u0001\u0002\u0004\b\u0010 PF���Vv�/�Ч��\u0002@�ޥ�-�E�y��b\u0019�K�6�-�D�4\u0001\u0002\u0004\b\u0010 @�\u0000�1\u0004b�����\u0018��`��=D��\u0002\n\u0000u���x\u0002����N\u0014\u0001����!����xP\u001e'@�\u0000\u0001\u0002\u0004\b\u0010(��`L�_\u0019���C���k�\u0004|\u001a�<�R��t�җE�\u001f\u001f\u001a\u001a�(%��\t\u0010 @�\u0000\u0001\u0002\u0004\b�@|�4��������\u0000!���\u0002@Z��9)�bŊ\u0017���:\u001e�q�A�\u0010 @�\u0000\u0001\u0002\u0004\b\u0010(�@L�\u000f��/�����$)K3#\u0002\n\u0000\u0019\u0019���\u0011+\u0001�\u0017�\u0001�k\\\u00120�l�˗\u0000\u0001\u0002\u0004\b\u0010 @��\u00021�������-[�|��\n2o��k��%_�~�:���?|/�\u0000���B�\u0004\b\u0010 @�\u0000\u0001\u0002%\u0011����Ϝ9��&�%\u0019�\f�i\u0005@\u0006\u0007�L!�\\���\u0006\u0006\u0006n��\u0000�)o�\u0012 @�\u0000\u0001\u0002\u0004\b�N`w\u0014\u0000^\u0010\u001f��_��%�\u0019\u0001+\u000023\u0014�\f$6=�^�\u0004x^�c��{�K\u0000\u0000!zIDAT��\u0002�&@�\u0000\u0001\u0002\u0004\b\u0010(�@������u���G:��Y\u0001��1*E�˗/_988���\u0017��R$,I\u0002\u0004\b\u0010 @�\u0000�R\b����g����\u001b7n+E̴�\u0015\u0000�\u001e��\u0004�m۶�s�=�yq\u001f�\u0007˓�L\t\u0010 @�\u0000\u0001\u0002\u0004\n.�@�����ࣜ��\u0014\u0000r4XE\u000f�����9}���r������\b\u0010 @�\u0000\u0001\u0002\u0004\n/p����S�A׮�g*��\b(\u0000�f��\u0011hww���s��t\u0014\u0001�Y��eI�\u0000\u0001\u0002\u0004\b\u0010 P4�����������\u001f-Zn�ɷ�=\u0000�=~����k�9��\u001f���\u0013�\n���\b\u0010 @�\u0000\u0001\u0002\u0004\n'\u0010����]�^�{��C�KNB�\u0017�\u0002 �CX�\u0004֭[w�O}굑��bf(+\u0002\u0004\b\u0010 @�\u0000��\t�*֏�%�/6�/��\u0016'\u001f+\u0000�3���$V\u0000��\u001d\u0002�2�\u0010�\u0007�LPR\u0004\b\u0010 @�\u0000\u0001\u0002E\u0011�˝;w�QKK�HQ\u0012�G�\u0004\u0014\u0000�7���h���7�r��344tV!\u0013�\u0014\u0001\u0002\u0004\b\u0010 @�@^\u0005\u0006���~�����yM@��\u0011P\u0000(�X�>�%K�\\7<<��H���'#\u0001\u0002\u0004\b\u0010 @�\u0000��\u000b�\u0007T\u0007b���[�n�b@)\u0004\u0014\u0000J1��I2V\u0002<#.\u000b���hqq��\t\u0001\u0002\u0004\b\u0010 @�@�\u0004�z�\u001d1�IOO���\u0016�x�+`\u0013��}.3�몾;s�̫�\u001f\\���r\u0004\u0005M�\u0000\u0001\u0002\u0004\b\u0010ȿ@|���s�=��&��\u001f˲e�\u0000P�\u0011/@����;�\b��H�R�\u0002��\u0014\b\u0010 @�\u0000\u0001\u0002y\u0012�\u000f�>�E\u0017]}����)n�\u0012H\u0004\u0014\u0000�\u000er)�iӦ\u00037�t��E��f+�\u001cAA\u0013 @�\u0000\u0001\u0002\u0004�'\u0010�������������^�\u0004�M�\u0007�WA�\u0005�-[�_�6��D��s?�\u0012 @�\u0000\u0001\u0002\u0004\bdR`$>x��\u001d;v�3��\t�@�\u0002&L\u0015B9,�\u0002K�.}yD�wq���lG*:\u0002\u0004\b\u0010 @�\u0000��\t\u001c���^\u0015���d��\u0016.�3\u0004\u0014\u0000� �@^\u0005\u0016-Z����_��9y�A�\u0004\b\u0010 @�\u0000\u0001\u0002�\u0012x4��zi�Auw��\u0012\f�\u001a\u0005�\u0001P#�Ӳ'���wWWWתؘ�;{щ�\u0000\u0001\u0002\u0004\b\u0010 @ g\u0002\u000f%w�2��٨\twB\u0001\u0005�\ty<�7��\u001b7>|���'�\t�+o���\u0000\u0001\u0002\u0004\b\u0010 @ \u001b\u0002�^�θ�UL�7g#\"Q\u0010���\u0002@}\u001c��!�{��\u000b/��\u0005\u0011�'2\u0014�P\b\u0010 @�\u0000\u0001\u0002\u0004�!����Ο�\r�\u001e�G��$P��=\u0000*�rd�\u0004�6--�\u0017/��\b�\u000fs\u0016�p\t\u0010 @�\u0000\u0001\u0002\u0004� ������I�=҄�uI��\u0002\n\u0000\r'�A�\u0005�6�7�m\u0002�O����X�O�\u0000\u0001\u0002\u0004\b\u0010 �I��X��\u001b1��P&�\u0013\u0014�:\t(\u0000�\tR3�\u0016���\u000b��ȑ�E��f;R�\u0011 @�\u0000\u0001\u0002\u0004\b�)\u0010\u0013�=q��˷m���4��\u0017�f\b�\u0003�\u0019��L]`˖-w̛7���۩w�C\u0002\u0004\b\u0010 @�\u0000�L\n�����ӧ���&�GP\r\u0010P\u0000h\u0000�&�)�aÆ޸��s#�[�\u0019��\b\u0010 @�\u0000\u0001\u0002\u0004�\u0012�O��̙3����GZ}�@�\u0005\\\u0002��\u0011�S\u0004b_�\u001bc���\f\r\ru6%\u0000�\u0012 @�\u0000\u0001\u0002\u0004\b4K�H|��[۷o��Y\u0001�@�\u0004\u0014\u0000�%�ߦ\u000bľ\u0000�\u001a\u0018\u0018�T\u0014\u0001�6=\u0018\u0001\u0010 @�\u0000\u0001\u0002\u0004\b�!�����{{{קљ>\bdM�%\u0000Y\u001b\u0011�&\u0010�\u0002|+��zE,��Jj��\u0000\u0001\u0002\u0004\b\u0010 @�)\u0002���K�,���)�:͈�\u0002@F\u0006B\u0018�\u0011�k���Z��Q\t~gs\"�+\u0001\u0002\u0004\b\u0010 @�@�\u0005F�\u0003����׿��{��\u0006��y\u0002�\u0016p\t@��Gpi\n,_����r�\u000f\u000f\u000f\u000f�N�_}\u0011 @�\u0000\u0001\u0002\u0004\b4F >��?88��]�v}�1=h�@�\u0004�\u0000��x���\u0002q��O͝;��Q!~���h�\u0000\u0001\u0002\u0004\b\u0010 @ \u001d�\u0007b��&��`�%\u001f\u0002\n\u0000�\u0018'Q�$p���o�5k֕---��R��!@�\u0000\u0001\u0002\u0004\b\u0010���ڋ/���===��ߴ\u0016\t�W�%\u0000�\u001d;�7X`Ŋ\u0015\u0018�\u0004�=����4O�\u0000\u0001\u0002\u0004\b\u0010 P\u0007�X�?\u0014������_ա9M\u0010(��\u0002@�TB�\u0014�[\u0005>�ȑ#\u001f�6ϭg��\"@�\u0000\u0001\u0002\u0004\b\u0010��@\\ƹ'\n\u0000/��:�Zߖ�F�8\u0002.\u0001(�Xʤ\u0001\u0002q��;�͛wE4��\u00064�I\u0002\u0004\b\u0010 @�\u0000�:\b�����ӧ���\u001d05Qh\u0001K�\u000b=������={�-\\�����\u0000珌��x=��\u0006\u0001\u0002\u0004\b\u0010 @�@}\u0004��5]]]��iӦ��iQ+\u0004�+�\u0012�⎭�\u001a �lٲ\u001b�\b��\u0017��\u0001�k�\u0000\u0001\u0002\u0004\b\u0010 @�r�#���o����V~�#\t�[@\u0001���/�\u001a\u0004.�䒟8|��G�\bpQ\r�;�\u0000\u0001\u0002\u0004\b\u0010 @`�\u0002\u000f�����X����7�\u0005\u0002�\u0011�\u0007@y�Z�u\u0012��e߾��\u000b�\u0019�}�NMj�\u0000\u0001\u0002\u0004\b\u0010 @�r�[⃘�z����\u001cI���\u0015\u0000^\b\u0004� �|��_��\u0001��/��ShƩ\u0004\b\u0010 @�\u0000\u0001\u0002�\u000b<\u0016�b޸k׮OO~�#\b\u0010\u0018K�\n��T<F�B��<j���?\u0016��|��S\u001cF�\u0000\u0001\u0002\u0004\b\u0010 P�@\\���ؔ��L���s8�Q\u0002V\u0000�\u0002�#�Z\u0004�\u001aݲx��?�_N�=V\u0003t�҆s\b\u0010 @�\u0000\u0001\u0002\u0004N\u0017��V��A�\u001foݺ��[ZZFN�O\u0004\bT+�\u0000P���\tL \u0010�\u0004�x\u0014\u0000�_\\\u0016�\t\u000e�\u0014\u0001\u0002\u0004\b\u0010 @���\u0002\u001bc����;w~w�C\u001dA�@%\u0002.\u0001�D�1\u0004*\u0014H6���iWD��\u0003\u0015��0\u0002\u0004\b\u0010 @�\u0000�Q\u0002�^����\u0015&��`�H`�\u0002V\u0000L\u0011��\u0004�\u0013X�r�K�\u001e=��x����8\u0001\u0002\u0004\b\u0010 @��\u000f\u0005b��#���������G}G�@�\u0004�\u0000���v\b�\u0012����̼y�.���8�)?\u0012 @�\u0000\u0001\u0002\u0004\b�\u0012�O�??w��\u001f3�\u001f\u0005�G\u0002u\u0014�\u0002����\"0�@�A`�\u0006���\u001b�ğα��\u0018\u0001\u0002\u0004\b\u0010 @��\u0002G�S���ر�=%6�:�T\u0004\u0014\u0000Ra�\t�iӞ���]~�С�\"�e<\b\u0010 @�\u0000\u0001\u0002\u0004�M�O���l�\u0017��o�A�@�\u0005\\\u0002�xc=\u00108&���\u000f~��\u000b/|V[[���\u0004\u0001\u0002\u0004\b\u0010 Pv�����Mgg�&�e)�?M\u0001+\u0000���\u0017��\u0002K�,�.n\u0015���q!\u0014\u0002\u0004\b\u0010 @�@�\u0004b���X\u0011�����/�)o�\u0012Ȃ�\u0015\u0000Y\u0018\u00051�N �q��̙3/����p[�ї0\u0001\u0002\u0004\b\u0010(��g�;��M�K�\u001a�|\u0013\u0005�\u0000h\"��\t$\u0002K�.}C��Ψ��\"B�\u0000\u0001\u0002\u0004\b\u0010(������-;w��@A�\u0016�\\\b(\u0000�b�\u0004Yt��˗��\u0002�-qY��\u0014=W�\u0011 @�\u0000\u0001\u0002�\u0012�%�_�?7n��re.[\u0002�\u0013P\u0000�ޘ���\u0002��\u0002co��Ⲁ�\u0019ŀ9%e�6\u0001\u0002\u0004\b\u0010 P\u001c�}���oٶm�-�II&\u0004�-�\u0000���\u0013}\u0001\u0005\u0016-Z�4��k�\bpm\u0001ӓ\u0012\u0001\u0002\u0004\b\u0010 P\u0002��`�s�fͺ���{G\tҕ\"��\b(\u0000�f�\u0004Z6�ŋ\u0017�6~y�;�[���K�\u0000\u0001\u0002\u0004\b�S >��\u001b�<�ݞ����g\u0006�&Pl\u0001w\u0001(���.�\u0002�I�Gb�܏F\n��q\u001aB'@�\u0000\u0001\u0002\u0004J\"\u0010��Oϙ3�GM�K2��̥�\u0015\u0000�\u001c6A�M��\u000b.�OG�\u001cyO�}N�r�/\u0001\u0002\u0004\b\u0010 �m�ؿhO�����۷<ۑ��\u0000��\u0010\u0010 �}��{��?s�̏�/�%\u0011��ُX�\u0004\b\u0010 @�@\u0019\u0004b������|il�O\u0019�#��\u000bX\u0001��\u0011\u0014�\u0004b��\u0017F��}�?�\u0005�K^�\u0004\b\u0010 @�@&\u0004b�w�\u001fyCoo�3\u0011� \b\u0010�H�\u001e\u0000\u001519�@v\u0004�����lٲ��\u0017�_�/ށ�D&\u0012\u0002\u0004\b\u0010 @��\u0002���?����\u000b/����-�\"\nX\u0001P�Q�Si\u0004�\u0010pi�\u0004�@�2�9�IZ�\u0004\b\u0010 @�@S\u0004b�gWW�����Ʀ\u0004�S\u0002\u0004�,�\u00000eB\r\u0010h�@\u0014\u0000Z�/_~C���Q\b���h�N�\u0000\u0001\u0002\u0004\b\u0014M &�������&���Ñ��'\u001f\u0002e\u0012P\u0000(�h˵�\u0002\u000b\u0017.<�����Q\u0004xE�\u0013�\u001c\u0001\u0002\u0004\b\u0010 ��@L��aƌ\u0019o���ޓZ�:\"@�a\u0002\n\u0000\r��0��\b�e\u0001?\u001bU��F!��D�W\u0002\u0004\b\u0010 @�\u0000\u0002\u000fO�>�\r[�l��\u0000�H�\u0000��\u0002n\u0003�@�`\u0002����r�y�\u0019\u001e\u001e>\u001a�\r�*�\u0001�\u0005KQ:\u0004\b\u0010 @�@�\u0004b�����ߟ���U�7o~�A�h�\u0000�&\tX\u0001�$x�\u0012HC n\u0019�4�\u0000\u001dŀ_I�?}\u0010 @�\u0000\u0001\u0002�\u0015����;;;�\u0012��w�7\u000b�\u0013 0��\u0002�D:�#P\u0010�ŋ\u0017�L�\u0004xO��\u0005II\u001a\u0004\b\u0010 @�@�\u0004b�L��\u0018\u0013�uujR3\u0004\bdT�5�q\t�\u0000�:\n�ܹ�+7�t���\u0017��G���ش�\b\u0010 @�\u0000��\n<\u0011+\u0005����3M��;�\"'P��\u0015\u0000�h9�@\u0001\u0004.�첅\u0007\u000f\u001e�\u001f�����t����\u00048����8G�G���I(&�IX�\u0010aLQLj\u0007A����j��Z� ���:�:�C+t�v�8:\u001d[mڊt\u0018�Q�q�ǐ��V\u0013�\u0018���Đ�\u001c\u0012�$i\b�$��M�\u0003#!��\u001e_f��7���<����������g�\u0003ڔ\u0014\u0010@\u0000\u0001\u0004\u0010\u0018�@�\u000e\nl�o�\u0007\u001a\u001b\u001b\u000f�p]\u0016G\u0000\u0001\u001b\u000b���ƍG�\b�E \u0014\n�wvv>��\u0005�\u001b�vX\u0017\u0001\u0004\u0010@\u0000\u0001\u0004�#���}��\u0006߽��m���H\u0011@`�\u00048\u0005`�$�\u000e\u00026\u0013�P�2\r���#\u0000�4}f��\t\u0017\u0001\u0004\u0010@\u0000\u0001\u0004F&Р��muuu���\u001f\u0019\u001cK#�$\u0001F\u00008�5�\u0005�Q\n���MQ\u0011�~M�iD@�(7�j\b �\u0000\u0002\b `1\u0001}�\u001fх�7�~Cyy�Q��G8\b \u0010e\u0001\n\u0000Q\u0006gw\bXY //oFss��*\u0002���\b!+7\u0016�!�\u0000\u0002\b p\u001a\u0001u�{��3����p8�H��X�\u0012\u0002n\u0012�\u0000��&W\u0004�)��\u0006^�a�����^>�UX\f\u0001\u0004\u0010@\u0000\u0001\u0004,\"���������P��\u0016\t�0\u0010@�\"\u0002\u0014\u0000,�\u0010���\u0015\u0005\u0002��2\u0015\u00016h:ߊ�\u0011\u0013\u0002\b �\u0000\u0002\b�$�������������\u000f\u0004\u0010@`@�!��\u0015\u0010@`P�H$Rt����ё�\u001fh\b�\u0006]�\u0017\u0010@\u0000\u0001\u0004\u0010@ f\u0002��>�+��u饗Υ�\u001f�f`�\b�B�\u0011\u0000�h&�D �\u0002�m�T�6�~Er��\u000f0%�\u0011\u0011\u0001\u0002\b �\u0000\u0002�\u0017h���LG�7�ݻ���5\u0000@\u0000�!\u0005(\u0000\fI�\u0002\b p���\"���z���w�\u0010�9�5�\u0011@\u0000\u0001\u0004\u0010@�|\u0001�����yO����u[_F�O�\u001e\u0010p�\u0000\u0005\u0000�4%� \u0010]����`[[�z����1 ���\r\u0001\u0004\u0010@��\u0002���+��_����UVVFܩ@�\b 0\u0016\u0001\n\u0000c�c]\u0004\u0010��S\u0003f�Ԁ���\u001bp �\u0000\u0002\b ��9\u0002:��e]�mMM�\u001es��V\u0011@�\r\u0002\u0014\u0000����@\u0014\u0004����\u0010�+��(�] �\u0000\u0002\b �\n\u0001\u001d�/NHH������\u0015\t�$\u0002\b�*@\u0001�T^6���\u0004����P!�\u0011]#�b�eO�\b �\u0000\u0002\b���:�\u001f��\u0003�p����\"[A\u0000\u0001\u0004&L�\u0000��\u0000\u0001\u0004L\u0011\b\u0004\u0002�����B\u001b�Ȕ\u001d�Q\u0004\u0010@\u0000\u0001\u0004\u001c(0q��\u000f5��:��90=RB\u0000�\u0018\u000bP\u0000�q\u0003�{\u0004�.\u0010\f\u0006�Q!�AF\u00048���\u000f\u0001\u0004\u0010@`,\u0002�\u0011�����կ�e;��\u0000\u0002\b�N�\u0002��tx\r\u0001\u0004�M@�\u0006\\�����.\u00168�6ʆ\u0010@\u0000\u0001\u0004\u0010��@���Y����i�T�\u0000\u0001\u0004�.@\u0001��-D|\b8L 33󪮮�\u0007�V��R#\u001d\u0004\u0010@\u0000\u0001\u0004�-�������]��аe�+� \u0002\b 0F\u0001\n\u0000c\u0004du\u0004\u0010\u0018��\n\u0001K�S\u0003��`t[`-\u0004\u0010@\u0000\u0001\u0004�'�����<���H��~�\u00131\u0002\b�]�\u0002��[��\u0011���.\u0016�X�\u0007X�S\u0003\u0016�<\u0015�G\u0000\u0001\u0004\u0010@`P\u0001}ו����t��[�.�\u000b\b ���\u0002\u0014\u0000L\u0006f�\b 0<�P(���\u0007�T���\u0006�M�cc)\u0004\u0010@\u0000\u0001\u000b\u000b�h��{EW�������Y8TBC\u0000\u0001�\b�#�%\rM�\b�E��\u000b.�ikk�_\u0017\f�YGK��\u00127q\"�\u0000\u0002\b p\\@\u001d�.�oV��7���=�<�\b �@�\u0005(\u0000ĺ\u0005�?\u0002\b�R@#\u0002�5\"��\u001a\u0011�Z\u000b$�r!�D\u0000\u0001\u0004\u0010@�B\u0002���a]ۦ0%%�\u001d;v�[(4BA\u0000\u0001\u0004�\u0005(\u0000�F@\u0000\u0001K\u000b̙3'����n]0��Q�b�`\t\u000e\u0001\u0004\u0010@��\u0002��\u001f���o�:��m߾�ŕ\b$�\u0000\u0002�\u0010�\u0000`�f\"H\u0004\u0010(((��VI�T\u00040F\u0005d!�\u0000\u0002\b �@�\u0005��V�����􍥥������#�\u0000\u0002C\tL\u001aj\u0001^G\u0000\u0001\u0004� `��\n��O������n�����B\\Ā\u0000\u0002\b �>\u0001u���:5ׯ^���������w�{��\u0011��\u0000#\u0000��rč\u0000\u0002\u0013����{zz��ї\u001b5*�\u0003\t\u0002\b �\u0000\u0002f\t\f\\��9�D{���~�Y�a�\b ���\u0002\u0014\u0000��e�\b \u0010\u0015�����s��U\u0004���\u0004D��� �\u0000\u0002�\u00110��W�O&%%=��'�4�&q\u0012E\u0000\u0001G\nP\u0000pd��\u0014\u0002�\u0014Н\u0003��s����G*\u0006�u�\u0002Y#�\u0000\u0002\b������0�����窪�:�c�l\u0003\u0001\u0004\u0010��\u0000\u0005�X�\u0000�G\u0000\u0001S\u0004tz�����{�\u0003n��\u0001\\��\u0014e6�\u0000\u0002\b8K@�\u0019ǔQ���}\\��\u0012geG6\b ���\t\u0014\u0000x\u0017 ���\u0005tz@���u��\\�B�tG'Kr\b �\u0000\u0002�\u0012P��3��g}O\u0014�3���\b+!�\u0000\u00026\u0010ਘ\r\u001a�\u0010\u0011@`�\u0002���\u0011]�y�ҥK\u0003�j�����\u0019��X\u0013\u0001\u0004\u0010@�A\u0002}:��m}/,_�jU@�\u0015?����%\u0015\u0004\u00108�\u0000#\u0000N�\b �d����Y�{����{:ړ��\\�\r\u0001\u0004\u0010@�d\u0001\u001d�o�3��L��Ԟ={�}���\u0000\u0002\b8[�\u0002��ۗ�\u0010@�4\u0002\u0005\u0005\u0005�H$r��\u0000ݥB���,�K\b �\u0000\u0002�\u0017(�������_())�:d�\u0000\u0002\b�\\�\u0002���X\u0003\u0001\u0004\u001c(�;\b��\u000e\u0002w�\u0010�m�w�\u0003S$%\u0004\u0010@��\u0002-}}}ϫ�������n\u0004 g\u0004\u0010@�D\u0001\n\u0000'j0�\u0000\u0002�\u00170F\u0005�<��u�ۄq�&>']��\u0000\u0000\u0001\u0004�$�!����mu�7ꔯ�r��N�G�\b `�\u0000?l�\u0016f�\b `[������Ço��\u0003o�ȀL�&B�\b ��\u000b\u0004�Y]\u001d\u001f\u001fo����q\u0001X\u0017�L�\b ���\u0005(\u0000���\u0015\u0010@�m\u0002\u001a>:133s��\u0000+�\u0003�z=&�̀|\u0011@\u0000\u0001+\n�h�Q�����ݸo߾����b�Ą\u0000\u0002\bXE�\u0002�UZ�8\u0010@�\u0016\u0002�V�Ԯ��\u001bu\u0017��\n8�\u0016A\u0013$\u0002\b �0\u0001\r�_���>�{�\u001evXz��\u0000\u0002\b�&@\u0001�4Z6�\u0000\u0002N\u0017�)\u0002��\u0014����wt̀YNϗ�\u0010@\u0000�X\n�ӿGW�N\u0005�g���b\u0019\u000b�F\u0000\u0001\u0004�*@\u0001��-G�\b `)�@ 0OCOo���6�\"0�R�\u0011\f\u0002\b `_�z�����6\u001c\u000el�4�\u001c\u0001\u0004\u0010���$k�A\u0014\b ���\u0005\"�H�~�޻f͚\f�P5�\u001e�'M-�Ί�\u0011@\u0000��\u000bhh����1!!a�>S\u0003\r\r\r����~;�G\u0004\u0010p�\u0000#\u0000�ٮd�\u0000\u0002\u0016\u0010�������^��\u0006\u001a�\t,��@X��\u0000\u0002\bXQ�]A���x��U���U���\u0018$1!�\u0000\u0002v\u0017�\u0000`�\u0016$~\u0004\u0010����Y����\u0001�:;;��#[Wq'\u0001[4\u001bA\"���\u0002�\u0015�u��7t��K3g�,*))i3qwl\u001a\u0001\u0004\u0010@@\u0002\u0014\u0000x\u001b �\u0000\u0002Q\u0016�7o^¡C��� p�~\u0000_�b��(���\u0010@\u0000��\b�3�U;.ҩR/����QZZj\u001c��\u001f\u0002\b �@�\u0004(\u0000D\t�� �\u0000\u0002�\u0012�m\u0005����b�\n�A���4M;�r<�\u0000\u0002\b�U@��&}��bt�\u0013\u0013\u0013�\u0019�oז$n\u0004\u0010p�\u0000\u0005\u0000'�\"9 ��#\u0004֭[\u0017���O/ҐX�\u0018�u%���H\u0002\u0001\u0004�(Шϲ�\u0019���+W���Ǎ\b�\u0000\u0002\bXM�\u0002��Z�x\u0010@\u0000\u0001\t���͛7_��޾L�\u0003�� 0\u0017\u0018\u0004\u0010@��\u0002:ҿS���z�n��m�\u001c�r�Ć\u0000\u0002\b�Q�\u0002�\u001b[��\u0011@�v\u0002��@@w\u00140�$`\u0014\u0003\u0016��g�$\b\u0018\u0001\u0004�&С��o���\u0015�s�H��uZ��\u0000\u0002\b8M�\u0002��Z�|\u0010@��\u0002�E\u0004����f�U����\u001a%<��I� \u0002\bXE�^��^�T����Vyy�Q�\u0004F\u001c\b �\u0000\u0002C\u000bP\u0000\u0018ڈ%\u0010@\u0000\u0001�\n�������<\u001d}�VA.����k~�e\u0003&0\u0004\u0010�����\u001f���6\u001d�S�E�p�c[%@�\b �\u0000\u0002'\tP\u00008��?\u0010@\u0000\u0001{\u000bht��\u001a�{�~�/V&�U\f\b�;#�G\u0000�h\u000b��_�}n�T��������7�1�?\u0004\u0010@\u0000\u0001s\u0004(\u0000���V\u0011@\u0000\u0001K\b\u0004��,\u001d�[�S\u0005\u0016kt�\u0015*\b$[\"0�@\u0000\u0001�\b\fܦ�-\u0015\u000e�5���F�,\u0013\u001c� �\u0000\u0002\b��\u0000\u0005�q�dc\b ��u\u0005�;\u000blڴ颞�����~�\u0017� �n�D�\u0000\u0002f\b��ߥρ�=\u001eO��W�XQ�\u0015�͐f�\b ���\u0004(\u0000X�M�\b\u0001\u0004\u0010��@AA�_�\u000b�\b�@ŀ��!�׎�Q�9;A\u0000�h\n���x�v����ۚ��^VRR�\u0011�\u0000�\u0017\u0002\b ��5\u0004(\u0000X�\u001d�\u0002\u0001\u0004\u0010���n5�inn�XÀ\u0017�\u0018p�:\f_ѩ\u0003g�<0\u0002@\u0000�\u0011\t���a���w5m]�dɇ����#�\b\u000b#�\u0000\u0002\b8R�\u0002�#���\u0010@\u0000��\u000b,_�|�Ν;�:::.�-\u0007\u0017h��W5Z`�ط�\u0016\u0010@`<\u0005\u0006������OLL|w�ܹ\u0015/�����\u0007�B\u0000\u0001\u0004\u0010p�\u0000\u0005\u0000g�#Y �\u0000\u0002�\u000b\u0018�\u001c���>OE�|�_b<j�s4ř�sv�\u0000\u0002�\u0005z4�/u��4Z������޽{�:�}�\u0017�\u0011\u0001\u0004\u0010@\u0000��\u0004(\u0000\f&��\b �\u0000\u0002C\n趃\tMMM�4B�(\n�\u0017\u0006��9C��\u0002\b 0\\�z\r�/��\u001f��ǗM�6Mw�+?:ܕY\u000e\u0001\u0004\u0010@\u0000�\u0013\u0005(\u0000���<\u0002\b ���\u0005B�PzWWW�qQA\u0015\u0005�����hҘ7�\u0006\u0010p�@���lב���N�:�\u001fTUU�9?m2D\u0000\u0001\u0004\u0010��\u0000\u0005�hI�\u001f\u0004\u0010@��\u0002�`0KC��4R O�\u000e�f����\u0011h\u0010A��_T��_��\u0017\u0015�px?,\b �\u0000\u0002\b�)@\u0001�L]��\u0000\u0002\b 0�@ZZZ����ӝ\u0006�4Z�xQ �\u0015�n\u001aT�\u0017l(`��_��BG�+td���������\rs!d\u0004\u0010@\u0000\u0001�\u000b�#��\rH�\b ���\u0004\u0016.\\�\u0018�Dr:;;sudt�\n\u0003������A��w��\u001a�y���Z���.u�w)�J��ȑ#���?�t�\b\u0001\u0004\u0010@��\u0002���c�\u00113\u0002\b �2\u0001�\u0016�����o\u0014\u0003T\u001c�����:W�x�T�k��8H7�\u0002z\u000fj�Jo��{�\u0003��J��+%%e7\u0017�aðk\u0004\u0010@\u0000�a\tP\u0000\u0018\u0016\u0013\u000b!�\u0000\u0002\bXQ��������t���\u001d\u001d\u001d!u��'\u0015\u0007�S\tΡ8`�V�~LF'_�:\u001d��T��*c��|Uz_UM�>}_iii��� B\u0004\u0010@\u0000\u0001\u0004�(@\u0001��&<�\u0000\u0002\b �\u0000\u0001ݍ��N[vkkkh� \u0010R�n�:w!u�\u0002z.�\u0001i��(\u0005�>�Ҫ�zOT�\"|F'�S\u0015���N�Z�bR����9�M�\u001a\u0002\b �\u0000\u0002�\u0015�\u0000`٦!0\u0004\u0010@\u0000\u0001�\u0004������9]#\u00062��3������3�\t�м�w\u001a#\b�j\u0001s�k\u001c��\u001e\u001a5EԦ�j�Z�ת�#�j�޵555\u0007��q�>�!�\u0000\u0002\b �\u001a\u0001\n\u0000�ij\u0012E\u0000\u0001\u0004\u0010\u0018���5k�l�r�Q\u00100�\u0004Z�K�L�iJռQ\u001cH�c�^O�s�&\u0018\t�(��u��\u000f��ot�7\u001a��s�����k���+��/,,�\u001e�nX\r\u0001\u0004\u0010@\u0000\u0001�\nP\u0000plӒ\u0018\u0002\b �@4\u0004�᜘������S5�\u0017\u0006T0HՔ�\u000ei�\u001e�u7�$uT�4����)Y�?\u001a�Yu\u001f�8�\"J��k�S�1/?c�YN�zl���ٗ_���uuuMV͇�\u0010@\u0000\u0001\u0004\u0010��\u0000\u0005\u0000;�\u00121\"�\u0000\u0002\b8N 77�s�С����$�٠ҝ\u000e���MT�7A\u001db�@��Nq�:�~\u0015\u001a��\u0012�q������G�N6&�����8�omk�������z�����c���tL�8�}\u0019������iݮ��{���N|���qT�jW�����vm��oS~-ʭjnnn9��[*++�s���\u0000\u0002\b �\u0000\u0002Q\u0014�\u001f������ry\u0000\u0000\u0000\u0000IEND�B`�"},"relativePath":"linkedin.png"},{"fields":{"contents":"<svg width=\"26\" height=\"10\" viewBox=\"0 0 26 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url(#clip0)\">\n<path d=\"M1134.11 -679H-366.01V321.078H1134.11V-679Z\" fill=\"white\"/>\n<path d=\"M8.32609 3.73224L11.8222 3.80526H11.8276L14.4323 3.8807L14.4335 3.8813L14.4655 3.88251L19.2633 4.21081L21.7105 4.36229L22.8674 4.42687L23.4679 4.70568L23.7141 5.32427L23.451 5.96036L22.8149 6.22349L22.7648 6.22228L21.6013 6.15771L21.5995 6.1565L21.5753 6.15529L19.1305 5.94226L14.3448 5.6049L11.7636 5.44437L8.28022 5.32427L8.27901 5.32367L8.24522 5.32246L7.24341 5.24099L6.37739 5.20719L5.90907 4.99597L5.71655 4.518L5.90907 4.03942L6.3792 3.8288L7.25246 3.7944L8.2597 3.73405L8.30919 3.73224H8.32609Z\" fill=\"black\"/>\n<path d=\"M10.4552 1.08881L10.7509 1.80275L10.5252 2.43884L10.4745 2.47022L10.4552 2.51669L10.2814 2.58911L9.95368 2.79007L9.6827 2.84861L9.66581 2.85042L9.66158 2.85284L8.49622 3.0876L8.48174 3.0888L8.47812 3.09062L6.88729 3.39237L4.79737 3.89689L3.7509 4.22399L3.51071 4.37486L3.5258 4.39418L3.6296 4.47323L4.37613 4.83413L6.39665 5.81662L6.40691 5.83292L6.44674 5.84378L7.11964 6.23606L7.14318 6.2777L7.21741 6.30365L7.98989 6.9162L8.04782 7.03569L8.15826 7.09242L8.45881 7.50763L8.5439 7.76834L8.62417 7.9168L8.6471 8.08518L8.65615 8.21131L8.39423 8.84318L8.31155 8.87758L8.27896 8.94094L8.21016 8.98922L7.9917 9.05983L7.85531 9.13769L7.76056 9.15398L7.6121 9.16726L7.01222 8.91861L6.76418 8.31934L6.79073 8.27528L6.75392 8.22338L6.12266 7.65851L5.57106 7.24088L3.67607 6.11898L3.67486 6.11596L3.66883 6.11475L2.9048 5.64402L2.6646 5.49858L2.62658 5.43099L2.52821 5.38935L2.18844 5.04052L2.13594 4.91198L2.00075 4.69713L1.9567 4.50643L1.93799 4.34046L1.94402 4.2439L1.96997 4.05441L2.02731 3.94819L2.09128 3.743L2.31337 3.41771L2.44372 3.34952L2.51131 3.22157L2.99773 2.89206L3.06533 2.87094L3.08403 2.84077L4.17335 2.29037L4.24819 2.27227L4.29103 2.24028L4.69176 2.1045L4.57287 1.81361L4.82875 1.18537L5.45036 0.914394L9.04782 0.82749L9.68632 0.794298L9.74124 0.793091L10.4552 1.08881Z\" fill=\"black\"/>\n</g>\n<defs>\n<clipPath id=\"clip0\">\n<rect width=\"1500\" height=\"1000\" fill=\"white\" transform=\"translate(-366 -679)\"/>\n</clipPath>\n</defs>\n</svg>\n"},"relativePath":"handwriting/back_arrow.svg"},{"fields":{"contents":"<svg width=\"27\" height=\"12\" viewBox=\"0 0 27 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<g clip-path=\"url(#clip0)\">\n<path d=\"M1053.11 -802H-447.011V198.078H1053.11V-802Z\" fill=\"white\"/>\n<path d=\"M25.177 1.14238L25.4233 1.15807H26.7051V7.1629L26.5941 7.60043L25.693 8.28239V9.86537L25.4806 9.90641L25.299 9.96193L25.0159 10.0012L24.6611 10.0579L24.2036 10.1291L22.7293 10.5135L21.1831 10.671L20.6001 10.7646L19.6568 10.8949L18.7087 10.9191L17.3883 11.0343L15.8638 11.105H8.74616L7.4613 10.726L4.86988 10.4532L3.83548 10.4188H0.400958L0.0853271 9.97279V5.6469L0.400958 5.03616L1.47338 4.96133V2.23291L1.69184 2.01927H1.94471L2.17706 1.83218L3.3569 1.56845L5.11791 1.44594H8.305L9.09619 1.39102H13.2452L15.8137 1.27515L18.6611 1.13574H24.5874L25.177 1.14238Z\" fill=\"#FFFC00\" fill-opacity=\"0.4\"/>\n</g>\n<defs>\n<clipPath id=\"clip0\">\n<rect width=\"1500\" height=\"1000\" fill=\"white\" transform=\"translate(-447 -802)\"/>\n</clipPath>\n</defs>\n</svg>\n"},"relativePath":"handwriting/highlight.svg"},{"fields":{"contents":"import React from 'react'\n\nexport default function Reset({ className, onClick }) {\n  return (\n    <svg className={className} onClick={onClick} width=\"88\" height=\"60\" viewBox=\"0 0 88 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0)\">\n        <path d=\"M1261.08 -712H-239.008V288.058H1261.08V-712Z\" fill=\"white\"/>\n        <path d=\"M9.45502 9.86047L9.76034 10.3701L9.83934 10.7628L9.99794 11.2914L10.0086 11.3633L10.0205 11.3841L10.106 11.8248L10.1197 11.9644L10.1227 11.971L10.1506 12.856L10.2545 14.1693L10.2557 14.1854V14.1866L10.3401 15.5825L10.3407 15.6003L10.3413 15.6015L10.4458 18.3939L10.4464 18.4105V18.4111L10.5082 22.0333V22.0375L10.5474 25.0692V25.0799V25.09L10.5266 26.6659L10.5426 28.4681L10.6216 32.1646V32.1652L10.6585 33.8165L10.7238 35.5872L10.8278 37.1946V37.1958L10.9287 38.7057L11.0636 39.8426L11.2008 40.8287V40.8298L11.338 41.7393L11.4812 42.4016L11.4889 42.4729L11.4948 42.4841L11.6285 43.6834L11.6398 43.7084L11.6493 43.8705L11.6689 44.0505L11.6736 44.1325V44.1343L11.673 44.3214L11.5406 44.641L11.4788 44.7889V44.7895L11.0101 44.9831L10.5415 44.7889L10.5011 44.6903L10.4375 44.654L10.3454 44.496L10.3021 44.3374L10.2575 44.262L9.9724 42.714L9.96824 42.6647L9.96408 42.657L9.88508 41.9685L9.74133 41.0532L9.74014 41.0354L9.73836 41.033L9.60412 40.0351L9.60293 40.0208L9.60174 40.019L9.46631 38.8625L9.46572 38.85L9.46512 38.8489L9.30771 37.3276L9.30593 37.2944L9.30474 37.2914L9.20851 35.6727L9.20792 35.665L9.11526 33.8812V33.8694L9.11466 33.8688L9.0511 32.2139L9.05051 32.1931L9.00002 28.4907V28.48V28.4794L9.00121 26.6725L8.96676 25.0984V25.0811L8.962 22.0517L8.92339 18.4372L8.85568 15.6656L8.75529 14.3018L8.61036 13.0479L8.38701 12.2412L8.3787 12.1824L8.36919 12.167L8.29078 11.7625L8.13278 11.2362L8.12268 11.1691L8.1108 11.1494L8.02586 10.723L8.00745 10.5436L8.26643 9.91749L8.89251 9.65851L9.45502 9.86047Z\" fill=\"black\"/>\n        <path d=\"M17.2943 9.49522L18.5155 9.58016L18.5518 9.59798L18.8054 9.64194L19.3263 9.82726L19.5485 9.99655L19.7041 10.0571L20.3611 10.6618L20.4169 10.789L20.6438 11.0687L21.0062 11.9526L21.0537 12.1914L21.0852 12.2508L21.217 13.2956L21.2265 13.4459L21.2236 13.5326L21.1315 14.7551L21.1173 14.7842L21.0858 14.9992L20.6557 16.4302L20.5933 16.5187L20.5559 16.6618L19.732 18.1201L19.697 18.1557L19.6845 18.1955L18.1027 20.5145L18.095 20.5187L18.0908 20.5311L16.0772 23.3437L15.0181 24.9671L14.5553 25.9775L14.2601 26.9974L14.1318 27.8789L14.2114 28.4575L14.2429 28.5204L14.3076 28.5787L14.9218 28.8911L16.2429 29.2629L18.7222 29.8261L18.7448 29.8403L18.8078 29.8504L19.6477 30.1272L19.7516 30.2032L19.8877 30.243L20.5832 30.6951L20.708 30.8299L20.7828 30.862L21.8354 31.971L21.8396 31.9805L21.8479 31.9841L23.4493 33.7203L23.4677 33.7684L23.5057 33.7868L24.3819 34.8786L24.3979 34.9255L24.4514 34.9743L25.3186 36.2912L25.3388 36.3589L25.3905 36.4147L26.0457 37.7073L26.0694 37.8047L26.1116 37.8611L26.544 39.102L26.55 39.137L26.5595 39.1507L26.9147 40.3108L26.9486 40.5347L26.9616 40.5626L27.0335 41.595L27.0359 41.6461V41.6473L27.0549 42.8293V42.843L26.8214 43.4067L26.2577 43.6401L25.7564 43.4625L25.479 43.0129L25.2456 41.9454L24.8684 41.0859L24.8565 41.0313L24.8357 41.0034L24.4478 39.9068L23.9156 38.7943L23.2675 37.6027L22.4336 36.4004L21.5752 35.3627L21.5723 35.3562L21.5675 35.3532L20.0813 33.5296L19.1475 32.4313L18.7032 32.0292L18.1413 31.7548L15.7511 31.1376L15.7469 31.1346L15.738 31.1335L14.2975 30.7283L14.2073 30.6666L14.0671 30.628L13.2871 30.1587L13.2052 30.0126L13.0282 29.9247L12.7995 29.6241L12.7757 29.5522L12.7371 29.5302L12.5417 29.1952L12.4864 28.9921L12.43 28.8953L12.275 28.0476L12.2589 27.8742L12.2643 27.7744L12.3819 26.6874L12.3967 26.6589L12.4193 26.5086L12.7793 25.361L12.7983 25.3348L12.809 25.2831L13.2984 24.1243L13.3311 24.085L13.346 24.0298L14.354 22.2585L14.3783 22.2335L14.3866 22.205L16.3041 19.3063L17.7653 17.0052L18.4342 15.6407L18.8197 14.4302L18.9076 13.4554L18.8238 12.6719L18.6165 12.1498L18.2868 11.8302L18.149 11.7649L17.2711 11.7013L14.9985 12.0898L14.9753 12.0916L14.9711 12.094L11.3495 12.6464L9.93817 12.9327L9.9352 12.9339L9.93461 12.9333L9.90847 12.9386L8.96758 13.263H8.96639L8.64682 13.3806L8.31418 13.4412L7.64533 13.1638L7.36853 12.4955L7.64533 11.8267L7.67979 11.8124L7.69404 11.7815L7.96609 11.5451L8.08311 11.5012L8.22805 11.38L9.20577 10.9547L9.31091 10.9327L9.35784 10.9012L10.8648 10.4949L10.9438 10.4842L10.964 10.4723L14.5856 9.81954L14.6427 9.81479L14.6516 9.80944L17.0733 9.50175L17.2176 9.49225L17.2943 9.49522Z\" fill=\"black\"/>\n        <path d=\"M34.7814 29.7324L36.2979 29.8714L36.3282 29.8868L36.5147 29.9136L37.6724 30.2515L37.8013 30.3412L37.9765 30.3941L38.4399 30.6988L38.6412 30.9186L38.7131 30.9536L38.9299 31.2352L38.9863 31.4003L39.1057 31.5607L39.2091 31.8583L39.2744 32.2426V32.2492L39.2726 32.5664L39.2685 32.577L39.1301 33.1176L38.7624 33.7906L38.5355 34.0252L38.4933 34.1149L37.5756 34.8782L37.4788 34.9133L37.3677 35.016L35.9849 35.7288L35.9088 35.7472L35.8631 35.7829L34.2587 36.3893L34.1322 36.4131L34.0882 36.4398L32.4309 36.7903L32.3359 36.8004L32.3211 36.8081L30.9299 36.9631L30.8046 36.9703L30.7464 36.9691L29.6231 36.9085L29.6172 36.9055L29.5411 36.9002L29.4212 36.8835L29.3873 37.2417L29.4217 37.9908L29.5697 38.6709L29.7752 39.3053L30.5082 40.5503L30.902 41.0077L31.4307 41.4431L31.9231 41.7395L33.3012 42.169L34.0995 42.2788L34.921 42.3887L36.9834 42.2628L38.0597 42.0644L38.1096 42.0597L38.1179 42.0549L39.2204 41.9011L41.2685 41.2708L41.2911 41.2673L41.2988 41.2619L42.2373 40.9994L43.1235 40.6477L43.3891 40.596L43.8898 40.8034L44.0971 41.3041L43.755 41.91L42.902 42.4256L42.0615 42.9608L41.9801 42.9845L41.9171 43.0362L39.8637 43.8999L39.8322 43.9064L39.8167 43.9189L38.7042 44.3341L38.5759 44.3578L38.5313 44.3852L37.3908 44.6311L37.2804 44.6436L37.2625 44.6525L35.0202 44.9025L34.9347 44.9079L34.9299 44.9097L33.9712 44.9518L33.9094 44.953L33.6884 44.9352L32.7826 44.7843L32.7392 44.7594L32.5872 44.7344L30.9555 44.1897L30.8574 44.1173L30.7131 44.0775L29.9926 43.6522L29.8922 43.5512L29.809 43.5203L29.1295 42.9352L29.0832 42.8348L28.984 42.7885L28.4488 42.1541L28.4018 42.0264L28.2688 41.8767L27.5364 40.3549L27.5013 40.2046L27.4526 40.1315L27.2317 39.3059L27.2103 39.1437L27.196 39.1164L27.104 38.2741L27.0998 38.2004L27.0974 38.1963L27.0547 37.2696L27.0535 37.2126L27.0588 37.0974L27.174 35.9421L27.0826 35.7217L27.2471 35.2815L27.2483 35.2697L27.4223 34.4559L27.4675 34.3828L27.5055 34.2111L28.1565 32.8093L28.2634 32.6875L28.3026 32.5759L28.798 31.9569L28.8646 31.9248L28.8972 31.8482L29.4099 31.3528L29.4806 31.3243L29.5786 31.2168L30.1827 30.8141L30.2973 30.779L30.3923 30.7018L31.7865 30.1244L31.91 30.0995L31.9605 30.0668L32.719 29.8779L32.9133 29.8536L32.9347 29.8435L34.5884 29.7306L34.6727 29.7276L34.7814 29.7324ZM33.1865 32.2278L32.5985 32.346L31.4277 32.8515L30.9786 33.1615L30.5771 33.5114L30.2474 33.9332L29.8304 34.855L30.725 34.8069L32.0169 34.6846L33.5281 34.2937L35.0071 33.7431L36.1957 33.0724L36.8361 32.526L36.8759 32.4416L35.9831 32.2005L34.6781 32.0965L33.1865 32.2278Z\" fill=\"black\"/>\n        <path d=\"M51.963 29.0556L52.6473 29.1227L52.7631 29.1815L53.088 29.2754L53.3274 29.4268L53.3725 29.5088L53.4901 29.5575L53.7717 30.2382L53.5585 30.8423L53.4563 30.9689L53.265 31.0603L53.1854 31.194L51.8222 31.9293L51.3975 32.0381L50.7714 31.7791L50.611 31.3912L48.7126 31.8177L48.7114 31.8183L47.4468 32.1295L45.7575 32.6831L45.0084 33.0075L44.5712 33.3336L44.3556 33.6662L44.3354 33.744L44.3218 33.8937L44.3431 33.9923L44.3978 34.1123L44.5392 34.2774L45.2508 34.7722L46.2321 35.2183L47.4925 35.5896L49.7355 36.0024L51.4943 36.1723L53.7361 36.3606L53.7551 36.3695L53.8881 36.3861L54.8379 36.6261L54.9252 36.6837L55.0755 36.7235L55.4183 36.9213L55.4492 36.9748L55.5442 37.0086L55.7848 37.2064L55.824 37.2908L56.0455 37.5373L56.1726 37.7981L56.2701 38.2139L56.2766 38.2287L56.2843 38.8477V38.8607L56.2196 39.2142L55.9267 39.987L55.8008 40.1467L55.7509 40.284L55.0619 41.109L54.9912 41.1423L54.9585 41.2171L53.5389 42.4984L53.4521 42.5317L53.4206 42.5917L52.3758 43.3033L52.2766 43.3342L52.1917 43.4054L51.2009 43.8408L51.0648 43.8693L51.0072 43.9062L50.1109 44.1212L49.8418 44.1539H49.8311L49.0161 44.1461L49.0096 44.1432L48.6799 44.0915L48.0432 43.8872L47.5299 43.5147L47.4931 43.4969L47.3316 43.2854L47.1599 43.0781L47.1041 42.9237L46.9823 42.755L46.832 42.2899L46.8219 42.2287L46.8106 42.2091L46.7233 41.801L46.7079 41.6555L46.9063 41.1761L47.385 40.9778L47.9511 41.2825L48.0628 41.4524L48.32 41.5688L48.3384 41.5848L48.3651 41.5914L48.4827 41.6531L48.6134 41.6769L48.6514 41.6989L48.7744 41.7197L49.243 41.8812L49.7521 41.9038L50.4031 41.7701L51.208 41.3995L52.1441 40.8013L53.4747 39.6484L54.0669 38.9778L54.2873 38.597L54.2861 38.4871L54.2326 38.4568L53.4842 38.2691L51.3048 38.047V38.0464L49.5038 37.8604L49.4955 37.8569L49.4432 37.8521L47.1017 37.4452L47.0779 37.4316L46.993 37.4185L45.6196 36.9991L45.581 36.9718L45.5074 36.9558L44.3865 36.439L44.3295 36.3891L44.2635 36.3689L43.3684 35.7696L43.3226 35.6828L43.2092 35.6341L42.8849 35.289L42.8356 35.1649L42.7578 35.1203L42.5701 34.8037L42.5136 34.6L42.4507 34.4948L42.3818 34.1545L42.361 33.9549L42.3616 33.9299L42.3711 33.5468L42.3764 33.5343L42.4115 33.2932L42.5047 32.9778L42.5362 32.9332L42.5552 32.8471L42.8712 32.1705L43.0203 32.0018L43.0637 31.8949L43.663 31.2777L43.7503 31.2409L43.8947 31.096L44.7512 30.5917L44.9045 30.5495L45.0025 30.48L46.7857 29.9282L46.832 29.921L46.8474 29.9103L48.156 29.5747L48.2154 29.567L48.2315 29.5575L50.3984 29.137L50.5493 29.1221L50.5611 29.1168L51.8008 29.052L51.8584 29.0502L51.963 29.0556Z\" fill=\"black\"/>\n        <path d=\"M65.8847 29.6326L66.5393 29.9053L66.8274 30.1435L66.9206 30.1863L67.084 30.3793L67.1749 30.6276L67.3103 30.8646L67.3923 31.3446L67.4077 31.518L67.3626 31.815L67.176 32.4114L67.144 32.4559L67.1256 32.5379L66.8196 33.1699L66.683 33.322L66.6432 33.4212L65.7629 34.3365L65.6893 34.368L65.659 34.4298L64.6123 35.2376L64.5155 35.2709L64.4864 35.3196L62.4068 36.4399H62.4062L61.9441 36.6923L61.9197 36.6983L61.9138 36.7078L61.5913 36.8664L61.5479 36.8771L61.539 36.8895L61.3673 36.9585L61.2527 36.9804L61.2182 37L61.0299 37.0315L61.0097 37.0333L60.7793 37.1283L60.6254 37.1153L60.4977 37.0927L60.0017 36.8046L59.8437 37.6897L59.7926 39.0452L59.9869 40.1571L60.1496 40.5914L60.332 40.9305L60.5423 41.2032L60.828 41.461L61.0175 41.5839L61.814 41.837L62.8779 41.9142L62.9016 41.9255L63.0905 41.9504L63.4855 42.0556L64.5488 41.8946L65.2865 41.679L65.3489 41.6695L65.3673 41.6588L65.909 41.5459L67.5669 40.8521L67.6821 40.829L67.7249 40.8028L68.0783 40.7292L68.6337 40.4518L69.0739 40.1756L69.3946 40.0823L69.8176 40.2575L69.9928 40.6805L69.8122 41.1087L69.4142 41.4972L69.3554 41.521L69.3329 41.5649L68.7632 41.9641L68.468 42.2385L68.3759 42.2748L68.2452 42.3876L66.5464 43.164L66.0106 43.4437L65.8978 43.4717L65.8348 43.5156L65.0353 43.7532L64.945 43.7663L64.9212 43.7799L63.6833 43.9968L63.1986 44.1744L62.7894 44.248L62.6777 44.2427L61.4784 44.1274L61.4344 44.1055L61.204 44.0657L60.1366 43.6837L60.0237 43.597L59.8883 43.5554L59.498 43.2893L59.463 43.2228L59.3691 43.1859L58.9468 42.7927L58.9082 42.7048L58.8309 42.6668L58.4989 42.2462L58.468 42.1589L58.3819 42.0663L58.1288 41.5804L58.1033 41.4782L58.0587 41.4182L57.8538 40.8177L57.8188 40.6086L57.798 40.5682L57.656 39.2358L57.6495 39.1176L57.6519 39.0487L57.7516 37.5049L57.7594 37.4889L57.7766 37.3386L58.1591 35.692L58.1847 35.6522L58.2037 35.5536L58.8131 34.0277L58.8696 33.9576L58.8957 33.8679L59.7712 32.4916L59.8407 32.4541L59.8817 32.3502L60.9919 31.1563L61.1077 31.1064L61.1553 31.0143L61.7683 30.5825L61.8586 30.5533L61.9399 30.4839L63.2652 29.8803L63.3501 29.8613L63.3929 29.8316L64.0302 29.6338L64.3082 29.5911L64.3225 29.5845L65.4529 29.5531L65.4831 29.5525L65.8847 29.6326ZM64.4882 31.7027L64.0225 31.7948L62.9076 32.33L62.4383 32.6733L61.4077 33.6814L60.6379 34.8694L60.4122 35.4384L60.6569 35.3368L60.8107 35.3505L60.9385 35.3725L61.1683 35.5061L61.542 35.1871L61.5847 35.1711L61.5996 35.142L63.4962 33.8085L64.3949 33.0184L65.1024 32.1518L65.3418 31.7532L65.3626 31.6606L65.3352 31.6511L64.4882 31.7027Z\" fill=\"black\"/>\n        <path d=\"M76.3445 10.0542L76.398 10.1255L76.4574 10.1499L76.5072 10.2698L76.6664 10.4807L76.7757 10.789L76.8256 11.0717L76.8316 11.086L76.8541 12.0132L76.8547 12.0382L76.8494 12.1368L76.7365 13.2487L76.6468 15.6913V15.6919L76.6462 15.6942L76.5684 17.5814L76.5173 21.4935L76.4508 26.7949V26.7955L76.4502 26.8222L76.1978 32.5395L76.1449 34.5003L76.0855 38.9939L76.1847 41.0961L76.1853 41.1228V41.1234L76.1996 41.8772L76.2215 42.802V42.8109L76.2251 43.0272L76.2548 43.2315L76.2643 43.3651L75.9976 44.0084L75.3543 44.2752L74.752 44.0471L74.7377 44.0197L74.711 44.0084L74.6367 43.8297L74.452 43.4798L74.4181 43.2178L74.4134 43.1365L74.411 43.1323L74.4009 42.8602L74.4003 42.8252V42.8175L74.4086 41.8879V41.8796L74.4223 41.1222L74.4229 41.1216L74.4235 41.0978L74.5227 38.9874L74.5352 34.4813V34.47L74.5684 32.4955V32.4926L74.6902 26.767L74.7674 21.4792L74.7306 17.5648L74.7098 15.6651V15.6539L74.7122 15.5879L74.8791 13.1395L74.9064 12.0132L74.907 12.012L74.9076 11.9841L74.9272 11.6283L74.714 11.5404L74.455 10.9143L74.7835 10.2265L74.9326 10.1053L75.3056 9.97284L75.447 9.90809L75.7832 9.89087L75.8301 9.88968L76.3445 10.0542Z\" fill=\"black\"/>\n        <path d=\"M82.7463 25.6412L83.5612 25.7535L83.639 25.7956L83.8707 25.8503L84.2051 26.016L84.3542 26.152L84.4439 26.1895L84.4736 26.2613L84.5752 26.354L84.7171 26.8488L84.4439 27.5087L84.359 27.5438L84.3257 27.6091L84.1707 27.719L83.6545 27.8853L83.4109 27.7844L82.7136 27.8313L80.7795 28.1188L76.7106 28.8821L76.669 28.8862L76.6613 28.8904L74.1677 29.2711L73.9735 29.2866L73.838 29.2789L72.9494 29.182L72.0174 29.2967H72.0162L70.9625 29.4345L70.8253 29.4434L70.7011 29.4363L69.8077 29.3264L69.1027 29.3228L68.4202 29.3626L67.2571 29.4571L67.1947 29.4594H67.168L66.7516 29.444L66.2984 29.2414L66.1119 28.7793L66.574 28.1461L66.9643 28.0208L67.0961 28L67.1193 27.9881L68.2889 27.8675L68.3055 27.8669L68.3067 27.8657L69.0005 27.8081L69.6842 27.7154L70.5164 27.4571L70.71 27.4274L70.7385 27.4131L71.7893 27.3234L72.6976 27.2105L73.5119 26.8916L73.7192 26.8518L73.7786 26.8185L76.2699 26.4235L76.2758 26.4229L76.2764 26.4223L80.3916 25.7665L80.5057 25.7576L80.5146 25.7529L82.5265 25.6329L82.5954 25.6311L82.7463 25.6412Z\" fill=\"black\"/>\n        <path className=\"underline\" d=\"M64.0097 48.0846L64.8603 48.1398L64.8692 48.144L64.9524 48.1529L65.6485 48.2954L65.6836 48.3168L65.7733 48.3358L66.258 48.5455L66.2799 48.58L66.3661 48.6067L67.1181 49.1342L67.3705 49.623L67.1953 50.046L66.7724 50.2212L66.4682 50.138L65.737 49.7056L65.3717 49.5844L64.77 49.5215L63.9509 49.5054L62.9001 49.4912L59.8493 49.6878L57.7626 49.8642H57.7596L55.1187 50.0875L52.2978 50.3804L49.4751 50.7611L49.4145 50.7653L49.4086 50.7683L46.0703 51.0344L46.0626 51.035H46.062L39.25 51.5535H39.2423V51.5541L35.7905 51.8048L35.7002 51.8084L35.6996 51.809L32.653 51.8303L32.6429 51.8309L32.6299 51.8303L29.7626 51.8018V51.8012H29.7383L27.1223 51.7222L27.1217 51.7216L27.1015 51.721L22.6786 51.5054L22.6762 51.5042L22.6388 51.5025L18.593 51.1579L18.5853 51.1544L18.5229 51.149L15.6367 50.7041L14.9714 50.6406L14.4053 50.3554L14.1749 49.7597L14.4338 49.1336L15.0599 48.8746L15.0855 48.8752L15.7763 48.8948L18.7172 48.9625L18.7178 48.9631L18.7415 48.9637L22.7801 49.1514L27.1811 49.2518L29.7751 49.2738L32.6198 49.2447L35.6539 49.1663L35.6872 49.1657L39.1211 49.1579L45.9022 48.7861L49.225 48.5212L49.2927 48.5182L49.2945 48.5176L52.1523 48.4558L54.9939 48.3198H54.9975L57.6491 48.198H57.6622V48.1974L59.7661 48.1303L59.7846 48.1297L62.8745 48.0982L63.9527 48.0834L63.9634 48.0828L64.0097 48.0846Z\" fill=\"black\"/>\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width=\"1500\" height=\"1000\" fill=\"white\" transform=\"translate(-239 -712)\"/>\n        </clipPath>\n      </defs>\n    </svg>\n  )\n}\n"},"relativePath":"handwriting/reset.jsx"},{"fields":{"contents":"import React from 'react'\n\nconst BinarySearch = () => (\n  <svg className=\"sketch binary-search\"\n width=\"452.000000pt\" height=\"480.000000pt\" viewBox=\"0 0 452.000000 480.000000\"\n preserveAspectRatio=\"xMidYMid meet\">\n\n    <g transform=\"translate(0.000000,480.000000) scale(0.100000,-0.100000)\"\n    fill=\"#000000\" stroke=\"none\">\n    <path d=\"M3477 3794 c-4 -4 -7 -60 -7 -123 l0 -116 -137 2 c-76 2 -143 5 -150\n    7 -28 11 -444 -26 -586 -51 -116 -21 -246 -13 -284 17 -33 26 -73 26 -108 -2\n    -32 -25 -2 -25 -722 -13 -363 6 -423 5 -423 -8 0 -19 123 -27 440 -28 135 0\n    283 -4 330 -9 47 -5 142 -13 212 -16 l126 -7 6 -28 c8 -43 42 -72 74 -64 43\n    10 73 34 88 71 l14 34 108 0 c59 1 127 5 152 10 96 20 383 42 549 42 96 0 197\n    3 224 8 87 13 87 13 87 -111 0 -96 8 -134 26 -116 8 8 5 490 -4 499 -5 5 -11\n    5 -15 2z\"/>\n    <path d=\"M1014 3713 c-7 -38 19 -390 30 -400 17 -18 23 21 16 102 -5 50 -9\n    135 -9 190 -1 104 -7 145 -22 145 -4 0 -11 -17 -15 -37z\"/>\n    <path d=\"M1004 2628 c4 -139 10 -256 12 -260 16 -25 24 16 24 112 l0 109 254\n    3 254 3 21 -23 c28 -31 91 -28 106 5 12 29 40 33 280 37 105 3 223 10 263 17\n    40 6 76 9 80 5 4 -4 9 -44 12 -89 6 -89 24 -114 36 -50 7 39 -12 362 -22 372\n    -3 3 -12 -3 -21 -14 -12 -16 -13 -37 -8 -101 l6 -81 -163 -11 c-90 -7 -179\n    -11 -198 -11 -19 1 -87 -3 -150 -7 -111 -9 -115 -8 -137 14 -35 35 -100 25\n    -115 -18 -4 -13 -33 -14 -290 -12 l-218 2 0 48 c0 89 -13 202 -23 202 -7 0 -8\n    -86 -3 -252z\"/>\n    <path d=\"M2288 2073 c-2 -4 -1 -98 2 -207 4 -147 8 -200 18 -204 19 -6 17 391\n    -2 407 -8 7 -16 8 -18 4z\"/>\n    <path d=\"M1591 2041 c-26 -48 -22 -366 4 -366 12 0 26 366 14 379 -4 4 -12 -1\n    -18 -13z\"/>\n    <path d=\"M1904 1883 c-14 -15 -39 -18 -143 -21 -69 -1 -130 -7 -135 -12 -17\n    -17 18 -21 148 -18 69 2 126 0 126 -4 0 -17 34 -38 61 -38 22 0 32 6 39 25 9\n    25 11 25 129 25 66 0 122 4 125 9 3 4 -52 11 -122 15 -83 5 -135 12 -149 22\n    -30 19 -58 18 -79 -3z\"/>\n    <path d=\"M1926 1329 c-3 -17 -6 -61 -6 -97 l0 -65 -47 8 c-58 10 -95 9 -198\n    -4 -44 -5 -82 -7 -85 -5 -3 3 -7 44 -9 90 -2 64 -6 84 -17 84 -11 0 -14 -23\n    -13 -117 1 -164 9 -217 33 -221 18 -4 19 1 13 62 -6 63 -5 66 16 66 12 0 46 3\n    75 6 44 6 52 4 52 -9 0 -29 38 -41 82 -26 30 10 37 16 32 31 -5 15 0 18 35 18\n    38 0 41 -2 41 -27 1 -45 25 -126 39 -131 11 -4 13 8 7 59 -3 35 -9 119 -13\n    187 -4 86 -9 122 -18 122 -7 0 -15 -14 -19 -31z\"/>\n    </g>\n  </svg>\n)\n\nexport default BinarySearch"},"relativePath":"sketches/binary_search.jsx"},{"fields":{"contents":"import React from \"react\";\n\nconst Img = () => {\n  return (\n    <svg className=\"sketch compiler\" version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"559.000000pt\" height=\"482.000000pt\" viewBox=\"0 0 559.000000 482.000000\"\n    preserveAspectRatio=\"xMidYMid meet\">\n\n    <g transform=\"translate(0.000000,482.000000) scale(0.100000,-0.100000)\"\n    fill=\"#000000\" stroke=\"none\">\n    <path d=\"M1145 3808 c-61 -35 -165 -244 -132 -265 11 -7 36 22 76 92 15 28 45\n    72 65 98 48 62 42 104 -9 75z\"/>\n    <path d=\"M1855 3799 c-132 -65 -196 -220 -175 -419 10 -96 23 -139 57 -192 87\n    -131 283 -136 416 -9 88 82 115 201 70 301 -22 50 -98 150 -114 150 -23 0 -19\n    -32 10 -72 43 -61 74 -153 66 -197 -26 -139 -188 -255 -309 -221 -78 22 -129\n    88 -161 210 -39 149 34 339 150 391 91 42 150 12 170 -87 8 -39 16 -59 26 -59\n    21 0 25 115 4 155 -35 67 -129 89 -210 49z\"/>\n    <path d=\"M2669 3766 c-50 -30 -199 -156 -199 -167 0 -5 6 -12 14 -15 15 -6\n    144 72 188 113 l26 25 -10 -43 c-13 -51 -17 -460 -5 -535 l7 -52 -124 -3\n    c-124 -4 -164 -15 -140 -39 35 -35 360 -36 534 -1 52 11 97 18 101 15 4 -2 12\n    2 18 10 8 10 8 16 -4 26 -11 9 -48 9 -175 0 -89 -7 -164 -9 -168 -6 -13 13 -4\n    421 12 523 20 127 20 143 1 143 -8 0 -15 4 -15 9 0 19 -28 18 -61 -3z\"/>\n    <path d=\"M1171 3736 c-26 -31 -25 -170 3 -336 34 -200 34 -200 51 -200 18 0\n    19 42 5 210 -5 63 -12 159 -15 212 -7 105 -21 142 -44 114z\"/>\n    <path d=\"M3333 3658 c-80 -128 -106 -179 -95 -190 15 -15 25 -6 86 82 31 44\n    57 80 59 80 1 0 3 -75 4 -168 3 -182 18 -287 43 -287 11 0 15 10 14 35 -1 19\n    -5 138 -9 263 l-8 229 -24 9 c-13 5 -26 9 -28 9 -2 0 -21 -28 -42 -62z\"/>\n    <path d=\"M3965 3700 c-117 -27 -202 -147 -212 -300 -8 -118 21 -205 91 -270\n    22 -20 40 -25 96 -28 58 -4 77 0 125 22 72 33 174 130 210 201 37 75 33 156\n    -11 212 -16 21 -35 50 -42 66 -27 63 -170 117 -257 97z m132 -66 c52 -22 104\n    -84 106 -126 1 -22 7 -33 17 -33 61 0 29 -124 -55 -214 -56 -60 -111 -94 -181\n    -111 -48 -12 -54 -12 -95 11 -124 69 -137 308 -23 423 64 64 153 83 231 50z\"/>\n    <path d=\"M1157 3180 c-107 -7 -125 -16 -108 -49 10 -18 21 -21 74 -21 34 0\n    125 7 202 15 77 8 148 15 158 15 10 0 17 8 17 19 0 29 -120 36 -343 21z\"/>\n    <path d=\"M3435 3101 c-78 -22 -145 -61 -145 -83 0 -24 23 -23 127 7 53 16 127\n    28 186 32 80 5 97 9 95 21 -8 40 -158 53 -263 23z\"/>\n    <path d=\"M3424 2687 c-106 -73 -146 -109 -135 -120 6 -6 40 8 99 42 49 28 93\n    51 97 51 4 0 4 -33 1 -72 -6 -65 1 -172 20 -309 l6 -45 -86 -23 c-69 -18 -86\n    -27 -84 -40 5 -22 74 -18 238 14 72 14 148 25 169 25 47 0 60 14 29 31 -23 13\n    -156 15 -209 4 l-26 -6 -7 214 c-7 225 -13 271 -37 274 -8 1 -41 -17 -75 -40z\"/>\n    <path d=\"M4074 2691 c-68 -41 -121 -152 -136 -283 -15 -129 0 -198 53 -252 38\n    -38 41 -39 93 -33 103 10 217 90 270 188 41 74 35 144 -24 267 -40 85 -47 94\n    -88 112 -57 25 -127 26 -168 1z m130 -45 c43 -18 81 -69 97 -129 6 -27 18 -51\n    25 -54 21 -8 17 -52 -10 -108 -38 -83 -150 -167 -240 -182 -29 -4 -39 -1 -59\n    21 -33 35 -51 111 -42 178 17 134 57 215 130 262 45 30 54 31 99 12z\"/>\n    <path d=\"M1930 2644 c-77 -58 -178 -180 -162 -196 8 -8 33 10 92 65 45 43 85\n    77 90 77 4 0 10 -78 14 -172 4 -95 9 -194 12 -220 l6 -48 -74 -1 c-101 -2\n    -133 -10 -133 -33 0 -26 36 -36 170 -43 77 -4 142 -1 218 11 59 9 124 16 143\n    16 31 0 35 3 32 23 -3 22 -6 22 -162 25 l-159 3 6 127 c3 70 2 181 -2 247 -6\n    77 -5 124 1 132 12 14 2 33 -17 33 -7 0 -41 -21 -75 -46z\"/>\n    <path d=\"M1255 2658 c-138 -50 -225 -215 -198 -373 19 -113 76 -165 180 -165\n    99 0 197 70 250 179 25 51 28 66 28 161 -1 106 -13 156 -38 147 -7 -2 -11 -15\n    -9 -28 8 -74 5 -160 -6 -200 -18 -59 -75 -135 -132 -173 -62 -42 -136 -43\n    -178 -3 -51 49 -65 139 -36 236 26 90 120 171 197 171 42 0 57 -15 57 -58 0\n    -26 4 -33 18 -30 28 5 29 79 0 112 -27 31 -85 42 -133 24z\"/>\n    <path d=\"M2879 2657 c-82 -23 -163 -99 -207 -196 -34 -73 -38 -188 -8 -238 73\n    -120 301 -86 408 61 23 32 28 49 28 96 0 55 -20 103 -36 87 -5 -5 -9 -35 -9\n    -67 0 -50 -4 -64 -30 -97 -39 -48 -147 -104 -215 -111 -47 -4 -52 -3 -90 36\n    -38 37 -40 43 -40 99 0 43 7 73 26 110 56 114 199 193 275 153 22 -12 49 -61\n    49 -90 0 -13 7 -20 20 -20 17 0 20 7 20 41 0 109 -80 166 -191 136z\"/>\n    <path d=\"M1141 1673 c-74 -78 -145 -213 -112 -213 5 0 20 19 34 43 24 39 123\n    147 136 147 3 0 6 -44 7 -98 1 -86 37 -342 51 -366 13 -20 33 31 33 83 0 87\n    -29 351 -44 401 -19 65 -45 66 -105 3z\"/>\n    <path d=\"M4083 1553 c-62 -62 -113 -118 -113 -123 0 -20 29 -9 96 39 79 55\n    141 119 150 155 6 25 -1 47 -14 44 -4 0 -58 -52 -119 -115z\"/>\n    <path d=\"M2713 1608 c-47 -45 -119 -149 -139 -202 -12 -31 24 -16 45 18 20 32\n    129 132 135 125 2 -2 8 -40 15 -84 7 -44 21 -122 32 -172 10 -51 19 -95 19\n    -97 0 -2 -32 -10 -70 -17 -78 -14 -106 -28 -97 -51 11 -30 65 -28 250 8 139\n    27 202 35 267 32 69 -2 85 0 88 13 9 47 -132 63 -298 34 -47 -8 -88 -15 -91\n    -15 -3 0 -9 35 -13 78 -4 42 -16 130 -28 195 -16 94 -18 124 -9 143 29 65 -34\n    60 -106 -8z\"/>\n    <path d=\"M4238 1633 c-8 -19 -13 -111 -16 -275 l-4 -247 -76 -25 c-89 -30\n    -102 -31 -102 -11 0 8 -9 15 -20 15 -26 0 -27 -40 -2 -63 24 -22 81 -22 173 2\n    118 30 157 33 254 16 127 -22 139 -23 143 -4 2 11 -16 25 -60 45 -56 25 -74\n    29 -163 29 l-100 0 1 144 c1 79 3 200 5 269 3 94 1 126 -8 129 -7 3 -18 -8\n    -25 -24z\"/>\n    <path d=\"M1930 1576 c-56 -15 -113 -49 -132 -79 -8 -12 -25 -48 -36 -80 -68\n    -183 27 -322 197 -288 163 33 281 144 281 265 0 52 -46 185 -67 193 -27 10\n    -26 -8 1 -87 33 -93 30 -138 -14 -198 -75 -104 -245 -162 -327 -113 -39 24\n    -53 80 -41 159 13 83 36 123 88 149 85 44 158 40 235 -13 26 -17 41 -22 48\n    -15 18 18 -14 61 -63 86 -59 29 -114 36 -170 21z\"/>\n    <path d=\"M3534 1576 c-86 -38 -144 -127 -144 -222 0 -95 67 -203 136 -220 42\n    -11 103 3 152 33 55 34 117 118 125 169 7 40 -10 91 -36 113 -10 7 -17 24 -17\n    37 0 39 -21 72 -55 89 -40 18 -119 19 -161 1z m146 -49 c15 -8 25 -21 25 -34\n    0 -12 10 -32 23 -46 33 -35 42 -77 25 -117 -47 -113 -165 -182 -242 -140 -30\n    15 -70 90 -77 142 -15 109 70 207 181 207 22 1 51 -5 65 -12z\"/>\n    <path d=\"M1275 1138 c-38 -5 -96 -6 -127 -3 -56 4 -58 4 -58 -19 0 -55 68 -67\n    200 -37 87 21 182 29 224 20 35 -7 29 21 -8 36 -39 16 -121 18 -231 3z\"/>\n    </g>\n    </svg>\n  )\n}\n\nexport default Img\n"},"relativePath":"sketches/compiler.jsx"},{"fields":{"contents":"import React from 'react'\n\nconst ConnectedComponentsSketch = () => (\n  <svg className=\"sketch connected-components\" width=\"99\" height=\"98\" viewBox=\"0 0 99 98\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0)\">\n      <path d=\"M528.055 -442H-972V558.037H528.055V-442Z\" fill=\"white\"/>\n      <path d=\"M15.5801 68.5838L15.8718 68.5272L15.9888 68.5292L17.346 68.5729L18.6487 68.8764L18.6665 68.8893L18.6814 68.8923L19.8293 69.4241L19.9781 69.555L20.6854 70.0064L21.3551 70.6344L21.7936 70.7892L22.4742 71.3408L22.8571 71.824L23.1191 72.076L23.7738 73.1425L23.9167 73.6425L24.1151 73.9481L24.4395 75.2477L24.5288 75.9581L24.511 76.2765L24.3463 77.7448L24.3036 77.8262L24.2421 78.2419L23.7619 79.8104L23.505 80.1715L23.3671 80.6041L22.4901 81.8462L22.0198 82.2569L21.6954 82.6031L20.5039 83.368L19.858 83.5585L18.9086 84.2123L17.7756 84.5665L17.7587 84.5784L17.6744 84.6022L17.3788 84.7401L17.1446 84.754L16.4948 84.9395L15.6724 85.0566L15.2725 85.0288L13.9312 84.8453L13.6266 84.6796L12.8687 84.4742L11.6613 83.7708L11.4103 83.5179L10.8845 83.1051L10.7099 82.8928L9.78424 82.2301L8.74055 81.0237L8.70285 80.984L8.69888 80.9761L8.6969 80.9731L8.6959 80.9711L8.04013 79.7241L8.02822 79.6794L7.99052 79.6278L7.63138 78.3282L7.47066 76.3489L7.45776 76.0473L7.55995 75.1981L7.92008 73.7179L8.20978 73.2714L8.40621 72.6147L9.2743 71.2962L9.7257 70.8825L10.1781 70.3646L11.4361 69.4697L12.2288 69.2157L12.7754 68.8864L14.2189 68.5927L14.9313 68.5193L15.5801 68.5838Z\" fill=\"#02A556\"/>\n      <path d=\"M78.9544 5.88525L79.1389 5.8922L79.9435 5.94875L80.004 5.97851L80.4743 6.04597L81.6132 6.3813L81.7958 6.50928L82.0259 6.5698L82.8087 7.09066L83.1976 7.25336L83.8802 7.94485L83.8951 7.95081L84.4129 8.4032L84.5201 8.63932L85.0191 9.20284L85.4229 10.0461L85.6034 10.8279L85.6689 10.9658L85.6749 11.0511L85.8435 11.186L86.6223 12.1543L86.6987 12.4827L86.8088 12.6464L87.0083 13.3627L87.1204 14.1683L86.8485 15.4025L86.29 16.6089L86.2602 16.6436L86.2473 16.6972L85.3435 17.7637L84.2334 18.5871L83.7591 18.7449L83.3305 19.0564L82.6658 19.2736L82.1896 19.732L81.8295 19.8768L81.268 20.3203L80.5546 20.5991L79.5248 20.7955L79.3502 20.7896L78.3095 20.7251L78.0288 20.5931L76.9454 20.2717L75.9394 19.6179L75.6477 19.3024L75.2261 18.9512L74.4106 17.8768L73.9155 17.3926L73.8798 17.2646L73.7955 17.1704L73.3788 16.3311L73.3718 16.3013L72.9075 15.5215L72.6397 14.5572L72.4909 14.2596L72.3411 12.7198L72.3262 12.4202L72.4442 11.5928L72.7458 10.5511L73.1913 9.9102L73.3966 9.41019L73.4264 9.37447L73.4294 9.36752L73.4522 9.34272L73.6457 9.10759L73.7439 8.82485L74.0256 8.64528L74.3064 8.30399L74.4513 8.25935L74.5763 8.08871L74.9285 7.79009L75.2062 7.47361L76.2797 6.71564L76.7212 6.57476L77.0763 6.32773L78.1994 5.99637L78.9544 5.88525Z\" fill=\"#02A556\"/>\n      <path d=\"M83.0056 13.5334L83.5156 14.3846L83.6178 14.8935L83.6475 15.1931L83.215 16.2378L82.1703 16.6714L81.2298 16.3341L81.1881 16.2646L81.1246 16.2378L81.0165 15.9779L80.7198 15.4828L80.6186 14.9739L80.5879 14.6743L81.0204 13.6286L82.0661 13.196L83.0056 13.5334Z\" fill=\"#02A556\"/>\n      <path d=\"M79.048 5.6573L80.4717 5.74461L80.5421 5.77735L81.1275 5.87061L82.5333 6.32995L82.5948 6.37459L82.9688 6.45297L83.6395 6.86271L84.0353 7.02243L84.6673 7.63555L84.7933 7.93417L85.2239 8.5215L85.2278 8.5334L85.4977 8.5582L85.835 8.72785L86.2408 8.87965L86.2785 8.95008L86.3469 8.98481L86.4759 9.31716L86.6803 9.69714L86.7904 10.4948L86.8033 10.6853L86.7973 10.8202L86.6902 11.8758L86.7983 12.3143L86.7884 12.5464L86.6922 13.6784L86.5791 13.9086L86.3469 14.8213L85.3122 16.7222L85.1256 16.9166L84.7754 17.4335L83.4738 18.7312L83.0829 18.9941L82.9093 19.2253L82.2624 19.7888L81.8289 19.9525L81.2922 20.3483L81.2019 20.3781L81.0312 20.5527L80.0372 21.1559L79.177 21.398L78.9369 21.516L77.9131 21.6004L77.6938 21.6093L76.9894 21.5101L76.2959 21.3107L75.784 20.9565L75.3445 20.7958L74.4993 20.0755L74.1361 19.5993L73.9318 19.3959L73.2075 18.1488L73.1311 17.8681L72.8167 17.627L72.2045 16.9028L71.5071 15.0029L71.5081 14.9662L71.5239 13.6993L71.5349 13.6725L71.7045 12.7369L72.1033 11.6714L72.3861 11.3103L72.4724 11.1635L72.5468 10.9591L72.6946 10.4799L72.7432 10.4085L72.895 9.87869L73.2145 9.41637L73.3831 8.91734L74.2254 7.81016L74.7016 7.41431L74.9854 7.11668L76.1412 6.38749L76.6729 6.23272L77.0023 6.0224L78.2196 5.73171L78.8794 5.65234L79.048 5.6573Z\" fill=\"#02A556\"/>\n      <g className=\"animate\">\n        <path d=\"M66.7557 27.8418L66.7974 27.8964L66.9402 28.3061L66.8966 28.5432L66.843 28.6841L66.84 28.6861L66.839 28.694L66.7349 28.948L66.6833 28.9827L66.6376 29.1077L66.4422 29.3419L65.9948 29.5502L65.6902 29.2456L64.7755 29.8508L63.8439 30.5473L61.0283 32.8102L59.1006 34.4641H59.0997V34.4651L54.6025 38.3243L51.9387 40.6399L51.9347 40.6419L51.9327 40.6459L49.3136 42.885L46.9187 44.9536L44.2777 47.2592L44.2697 47.2622L44.2668 47.2691L41.4542 49.6551H41.4532V49.6561L38.8489 51.8685L36.8994 53.562L36.8905 53.566L36.8865 53.5729L34.8329 55.3061L29.7643 59.7408L27.5062 61.8183L25.8097 63.5237L23.6261 65.7579L23.5527 65.9781L23.2779 66.3512L23.0646 66.4573L22.9753 66.6002L22.8463 66.6627L22.6479 66.8393L22.4336 67.119L22.0913 67.2867L22.011 67.3889L21.9961 67.3919L21.8265 67.4117L21.2957 67.1915L21.0754 66.6607L21.1072 66.4434L21.1717 66.2301L21.2233 66.1924L21.2828 66.0069L21.7233 65.3918L21.756 65.3749L21.7739 65.3293L24.4764 62.2766L24.4922 62.2697L24.4992 62.2518L26.1778 60.4938L26.1967 60.4859L26.2056 60.466L28.4398 58.3161L28.4656 58.3052L28.4755 58.2834L33.567 53.8448L33.5719 53.8428L33.5729 53.8398L35.6147 52.0828L35.6276 52.0778L35.6325 52.0679L37.6296 50.421L40.2448 48.2275L40.2468 48.2265L40.2478 48.2255L43.0763 45.8583L43.0832 45.8554L43.0852 45.8504L45.7996 43.6291L48.2253 41.6022L50.8623 39.3849L53.5538 37.1001L53.5578 37.0991L53.5588 37.0971L58.0957 33.2845H58.0966L58.0976 33.2835L60.0531 31.6425L60.0689 31.6366L60.0749 31.6257L62.9411 29.3885L62.9569 29.3825L62.9619 29.3726L63.9262 28.6682L63.9639 28.6563L63.9748 28.6355L65.1544 27.9073L65.1931 27.8964L65.2031 27.8795L65.5582 27.696L65.7894 27.6384L65.8072 27.6186L66.1247 27.5809L66.209 27.5759L66.7557 27.8418Z\" fill=\"black\"/>\n        <path d=\"M68.6949 24.6467L69.0154 24.6537L69.0263 24.6586L69.2634 24.7013L69.8348 24.9146L69.8973 25.0049L70.1106 25.0932L70.2922 25.2747L70.3319 25.371L70.3993 25.4077L70.5819 25.6934L70.6186 25.8174L70.6573 25.8442L70.8002 26.2252L70.822 26.3412L70.8369 26.3541L71.0194 27.2827L71.0353 27.4405V27.4415L71.0392 28.634V28.637L71.0333 28.7362L70.8656 30.1122L70.8597 30.1182L70.8498 30.1985L70.439 31.9436L70.4321 31.9486L70.4271 31.9873L70.062 33.1957L70.0263 33.2224L69.9876 33.3653L69.6027 34.034L69.564 34.0568L69.5392 34.1262L69.4688 34.2135L68.8933 34.4884L68.3705 34.2711L68.1542 33.7483L68.2455 33.4556L68.2465 33.4506L68.4638 32.7075L68.4657 32.7065L68.4667 32.6966L68.8358 31.5269L69.2247 29.8553L69.3993 28.5794L69.4033 27.4921L69.308 26.6974L69.2217 26.4781L69.1324 26.3383L69.1037 26.3125L68.7485 26.1418L68.6304 26.116L68.4776 26.1289L67.6492 26.2787L67.2226 26.4524L66.6244 26.7202L66.5927 26.7956L66.4379 26.8601L66.4042 26.9226L66.1006 27.1309L65.9795 27.1686L65.9508 27.2103L64.915 27.626L64.8426 27.6399L64.8317 27.6548L64.0747 27.872L62.9378 28.3889L62.9199 28.3929L62.9169 28.3979L61.7502 28.8999L61.7453 28.9009L61.7443 28.9018L60.6976 29.3513L60.5795 29.3761L60.5627 29.3979L59.5616 29.6638L59.4733 29.6757L59.4535 29.6856L58.6668 29.8037L58.5239 29.8146L58.4584 29.8116L57.878 29.7709L57.8592 29.762L57.7084 29.7431L57.5834 29.7104L57.4872 29.5844L57.2669 29.4783L57.2649 29.4743L57.0953 29.3939L57.0268 29.3106L56.8631 28.8542L56.8086 28.7332L56.8026 28.5278V28.4971L57.0695 27.8264L57.261 27.625L57.4128 27.5595L57.4713 27.4573L57.6261 27.3651L57.8493 27.3036L57.885 27.2569L59.0993 26.9424L59.136 26.9385L59.146 26.9315L59.6093 26.8323L59.6648 26.8264L59.6757 26.8204L61.7026 26.5109L61.7363 26.5079L61.7413 26.5059L63.3415 26.3164L63.8703 26.1944L64.8386 25.7837L64.8545 25.7807L64.8575 25.7757L66.6442 25.0575L66.7325 25.0406L66.7444 25.0247L67.2673 24.8918L67.2851 24.8888L67.2871 24.8868L68.2098 24.6725L68.3626 24.6547L68.3675 24.6527L68.6632 24.6467H68.679H68.6949Z\" fill=\"black\"/>\n      </g>\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <rect width=\"1500\" height=\"1000\" fill=\"white\" transform=\"translate(-972 -442)\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\nexport default ConnectedComponentsSketch"},"relativePath":"sketches/connected_components.jsx"},{"fields":{"contents":"import React from 'react'\n\nconst CryptogramsSketch = () => (\n  <svg className=\"sketch cryptograms\" width=\"111\" height=\"111\" viewBox=\"0 0 111 111\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M700.973 -699H-799V300.982H700.973V-699Z\" fill=\"white\"/>\n    <path d=\"M39.3627 43.465L39.4326 43.4858L39.6205 43.6066L39.6958 43.6247L39.8828 43.632H39.8837L39.9046 43.6329L40.1623 43.6583L40.2504 43.6656L40.5636 44.0032L40.225 44.3409H40.2123L40.1351 44.3382L39.8909 44.3527L39.8683 44.3536L39.8319 44.3518L39.6096 44.3291L39.605 44.3245L39.5388 44.3137L39.3727 44.261L39.3554 44.2365L39.3391 44.2311L39.1412 44.3491L38.6401 43.848L38.7 43.6102L38.7373 43.5412L39.1775 43.2798L39.3627 43.465Z\" fill=\"black\"/>\n    <path d=\"M32.4716 42.3775L32.8293 42.4428L36.7142 42.6625L36.726 42.668L36.8513 42.6825L37.0582 42.7315L37.6274 42.8068L37.6428 42.825L37.6709 42.8304L37.6882 42.8277L37.7898 42.8195L37.7935 42.8177L38.1393 42.8086H38.1584L38.5523 42.9266L38.6131 42.9666L38.8827 43.0238L39.3692 43.0828L39.3701 43.0837L39.3865 43.0855L39.6061 43.1191L40.2669 43.1799L40.2706 43.1835L40.325 43.1899L40.3614 43.1536L40.4176 43.2099L40.4739 43.2226L40.6355 43.4277L40.7135 43.5058L40.7408 43.5248L40.7444 43.5366L40.8624 43.6546L40.8361 43.6809L40.847 43.6955L40.4703 44.1693L40.3368 44.2002L40.306 44.2038L40.3033 44.2065L39.637 44.32L39.4173 44.3626L39.2884 44.3762L39.2503 44.3744L38.7338 44.3445L38.3018 44.3218L38.2745 44.31L38.1121 44.2755L37.9986 44.3036L37.9115 44.3145L37.906 44.3209L37.729 44.3427L37.6319 44.349L37.4658 44.33L37.4104 44.3182L36.8567 44.2782L36.8522 44.2755L36.8086 44.2728L36.6216 44.2474L32.7385 44.3345L32.7158 44.3354L32.6314 44.3309L32.3101 44.3027L31.3334 44.4144L31.0783 44.4942L30.7661 44.5433L30.737 44.5424L30.472 44.5351L30.354 44.5505L30.2142 44.5596L30.1434 44.5578L29.8792 44.5396L29.5089 44.5542L28.4251 44.6431L28.3289 44.7194L28.1682 45.0071L27.7371 47.2727L27.7289 47.3934L27.6481 48.0034L27.6254 48.2485L27.6245 48.2712L27.5964 49.0627L27.5955 49.0645L27.5936 49.1072L27.5201 50.0557L27.5156 50.0648L27.5101 50.1374L27.4284 50.6702L27.3613 51.2593L27.3585 51.2639V51.2675L27.2433 52.4321L27.2415 52.4348L27.2396 52.4584L27.2351 52.492L27.1398 54.9945L27.1407 55.0998L27.1425 55.1588V55.1697L27.1325 56.2254V56.2571L27.1779 59.0701L27.1888 59.0901L27.2378 59.5221L27.2451 59.6574V59.7009L27.2179 60.4198L27.2169 60.458V60.4589L27.207 61.1406V61.1478L27.1634 63.1039V63.1048V63.1221L27.157 63.2718L27.1579 63.29V63.3118V63.3127L27.1652 64.313V64.3148V64.3375L27.2723 65.3196L27.3486 65.7989L27.3567 65.896L27.3613 65.9051L27.4684 67.4164L27.472 67.5044L27.4711 67.5108V67.5843L27.4793 68.4376L27.5691 68.9758L27.5782 69.082L27.5837 69.0929L27.6635 70.1722V70.1731L27.7625 71.3222L27.767 71.4212V71.4221V71.4883L27.7788 72.1673V72.1882L27.7779 72.2199L27.777 72.2517L27.7534 73.3155L27.7489 73.3255L27.718 73.5751L27.6381 73.8937L27.4221 74.2241L27.3504 74.3966L27.2932 74.4202L27.2514 74.4847L26.5716 74.7197L25.8917 74.4847L25.85 74.4202L25.7928 74.3966L25.7183 74.2178L25.5032 73.8865L25.427 73.5833L25.3997 73.3664L25.3907 73.3482L25.3362 72.2853L25.3353 72.2544L25.3235 72.1882L25.3244 72.1319L25.3553 71.4702V71.4647L25.2835 70.3465L25.2028 69.3289L25.1093 68.7816L25.1065 68.7543L25.1038 68.7489L25.0993 68.7199L25.0857 68.5365V68.5247L25.0938 67.5843V67.5299L25.0394 66.0912L24.9758 65.6409L24.9713 65.5865L24.9686 65.5801L24.8687 64.5163L24.8633 64.4037V64.3974V64.3139V64.313L24.8705 63.3118L24.8714 63.2918L24.8724 63.2337L24.8733 63.2319L24.8751 63.1811L24.8878 63.0122L24.9659 61.1079L24.9559 60.4598V60.4571V60.4189L24.9295 59.7227L24.8978 59.3097L24.8969 59.2825L24.8896 59.1881V59.1854L24.896 56.2644V56.2245L24.886 55.1706V55.1588L24.8878 55.0971L24.8887 54.9673L24.8896 54.931L24.9985 52.3495L25.0003 52.3449L25.0049 52.2633L25.0121 52.2033L25.102 51.0633L25.1075 51.0524L25.1102 51.0179L25.112 50.987L25.1147 50.9643L25.1156 50.9607V50.958L25.1873 50.3725L25.2563 49.8252L25.3525 48.9347L25.3834 48.2095V48.1958V48.1895L25.3888 48.0751L25.4215 47.7556L25.4823 47.1302L25.4996 47.0975L25.5096 46.995L26.0279 44.3998L26.0315 44.3953L26.0333 44.379L26.0442 44.329L26.115 44.2174L26.1686 44.0186L26.518 43.4241L26.6869 43.3279L26.7912 43.1155L27.3231 42.7034L27.9014 42.5046L27.9803 42.4701L29.4245 42.4438H29.4454L29.4871 42.4447L29.9137 42.461H30.2105H30.2142L30.3485 42.4692L30.5183 42.491L30.649 42.4991L30.8278 42.4465L31.0701 42.4111L31.0856 42.4038L32.2619 42.3621H32.2983L32.4716 42.3775Z\" fill=\"black\"/>\n    <path d=\"M27.5657 70.8389L27.5122 70.8924L27.5031 70.9469L27.5303 71.2137L27.5703 71.4461L27.5712 71.4652L27.573 71.467L27.6229 71.8255L27.6284 71.9072V71.9109L27.6256 72.2521L27.6247 72.2531L27.6093 72.3892L27.543 72.6615L27.5303 73.0219L27.534 73.2316V73.2434V73.266L27.5249 73.5102L27.524 73.5139L27.5176 73.5874L27.4886 73.7807L27.5049 74.3344L27.5322 74.7746L27.5331 74.8209V75.2131V75.214L27.504 75.4273L27.4359 75.6678L27.4387 75.8621L27.4396 75.8739L27.4378 75.9138L27.3906 76.8669L27.3896 77.0866V77.0875L27.386 77.161L27.3524 77.505L27.3107 78.1458V78.1713L27.2825 79.0145L27.2744 79.0309L27.2344 79.265L27.2226 79.2977V79.2986L27.1201 79.9576L27.0547 80.013L26.8986 80.3897L26.3394 80.6221L25.7803 80.3897L25.5488 79.8305L25.5497 79.806L25.5706 79.1425L25.5742 79.1343L25.5833 79.0599L25.587 79.01L25.6078 78.8829L25.6677 78.1068L25.6696 78.0596L25.7186 77.3761L25.7195 77.3734L25.7213 77.3516L25.7585 76.9922L25.7594 76.9903L25.7603 76.9804L25.7866 76.7661L25.8511 75.8185L25.852 75.8158L25.8538 75.7895L25.8892 75.4527L25.8928 75.4463L25.9065 75.3329L25.9818 75.0315L26.0444 74.7374L26.0508 74.3562V74.3553L26.0526 74.3099L26.1025 73.6809L26.1098 73.6745L26.1288 73.5402L26.2015 73.2969L26.2478 73.1235L26.2668 72.9447L26.2686 72.9429L26.2704 72.9202L26.3376 72.4818L26.3431 72.4773L26.3494 72.4255L26.4311 72.1078L26.4865 71.841L26.4937 71.5269H26.4947V71.5142L26.5074 71.2564L26.5101 71.2537L26.5183 71.1738L26.5537 71.0104L26.4865 70.8334L26.6399 70.4939L26.6835 70.4558L26.8804 70.3814L27.0411 70.3142L27.5657 70.8389Z\" fill=\"black\"/>\n    <path d=\"M26.6305 64.1744L26.7603 64.3459L26.7612 64.3487L26.7631 64.3496L26.7957 64.3931L26.8184 64.4612L26.8493 64.4803L27.1261 65.0421L27.2187 65.4306L27.2087 65.4706L27.2314 65.5323L27.295 65.8899L27.246 66.2049L27.2341 66.2403L27.245 66.5199L27.2759 66.6805L27.295 66.8811V66.9202L27.275 67.4439L27.2578 68.3062L27.2432 69.1295L27.2233 70.4239L27.2242 70.4457V70.4765V70.4838L27.2187 71.3307V71.3733L27.2696 72.3391L27.3404 72.7394L27.3531 72.8792L27.3576 72.8892L27.3594 72.9228L27.3603 72.9391L27.413 74.3043L27.4139 74.3506V74.3751L27.3994 75.0441L27.4257 76.0979L27.4293 76.156L27.432 76.1615L27.4692 77.5366V77.5375L27.4974 78.4343L27.5001 78.5088L27.4965 78.6004L27.4656 78.998L27.452 79.3656L27.4547 79.4065L27.4493 79.5199L27.3885 80.1326L27.3567 80.6809L27.3612 81.3481V81.3562L27.3476 81.5332L27.2614 82.0987L27.245 82.5081L27.2387 82.7695L27.2632 83.07L27.4266 83.4094L27.4466 83.4975L27.482 83.5447L27.54 83.7199L27.5573 83.8215L27.5773 83.8533L27.639 84.1483L27.6653 84.1837L27.7434 84.3943L27.9195 84.8146L28.0474 84.9398L28.455 85.1686L28.4595 85.1758L28.8027 85.2466L28.8145 85.2539L28.8535 85.2584L29.0014 85.2975L29.0859 85.3528L29.2411 85.3919L29.3545 85.4527L29.6232 85.509L29.6241 85.5099L29.8628 85.5625H30.196V85.5634L30.3376 85.5716L30.786 85.626L30.7941 85.6306L30.8404 85.6342L31.3224 85.7168L31.4005 85.7622L31.6183 85.8094L31.7618 85.8738L32.5052 85.9465L32.7257 86.0581L33.1478 86.1997L33.4864 86.4566L33.962 87.4188L33.9321 87.4896L33.9348 87.4959L33.9157 87.701L33.9067 87.7501L33.7224 88.0623L33.8368 87.9543L33.8168 87.9942L33.6952 88.1068L33.6861 88.1222L33.608 88.311L33.5635 88.3292L33.5354 88.3773L33.3194 88.4553L33.2468 88.5234L33.2195 88.5343L33.294 88.4644L32.8401 88.6287L32.7929 88.6115L32.7521 88.6278L32.3572 88.5625L32.0795 88.4662L31.2607 88.3591L31.169 88.3101L30.8795 88.2429L30.6471 88.1304L30.2995 88.0296L29.9491 87.9398L29.5479 87.8771L29.5379 87.8717L29.4961 87.8681L29.1276 87.7909L29.1104 87.7809L29.0559 87.7728L28.6338 87.6548L28.4713 87.5431L28.278 87.4805L28.1863 87.4133L27.8432 87.308L27.7434 87.2871L27.6944 87.2563L27.5646 87.2309L27.4656 87.1909L27.432 87.141L27.2895 87.0992L26.8039 86.7888L26.7685 86.7235L26.6314 86.6536L26.518 86.6045L26.2656 86.3368L26.2293 86.2442L26.1622 86.2097L26.0723 86.0817L26.0124 85.8929L25.947 85.8475L25.711 85.2466L25.6293 85.0905L25.6076 85.0006L25.5685 84.9734L25.5522 84.9344L25.5268 84.8009L25.4968 84.7528L25.4233 84.4097L25.3906 84.3299L25.3888 84.3217L25.3861 84.3199L25.1691 83.7834L25.1129 83.502L25.0893 83.453L25.043 82.8948L25.0402 82.8285L25.0393 82.8267V82.8067L25.0312 82.5017V82.4709V82.4663L25.033 81.9862V81.9807L25.0393 81.3444V81.3145L25.0647 80.6119L25.0657 80.6101L25.0666 80.5856L25.1038 79.9684L25.1056 79.9656L25.1065 79.932L25.1664 79.3066L25.17 78.9708L25.141 78.605L25.1374 78.5088L25.141 78.4216L25.1673 77.562L25.1446 76.2441L25.1392 76.1515V76.1442L25.1455 75.0541V75.0432L25.1319 74.3924L25.062 73.0462L25.0611 73.0335L25.0539 73.0172L25.0257 72.5579L24.9204 71.5213L24.9141 71.4078V71.4069L24.9132 71.3298L24.9077 70.4847V70.4765L24.9086 70.4466L24.9095 70.3985V70.3976L24.9104 70.3667L24.9821 69.0732L24.9876 68.2745L24.9885 68.2726L25.0039 68.0938L25.151 67.2279L25.2318 66.7141L25.2345 66.7087L25.2363 66.6869L25.2699 66.5099L25.2899 66.184L25.2753 66.1178L25.249 65.8899L25.338 65.4733L25.4514 65.2182L25.525 65.171L25.5567 65.0857L25.5712 65.0349L25.5794 65.0222L25.5849 65.0085L25.5985 64.9913L25.7709 64.6545L25.7301 64.4766L26.2311 63.9756L26.6305 64.1744Z\" fill=\"black\"/>\n    <path d=\"M33.3819 86.7409L33.5008 86.7446L33.5126 86.7564L33.6097 86.7663L33.6197 86.7781L33.7541 86.8172L33.8258 86.8626L33.853 86.9125L33.912 86.9406L33.9583 86.9996L34.0445 87.2474L34.0309 87.3527L34.0128 87.4172L34.0001 87.4271L33.9864 87.4852L33.9048 87.6513L33.8303 87.6976L33.7777 87.7975L33.6996 87.8519L33.5417 87.9019L33.5262 87.92L33.4309 87.9318L33.3774 87.9355L33.1005 87.8247L33.0588 87.7839L33.0424 87.7684L33.0079 87.7439L32.8037 87.34L32.8064 87.2919L32.8219 87.1303L33.3202 86.6792L33.3819 86.7409Z\" fill=\"black\"/>\n    <path d=\"M34.208 86.8692L33.707 87.3703L33.4628 87.3067L33.382 87.2613L33.3466 87.2014L33.3312 87.1914L33.146 86.8592L33.1787 86.8256L33.3847 86.4753L33.461 86.4326L33.707 86.3682L34.208 86.8692Z\" fill=\"black\"/>\n    <path d=\"M51.9402 85.8899H52.3832H52.5275L52.6074 85.8926L53.5913 85.9625L53.5959 85.9643L53.6403 85.967L53.7647 85.9816L53.7919 85.9961L53.929 86.0142L54.549 86.1858L54.7777 86.341L54.9583 86.41L55.0037 86.4953L55.0972 86.5589L55.1853 86.8185L55.2942 86.9973L55.3078 87.0608L55.3296 87.2714L55.1371 87.7362L55.1008 87.8424L55.0899 87.8505L55.0364 87.9803L54.6733 88.1301L54.5517 88.2127L54.5471 88.2136L54.4346 88.229L54.3284 88.2735L54.2213 88.2526L53.6013 88.2399L53.5977 88.2381L53.4661 88.229L53.3889 88.2181L52.4894 88.1582H52.3832H52.0246L51.5581 88.229H51.5572L51.0498 88.3135L50.8564 88.3307H50.8501L50.7566 88.3298L50.703 88.328L50.457 88.3153L50.4561 88.3144L50.4362 88.3135L49.7953 88.2663L49.3869 88.377L49.336 88.3843L49.3215 88.3933L49.2316 88.4133L49.0592 88.4324L49.0447 88.4387L47.7231 88.515L47.7194 88.5159L47.6459 88.5268L47.4662 88.5404L47.4244 88.5395L45.9349 88.4859L45.8668 88.4841H45.8532L45.2006 88.456H45.1416H45.1352H45.1062L44.0614 88.4296L43.9479 88.4378H43.947L42.3849 88.4442H42.3803H42.3749L42.3231 88.4433L41.4436 88.4405H41.3601H41.263H41.2602L41.1649 88.436L40.191 88.3534L40.1828 88.3498L40.1147 88.3443L40.0258 88.3307L40.0249 88.3298L39.7952 88.2926L38.3765 88.2045L37.919 88.1864L37.1901 88.1964H37.1747L37.0539 88.19L36.542 88.1328L36.0473 88.1192L35.0216 88.1945L34.9889 88.1955L34.9871 88.1964L34.3454 88.2236L34.3009 88.2245L34.093 88.2027L33.69 88.1165L32.8168 88.0774L32.8159 88.0765H32.7977L32.2749 88.0411L32.2386 88.0239L31.9944 87.9767L31.4961 87.7788L31.4353 87.7588L31.359 87.7688L31.1276 87.8532L30.9125 87.8914L30.8843 87.9041L30.5639 87.925L30.4477 87.9358L29.8277 87.6799L29.5718 87.0599L29.786 86.4863L29.8432 86.42L29.8686 86.4082L29.8804 86.3801L30.4423 86.1477L30.5984 86.2103L30.6565 86.2058L30.8907 86.1295L30.9469 86.1204L30.9542 86.1114L31.3046 86.0242L31.5206 85.997L31.5542 85.9979L31.8465 86.0088L31.8619 86.0161L32.0734 86.0469L32.4946 86.1749L32.8604 86.1858L33.7808 86.154H33.8162L33.9614 86.164L34.3653 86.2248L34.8809 86.213L35.8776 86.105L36.414 86.0052L36.6173 85.9861L36.6763 85.9879L37.2128 86.017L37.919 86.027L38.3892 86.0088L38.4337 86.0079H38.4409L39.9323 86.0179L39.9359 86.0197L40.2264 86.0587L40.4605 86.1223L41.3047 86.1858H41.3601H41.4436L42.3241 86.1822H42.374H42.3803H42.384L43.9479 86.1885H43.9488L44.0632 86.1958L45.1052 86.1704L45.1352 86.1695H45.1406L45.2015 86.1704L45.8514 86.1422H45.8677L45.8686 86.1413L45.9394 86.1395H45.9757L46.0229 86.1404L47.4099 86.1958H47.4108L47.4725 86.1912L47.4789 86.1885L47.5315 86.184L47.5887 86.1813L47.5914 86.1804L48.8441 86.1368L48.8595 86.1359L48.8631 86.1332L49.4232 86.0279L49.4731 86.0233L49.4822 86.0179L49.5385 86.0106L49.7 85.9988L49.7581 86.0006L50.5814 86.0424L50.5832 86.0433L50.605 86.0442L50.7738 86.056L51.1896 85.987L51.2141 85.9852L51.2186 85.9825L51.7696 85.9026L51.9393 85.8899H51.9402Z\" fill=\"black\"/>\n    <path d=\"M83.6915 82.9389L83.9066 83.0278L83.9157 83.0505L83.9457 83.065L84.0065 83.1458L84.2253 83.7975L84.2489 83.8547L84.07 84.4765L83.8976 84.7506L83.8948 84.7515L83.854 85.0411L83.7551 85.2217L83.7151 85.3905L83.6316 85.5603L83.6189 85.6565L83.5372 85.8072L83.4428 86.1212L83.4238 86.1494L83.3257 86.202L83.2758 86.2946L83.2513 86.3491L82.8474 86.7167L82.8029 86.7339L82.7865 86.7684L82.3354 87.1224L82.2692 87.146L82.2474 87.1851L81.9487 87.3766L81.8126 87.4165L81.7155 87.4892L81.5031 87.5654L80.9875 87.7842L80.845 87.8132L80.8059 87.8404L79.9609 88.0891L79.7448 88.1209L79.6704 88.1554L79.1621 88.1863L78.9406 88.2444L78.878 88.2525L78.8617 88.2616L78.3706 88.3569L78.1428 88.3796L78.0992 88.3714L77.9304 88.386L77.8278 88.3905L77.7379 88.3869L76.8093 88.3143L76.7867 88.3034L76.6187 88.2825L76.596 88.277L76.5207 88.2634L76.1694 88.2652L76.0532 88.2725L76.0224 88.2716L74.433 88.2289H74.3704L73.9728 88.2317H73.9637L73.9074 88.2298L73.1513 88.1935L73.1386 88.1881L73.0959 88.1835L72.6503 88.1754L72.5994 88.1772H72.5604H72.5241L72.1973 88.1672L72.1946 88.1654L72.1365 88.1636L71.2088 88.0855L70.1368 88.1082H70.1096H70.1069L69.6276 88.1073H69.6267L69.5133 88.1018L69.476 88.0982L68.7281 88.0692L68.6809 88.0701H68.6655L68.6264 88.0692L67.9647 88.0474L67.9611 88.0456L67.8948 88.0428L67.8322 88.0365L66.2882 87.9866L66.2782 87.982L66.1566 87.9693L65.199 87.9149L65.1345 87.913L64.3312 87.8994L64.3303 87.8985L64.2931 87.8976L64.2386 87.8949L63.7566 87.8776L63.7521 87.8758L63.6622 87.8704L62.8961 87.7787H62.8861H62.8725L62.4586 87.8096L62.3715 87.8123L62.3097 87.8105L61.4374 87.7624L61.4293 87.7587L61.3476 87.7524L60.7757 87.7424L60.655 87.7433L60.2856 87.7497H60.2665L60.2338 87.7488L59.2581 87.7197L59.2562 87.7188L59.2136 87.717L59.1854 87.7152L58.0944 87.6843L57.7322 87.7016L57.6896 87.7143L57.4091 87.7551L57.3582 87.7542L56.5259 87.7106L56.3307 87.7034L56.0838 87.7905L55.9822 87.8087L55.9513 87.8268L55.4866 87.9167L55.3195 87.933L55.2823 87.9321L54.7731 87.9103L54.0306 88.0782L53.8436 88.1L53.8091 88.0991L53.3598 88.0801L53.3517 88.0764L53.2373 88.0646L52.8869 87.9929L52.8715 87.9739L52.7444 87.9475L52.5928 87.8831L52.473 87.8395L52.3977 87.7306L52.1272 87.5463L52.0981 87.4728L52.0527 87.2332L52.2415 86.7766L52.3314 86.7394L52.335 86.7312L52.3368 86.7303L52.365 86.6804L52.4866 86.6069L52.7408 86.5361L52.8052 86.5043L52.9849 86.4916L53.0439 86.4889L53.0902 86.4907L53.3753 86.5079L53.7247 86.468L54.5507 86.3173L54.5925 86.3128L54.5988 86.3091L55.1344 86.2411L55.5083 86.1212L55.5129 86.1203L55.5138 86.1194L55.9223 85.9878L56.062 85.966L56.0911 85.9506L56.4542 85.907L56.4741 85.9052L56.476 85.9043L57.2611 85.8244L57.331 85.8099L57.3927 85.8036L57.4318 85.7809L57.9219 85.7028L58.0036 85.6964L58.0118 85.6928L59.16 85.6084H59.1618H59.1627L59.2099 85.6048L59.2581 85.603L59.2599 85.602L60.2329 85.573H60.2665H60.2847L60.655 85.5784L60.7884 85.5794H60.7975L61.4483 85.5884L61.452 85.5902L61.5346 85.5966L62.3206 85.5621H62.3279L62.7854 85.544L62.8308 85.543H62.8861L62.956 85.5421H62.9705H62.976L63.7829 85.5467L64.2404 85.5303L64.2903 85.5276L64.353 85.5258L64.4229 85.5276L65.2353 85.5757L65.2661 85.5902L65.3569 85.6057L66.2192 85.6347L66.3281 85.6238L66.398 85.6256L67.9792 85.7191L67.9838 85.721L68.0401 85.7246L68.08 85.7291L68.6818 85.7364L68.7281 85.7373L69.5105 85.7073L69.5577 85.7064L69.6122 85.7082L69.6866 85.711L69.6893 85.7128L69.7302 85.7146L70.1732 85.7509L71.2197 85.7736L71.2733 85.7745V85.7754H71.2923L72.2808 85.8154L72.6003 85.8262L72.6748 85.8281L73.184 85.839L73.1913 85.8417L73.2857 85.8508L73.9964 85.8852L74.3704 85.888H74.4484L74.5074 85.8889L76.0487 85.966H76.0687L76.0705 85.9651L76.5788 85.9479L76.6205 85.947L76.7885 85.9588L77.0172 85.9924L77.0345 86.0014L77.8496 86.0831L77.9512 86.0768L77.9621 86.0713L78.4568 85.9933L78.4841 85.9905L78.4877 85.9887L78.8253 85.9424L78.9134 85.9361L78.9197 85.9334L79.4889 85.9016L80.1479 85.6955L80.1923 85.6883L80.1969 85.6856L80.7651 85.5022L80.7678 85.5013H80.7687L80.9049 85.4568L81.0392 85.3733L81.4068 85.0865L81.5103 84.9893L81.5303 84.9222L81.5621 84.8759L81.582 84.7851L81.6084 84.727L81.6383 84.1797L81.7254 83.9918L81.8897 83.5234L81.956 83.4399L82.0976 83.2193L82.1956 83.1658L82.2528 83.0278L82.8283 82.7891L83.0688 82.6284L83.6915 82.9389Z\" fill=\"black\"/>\n    <path d=\"M77.8584 42.0408L77.9083 42.0435L77.9156 42.0472L77.99 42.0526L78.3213 42.1016L78.3458 42.1161L78.4511 42.1307L78.6018 42.1733L78.8832 42.196L79.2699 42.177L79.3252 42.1761L79.6638 42.2305L79.6865 42.2378L79.7691 42.2995L79.8898 42.3322L80.242 42.5428L80.2947 42.6363L80.4354 42.6944L80.7331 43.4123L80.7322 43.4623L80.7276 43.5494L80.5325 43.9742L80.449 44.1757L80.4381 44.1803L80.4326 44.1912L79.7737 44.4553L79.4251 44.3899L79.397 44.379L79.1755 44.3191L78.8823 44.3173L78.4475 44.3337H78.4067L77.9437 44.2302L77.8375 44.1803L77.7822 44.1712L77.734 44.1748L77.203 44.2574L77.0288 44.271L76.9271 44.2665L76.6248 44.2384L76.6021 44.2266L76.5849 44.2247L75.9677 44.2456L75.905 44.2502L75.8969 44.2547L75.246 44.3028L74.676 44.3709L74.6669 44.3736H74.666L74.6052 44.3899L74.4972 44.4045L74.4745 44.4163L73.5623 44.5461H73.5614L73.2691 44.5914L73.1365 44.6287L72.9786 44.6514L72.9514 44.665L72.3015 44.7349L72.2098 44.7403L72.2071 44.7412L72.1626 44.743L71.1369 44.812L71.057 44.8202L70.9862 44.8238L70.9826 44.8247L69.8053 44.8683L69.7517 44.8737L69.6483 44.8792L69.6474 44.8801L68.7297 44.8892H68.7215H68.6443H68.6407H68.6362L67.7975 44.8855L67.7239 44.8874L67.3835 44.8937L66.9678 44.9137H66.9597L66.9587 44.9146L66.3824 44.9382H66.366V44.9391L66.2998 44.9409H66.2943L66.1518 44.9445H66.1228L66.0356 44.9409L65.2459 44.8783L65.2223 44.8665L65.068 44.8465L64.488 44.7939H64.4798L64.478 44.793L64.458 44.7911L64.3682 44.7857L63.8571 44.7231L63.0792 44.6396L62.5346 44.6486H62.521L61.8248 44.6514H61.8203L61.7077 44.645L61.6759 44.6423L61.0523 44.6123H60.9824L60.2581 44.6223H60.2418H60.2363H60.0974L60.0965 44.6214H60.0702L59.6145 44.6078L59.5918 44.5978L59.2705 44.5388L59.1906 44.5088L58.6333 44.4426L58.5553 44.4371L57.515 44.4235H57.5132L57.4252 44.419L57.3426 44.4099H57.3398L56.6482 44.3337L56.6219 44.3355H56.62L55.7187 44.3582H55.6915H55.686L55.6034 44.3573L55.1913 44.3636H55.1759L55.0543 44.3564L54.3 44.2701L54.28 44.2592L54.1683 44.2456L54.0149 44.2075L53.3632 44.2738L53.2516 44.2792H53.2488H53.1853L52.7405 44.3073L52.6688 44.3101L52.5009 44.2964L52.2204 44.2529L51.2501 44.3001L51.1729 44.3064L51.0849 44.3101L51.0023 44.3064L50.3097 44.2529L49.7469 44.2474L49.5 44.2865L49.3503 44.2983L49.3466 44.3001L48.6876 44.3101H48.6704L48.556 44.301L47.3325 44.3627L47.3025 44.3663L47.2617 44.3682L47.2589 44.3691L46.3903 44.4181L46.3285 44.4199H46.3222L45.7394 44.4172L45.7367 44.4163L45.6278 44.4017H45.6105L43.4393 44.2157L43.4266 44.2093L43.3259 44.1984L42.8539 44.1004L42.2747 44.084L41.1102 44.0686L41.1074 44.0677L40.9849 44.0586L40.6291 44.0042L39.9637 43.937L39.9365 43.9243L39.7895 43.9016L39.3538 43.7636L38.0857 43.6483L36.9611 43.691L36.9338 43.6919L36.8839 43.6901L36.4028 43.6538L36.2685 43.7046L35.7656 43.2281L35.7602 43.1337L35.7593 43.1028L35.9644 42.6744L36.0552 42.6018L36.2413 42.5355L36.2776 42.4892L36.7568 42.3621L36.8467 42.3503L36.8531 42.344L38.0149 42.2033L38.0621 42.2006L38.0657 42.1987L39.4718 42.1225L39.519 42.1216L39.6097 42.1261L40.0999 42.1806L40.7362 42.1742H40.7462L40.8823 42.1842L41.19 42.2296L42.2902 42.2251H42.2938H42.2965L42.9673 42.2269L43.0109 42.2278L43.5691 42.2559L45.7349 42.3276L45.7431 42.3313L45.7993 42.3367L46.3149 42.3431L47.1355 42.3113L47.1573 42.3095L48.4698 42.1633L48.5932 42.1561L48.7085 42.1624L48.7539 42.167L49.2876 42.1924L49.4147 42.1761L49.4601 42.167L49.5845 42.1543L49.5972 42.1479L50.2779 42.0998L50.3578 42.0971L50.4722 42.1034L51.2029 42.1815L51.2138 42.186L51.2238 42.1879L52.1759 42.1234L52.225 42.1216L52.2259 42.1207L52.2658 42.1198H52.2921H52.3021L52.6797 42.1234L52.6806 42.1243L52.7605 42.127L53.198 42.1643H53.2143L53.9659 42.1125L54.0413 42.1098L54.073 42.1107L54.1366 42.1125H54.1447L54.4733 42.1261L54.4788 42.1279L54.5705 42.1343L55.2549 42.226L55.6034 42.2305L55.686 42.2296H55.6915H55.6933L56.5964 42.2314L56.8125 42.2541L56.8697 42.2659L57.6112 42.3903L58.5607 42.3885L58.6533 42.3812L58.7359 42.3776H58.7477L59.4611 42.3857L59.4711 42.3903L59.8397 42.4602L59.9168 42.4901L60.1682 42.5228H60.2363H60.2418H60.2572L60.9824 42.5328H61.0605L61.7222 42.511H61.7585L61.823 42.5128L61.8811 42.5164L62.551 42.5482L63.1074 42.5573H63.1101L63.1373 42.5582L63.9897 42.5591L64.0704 42.5627L64.5352 42.5981L64.5497 42.5972L64.5951 42.599L65.2995 42.6281L65.3113 42.6326L65.4783 42.6499L65.5346 42.6617L66.2153 42.7597L66.2653 42.7606L66.7336 42.688L66.8807 42.6762L66.8852 42.6735L67.3173 42.6635H67.3454H67.369L67.7258 42.6708L67.7975 42.6717L68.6362 42.6689H68.6407H68.6443H68.7188L69.5684 42.6671L69.5902 42.6644L69.6809 42.659L69.6855 42.6571L70.8646 42.6099L70.9299 42.6036L71.0098 42.6L71.0125 42.5981L72.0791 42.5673L72.1127 42.5664L72.1399 42.5673H72.1408L72.6301 42.5192L72.7063 42.4974L72.7934 42.4847L72.817 42.4711L72.8624 42.462L73.0285 42.4466L73.0358 42.4429L73.319 42.4357L74.1305 42.3222L74.1414 42.3195L74.1831 42.3077L74.3701 42.2804L74.3964 42.2677L75.0291 42.2142L75.6518 42.1261L75.6881 42.1198L75.8043 42.1098L75.8143 42.1043L76.5795 42.059L76.6475 42.0562L76.82 42.0771L77.0034 42.0789L77.5471 42.0472H77.5661L77.567 42.0463L77.7404 42.039L77.7876 42.0381L77.8584 42.0408Z\" fill=\"black\"/>\n    <path d=\"M34.495 31.1102L34.4968 31.1129L34.4996 31.1147L34.5831 31.3153L34.7573 31.7238L34.7601 31.9035V31.918V31.9326L34.7156 34.7401L34.7147 34.7419L34.7101 34.8209L34.652 35.3791L34.5876 39.146L34.5867 39.147L34.5858 39.1787L34.5259 40.287L34.515 40.8779L34.5776 40.9478L34.7301 41.3481V41.3717L34.7138 41.7747L34.712 41.7757L34.7065 41.8455L34.6675 42.0825L34.4914 42.2304L34.4823 42.7269L34.4796 42.7324L34.4569 42.9203L34.3943 43.1799L34.3026 43.2516L34.1655 43.5811L33.5528 43.8352L32.9392 43.5811L32.6851 42.9684V42.9593L32.696 41.9018L32.6914 41.8283L32.6996 41.7076L32.7241 41.5387L32.7341 40.2471L32.7359 40.1972L32.8067 39.1007L32.8058 38.3219L32.7177 37.5067L32.7132 37.4223V37.4142L32.7205 36.7724L32.7214 36.0798L32.7223 36.0435L32.7359 35.7721L32.7432 35.7567L32.7668 35.5942L32.8031 35.4735L32.8022 35.3237V35.3228L32.8049 35.2593L32.8439 34.6784L32.9229 31.8908L32.9329 31.8681L32.9982 31.5513L33.0717 31.3807L33.1716 31.3162L33.2551 31.1147L33.8778 30.8569L34.495 31.1102Z\" fill=\"black\"/>\n    <path d=\"M39.7958 19.0668L40.1026 19.8057L40.0681 20.0716L39.9892 20.3721L39.9093 20.4919L39.8566 20.6744L39.5616 21.1464L39.4436 21.2108L39.3728 21.3715L38.7447 21.9479L38.6639 21.9796L38.634 22.0368L38.4152 22.1911L38.1919 22.5533L37.4739 23.7751L36.6298 25.5006L36.6152 25.5097L36.6062 25.546L36.2948 26.0969L36.1278 26.5118L36.1224 26.5145L36.1196 26.5299L35.8791 27.0809L35.3036 28.4188L35.1003 28.9517L35.0013 29.411L34.9895 29.42L34.9777 29.4954L34.8543 29.8639L34.7254 31.299L34.7109 31.8672L34.6991 31.8953L34.6128 32.223L34.4967 32.43L34.385 32.656L34.3378 33.216L34.3732 33.4711L34.3787 33.551L34.3796 33.5537L34.3877 33.8877L34.3886 33.905L34.356 34.1138L34.2661 34.3924L34.0755 35.0632L33.746 35.3092L33.6806 35.3982L33.6589 35.4054L33.657 35.4072L33.6471 35.409L33.5808 35.4299L33.4283 35.4535L32.9272 34.9525L33.0906 34.7891L33.0053 34.3189L32.9944 34.1991L32.998 34.1319L33.0216 33.9032L32.998 33.6617L32.9463 33.3558L32.9354 33.2342L32.9363 33.1997L32.9744 32.4236L32.9862 32.3982L33.0298 32.184L33.1578 31.8799L33.176 31.7792L33.1723 31.2599V31.2536V31.2463L33.1868 29.6824L33.1887 29.6787L33.2195 29.4573L33.343 29.0306L33.4292 28.5468L33.4356 28.5378L33.4392 28.5014L33.5962 27.8561L33.6153 27.8415L33.6362 27.7353L34.1917 26.372L34.375 25.8727L34.4948 25.4225L34.543 25.3508L34.5756 25.221L34.8888 24.6365L35.6785 22.881L35.6894 22.8737L35.6975 22.8428L36.3574 21.5476L36.6234 20.9694L36.8104 20.8504L36.9538 20.5627L37.2815 20.3167L37.7299 19.8601L37.9505 19.4952L38.0322 19.449L38.083 19.3201L38.2881 19.0968L38.3081 19.0877L38.3172 19.0668L39.0569 18.76L39.7958 19.0668Z\" fill=\"black\"/>\n    <path d=\"M57.116 13.1221L57.4291 13.1657L57.5108 13.2093L57.7523 13.2673L57.9937 13.3899L58.1462 13.4171L58.3668 13.4099H58.4022L58.4439 13.4108L58.5029 13.4126L58.5102 13.4162L58.62 13.4253L58.9332 13.4752L59.2808 13.6722L59.4542 13.7448L59.4687 13.7793L59.5059 13.8002L59.7365 14.4256L59.495 15.0628L59.466 15.0782L59.4542 15.1063L59.2654 15.1844L58.896 15.3805L58.5919 15.4195L58.5056 15.4249L58.5011 15.4277L58.4466 15.4295L58.4022 15.4304H58.3686L58.0364 15.4195L58.0355 15.4186L58.0001 15.4177L57.588 15.3877L57.5435 15.3669L57.2739 15.3133L56.9453 15.1771L56.9154 15.169L56.3962 15.2643L56.3136 15.2715L56.3036 15.277L55.6582 15.3378L55.5593 15.3423L55.5175 15.3414L55.4785 15.3396L55.1798 15.336L54.2903 15.4912L54.1914 15.4994L54.1823 15.5039L54.1124 15.5085L54.0425 15.5112L53.9971 15.5103L53.0758 15.4676L52.9387 15.5012L52.798 15.5184L52.7799 15.5275L51.8667 15.6056L51.2985 15.7036L51.2558 15.7072L51.2486 15.7109L51.1814 15.72L51.1279 15.7227L51.1224 15.7254L50.9608 15.7372H50.9599L50.1448 15.8053H50.143L50.1367 15.8062L50.0858 15.8316L49.3234 15.9033L49.2244 15.9078L49.17 15.9069L48.8223 15.8879L48.3458 16.0304L48.2078 16.0504L48.1797 16.0649L47.8093 16.1121L47.6813 16.1202L47.5461 16.1084L47.1939 16.2101L46.9588 16.2437L46.9488 16.2473L46.5848 16.2555L44.9737 16.5832L44.7513 16.6385L44.3537 16.752L44.1195 16.8918L43.9643 16.9345L43.9343 16.9744L43.4251 17.1351L43.1455 17.2531L42.7788 17.5163L42.6735 17.5508L42.6454 17.5944L42.1434 17.8285L41.666 18.2951L41.6279 18.3114L41.6124 18.3432L41.0987 18.7607L41.0342 18.7834L41.0134 18.8207L40.9181 18.8778L40.8963 18.9387L40.0367 19.9762L39.9178 20.1314L39.689 20.4645L39.6146 20.5035L39.5738 20.5952L39.1644 20.9592L39.1163 20.9783L39.0981 21.0118L39.0654 21.0345L38.9856 21.1707L38.844 21.2515L38.7623 21.3967L38.5989 21.4975L38.2667 21.5919L37.9944 21.3196L37.9481 21.3005L37.929 21.2542L37.6367 20.9619L37.7838 20.5562L37.8863 20.4345L37.9871 20.2848L38.0043 20.2757L38.0134 20.2485L38.0788 20.165L38.1505 20.0606L38.1577 20.0569L38.1614 20.0461L38.4881 19.6031L38.5326 19.5804L38.5553 19.5241L38.8358 19.2391L38.9529 19.1075L39.738 18.0337L39.8043 18.0001L39.8388 17.9229L39.9514 17.8222L40.1211 17.6652L40.5695 17.2031L40.5886 17.195L40.5967 17.1768L41.1813 16.6322L41.253 16.6031L41.2802 16.5541L41.8466 16.1774L41.8494 16.1765L41.8503 16.1756L42.3014 15.8761L42.3177 15.8715L42.3223 15.8634L42.6872 15.6346L42.8151 15.5965L42.8433 15.5566L43.3743 15.3587L43.4061 15.3532L43.4106 15.346L43.7265 15.2416L44.1604 15.0355L44.3092 15.0011L44.3682 14.9657L44.577 14.9248L46.1873 14.4138L46.4786 14.3684V14.3675H46.7709L47.1676 14.2304L47.2946 14.2095L47.3291 14.1896L47.5134 14.1587L47.5806 14.1533L47.5887 14.1487L47.8792 14.1215L48.3984 13.9763L48.4819 13.9654L48.5028 13.9527L48.5591 13.9436L48.6081 13.939L48.6163 13.9354L49.1019 13.8782L49.1936 13.8728L49.1963 13.8719L49.9533 13.851L49.9705 13.8501L50.7521 13.7493L50.7684 13.7475L50.7702 13.7466L50.9146 13.7303L50.9581 13.723L51.0044 13.7194L51.0108 13.7157L51.6271 13.6468L51.6525 13.6449L51.6552 13.644L52.5384 13.5669L52.7608 13.5133L52.8225 13.5061L52.8362 13.4988L52.8706 13.4925L53.0368 13.4788L53.0921 13.4807L54.0035 13.5315L54.883 13.3436L55.0809 13.3227L55.0854 13.32L55.4794 13.3145L55.5057 13.3136L56.0694 13.2773L56.7084 13.1375L56.9317 13.113H56.978L57.116 13.1221Z\" fill=\"black\"/>\n    <path d=\"M73.0023 38.7498L73.0259 38.7398L73.7992 39.0602L74.1196 39.8345L74.1042 39.8817L74.1088 40.0342L74.1097 40.0669L74.106 40.1558L74.0724 40.557L73.9499 40.8066L73.8183 41.1634L73.8138 41.1661L73.7239 41.5873L73.7112 41.6081L73.7012 41.6726L73.4852 42.3642L73.3663 43.0287L73.3399 43.2347L73.1666 43.5588L73.0849 43.7612L72.9442 43.9073L72.9369 43.9101L72.9342 43.9173L72.3342 44.166L71.7487 43.9318L71.7442 43.9209L71.7342 43.9173L71.6571 43.7321L71.4864 43.36L71.4764 43.1603L71.4746 43.1104L71.4791 43.0178L71.4873 42.9406L71.4882 42.9034L71.5009 42.6465L71.5027 42.642L71.5173 42.0974L71.5209 42.0892L71.5427 41.8986L71.7043 41.2051L71.7687 40.4426L71.7769 39.7546L71.9938 39.2427L72.0928 39.0048L72.0955 39.003L72.0964 39.0003L72.8552 38.689L73.0023 38.7498Z\" fill=\"black\"/>\n    <path d=\"M60.7772 13.3609L61.2328 13.6187L61.3091 13.6332L61.4806 13.6486L61.5451 13.6804L61.8746 13.7476L61.9381 13.7739L61.9753 13.8047L62.0298 13.8174L63.2507 14.4592L63.4549 14.5336L63.6201 14.6607L63.8044 14.7242L64.1738 15.012L64.2827 15.0428L64.3417 15.0828L64.4588 15.1091L64.4915 15.1236L64.5986 15.2171L64.7084 15.2534L65.6152 15.9242L65.6425 15.9796L65.7169 16.0086L65.7632 16.0513L65.7913 16.1157L65.8521 16.143L66.1626 16.4952L67.397 17.6225L67.4433 17.7287L67.5595 17.7841L67.9952 18.3178L68.0224 18.3968L68.0715 18.4231L68.5253 19.1148L68.5298 19.1311L69.0545 19.7874L69.1144 19.8555L69.1217 19.8754L69.138 19.8836L70.3825 21.3722L70.4514 21.4512L70.4941 21.5619L70.5649 21.601L71.4054 22.9153L71.449 22.9798L71.4717 23.0515L71.5062 23.0714L71.7958 23.5843L71.8139 23.6542L71.8402 23.6705L71.8729 23.7404L72.2106 24.413L72.236 24.4584L72.256 24.5356L72.2841 24.5528L72.7407 25.5676L72.7661 25.6829L72.8042 25.7383L73.0974 26.7522L73.396 27.4366L73.4069 27.4584L73.4287 27.5509L73.4668 27.6027L73.6892 28.2408L73.7128 28.376L73.7382 28.4187L73.7528 28.4931L73.7555 28.5158L73.7582 28.5204L73.8118 28.8108L73.8136 28.829L73.8154 28.8326L74.0577 30.2396L74.0596 30.2595L74.0614 30.2632L74.1685 30.9303L74.1748 31.0102L74.1848 31.0955L74.1921 31.1119L74.2266 31.7826L74.2311 31.819L74.2366 31.8979L74.2393 31.9043L74.3128 33.087L74.3155 33.1714V33.1941L74.2965 34.2679V34.3188L74.3119 34.8107L74.3128 34.8534L74.2611 35.1938L74.2665 35.8174V35.8283L74.2656 35.8791L74.2502 36.2485V36.2667L74.2484 36.2703L74.2474 36.2867L74.2375 37.7054V37.7099L74.2229 38.8872L74.222 38.889V38.8936V38.8972L74.2157 39.4082L74.2102 39.42L74.1394 39.804L74.0577 40.02L74.0532 40.0255L74.0514 40.0345L74.0314 40.0845L74.0323 40.296V40.3014L73.8299 40.945L73.8072 40.9622L73.8853 41.2799L73.9143 41.5186L73.8726 41.8037L73.6447 42.5543L73.6039 42.5843L73.5594 42.744L73.3361 43.1189L73.3062 43.1362L73.2889 43.1879L73.239 43.2532L73.2345 43.2687L73.2181 43.2805L73.2027 43.3005L73.1491 43.4475L73.1128 43.4911L72.6181 43.7216L72.1616 43.5328L72.0526 43.2687L71.9882 43.2178L71.96 43.0908L71.9555 43.0499L71.823 42.8239L71.9246 42.7222L71.9228 42.2965V42.2929L71.9237 42.2611L71.9473 41.604L71.8774 41.2726L71.8738 41.2382L71.8693 41.23L71.8048 40.8587L71.8003 40.8052L71.7967 40.797L71.7703 40.5655L71.7631 40.4457L71.7712 40.3214L71.7821 40.2297L71.7839 39.863V39.8612L71.7948 39.7096L71.8339 39.4309L71.8684 39.3683L71.9056 39.1849L71.902 38.9281V38.9272L71.8466 37.7562L71.7658 36.3511V36.3502L71.764 36.332V36.3211L71.7613 36.2685L71.7603 36.2649L71.7594 36.2467L71.7449 35.8818L71.744 35.8283V35.8174L71.7504 35.0295L71.7486 34.867V34.8534L71.7495 34.8125L71.7649 34.3188V34.2915L71.7068 33.2495L71.6287 32.1022L71.6224 32.0495L71.6187 31.9851L71.616 31.9796L71.5715 31.2662L71.5688 31.1881L71.4926 30.6625L71.4917 30.6507L71.4908 30.6489L71.292 29.2347V29.2338L71.2475 28.9606V28.9588L71.2448 28.9425L71.095 28.386L71.0896 28.3779L70.8182 27.6236L70.8127 27.5936L70.8036 27.5809L70.7918 27.5482L70.7882 27.5228L70.7818 27.5128L70.4696 26.4799L70.0947 25.5431L70.0838 25.5222L69.718 24.8396L69.7035 24.7834L69.6835 24.7707L69.6636 24.7271L69.4112 24.2651L69.3776 24.2106L68.5861 22.9834L68.568 22.9634L68.5607 22.9444L68.5453 22.9371L67.2908 21.4566L67.22 21.3777L67.211 21.3523L67.1901 21.3423L66.6019 20.6325L66.5592 20.5145L66.4984 20.4827L66.4948 20.4763L66.4902 20.4736L66.4748 20.4473L66.07 19.86L65.696 19.4416L64.4298 18.3078L64.3989 18.2389L64.3299 18.208L64.054 17.8976L63.375 17.4256L63.1826 17.362L63.0283 17.2486L62.8522 17.1923L62.4374 16.8945L62.3067 16.8501L62.2604 16.8156L62.1769 16.7965L61.0776 16.2746L60.8879 16.2583L60.523 16.1938L60.4041 16.1248L60.1309 16.0558L59.7932 15.8743L59.5845 15.8788H59.5554L59.5246 15.8707L59.2922 15.9669L58.6323 15.6937L58.5288 15.445L58.5116 15.4377L58.4843 15.3723L58.4344 15.3433L58.4081 15.2934L58.3917 15.2816L58.3827 15.2462L58.3473 15.1808L58.2547 14.8177L58.1748 14.6253L58.5007 13.8238L58.6314 13.6895L58.8411 13.6014L59.3022 13.3246L59.8459 13.2147L60.1182 13.1875L60.7772 13.3609Z\" fill=\"black\"/>\n    <path d=\"M43.1078 23.2383L43.4219 23.9962L43.2131 24.6316L43.1351 24.6879L43.1078 24.7551L42.9535 24.8186L42.801 24.9284L42.428 25.4794H42.4271V25.4803L42.3935 25.5303L42.3408 25.5575L42.3118 25.6337L42.0531 25.9251L41.9097 26.0958L41.8688 26.1738L41.8471 26.221L41.7635 26.4924L41.7055 26.5741L41.6719 26.6994L41.4123 27.1496L41.0773 27.7995L40.9738 28.0328L40.5672 29.2409L40.1478 30.9556L40.0671 32.3534L40.038 33.2866L40.0353 33.292L40.0262 33.4055L39.9599 33.803V33.8048L39.8547 34.4067L39.773 35.6938L39.8002 36.4526L39.822 36.8484L39.8238 36.8992V36.9083L39.802 38.9669L39.7993 38.9733L39.773 39.1367L39.7775 39.1684V39.193L39.7112 41.5621V41.5702L39.7085 41.6319L39.9763 41.7427L40.0208 41.8498L40.0244 41.8525L40.0344 41.8661L40.0534 41.9306L40.2032 42.29L40.1242 42.6286L39.9926 42.9L39.9264 43.0679L39.8283 43.1342L39.7848 43.2277L39.7494 43.3121L39.7439 43.3148L39.7394 43.3248L39.7067 43.3511L39.2946 43.5009L38.8398 43.3121L38.7572 43.1124L38.7382 43.1051L38.7137 43.0843L38.6737 43.0552L38.6274 42.9644L38.4586 42.9018L38.386 42.8392L38.3769 42.8201L38.3742 42.8183L38.3715 42.8101L38.356 42.8038L38.3215 42.7384L38.2644 42.7103L38.2453 42.6849L38.1563 42.4216L38.0756 42.2673L38.0256 41.8525V41.8516L37.9993 41.6583L37.9902 41.5366L37.9911 41.5158L38.0492 39.1467L38.0529 39.1376V39.1349L38.0247 38.957V38.9442L38.0547 36.8856V36.8847L38.0556 36.8502L38.0756 36.4953L38.0256 35.741L38.0238 35.6811V35.6584L38.0601 34.2741L38.0619 34.2696L38.071 34.1579L38.1745 33.5017L38.2244 33.1676L38.2653 32.2699V32.269V32.2636L38.3415 30.8476L38.3406 30.8276L38.3379 30.755L38.3615 30.5471L38.7745 28.7644L38.7827 28.7526L38.7872 28.719L39.1702 27.4101L39.1929 27.3929L39.2156 27.2912L39.3336 27.0307L39.5778 26.3263L39.5905 26.3172L39.6005 26.2673L39.7857 25.8334L39.871 25.5221L39.9164 25.4549L39.9409 25.3433L39.9481 25.3278L39.9491 25.326L39.9509 25.3215L39.9727 25.2743L40.0471 25.0982L40.087 25.0719L40.1333 24.9121L40.313 24.628L40.3911 24.5853L40.4365 24.4692L40.6516 24.2404L41.1881 23.4852L41.2398 23.4589L41.2452 23.4435L41.4014 23.3291L41.4586 23.222L41.5067 23.1893L41.6564 23.143L41.7744 23.0568L42.0041 22.9805L42.349 22.9233L43.1078 23.2383Z\" fill=\"black\"/>\n    <path d=\"M52.7819 18.9628L53.0769 19.0082L53.7704 19.3976L53.8312 19.5628L53.9175 19.6145L53.9783 19.7307L54.1053 20.2399L54.0591 20.3525L54.0699 20.3788L53.9374 20.6983L54.0527 20.5739L54.0246 20.662L53.8957 20.799L53.8067 21.0151L53.6206 21.0922L53.5072 21.2139L53.4346 21.2429L53.5444 21.124L53.1695 21.2792L53.1504 21.271L53.0206 21.3246L52.9054 21.3192L52.7638 21.3037L52.761 21.3028L52.7429 21.301L52.6639 21.291L52.2173 21.3972L52.0676 21.4154L52.0467 21.4254L51.1744 21.507L51.06 21.5125L51.0246 21.5116L49.7747 21.5542L48.3896 21.8692L47.9257 21.9936L47.5681 22.1161L47.1841 22.2577L47.1823 22.2586L45.7209 22.816L45.5584 22.8468L45.5103 22.874L45.3542 22.9013L44.9621 23.0138L44.6589 23.248L43.9818 23.8244L43.9219 23.8471L43.901 23.8861L42.9842 24.5106L42.632 24.8574L42.4714 25.117L42.3797 25.1678L42.3243 25.2912L42.0702 25.5145L42.0175 25.5717L41.9758 25.6498L41.9467 25.667L41.9276 25.7279L41.8478 25.8395L41.7987 25.8649L41.7724 25.9285L41.2632 26.139L40.96 26.0728L40.8221 26.0083L40.7776 25.9384L40.754 25.9285L40.7213 25.8495L40.459 25.4347L40.7268 24.9173L40.7767 24.8819L40.8021 24.832L40.823 24.8192L40.8366 24.7711L40.9382 24.6141L41.1107 24.3064L41.1352 24.2919L41.1497 24.2447L41.3631 23.9388L41.7007 23.3869L41.8078 23.327L41.8732 23.1863L42.7636 22.422L43.429 21.8175L43.4662 21.803L43.4798 21.7739L43.9255 21.4226L44.0135 21.3527L44.0235 21.3491L44.0272 21.3418L44.4601 21.0078L44.658 20.9397L44.8377 20.8199L44.9693 20.7845L46.3273 20.1882L46.6913 20.0139L46.7938 19.9903L46.8474 19.9522L47.2486 19.8251H47.2504L47.7533 19.6599L47.8222 19.6481L47.8468 19.6326L49.3681 19.2614L49.5414 19.2405L49.5623 19.2305L49.6041 19.2269L49.6277 19.226L49.6295 19.2251L50.9556 19.147H50.9574L50.9756 19.1461L51.7825 19.078L52.3871 18.9682L52.6022 18.9482L52.7819 18.9628Z\" fill=\"black\"/>\n    <path d=\"M53.8534 19.1238L54.8746 19.1274L54.8782 19.1292L55.2222 19.2L55.5481 19.338L56.9369 19.7755L56.9469 19.7882L56.9995 19.7982L57.4034 19.9607L57.595 19.9816L57.653 19.9797L57.6884 19.9788L57.9317 20.0106L58.126 20.0614L58.4073 20.2493L58.5553 20.3111L58.5771 20.3628L58.6361 20.4018L58.8385 20.9927L58.5553 21.6744L58.1314 21.8505L58.0679 21.8959L57.595 22.0484L57.5441 22.0275L57.5078 22.042L57.5133 22.0439H57.5042L57.418 22.0783L57.2183 22.1174L56.8652 21.7634L56.8525 21.7616L56.316 21.5673L56.3115 21.561L56.2906 21.5573L54.8982 20.9936L54.6649 20.9029L53.8734 20.8339L53.7209 20.8557L53.5974 20.8647L53.5448 20.8629L53.1037 20.8357L52.9557 20.8657L52.8241 20.8784L52.8186 20.8811L52.353 20.8938L52.3194 20.9483L52.2323 20.99L51.9472 21.0563L51.9 21.1044L51.7557 21.0817L51.7503 21.0826L51.7258 21.0771H51.7239L51.723 21.0762L51.4789 21.0227L51.3645 20.97L51.3327 20.921H51.1929L50.6919 20.42L51.1693 19.9434L51.1802 19.9171L51.1975 19.9098L51.2456 19.7873L51.2574 19.7828L51.2619 19.7719L51.4244 19.7038L51.497 19.6702L51.5215 19.6076L52.028 19.3634L52.6716 19.3162L52.8522 19.2708L52.9267 19.2608L52.9412 19.2527L53.464 19.181L53.69 19.1392L53.8498 19.1238H53.8534Z\" fill=\"black\"/>\n    <path d=\"M57.7976 20.2762L57.9075 20.2853L57.9301 20.3107L58.266 20.4233L58.2978 20.4469L59.004 20.4514L59.0067 20.4523L59.2272 20.485L59.5749 20.5894L59.5894 20.6103L59.6775 20.6293L60.2929 20.9198L60.2974 20.9252L60.3129 20.9289L61.4021 21.4871L61.4221 21.5198L61.4929 21.5416L61.9612 21.8674L62.1718 21.9237L62.2308 22.0009L62.4323 22.059L63.0977 22.4756L63.3328 22.6244L64.2595 23.0002L64.7733 23.1899L64.7815 23.2017L64.8214 23.2099L65.0383 23.3052L65.0629 23.3433L65.16 23.3724L65.5703 23.6374L65.6256 23.7391L65.8326 23.8353L65.9415 23.9642L66.0014 24.0105L66.0087 24.0241L66.0277 24.0314L66.4435 24.3763L66.468 24.429L66.5624 24.5751L66.6014 24.6041L66.6268 24.6541L66.6404 24.6613L66.6849 24.7249L66.7094 24.8038L66.7167 24.8156L66.8601 24.8991L67.0035 25.1533L67.0298 25.2504L67.0607 25.2722L67.0979 25.3666L67.156 25.4456L67.1578 25.451L67.1605 25.4528L67.1869 25.4892L67.205 25.5463L67.235 25.5636L67.5717 26.1309L67.5799 26.1618L67.6026 26.1745L68.2398 27.2937L68.2816 27.4507L68.3378 27.5378L68.4912 28.156L68.5021 28.2413L68.5112 28.2585L68.6465 29.2044L68.6483 29.228L68.6501 29.2316L68.7073 29.7081L68.7781 30.0631L68.798 30.2664V30.2782L68.7953 30.526V30.5378L68.8452 31.7641L68.8461 31.8086L68.8452 31.8467L68.8443 31.8748L68.8398 31.8857L68.8189 32.0673L68.769 32.2833L68.7735 32.5265V32.5465L68.7654 32.6736L68.6918 33.2745L68.6691 33.319L68.6347 33.505L68.5884 33.6294L68.5974 33.7919L68.5993 33.8454L68.6047 34.754L68.6065 34.7722L68.612 34.7831L68.8707 38.0844L68.8743 38.1752L68.867 38.3022L68.8534 38.4221L68.8525 38.4293L68.8443 39.3606L68.8616 39.485V39.5231L68.7763 42.0057L68.7499 42.0647L68.7536 42.0746L68.7263 42.317L68.6601 42.6075L68.5003 42.858L68.4713 42.9106L68.3959 43.094L68.3651 43.1067L68.3478 43.1394L68.0692 43.2438L68.0583 43.2737L67.9993 43.3463L67.7124 43.4816L67.5572 43.3264L67.0571 43.1394L67.0398 43.1067L67.009 43.094L66.93 42.9043L66.8837 42.8181L66.7947 42.7591L66.6849 42.4976L66.5987 42.0746L66.6168 42.0329L66.6068 41.9666V41.963L66.615 39.4813L66.6159 39.4795L66.6341 39.3488L66.6441 38.3685L66.645 38.3676L66.6477 38.2968L66.6531 38.2251L66.6541 38.2224L66.6559 38.1979L66.6604 38.1507L66.4616 34.9374L66.4598 34.8675L66.4707 34.7368L66.4961 33.8209L66.497 33.82V33.7946L66.5179 33.4116L66.5333 33.3771L66.586 33.0966L66.6522 32.9268L66.674 32.4911L66.6767 32.4857L66.6813 32.4122L66.7294 32.0382L66.7321 32.0337L66.7339 32.0101L66.7757 31.7532L66.7857 30.5559L66.7848 30.5459V30.526V30.5251L66.7829 30.3399L66.7367 30.0013L66.7321 29.9296L66.7294 29.9242L66.6994 29.4231L66.6141 28.5309L66.5315 28.1088L65.9506 27.1521L65.947 27.1403L65.9342 27.1339L65.5839 26.5748L65.5802 26.5602L65.4613 26.3914L65.3724 26.1109L65.3361 26.0447L65.2916 25.9875L65.2135 25.9012L65.1627 25.7687L64.8278 25.5L64.7751 25.3911L64.6698 25.3394L64.6099 25.2604L64.4783 25.137L64.1833 24.9663L64.0726 24.9046L63.616 24.7539L63.6024 24.7339L63.5252 24.7176L62.5295 24.2592L62.4913 24.1993L62.3579 24.1539L62.1065 23.9588L61.5392 23.5966L61.4774 23.5803L61.1616 23.3978L61.137 23.3561L61.0626 23.3297L60.5552 22.9294L59.5431 22.3821L59.5386 22.3748L59.5241 22.3712L59.0103 22.0717L58.7934 21.999L58.0627 21.8493L58.0363 21.8166L57.8457 21.7639L57.7895 21.7295L57.6878 21.6777L57.6833 21.6705L57.6079 21.6632L57.1314 21.5706L56.869 21.5407L56.8591 21.5289L56.7265 21.5025L56.6757 21.4826L56.5586 21.3056L56.3934 21.1921L56.378 21.154L56.3426 21.0995L56.3353 21.0768L56.1147 20.8562L56.6158 20.3552L56.7955 20.3888L56.8591 20.4133L56.879 20.4423L57.066 20.3933L57.106 20.3879L57.1105 20.3833L57.6034 20.288L57.7404 20.2744L57.7976 20.2762Z\" fill=\"black\"/>\n    <path d=\"M80.1095 42.9189L80.2684 42.9425L80.2711 42.9443L80.2838 42.9452L80.7458 43.0251L80.8629 43.0932L81.0889 43.1576L81.1162 43.1749L81.4121 43.193L81.4211 43.1967L81.5165 43.2048L81.7597 43.2466L81.8814 43.3174L82.1128 43.3846L82.1582 43.4127L82.1618 43.42L82.1745 43.4236L82.3279 43.5262L82.4033 43.6678L82.5621 43.7458L83.1213 44.4738L83.3164 44.6617L83.5198 44.826L83.5325 44.8305L83.5887 44.9186L83.6741 44.9676L83.7476 45.1691L83.8828 45.3815L84.127 46.4099V46.4118L84.1334 46.4381L84.2114 46.7031L84.2859 46.9319L84.3303 47.2078L84.3376 47.2251L84.3557 47.7797L84.3712 47.8668L84.3757 47.9158L84.3793 47.9231L84.4048 48.1209L84.5055 48.5757L84.5327 48.8162L84.5246 48.9506L84.4837 49.271L84.4828 49.2728L84.4511 50.4202L84.4474 50.4283L84.4293 50.6044L84.3921 50.7805L84.3548 51.9832L84.3557 52.0005V52.035V52.054L84.3312 53.3402L84.3303 53.342L84.3267 53.4192L84.2913 53.7832L84.2504 53.864L84.1942 54.0891L84.2187 54.7335L84.2196 54.7744L84.2123 54.8906L84.1996 55.0104L84.2032 55.9408V55.9453V55.958V56.0216L84.206 56.2249L84.2287 56.5807V56.5816L84.3122 57.7916L84.3149 57.8642V57.876V57.8778L84.3648 58.6376L84.393 58.7973L84.3966 58.8146L84.4075 58.9135L84.4147 58.9289L84.5037 59.7595L84.5091 59.8539L84.5101 59.8557L84.5209 60.5356V60.5528L84.5146 60.6645L84.4501 61.2554L84.4402 61.2744L84.4265 61.3843L84.3657 61.6284L84.3194 62.6296L84.3485 63.1198L84.3503 63.1779L84.3494 63.187L84.3394 64.3225V64.3234L84.3376 64.3715L84.3358 64.3996L84.314 64.8172L84.3131 64.8199L84.3113 64.8598L84.2205 65.7594V65.7603L84.2141 65.8147L84.1315 66.5745V66.599V66.6081L84.1116 67.209L84.1088 67.2144L84.0989 67.3279L84.0526 67.6129L84.0489 67.6193L84.0226 68.3064L84.0235 68.3645V68.3781V68.4053L83.9745 70.0936L83.9754 70.1463V70.1581L83.9745 70.1935L83.9672 70.3868V70.8243L84.0626 71.8627L84.0662 71.9535V71.9889L84.0653 72.0152L84.0689 72.2621V72.2785V72.2975L84.0344 74.0685L84.0335 74.0703L84.029 74.1474L83.9609 74.8082L84.029 76.0609V76.069V76.0699L84.0489 76.4857V76.4902V76.4911L84.0925 77.4841L84.0934 77.5223L84.0943 77.9552V77.9589V77.9725L84.0834 78.6596L84.0825 78.6814L83.9954 80.7119L84.078 81.2747L84.088 81.4L84.0871 81.4308L84.0217 83.1899L84.0253 83.593L84.0326 83.6338L84.0117 83.8108L83.9173 84.2002L83.9101 84.2746V84.2783L83.9092 84.2801L83.9046 84.33L83.8792 84.3527L83.7176 84.7439L83.252 84.9373L82.7863 84.7439L82.5984 84.291L82.5957 84.2892V84.2846L82.593 84.2783L82.5948 84.2574L82.5903 84.1494L82.5313 83.7473L82.5222 83.6338L82.5295 83.592L82.534 83.1963L82.4396 81.4798L82.3543 80.8735L82.3461 80.7546V80.7419L82.3788 78.6387L82.3779 78.0396L82.3134 77.6974L82.2998 77.5577L82.2971 77.5513L82.2689 76.5764L82.239 76.1834V76.1752L82.2381 76.1743L82.1455 74.8527L82.1446 74.83L82.1437 74.8291L82.1092 74.0957L82.1083 74.0485V74.0276L82.1455 72.2594L82.15 72.0152L82.1491 71.9907L82.1482 71.9535L82.1491 71.9027L82.2045 70.8597L82.1863 70.4077V70.405L82.1782 70.1953L82.1773 70.1581V70.1463L82.1782 70.0764L82.1909 68.3717V68.3654L82.1918 68.2882L82.1936 67.5049L82.2027 67.3787L82.2099 67.3215L82.2154 67.3125L82.2199 67.268L82.2708 67.0165L82.3497 66.4492H82.3506L82.3543 66.4193L82.4096 65.6486L82.4105 65.6468L82.4114 65.6305L82.416 65.5878L82.475 64.7582L82.4559 64.396L82.455 64.3742L82.4532 64.3225V64.3216L82.4432 63.2332L82.3951 62.7839L82.3915 62.7086L82.3824 62.6569L82.3833 62.6378L82.4042 61.5531L82.4051 61.5522L82.4069 61.5077L82.4105 61.4487V61.4478L82.4114 61.4369L82.4414 61.0738L82.4677 60.5192L82.4777 59.9092L82.4114 59.1758L82.4087 59.1722L82.367 58.9462L82.3588 58.8599L82.3534 58.8491L82.2762 58.0031L82.2726 57.9187L82.2717 57.9178V57.8769V57.8724L82.2626 56.7523L82.2063 56.4772L82.1836 56.2657V56.2503L82.1872 56.0216L82.1863 55.9589V55.9453V55.9408L82.1909 55.0104L82.1773 54.8951L82.1709 54.7744V54.7354L82.2036 53.883H82.2045V53.8776L82.2054 53.844L82.2172 53.8195L82.2599 53.5653L82.2871 53.4873L82.2971 53.2758L82.3443 51.9977V51.9823L82.3043 50.6861V50.658L82.3025 50.6471L82.3379 50.3757L82.367 50.2704L82.3279 49.2029L82.327 49.1612L82.3325 49.0568L82.3352 49.0214L82.3397 49.0123L82.3452 48.9506L82.3942 48.6583L82.4223 48.4278L82.4006 48.3361L82.3534 48.258L82.3334 48.1609L82.3279 48.1382L82.3043 47.9412L82.2998 47.9312L82.2816 47.3703L82.2526 47.2142L82.1854 46.9573L82.1791 46.9083L82.1709 46.8946L82.1627 46.8547V46.8529L81.9921 46.0823L81.7379 45.8553L81.7062 45.7845L81.639 45.7528L81.1461 45.1618L80.7131 45.1219L80.547 45.0393L80.2112 44.9268L80.2066 44.9231L80.016 44.9041L79.3834 44.5855L79.3825 44.5846L79.2799 44.4711L79.0366 43.843L79.3098 43.1822L79.9706 42.9089L80.1095 42.9189Z\" fill=\"black\"/>\n    <g className=\"animate\">\n      <path d=\"M53.5024 55.1342L54.4927 55.3366L54.6461 55.431L54.9556 55.5109L55.6537 55.8994L55.975 56.2143L56.1048 56.2751L56.3635 56.5829L56.6576 56.9114L56.732 57.1075L56.9408 57.3662L57.253 58.1378L57.3474 58.6179L57.361 58.6479L57.3619 58.6924L57.3683 58.7259V58.7423L57.3674 58.8648L57.3756 59.1344L57.3765 59.1907L57.3629 59.237L57.361 59.4911L57.3565 59.502L57.2812 59.964L57.1604 60.3271L57.0742 60.4442L57.027 60.6176L56.7275 60.9126L56.5922 61.0969L56.516 61.1214L56.4452 61.1913L56.2264 61.3165L55.7689 61.4391L55.6691 61.4999L55.5057 61.5462L55.4975 61.5607L55.0954 61.9882L55.0364 62.108L54.8667 62.2406L53.7783 62.6145L52.7463 62.2823L52.4776 62.0899L52.425 61.9873L52.1744 61.7558L51.5209 61.4971L51.0734 61.1377L50.8619 61.046L50.3609 60.5132L50.2692 60.2836L50.2401 60.2418L50.1866 60.0757L49.8743 59.492L49.7926 58.8812L49.7754 58.6334L49.9052 57.9607L49.9651 57.8137L49.9751 57.762L49.9733 57.5804V57.5605L50.1203 56.9441L50.1412 56.8352L50.153 56.8071L50.1593 56.778L50.1848 56.7281L50.2819 56.4894L50.3445 56.4131L50.4026 56.2978L50.4244 56.227L50.507 56.1617L50.7893 55.8676L50.8056 55.8485L50.8093 55.8476L50.9863 55.6634L51.0189 55.6271H51.0217L51.0226 55.6252L51.4256 55.3765L52.2189 55.1487L52.287 55.1187L53.1321 55.1015L53.1693 55.1006L53.5024 55.1342Z\" fill=\"black\"/> -->\n      <path d=\"M55.3139 58.5397L55.3847 58.6468L55.48 58.6867L55.5926 58.9581L55.9266 59.4592L55.9529 59.5563L56.0138 60.0056V60.0438L55.9983 60.6955L56.3859 61.6304L56.3823 61.743L56.3705 61.9109L56.5956 62.7088V62.7187L56.5874 64.024L56.5865 64.0249L56.5792 64.1702L56.4431 65.4709L56.3877 66.4748L56.3841 66.4839L56.3768 66.5937L56.2434 67.6031L56.0473 67.9698L55.7206 68.7568L55.4056 68.8875L55.1415 69.5247L54.0577 69.9731L53.7073 69.8369L53.425 69.7434L52.9276 69.9903L52.8486 69.9976L52.6907 70.0049L51.694 69.6726L51.6169 69.5601L51.5188 69.5201L51.4153 69.2705L51.1013 68.8176L50.9896 68.44L50.7682 68.0687L50.5893 67.1601L50.5621 66.8869L50.5567 66.8751L50.544 66.3995L50.4169 65.5444L50.4023 65.3547L50.3987 65.3465L50.3261 63.0855L50.3252 63.0292L50.3443 62.7759L50.544 61.4625L50.6728 61.231L50.8026 60.8108L50.848 60.7436L50.8607 60.7372L50.9733 60.1935L51.2982 59.6625L51.4108 59.3911L51.4825 59.3612L51.5306 59.2831L52.5518 58.9182L52.8441 59.0371L52.9475 58.9046L53.0383 58.6867L53.1554 58.6377L53.268 58.4934L54.2592 58.1812L55.3139 58.5397Z\" fill=\"black\"/>\n      <path d=\"M54.1402 52.4563L54.319 52.5081L54.5496 52.5625L54.7665 52.7014L55.0978 52.7994L55.5589 53.0972L55.6878 53.1271L56.5783 53.5674L56.945 53.9014L57.1347 53.9831L57.7165 54.603L58.0669 54.9008L58.125 55.0288L58.4127 55.292L59.0182 56.2033L59.1607 56.6735L59.3077 56.9313L59.4357 57.6838L59.463 58.0024L59.4357 58.3183L59.2342 59.4729L59.1398 59.6353L59.0454 60.0157L58.6061 60.8399L58.4019 61.0541L58.341 61.2111L57.722 61.8882L57.5822 61.95L57.328 62.215L56.886 62.491L56.5048 62.9121L56.3505 62.9802L56.0436 63.2734L55.5163 63.5611L55.4001 63.5911L55.3874 63.622L55.2303 63.6873L54.9898 63.9306L53.9723 64.2083L53.759 64.1965L53.5339 64.1729L52.8812 63.8371L52.4256 63.7599L52.2032 63.6328L51.7575 63.5067L51.0141 63.0537L50.8325 62.8649L50.6238 62.8168L49.6879 62.3575L49.6834 62.3539L49.6779 62.353L48.9073 61.7103L48.3672 60.9987L48.1857 60.4613L47.9506 60.0592L47.7954 59.2205L47.7563 58.8021L47.8671 58.1086L48.1712 57.1764L48.4054 56.8569L48.5787 56.1343L48.9781 55.3519L48.9817 55.3474L48.9836 55.341L49.6462 54.5858L49.7043 54.544L49.8976 54.2291L50.2235 53.9159L50.5276 53.5973L51.3581 53.0763L51.4253 53.0572L51.6467 52.8784L52.2531 52.6642L52.6289 52.4745L53.4331 52.3928L53.6264 52.3828L54.1402 52.4563Z\" fill=\"black\"/>\n      <path d=\"M55.4343 60.2647L55.4425 60.2828L55.4616 60.291L55.5641 60.5397L55.8001 61.038L55.8292 61.4756L55.9463 61.5182L55.9662 61.55L56.0325 61.5772L56.037 61.5863L56.0452 61.5899L56.1605 61.8677L56.1687 61.8858L56.3683 62.2162L56.7015 63.8392L56.7242 64.057L56.7278 64.0652L56.7596 65.483V65.5112L56.7577 65.5756L56.6633 67.3257L56.6606 67.3311L56.657 67.3965L56.5372 68.4122L56.5354 68.6609L56.5335 68.6654L56.4827 69.0158L56.46 69.0912L56.3293 69.2772L56.2749 70.0751L56.224 70.1831L56.2431 70.312L56.2612 70.5516L55.8047 71.6527L55.2691 71.8742L55.2846 72.2145L55.2864 72.2899L54.8243 73.4064L53.7079 73.8684L52.6214 73.4354L52.6123 73.4145L52.5914 73.4064L52.4498 73.0642L52.1312 72.3761L52.055 70.9728L51.9733 70.942L51.9478 70.8929L51.9006 70.873L51.8671 70.794L51.6837 70.7214L51.671 70.696L51.6456 70.6851L51.4949 70.3293L51.1536 69.6176L50.9939 67.4745L50.9902 67.3838L50.9893 67.382L50.9339 64.7215V64.6852L50.9367 64.5853L50.9448 64.4455L50.9321 62.7799V62.7663L50.9712 62.4041L51.0692 61.9439L51.3969 61.4129L51.5094 61.1406L51.5839 61.1097L51.6347 61.0281L52.6658 60.6623L52.7884 60.7058L52.8047 60.6995L53.5363 60.9554L53.8114 60.291L54.6365 59.9497L55.4343 60.2647Z\" fill=\"black\"/>\n      <path d=\"M52.6664 61.0462L52.6701 61.0543L52.6791 61.058L52.7209 61.1025L52.9859 61.7569L52.8634 62.1L53.0377 62.513L53.0413 62.8688V62.8815L53.0386 62.9651L52.9251 64.7541L52.887 65.8579L52.9986 65.9042L53.4089 66.8954L53.4035 67.0207L53.339 67.7387L53.2864 68.3096L53.3499 68.4639L53.4471 68.6872L53.6967 69.0848L53.7548 69.3371L53.7938 69.6757V69.7165L53.7529 71.1679L53.6831 71.3277L53.4362 72.0303L53.3508 72.0847L53.3163 72.1628L53.0586 72.2681L52.6301 72.5368L52.5139 72.564L52.2443 72.5948L51.5518 72.3679L51.4456 72.2899L51.4292 72.2572L51.4174 72.2526L51.3956 72.2L51.2894 72.1564L51.2776 72.1292L51.2332 72.111L50.9218 71.3595L50.8656 71.3359L50.8628 71.3313L50.8583 71.3286L50.7312 71.0282L50.4643 70.4164L50.4571 70.1468L50.2619 69.6757L50.2637 69.6094L50.2765 69.3698L50.2746 66.4434L50.2601 66.132L50.2583 66.0649V66.0512L50.2719 64.6733L50.2728 64.6715L50.2765 64.5826L50.4108 62.8897L50.409 62.5339L50.4081 62.5257L50.7938 61.5962L50.9845 61.5173L50.9854 61.5155L51.0298 61.4846L51.0707 61.3421L51.1506 61.215L51.235 61.1678L51.2858 61.0462L51.9766 60.7603L52.6664 61.0462Z\" fill=\"black\"/>\n      <path d=\"M56.1041 65.5987L56.1231 65.6341L56.1567 65.6486L56.2584 65.8928L56.5089 66.3721L56.5779 66.9394L56.5879 67.0973V67.1173L56.5715 68.192L56.5661 70.3668H56.5652L56.5634 70.4322L56.5561 70.5665L56.5852 70.6364L56.5815 70.7326L56.5162 71.5714L56.5207 71.5886L56.6215 71.8337L56.6069 72.0297L56.557 72.3701L56.2838 72.8621L56.1713 73.1017L56.1449 73.1126L56.1304 73.139L55.2962 73.4494L54.8996 73.3214L54.8624 73.3278L54.7561 73.3241L54.4412 73.2996L54.0908 73.2933L54.0518 73.2769L53.6842 73.1843L53.2702 73.1952L53.1976 73.2252L52.6067 73.3432L52.1855 73.4594L51.0663 73.0119L51.0582 72.9928L51.0391 72.9846L50.893 72.6306L50.5662 71.9172L50.5589 71.7683L50.5571 71.6839L50.9456 70.6156L51.001 70.5493L51.0337 70.5339L51.0446 70.5075L51.0763 70.4939L51.0963 70.4458L52.2518 69.9665L52.4288 70.0401L52.7765 70.0074L52.9335 69.9992L53.0597 70.0047L53.8648 70.0682L53.8739 70.0337L53.9002 68.92V68.91L53.9229 68.3254L53.8221 68.0831L53.8857 67.7817L53.9592 67.612L54.0627 67.5448L54.0563 67.1182V67.1037H54.0554L54.0536 66.5255V66.52L54.4139 65.6486L55.2853 65.2874L56.1041 65.5987Z\" fill=\"black\"/>\n      <path d=\"M53.4007 58.5625L53.4098 58.5888L53.9345 58.8057L54.1024 59.2124L54.1496 59.2541L54.1596 59.344L54.165 59.4302L53.9445 59.9612L53.4134 60.1818L53.2292 60.0166L52.8715 59.8686L52.759 59.5954L52.6664 59.5128L52.6564 59.4239L52.6519 59.3376L52.6546 59.3304L52.6401 59.3158L52.5756 59.1634L52.5148 59.1207L52.4377 58.9028L52.4077 58.7286L52.9178 58.2175L53.4007 58.5625Z\" fill=\"black\"/>\n      <path d=\"M54.9174 63.2651V63.2661L54.9183 63.267L55.0046 63.473L55.1807 63.8951L55.1816 64.0676L55.2297 64.7756L55.2324 64.8491L55.2315 64.8809L55.2233 65.1523L55.1816 65.2467L55.0663 65.5998L55.0826 65.7114L55.0917 65.7323L55.1389 66.7779L55.1398 66.8015V66.8025L55.1589 67.5086L55.2596 68.3038L55.2669 68.321L55.3667 68.8157V68.8203L55.3649 69.2714L55.4276 70.3271L55.4357 70.436L55.9676 70.78L56.1074 70.8381L56.1256 70.8826L56.2917 70.9906L56.3098 71.0414L56.3425 71.0587L56.4387 71.1939L56.7337 72.1179L56.2681 73.2426L55.1425 73.7091L55.0236 73.6601L54.6315 73.779L54.4155 73.8907L54.2539 73.9097L54.0642 73.9206L53.8137 73.9007L53.6948 73.8825L53.683 73.8753L53.6294 73.8698L53.5532 73.8544L53.2727 73.8943L53.0585 73.9097L52.6246 73.7382L52.601 73.7436L52.4748 73.7908L51.3801 73.337L50.9263 72.2414L51.0533 71.9337L51.1949 71.4136L51.2467 71.3237L51.3474 71.2248L51.3801 71.1458L51.46 71.1122L51.7114 70.8635L51.7378 70.8154L51.8058 70.7718L51.9856 70.7183L52.1217 70.6148L52.1734 70.5948L52.414 70.5522L52.4775 70.5168L52.6863 70.4859L52.9069 70.4687L52.906 70.4559L52.9051 70.4532L52.8687 69.3821L52.837 69.0318L52.817 68.951L52.7925 68.7613L52.7798 68.7359L52.6936 67.712L52.6881 67.604L52.6899 67.5368L52.7317 66.7671L52.7344 66.7607L52.7389 66.6863L52.8687 65.6397L52.9169 65.548L52.9867 65.2657L53.0312 65.1804L53.0575 65.0878L53.0857 64.9262L53.1102 64.8845L53.1338 64.7483L53.211 64.5359L53.378 63.9096L53.4025 63.7535L53.5858 63.4285L53.653 63.267L53.6848 63.2533L53.7038 63.2198L54.2857 63.0046L54.9174 63.2651Z\" fill=\"black\"/>\n    </g>\n  </svg>\n)\n\nexport default CryptogramsSketch"},"relativePath":"sketches/cryptograms.jsx"},{"fields":{"contents":"import React from 'react'\n\nconst CursorSketch = () => (\n  <svg className=\"sketch cursor\" width=\"56\" height=\"54\" viewBox=\"0 0 56 54\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0)\">\n      <path d=\"M731.106 -751H-769.011V249.078H731.106V-751Z\" fill=\"white\"/>\n      <path d=\"M12.5719 8.85956L12.7711 8.86318L12.7717 8.86439L12.8514 8.87646L12.989 8.92051L13.0288 8.97603L13.1362 9.03457L13.1827 9.10699L13.2279 9.26028L13.2267 9.28563L13.2159 9.40935L13.2147 9.41055L13.2116 9.43711L13.1658 9.67006L13.1579 9.6767L13.1465 9.72981L13.0565 9.92655L12.9799 10.1311L12.96 10.1444L12.9413 10.2029L12.9262 10.2247L12.9395 10.2506L12.9938 10.2814L13.0469 10.3731L13.065 10.4389L13.0795 10.4498L13.1054 10.5475L13.1127 10.6025L13.1157 10.6049L13.132 10.8161L13.1332 10.8415L13.1259 10.9072L13.0578 11.2211L13.0487 11.2283L13.0366 11.2832L12.8833 11.6133L12.8689 11.623L12.858 11.658L12.5719 12.0672L12.555 12.0762L12.5454 12.0997L12.2038 12.4649L12.1785 12.4763L12.1676 12.4981L11.7488 12.8209L11.7204 12.8306L11.7119 12.8451L11.3281 13.0593L11.2684 13.075L11.2587 13.0877L10.8387 13.1987L10.762 13.209L10.7457 13.2084L10.4259 13.1909L10.4229 13.1879L10.3444 13.174L10.2014 13.1233L10.1966 13.1154L10.1706 13.1094L10.0282 13.037L10.0137 13.0134L9.96964 12.9966L9.86282 12.9006L9.84955 12.8704L9.8242 12.8577L9.73186 12.7322L9.71798 12.6894L9.70048 12.6779L9.64436 12.5524L9.63289 12.4993L9.62565 12.4926L9.549 12.1179L9.54297 12.0593V12.0551L9.5484 11.667H9.549L9.55142 11.6302L9.61841 11.1722L9.62263 11.1692L9.62806 11.1317L9.74514 10.7491L9.75359 10.7431L9.76144 10.7087L9.9449 10.3369L9.95757 10.3291L9.96663 10.3007L10.0855 10.1311L10.1036 10.1221L10.1133 10.0979L10.2376 9.96879L10.2563 9.96034L10.2648 9.94405L10.5556 9.70929L10.5858 9.69842L10.5955 9.68213L10.9624 9.47211L10.9793 9.46789L10.9835 9.46125L11.7814 9.08165L11.7995 9.07742L11.8031 9.07259L12.1386 8.94224L12.1857 8.93319L12.1905 8.92715L12.5092 8.86499L12.5659 8.85956H12.5719ZM11.6975 10.5427L11.339 10.6507L11.0384 10.7932L10.7657 10.9784L10.6009 11.1468L10.4826 11.3345L10.4361 11.486L10.4283 11.6459V11.6465L10.4597 11.7714L10.196 12.0352L10.1091 12.002L10.1084 12.0346L10.17 12.3478L10.2038 12.419L10.2635 12.5011L10.3203 12.553L10.3945 12.591L10.4814 12.6097L10.7301 12.6224L11.071 12.5294L11.4005 12.343L11.7741 12.0376L12.0837 11.7002L12.3402 11.3315L12.4633 11.0587L12.5116 10.8185L12.5098 10.7853L12.2744 10.9072L11.9413 10.5741L11.96 10.515L11.6975 10.5427ZM12.6021 9.43469L12.3366 9.49685L12.03 9.62238L11.2509 9.99414L10.9081 10.1957L10.867 10.2253L11.1151 10.1142L11.1441 10.1082L11.1489 10.1016L11.5514 9.97664L11.6039 9.96819L11.6069 9.96457L11.9829 9.92232L12.0173 9.92051H12.0282L12.3185 9.93137L12.3969 9.81912L12.418 9.80826L12.4289 9.7805L12.5581 9.64652L12.6287 9.51315L12.6486 9.43349L12.6021 9.43469Z\" fill=\"#02A556\"/>\n      <path d=\"M10.76 7.83194L11.1686 7.83556L11.1722 7.83737L11.3786 7.87237L11.9024 8.05523L11.9308 8.09627L12.0581 8.13731L12.3581 8.35035L12.4232 8.35336L12.4317 8.35759L12.5355 8.37026L12.6731 8.40406L13.0678 8.43665L13.0841 8.44449L13.1915 8.46018L13.7316 8.62132L13.7467 8.64123L13.83 8.66175L14.3074 8.90738L14.3351 8.95264L14.4214 8.98523L14.7612 9.27974L14.7877 9.33828L14.8403 9.36483L15.1251 9.7396L15.1661 9.8597L15.2072 9.88867L15.3387 10.2441L15.3599 10.3618L15.3719 10.3853L15.4196 10.8307L15.4232 10.8959L15.4178 10.9768L15.3556 11.4179L15.3369 11.4523L15.3128 11.5694L15.1076 12.0468L15.1052 12.048L14.9042 12.5211L14.8819 12.5362L14.8638 12.5978L14.5192 13.1506L14.4836 13.1699L14.4625 13.226L13.9676 13.7879L13.9145 13.812L13.8909 13.8609L13.792 13.9394L13.6912 14.2001L13.667 14.2158L13.6477 14.2882L13.2663 14.9267L13.2174 14.9538L13.1879 15.0299L12.7859 15.4578L12.6779 15.5042L12.6369 15.5748L12.4172 15.7004L12.279 15.7378L12.2138 15.7758L11.7618 15.8603L11.6399 15.8718L11.5669 15.8681L11.3623 15.8446L10.9827 15.9333L10.7383 15.9038L10.5198 15.8905L10.4178 15.8959L10.3128 15.9019L10.1667 15.9182L10.1203 15.9424L10.0334 15.9333L9.99475 15.914L9.8306 15.8784L9.58014 15.7656L9.54031 15.7034L9.41116 15.6533L9.05027 15.3232L9.00078 15.2109L8.92474 15.1669L8.60851 14.6177L8.57773 14.5024L8.5373 14.4391L8.38099 13.7891L8.3659 13.663L8.36228 13.6551L8.35625 13.4994L8.2959 13.4499L8.25848 13.3715L8.18606 13.3353L7.82637 12.8567L7.78292 12.7275L7.73585 12.6955L7.55419 12.2321L7.52402 12.0739L7.50893 12.0438L7.46005 11.5314L7.45703 11.465L7.47393 11.3153L7.6236 10.6575L7.66343 10.5948L7.69421 10.4789L7.91931 10.086L7.98449 10.0486L8.02674 9.94721L8.51195 9.46924L8.60127 9.43303L8.63386 9.37509L9.12148 9.08239L9.15709 9.00514L9.1939 8.98161L9.22167 8.89531L9.5216 8.4795L9.61213 8.43363L9.6586 8.34009L10.0056 8.07696L10.1752 8.01963L10.2114 7.97074L10.5554 7.86332L10.7552 7.83194H10.76Z\" fill=\"#02A556\"/>\n      <path d=\"M12.5116 6.16678L12.8043 6.17704L12.8104 6.17945L12.9106 6.19213L13.2177 6.26998L13.2274 6.28265L13.2926 6.29653L13.5581 6.41361L13.5738 6.43775L13.6341 6.45646L14.0838 6.76183L14.1103 6.81192L14.1731 6.84028L14.3813 7.07022L14.3964 7.10945L14.4139 7.11669L14.4314 7.14385L14.4398 7.14867L14.4416 7.15169L14.5153 7.17583L14.823 7.40214L14.8375 7.43051L14.8743 7.44499L15.4386 7.9809L15.4646 8.04185L15.5122 8.06599L15.9383 8.67191L15.9504 8.70993L15.9691 8.72139L16.1507 9.04004L16.1785 9.14384L16.2051 9.16316L16.2491 9.30256L16.2998 9.38283L16.3354 9.50534L16.3662 9.52827L16.3692 9.54034L16.3589 9.5844L16.2811 9.91089L16.1743 10.3611L16.1308 10.5428L15.7627 11.3792L15.4929 11.99L15.3258 12.3708L15.1538 12.7612L15.1435 12.7836L15.0735 12.9423L14.9305 13.267L14.8653 13.4154L14.8339 13.486L14.6746 13.7612L14.6064 13.8789L14.4887 14.0829L14.4628 14.1275L13.8556 15.1764L13.817 15.1909L13.7174 15.2096L13.6891 15.2253L13.4054 15.2712L13.3771 15.302L13.3252 15.3249L13.3022 15.3708L12.9582 15.6387L12.878 15.6659L12.855 15.7039L12.5617 15.8499L12.4754 15.8705L12.4609 15.8898L12.1079 15.9936L12.0801 15.9978L12.0156 15.9984L11.5485 16.002L11.0777 15.9447L10.852 15.9175L10.7561 15.8928L10.7452 15.8789L10.6746 15.8644L10.304 15.7009L9.90693 15.6731L9.90029 15.6701L9.84296 15.6647L9.45189 15.5898L9.44284 15.5796L9.36439 15.5651L8.67398 15.3056L8.65407 15.2772L8.56897 15.2519L8.20446 15.0135L8.19118 14.9887L8.15316 14.9749L7.82546 14.6979L7.80072 14.6441L7.75002 14.6194L7.27145 14.0153L7.24972 13.9531L7.21774 13.9344L6.99746 13.5265L6.98418 13.4746L6.96789 13.4631L6.81158 13.0654L6.79348 12.9737L6.78141 12.964L6.61303 12.1046L6.60156 11.9912V11.9869L6.60699 11.1879L6.6076 11.1867L6.61605 11.0913L6.74218 10.3877L6.75847 10.3599L6.77416 10.2784L7.05419 9.58199L7.08376 9.56207L7.10911 9.47939L7.3149 9.17523L7.36016 9.15109L7.38551 9.09013L7.85745 8.62242L7.89366 8.60733L7.90814 8.57776L8.56354 8.06539L8.61665 8.04728L8.63294 8.01832L9.43681 7.55302L9.4706 7.54336L9.47905 7.53008L10.336 7.11789L10.438 7.03159L10.4809 7.0159L10.4953 6.98935L11.1767 6.56147L11.2376 6.54397L11.2521 6.52284L11.6559 6.35447L11.6945 6.34662L11.7005 6.33817L12.0047 6.24282L12.0741 6.23196L12.0801 6.22532L12.4163 6.17281L12.4953 6.16678H12.5116ZM8.31792 12.8825L8.33361 13.0811L8.40422 13.2422L8.42051 13.2591L8.45853 13.282L8.4193 13.1541L8.40904 13.0877L8.4018 13.0817L8.34025 12.7154L8.31792 12.8825ZM11.9383 10.136L11.7398 10.2108L11.7416 10.2301L11.7428 10.2314L11.7639 10.7763V10.7908V10.8023L11.7476 11.2899V11.2905L11.7458 11.3189L11.6854 11.8318L11.6812 11.8355L11.6734 11.888L11.5237 12.3997L11.5973 12.4474L12.2214 12.7087L12.4453 12.7661L12.8098 12.4106L12.9268 12.1939L12.9908 11.9984L13.0536 11.489L13.0047 11.0781L12.8713 10.6791L12.6698 10.3858L12.397 10.1438L12.2539 10.0648L12.2274 10.0563L11.9383 10.136ZM8.23463 9.8771L8.08798 10.0781L7.85865 10.6526L7.75002 11.247L7.74278 11.9441L7.77477 12.1251L7.80977 12.0364L7.8321 12.0213L7.85201 11.9592L8.08134 11.6429L8.10186 11.6327L8.11273 11.6055L8.32214 11.3889L8.41206 10.7329L8.4193 10.7262L8.43198 10.646L8.47121 10.5283L8.4706 10.2253V10.2247L8.48146 10.1209L8.61484 9.49327L8.23463 9.8771ZM10.6444 10.722L10.4048 10.891L10.4193 10.9049L10.4941 11.0817L10.5134 11.0992L10.5303 11.2676L10.5316 11.2983L10.5297 11.3309L10.5014 11.591L10.4996 11.5922L10.5394 11.6496L10.9106 11.9833L10.9902 11.716L11.0482 11.2495L11.065 10.7968L11.0445 10.5198L10.6444 10.722Z\" fill=\"#02A556\"/>\n      <path d=\"M12.2898 6.04772L12.9614 6.08212L12.9771 6.08936L13.125 6.11592L13.8407 6.37844L13.8589 6.40439L13.9403 6.42793L14.5408 6.8027L14.5649 6.84676L14.6156 6.86728L15.1823 7.40318L15.1835 7.40439L15.2131 7.4744L15.2644 7.50155L15.4792 7.82986L15.4961 7.88478L15.5179 7.89926L15.5993 8.07126L15.7581 8.14609L15.7738 8.17084L15.8317 8.18954L16.0471 8.34042L16.3036 8.69467L16.3929 8.86305L16.3972 8.91073L16.4261 9.22636L16.4074 9.38146L16.3417 9.65846L16.2511 10.0381L16.236 10.1008L16.2101 10.2095L16.1642 10.4038L16.131 10.5432L15.9276 11.0043L15.9156 11.0314L15.88 11.1123L15.4147 12.1684L14.9494 13.2251L14.9029 13.3308H14.9023L14.8824 13.3766L14.877 13.3899L14.8655 13.4146L14.8347 13.4859L14.5565 13.9662L14.4998 14.064L14.3736 14.2819L14.3404 14.3392L13.9482 14.4243L13.8094 14.4394L13.7689 14.4382L13.72 14.4352L13.3242 14.7659L13.2686 14.7858L13.2505 14.8178L12.4551 15.2921L12.4008 15.3072L12.3881 15.3265L12.0659 15.4665L11.9796 15.4847L11.9681 15.4991L11.5969 15.5872L11.5221 15.5963L11.5118 15.6011L11.1853 15.6295L11.134 15.6319L11.0743 15.6289L10.7249 15.5921L10.7038 15.5812L10.5963 15.5631L10.3024 15.4587L10.2837 15.4328L10.198 15.4086L9.70979 15.1087L9.6766 15.0489L9.59392 15.0133L9.37183 14.7731L9.34528 14.7049L9.30303 14.6814L9.12862 14.3905L9.10991 14.3235L9.08758 14.3084L8.96567 14.0019L8.94817 13.9137L8.9361 13.9035L8.80032 13.2312L8.79066 13.1376L8.78945 13.1346L8.77678 12.5438L8.76773 12.5347L8.73272 12.446L8.68203 12.4153L8.38812 11.8661L8.35735 11.7442L8.33622 11.7273L8.2638 11.4086L8.25415 11.3223L8.25053 11.3145L8.23303 11L8.23242 10.9693L8.23665 10.9035L8.31752 10.242L8.32596 10.2251L8.33743 10.1491L8.54926 9.46836L8.57642 9.44905L8.60478 9.34826L8.85825 8.93849L8.86851 8.86003L8.87213 8.85641L8.87756 8.81296L9.03628 8.14609L9.05197 8.13402L9.07068 8.04953L9.20225 7.77373L9.22035 7.76227L9.23302 7.71881L9.41407 7.4412L9.44606 7.4237L9.46477 7.37663L9.86489 6.94332L9.93067 6.91435L9.95722 6.86426L10.5257 6.48767L10.6048 6.46353L10.6229 6.43698L11.2723 6.1811L11.3827 6.15937L11.4086 6.14609L12.195 6.05134L12.2626 6.04712L12.2898 6.04772ZM9.99524 13.6192L10.0924 13.8492L10.2173 14.0495L10.3507 14.1841L10.7291 14.4014L10.9162 14.4629L11.1552 14.4943L11.3754 14.4816L11.6657 14.4068L11.9198 14.3102L12.1678 14.1582L12.0918 14.1395L11.8045 13.9837L11.6724 13.9735L11.6651 13.9699L11.6048 13.9638L10.8311 13.8021L10.8239 13.7936L10.7641 13.7834L10.0091 13.5148L9.98981 13.4871L9.95843 13.478L9.99524 13.6192ZM12.5517 8.39594L11.9361 8.51543L11.6633 8.61018L11.3845 8.7514L10.8884 9.12859L10.6971 9.33137L10.3519 9.89805L10.096 10.6017L10.4334 11.2203L10.8528 11.7767L11.4165 12.3283L11.9747 12.7092L12.4183 12.9252L12.685 12.9451L13.6875 12.9463L13.8957 12.7375L14.3223 12.1871L14.6555 11.6072L14.8589 11.0314L14.9687 10.4527L14.9916 9.82986L14.9723 9.60958L14.8027 8.99522L14.6621 8.82563L14.4756 8.6645L13.927 8.48405L13.23 8.38447L12.5517 8.39594Z\" fill=\"#02A556\"/>\n      <path d=\"M11.7267 5.5077L12.396 5.5934L12.4104 5.60064L12.4756 5.6103L13.2324 5.83782L13.2396 5.84747L13.2831 5.85653L13.9614 6.145L13.9735 6.16371L14.0242 6.17759L14.1636 6.26087L14.3929 6.58676L14.5384 6.79316L15.0091 7.23854L15.6199 7.81669L15.7743 7.96274L16.1045 8.41838L16.3042 8.69479L16.3935 8.86316L16.4213 9.17035L16.4267 9.22587L16.408 9.38157L16.2415 10.0816L16.2252 10.1498L16.1805 10.3369L16.169 10.3864L16.1316 10.5433L16.0743 10.6725L15.7357 11.4413L15.7327 11.4486L15.6887 11.5493L15.5076 11.9597L15.4201 12.1583L15.1757 12.7135L15.0447 13.0098L14.8353 13.486L14.7623 13.6115L14.5885 13.9114L14.0351 14.868L13.9089 15.0859L13.9059 15.0907L13.8474 15.0828L13.8347 15.0762L13.775 15.0684L13.1823 14.9114L13.1781 14.9048L13.1449 14.8994L12.6887 14.74L12.4756 14.8076L12.4044 14.8191L12.3863 14.8294L11.5879 14.9597L11.4913 14.9676H11.478L10.7605 14.9507L10.7569 14.9495L10.6639 14.9398L9.91436 14.7913L9.90169 14.7763L9.79849 14.7539L9.21732 14.4938L9.19016 14.4516L9.09602 14.4178L8.60899 14.0152L8.56856 13.9283L8.49855 13.8903L8.19922 13.4244L8.17266 13.3363L8.14551 13.317L8.03386 13.0116L8.01877 12.9283L8.00851 12.9199L7.94816 12.5868L7.94092 12.5035L7.93911 12.5005L7.93368 12.2524L7.72245 11.9018L7.69892 11.8173L7.67478 11.7998L7.41165 11.0527L7.39234 10.9422L7.38268 10.9217L7.30966 10.1728L7.30664 10.1184L7.31026 10.0599L7.38147 9.41235L7.39234 9.39183L7.40924 9.29346L7.62167 8.6972L7.65727 8.67185L7.69288 8.56443L7.82203 8.38821L7.83048 8.37131L7.83772 8.36709L7.87152 8.32062L7.88178 8.29044L8.22275 7.84506L8.24931 7.83178L8.30724 7.64952L8.33078 7.63263L8.35432 7.54391L8.7309 6.88549L8.77435 6.86015L8.80272 6.78833L9.22879 6.32364L9.28612 6.29829L9.31026 6.25122L9.81901 5.88549L9.91738 5.85351L9.94092 5.82032L10.2354 5.70927L10.2771 5.70143L10.2825 5.69358L10.8425 5.54029L10.9608 5.524L10.9669 5.52158L11.6488 5.50348H11.6627L11.7267 5.5077ZM11.8462 8.76359L11.2626 8.86739L10.7013 9.09732L10.2161 9.39002L9.80332 9.77324L9.47622 10.218L9.25655 10.6525L9.28793 10.7889L9.58727 11.4329L9.77254 11.7419L10.2753 12.4009L10.4545 12.5578L10.4774 12.5693L11.2656 12.8855L11.8957 13.0219L12.7713 13.1009L13.2988 13.0599L13.6537 12.9561L13.8667 12.7708L14.2221 12.3152L14.4654 11.8227L14.5649 11.4896L14.6229 11.0472L14.5764 10.4323L14.5426 10.2204L14.3772 9.80643L14.0121 9.51012L13.4116 9.15405L12.7303 8.82756L12.5118 8.76479L12.3966 8.74971L11.8462 8.76359Z\" fill=\"#02A556\"/>\n      <path d=\"M12.0355 5.00292L12.7706 5.0331L12.7736 5.0343L12.8225 5.03793L12.9643 5.05724L13.1085 5.10129L13.2974 5.12905L13.3463 5.15682L13.4779 5.17733L13.6547 5.21475L13.8708 5.23829L14.015 5.2926L13.9764 5.48271L13.9758 5.48572L14.0983 6.07112L14.1272 6.20992L14.1333 6.21837L14.5382 6.79351L14.6861 6.93292L14.8352 7.07413L15.3101 7.52314L15.7742 7.96309L15.9136 8.155L16.2757 8.65591L16.2661 9.04879L16.2896 9.07474L16.3107 9.12845L16.3451 9.14776L16.4218 9.26846L16.4079 9.38011V9.38192L16.4012 9.40908L16.1315 10.5431L16.0717 10.6788L15.8472 11.1882L15.6396 11.6595L15.4061 12.19L15.3789 12.251L15.146 12.7802L15.0735 12.9438L14.8973 13.3445L14.8364 13.4827L14.8352 13.4857L14.674 13.7639L14.5388 13.9975L13.7688 15.3276L13.671 15.4471L13.572 15.4984L13.493 15.5177L13.4495 15.5479L12.6933 15.7712L12.5123 15.7977L12.5068 15.8001L11.7042 15.8128H11.6933L11.5328 15.7929L10.8116 15.6112L10.7947 15.5889L10.6837 15.5618L9.93292 15.1731L9.90757 15.1315L9.82731 15.1019L9.18217 14.5551L9.16165 14.5105L9.11759 14.4899L8.50082 13.7579L8.48995 13.7271L8.46943 13.7163L8.17734 13.2908L8.16587 13.2552L8.14897 13.2449L7.91964 12.8255L7.90878 12.7845L7.8955 12.7754L7.53763 11.9239L7.52858 11.8798L7.51952 11.8726L7.36261 11.356L7.35598 11.3119L7.35054 11.3071L7.24372 10.7796L7.23769 10.7205L7.23467 10.7138L7.16587 9.776L7.16406 9.73798L7.16527 9.71022L7.22079 8.69333L7.22321 8.68729L7.23105 8.61668L7.40305 7.79833L7.41331 7.78989L7.42598 7.7229L7.56237 7.36502L7.57867 7.35416L7.59194 7.30286L7.78325 6.95645L7.81162 6.93955L7.83033 6.88645L8.22381 6.38916L8.28054 6.3614L8.3083 6.30407L8.83274 5.88222L8.90516 5.85688L8.92689 5.82127L9.50987 5.52073L9.56358 5.50745L9.57444 5.49176L10.2817 5.22863L10.3511 5.21596L10.3741 5.20268L11.0947 5.05844L11.1713 5.0512L11.1779 5.04819L11.9794 5.00292L12.0126 5.00232L12.0355 5.00292ZM11.3059 8.7229L10.5925 8.76635L9.93292 8.87498L9.43684 9.05784L9.01681 9.30286L8.78265 9.55754L8.71023 9.69815L8.58772 10.1912L8.57505 10.7386L8.61729 11.0524L8.69816 11.3342L8.99387 11.9746L9.43564 12.5992L9.93654 13.1067L10.1816 13.3077L10.7923 13.6408L11.3318 13.7947L11.8599 13.7989L12.1743 13.7096L12.3222 13.6022L12.8189 13.1278L13.3916 12.3578L13.8333 11.595L14.0524 11.1502L14.4308 10.3542L14.5781 9.83454L14.2872 9.30346L13.9836 8.87256L13.3542 8.76393L12.601 8.72229L11.3059 8.7229ZM11.5527 6.16345L11.5575 6.16587L11.6457 6.17552L12.2854 6.31312L12.295 6.32519L12.3717 6.34028L12.9498 6.57444L12.9637 6.59556L13.024 6.61185L13.6046 6.96249L13.6197 6.98904L13.6644 7.00473L14.2111 7.44649L14.2304 7.48633L14.2733 7.50503L14.6801 7.95343L14.8388 8.01258L14.7567 7.42658L14.5992 6.99749L14.4791 6.82911L14.3095 6.66134L14.1333 6.5328L13.9468 6.44046L13.3662 6.23949L12.6988 6.14776L12.0259 6.12543L11.5527 6.16345ZM10.4272 7.31553L9.90878 7.50684L9.40486 7.8267L9.24372 7.9649L9.60281 7.83394L9.68368 7.81946L9.69212 7.8092L10.4242 7.671L10.4936 7.66375L10.499 7.66134L11.2558 7.61849L11.289 7.61728H11.2974L12.5907 7.63841L12.4857 7.57263L12.0071 7.37166L11.4616 7.26605L10.9504 7.2401L10.4272 7.31553Z\" fill=\"#02A556\"/>\n      <path d=\"M13.3147 5.44888L13.9816 5.45613L13.9755 5.4857L13.9767 5.49294L14.0232 5.71322L14.127 6.2099L14.4221 6.62933L14.2724 6.57924L14.0081 6.52673L13.3491 6.52191L12.6961 6.6251L11.9731 6.82245L10.9683 7.21533L10.3732 7.52915L9.9526 7.85081L9.59412 8.27568L9.3678 8.70416L9.22538 9.27749L9.19219 9.94918L9.21572 10.298L9.28573 10.6897L9.38712 11.0282L9.71844 11.7416L9.94716 12.1013L10.4535 12.6951L10.7492 12.9763L11.4306 13.4658L12.0721 13.8273L12.7202 14.0946L13.2833 14.1888L13.8916 14.1942L14.3823 14.1157L14.4915 14.0789L14.477 14.1037L14.4282 14.1888L13.9707 14.9788L13.7685 15.3276L13.6732 15.4447L13.1686 15.3952L13.1554 15.3885L13.0757 15.3783L12.4107 15.2033L12.4004 15.1894L12.3322 15.1755L11.5941 14.855L11.5808 14.8339L11.5253 14.8182L10.8422 14.3946L10.8265 14.3656L10.78 14.3487L10.0884 13.7663L10.0787 13.7452L10.0552 13.7355L9.72447 13.4012L9.7112 13.3692L9.68464 13.3565L9.16805 12.6945L9.15899 12.6686L9.1433 12.6601L8.87474 12.2485L8.86147 12.2045L8.84276 12.193L8.4704 11.4272L8.4529 11.3529L8.43721 11.3415L8.32496 10.9425L8.31892 10.9015L8.31409 10.8973L8.2296 10.4555L8.22477 10.4066L8.22176 10.4006L8.18796 9.99807L8.18555 9.95401L8.18615 9.93289L8.21753 9.18032L8.21995 9.17429L8.23021 9.08738L8.39074 8.4L8.40643 8.38793L8.42695 8.29921L8.68826 7.75244L8.72085 7.73192L8.7456 7.66131L9.15779 7.13023L9.2121 7.10368L9.23926 7.04635L9.72809 6.64321L9.78844 6.62209L9.80776 6.58889L10.4577 6.22016L10.5223 6.20326L10.5362 6.18334L11.5971 5.77658L11.6551 5.76572L11.6629 5.75546L12.4426 5.55751L12.5024 5.54967L12.5138 5.54363L13.2399 5.45311L13.3087 5.44888H13.3147Z\" fill=\"#02A556\"/>\n      <path d=\"M12.3299 5.90571L13.2237 6.00469L13.2394 6.01253L13.3239 6.0246L14.0879 6.24066L14.1084 6.26842L14.1827 6.28833L14.4579 6.6788L14.5381 6.79346L14.7131 6.95882L15.3136 7.52671L15.7747 7.96244L16.2225 8.58224L16.2448 8.63353L16.2659 8.73371L16.2871 8.76932L16.4047 9.39394L16.2364 10.1025L16.2352 10.1073L16.1314 10.543L16.1301 10.5454L16.0221 10.791L15.5254 11.9184L15.4222 12.1525L15.2991 12.4326L15.0402 13.0198L14.9871 13.1399L14.8495 13.4525L14.835 13.4857L14.6781 13.7566L14.5894 13.9093L14.2436 14.5068L14.2388 14.5158L13.9696 14.9805L13.7687 15.3276L13.7445 15.3571L13.5532 15.5919L13.4041 15.6716L13.3076 15.6963L13.2901 15.7204L12.5918 15.9401L12.4506 15.9624L12.4343 15.9703L11.9877 15.9986L11.5695 16.0023H11.549L11.1259 15.9504L10.7373 15.8882L10.7077 15.8719L10.6111 15.8532L9.80245 15.5279L9.78616 15.5038L9.71615 15.4833L9.00402 15.03L8.98471 14.9938L8.93039 14.9721L8.59666 14.6589L8.59364 14.651L8.5858 14.648L8.48803 14.5496L8.43552 14.5189L8.41983 14.4911L8.37276 14.4736L7.70951 13.9093L7.68899 13.8659L7.64856 13.846L7.40475 13.5388L7.39811 13.5195L7.38604 13.5128L7.12231 13.126L7.10601 13.0741L7.08549 13.0608L6.89419 12.6432L6.88272 12.5901L6.87125 12.5816L6.76383 12.2129L6.759 12.1821L6.75538 12.1791L6.66727 11.7645L6.66003 11.6969L6.65822 11.6951L6.64977 11.5309L6.54959 11.1574L6.54174 11.1L6.53691 11.0958L6.48079 10.6776L6.47656 10.6124V10.6034L6.49105 9.81036L6.49225 9.80855L6.4995 9.7313L6.63709 8.99926L6.64735 8.99081L6.66063 8.91839L6.80064 8.54965L6.8103 8.54361L6.81694 8.51283L6.98652 8.16522L7.01368 8.14772L7.03359 8.08737L7.42406 7.56232L7.47415 7.53697L7.4995 7.48145L8.05411 7.00046L8.11386 6.97813L8.13377 6.94313L8.73908 6.58767L8.80306 6.57017L8.81694 6.55025L9.5526 6.26057L9.62201 6.2473L9.63106 6.23583L10.421 6.04754L10.4832 6.04029L10.4935 6.03486L11.38 5.93468L11.4259 5.93227L11.4283 5.93106L12.2352 5.90209L12.2593 5.90149L12.3299 5.90571ZM11.0807 8.6625L10.3631 8.77656L9.81512 8.9383L9.29974 9.18151L8.8978 9.48085L8.5695 9.84838L8.35948 10.2738L8.2243 10.852L8.19835 11.3952L8.23335 11.674L8.30577 11.9407L8.6039 12.4815L9.0342 13.0137L9.61597 13.5008L10.1814 13.8737L10.8646 14.1465L11.1344 14.2298L11.7886 14.3052L12.348 14.2877L12.5623 14.2503L13.1283 13.995L13.6564 13.5816L14.1724 12.9896L14.6226 12.3746L14.9654 11.607L15.173 10.8731L15.2297 10.5044L15.2213 10.1616L14.9895 9.7657L14.6473 9.4549L14.0493 9.07349L13.3293 8.81277L12.6087 8.68302L11.8037 8.63172L11.0807 8.6625Z\" fill=\"#02A556\"/>\n      <path d=\"M12.4613 8.1552L13.3617 8.28254L13.3798 8.29219L13.4541 8.30366L14.2803 8.55049L14.2965 8.57342L14.3907 8.59636L15.1982 9.02062L15.2205 9.05864L15.2947 9.08459L15.9519 9.60601L15.9749 9.65248L16.0262 9.67541L16.2724 9.94578L16.2199 10.1679L16.1306 10.5432L15.7781 11.3429L15.6605 11.1588L15.1215 10.5758L14.5494 10.1298L13.8518 9.77197L13.1378 9.5698L12.2875 9.46962L11.6092 9.39237L11.2754 9.42557L10.9695 9.47022L10.4921 9.66033L10.2477 9.81663L10.2465 9.81724V9.81784L10.0509 9.94276L9.75098 10.262L9.64115 10.3948L9.56752 10.5221L9.32914 10.6591L9.05273 10.3827L9.05877 10.3254L9.09438 10.157L9.09679 10.1546L9.0992 10.1371L9.15774 9.93432L9.17524 9.92104L9.19516 9.84983L9.45889 9.42436L9.4782 9.4135L9.48906 9.38211L9.6683 9.16485L9.71357 9.14373L9.73469 9.10028L9.99782 8.89207L10.0389 8.87759L10.0515 8.85526L10.5814 8.54566L10.6315 8.53178L10.643 8.51428L10.9912 8.36823L11.095 8.34711L11.1058 8.33323L11.5042 8.2584L11.5337 8.25538L11.5386 8.25236L12.2778 8.15459L12.3684 8.14856L12.4613 8.1552Z\" fill=\"#02A556\"/>\n      <path d=\"M11.3449 11.5678L11.4916 11.9209V11.9794L11.3986 12.2691L11.3733 12.3047L11.3655 12.3234L11.3546 12.3313L11.3449 12.3451L11.2973 12.3693L11.0329 12.5449L10.809 12.467L10.7644 12.4314L10.6962 12.3819L10.6799 12.3494L10.6388 12.3325L10.4922 11.9794V11.9209L10.6388 11.5678L10.9919 11.4212L11.3449 11.5678Z\" fill=\"#02A556\"/>\n      <path d=\"M13.2972 5.12926L13.3461 5.15702L13.477 5.17694H13.4776L13.6544 5.21496L14.0027 5.25237L14.0334 5.25539L14.2905 5.23004L14.4076 5.33626L14.6943 5.47748L14.9532 5.60482L15.2622 5.7569L15.3117 5.78104L15.448 5.89872L15.4728 5.91984L15.6955 6.11236L15.8108 6.21254L15.8458 6.24272L16.5446 7.80216L16.684 8.11417L16.9405 8.68689L17.0479 9.35014L17.0226 9.52998L17.0208 9.53421L17.019 9.55291L16.8578 10.4238L16.8506 10.4358L16.8445 10.4769L16.7347 10.8565L16.7426 10.9048L16.7516 10.9235L16.7902 11.4908L16.792 11.5408L16.7896 11.6018L16.7341 12.2319L16.7275 12.2451L16.7166 12.3338L16.5525 13.0037L16.5289 13.0399L16.5114 13.1202L16.1988 13.8088L16.165 13.8305L16.1397 13.9126L15.8313 14.3604L15.7951 14.3797L15.7751 14.4316L15.404 14.845L15.3479 14.8697L15.3231 14.9223L14.917 15.2584L14.6967 15.3405L14.5018 15.4135L14.407 15.4865L14.2586 15.5245L14.1922 15.5614L14.1656 15.5867L14.1294 15.5964L13.9013 15.7315L13.8826 15.743L13.6985 15.8516L13.6213 15.8975L13.4855 15.9518L13.4004 15.9856L13.2471 15.9874L12.7824 15.9911L11.9743 15.9983L11.6665 16.0013L11.5488 16.0025L11.4897 15.9953L11.4426 15.9892L11.2761 15.4769L11.2501 15.3188L11.2404 15.2982L11.2018 14.7382L11.191 14.7297L11.1704 14.6477L11.1306 14.5752L11.1022 14.4672L11.0691 14.4129L10.9574 13.912L10.9544 13.886L10.9532 13.8824L10.8952 13.8402L10.821 13.6054L10.7969 13.4509L10.7975 13.434L10.812 12.9947L10.8156 12.9862L10.8349 12.8631L10.9846 12.3851L11.0105 12.3664L11.0316 12.2952L10.999 12.2361L10.9309 11.7865L10.9218 11.664L10.9224 11.6229L10.9689 10.74L10.9731 10.7309L10.9767 10.6959L10.9453 10.5318L10.9429 10.5258L10.9387 10.008L10.9381 10.0007L10.9496 9.86432L11.0721 9.14133L11.0878 9.11417L11.1028 9.02123L11.5235 7.78526L11.5494 7.75026L11.5639 7.69112L12.1095 6.60482L12.1391 6.58671L12.159 6.52093L12.6267 5.83234L12.6611 5.81423L12.6798 5.76354L13.1572 5.21375L13.2694 5.16245L13.2881 5.12805L13.2972 5.12926Z\" fill=\"#02A556\"/>\n      <g className=\"animate\">\n        <path d=\"M30.3443 43.0501L30.3986 43.1328L30.4155 43.1587V43.1593L30.5446 43.2794L30.6557 43.4333L30.7046 43.5009L30.9659 43.7411L31.0045 43.7767L31.0787 43.8057L31.1729 43.9137L31.1964 43.9306L31.2725 43.9849L31.5175 44.1593L31.7245 44.5631L31.8452 44.7894L31.8458 44.7912L31.8464 44.7918L31.9641 45.0115L31.9743 45.0525L31.9882 45.0616L32.0498 45.2004L32.2381 45.4864L32.27 45.5927L32.3062 45.6174L32.337 45.6959L32.5452 45.8763L32.7293 45.9113L32.7673 45.9336L32.8699 45.9548L33.0956 46.0519L33.1029 46.0628L33.1336 46.07L33.1868 46.0972L33.5139 46.1612L33.5253 46.1684L33.5639 46.1732L33.85 46.2541L34.5742 46.3712L34.9966 46.4297L35.0075 46.4357L35.0576 46.4412L35.5314 46.5534L35.9429 46.5655L36.0063 46.5667L36.0069 46.5673L36.0588 46.5697L36.6237 46.6222L36.6345 46.6277L36.7076 46.6361L36.9858 46.6995L36.9924 46.7037L37.0117 46.7061L37.054 46.7182H37.0546L37.3099 46.79L37.713 46.8666L37.7359 46.8709L38.1198 46.9198L38.1451 46.9228L38.1554 46.9282L38.2103 46.9342L38.4529 46.9904L38.4849 47.0109L38.5591 47.0266L38.6925 47.0863L38.7082 47.1105L38.7402 47.1177L39.0522 47.2734L39.0703 47.303L39.2417 47.3893L39.375 47.7333L39.2417 48.0773L38.9128 48.242L38.8705 48.2462L38.8192 48.2487L38.7613 48.2456L38.4698 48.2125L38.4487 48.2137L38.3527 48.2058L38.2453 48.1877L38.0335 48.1768L38.0317 48.1762L38.0033 48.1744L37.9695 48.1714L37.9677 48.1702L37.9568 48.1696L37.5549 48.1177L37.5151 48.1135L37.5114 48.1117L37.4897 48.1099L37.0793 48.0429L36.8035 48.0163L36.789 48.0091L36.7003 47.997L36.6828 47.9928L36.4632 47.9493L35.9707 47.9059H35.9375H35.9291L35.4384 47.9071H35.4372L35.3678 47.9035L35.3062 47.8974L35.2972 47.8926L35.2411 47.8872L34.7546 47.787L34.3648 47.7097L33.6164 47.6252L33.5983 47.6156L33.503 47.6017L33.2266 47.5208L32.9146 47.4756L32.7945 47.4261L32.6454 47.3639L32.41 47.2662L32.2688 47.207L32.2326 47.1919L32.0262 47.0839L31.7836 47.0242L31.7233 47.0091L31.2936 46.6391L31.1892 46.411L31.0914 46.3416L31.0323 46.1744L30.8603 45.9035L30.8247 45.7803L30.7728 45.7013L30.7414 45.5788L30.6623 45.4333L30.6587 45.4195L30.6533 45.4158L30.5338 45.1817L30.5223 45.1358L30.5078 45.1262L30.159 44.2716L30.1234 44.0942L30.1119 44.0694L30.0974 43.8497L30.0836 43.7411L30.0781 43.6584L30.0992 43.4979L30.1324 43.373L30.1481 43.3615L30.1644 43.2861L30.2507 43.099L30.2616 43.0543L30.3141 43.0139L30.3165 43.0073L30.3443 43.0501Z\" fill=\"black\"/>\n        <path d=\"M48.0982 45.3097L48.1096 45.6597L48.1072 45.6766L48.1036 45.6959L48.0481 46.0357L48.0457 46.0526L47.9938 46.37L47.9726 46.4968L47.9243 46.635L47.8568 46.8287L47.8085 46.9675L47.7276 47.1999L47.727 47.2005L47.7005 47.2753L47.6769 47.3423L47.5224 47.4044L47.2816 47.5469L47.1857 47.5734L47.1241 47.6175L46.765 47.7303L46.7391 47.7346L46.7294 47.7406L46.6968 47.749L46.6757 47.7521L46.6697 47.7557L46.1748 47.8709L46.1609 47.8728L46.1579 47.8752L46.1283 47.8812L46.0976 47.8848L46.0909 47.8885L45.7258 47.9488L45.7246 47.9494L45.6799 47.9572L45.6564 47.9591L45.6522 47.9615L45.0191 48.0532L44.9992 48.0568L44.9756 48.0586L44.9708 48.0611L44.4464 48.1383L44.4156 48.1407L44.4114 48.1425L44.0239 48.1824L43.9473 48.1866H43.9274L43.8924 48.1854H43.8918L43.8827 48.1848L43.7855 48.1811L43.409 48.1854L43.4059 48.186L43.3951 48.1866L43.3939 48.1872L43.0505 48.2186L42.9835 48.2216H42.9744L42.937 48.221L42.3275 48.2143H42.3269L42.3076 48.2137L42.2883 48.2131L41.7542 48.1993H41.7469L41.2008 48.1781H41.1772L40.8181 48.1793H40.8157L40.7747 48.1781L40.7451 48.1763L38.4494 48.0562L38.4373 48.0508L38.3166 48.0327L38.1754 47.9892L38.1241 47.9741L37.797 48.0007L37.7711 48.0013L37.7699 48.0019L37.4138 48.014H37.3963L37.2358 47.9886L36.9087 47.8812L36.7512 47.8528L36.549 47.8957L36.456 47.9053H36.4343L36.3957 47.9029L36.2985 47.9434L35.9455 47.7967L35.7988 47.4437L35.9455 47.0906L36.2985 46.944L36.4603 47.011L36.5961 46.9651L36.7029 46.947L36.7077 46.9416L36.9877 46.9186L37.0294 46.9168L37.1157 46.9247L37.4259 46.9802L37.6956 46.9633L38.0939 46.8993L38.1814 46.8927L38.2768 46.9011L38.4265 46.9277L38.5073 46.9385L40.7524 46.8547L40.7729 46.8534L40.8157 46.8516H40.8181L41.1772 46.8528H41.2008L41.7451 46.8323H41.7548L41.7554 46.8317L42.2889 46.8184L42.3064 46.8178L42.3275 46.8172L42.9376 46.8106L42.9485 46.81L43.2659 46.7822H43.2744L43.275 46.7816L43.31 46.7792L43.3305 46.778L43.3317 46.7774L43.7584 46.7557H43.7656L43.7662 46.7551L43.8809 46.7502H43.893L43.905 46.7496L44.2533 46.7183L44.7505 46.6428L44.7717 46.6386L44.7916 46.6368L44.7952 46.635L45.4355 46.536L45.491 46.5318L45.4965 46.5294L45.5315 46.527L45.8543 46.4847L46.3076 46.358H46.3112L46.3118 46.3574L46.3142 46.3568L46.6087 46.2409L46.8797 46.1075L46.9412 46.093L46.975 46.0683L47.3329 45.9494L47.6757 45.6941L47.7831 45.5783L47.8006 45.5704L48.0674 45.256L48.0951 45.2186L48.0982 45.3097Z\" fill=\"black\"/>\n        <path d=\"M48.0742 34.9214L48.1665 35.1441L48.2239 35.1929L48.277 35.5309L48.2806 35.578L48.2818 35.5792L48.3096 36.2159L48.3102 36.2346L48.3096 36.2442L48.2981 36.7735V36.7741L48.2679 37.9859L48.2673 37.9878L48.2637 38.0378L48.2402 38.208V38.2086L48.2396 38.2098L48.1834 38.59L48.1786 39.1036L48.178 39.1048L48.1708 39.1875L48.0513 39.832L48.0187 40.8616L48.0181 40.8622V40.8725L47.9535 42.0608L48.0163 45.1519L48.0404 45.6552L48.0664 45.9196L48.0428 46.0638L47.9722 46.4965L47.901 46.7005L47.8479 46.8532L47.7912 47.0149L47.7869 47.027L47.5395 47.1296L47.1967 46.9877L47.1895 46.9696L47.1738 46.9624L47.1382 46.9226L47.0694 46.7373L47.009 46.6118L46.9891 46.3462L46.9789 46.2406L46.977 46.2074L46.9758 46.2056L46.9553 45.7192V45.7113H46.9547L46.939 45.1875L46.9384 45.1706L46.9336 42.0529V42.0523L46.9342 42.0222L47.006 40.8145L47.0615 39.7512L47.0639 39.7445L47.0718 39.6721L47.2136 39.024L47.2607 38.5098L47.2613 38.5086L47.2625 38.4917L47.3186 38.0771L47.3192 38.0741L47.3416 37.9226L47.4267 36.7307V36.7301V36.7276L47.4683 36.2195L47.4623 35.6667L47.3681 35.6275L47.2215 35.2744L47.3681 34.9214L47.7212 34.7747L48.0742 34.9214Z\" fill=\"black\"/>\n        <path d=\"M25.3657 30.7452L25.8358 30.7489H25.8364L25.8926 30.7519L26.525 30.8104L26.5588 30.8273L26.7188 30.8605L27.4719 31.1828L27.4985 31.2232L27.5987 31.2564L28.5136 31.9317L28.5649 32.0331L28.6608 32.0832L28.9445 32.4894L30.3102 34.3222L30.3259 34.3687L30.3512 34.3831L30.7526 35.0615L30.7682 35.1164L30.7882 35.1297L31.4997 36.6951L31.6469 36.9414L31.7435 37.2884L31.5468 37.7633L31.0718 37.9601L30.9499 37.91L30.9457 37.9106L30.8865 37.9154L30.8316 37.8611L30.5969 37.7633L30.5606 37.6764L30.5015 37.6438L30.3289 37.3668L30.3108 37.3029L30.2861 37.2872L29.5715 35.7193L29.2058 35.0929L27.8841 33.254L27.8835 33.2528L27.8829 33.2522L27.6476 32.9257L26.8793 32.3548L26.3072 32.1067L25.8183 32.0778L25.4581 32.0856L25.1092 32.181L25.041 32.2069L24.6651 32.6692L24.6602 32.6716L24.6578 32.6776L24.6397 32.6994V32.808L24.7031 32.9752V32.9758L24.8521 33.3481L24.8775 33.4761L24.8877 33.4942L24.895 33.5388L24.8998 33.5907L24.9034 33.6082L24.9016 33.6119L24.9052 33.6565V33.6698L24.9028 33.7923L24.9571 33.9239L24.9565 33.9408L25.0169 34.088L25.1641 34.3294L25.1901 34.4212L25.3331 34.5177L25.4864 34.8967L25.5709 35.0428L25.7508 35.3361L25.7791 35.4362L25.8244 35.502L25.8407 35.5563L26.1129 36.0989L26.1189 36.1091L26.131 36.1586L26.1479 36.1695L26.1979 36.2878L26.4164 36.7048L26.7296 37.2063L26.7314 37.2117L26.7345 37.2136L26.8684 37.4326L26.8896 37.5056L26.9155 37.5225L27.1002 37.9528L27.105 37.9764L27.1116 37.9806L27.1231 38.0108L27.1249 38.0204L27.1273 38.0222L27.1744 38.149L27.411 38.5569L27.4152 38.5726L28.1201 39.5805L28.5914 40.2298L28.5993 40.254L28.6132 40.2612L28.6451 40.3107L28.8558 40.6245L28.8968 40.8261L29.0923 41.117L29.1285 41.1701L29.1629 41.2667L29.3947 41.5509L29.5522 41.8152L29.6192 41.9275L29.6602 41.9963L29.6916 42.0271L29.7025 42.0645L29.8214 42.2467L30.0549 42.6052L30.3295 43.0271L30.4152 43.1592L30.5444 43.2793L30.6403 43.4115L30.7043 43.5008L31.0042 43.7766L31.0513 43.7947L31.0628 43.8285L31.0905 43.8448L31.7109 44.9202L31.717 44.9426L31.726 44.948L31.997 45.4785L32.2939 45.9227L32.4418 46.0802L32.4973 46.2208L32.5522 46.2588L32.6705 46.5817L32.6711 46.5829L32.755 46.808L32.7851 46.9715L32.7845 46.9903L32.7809 47.079L32.7797 47.0802L32.7773 47.1206L32.7544 47.2799L32.7924 47.3898L32.79 47.4242L32.5655 47.3306L32.2782 47.2111L32.2323 47.1918L32.0543 47.0989L32.0259 47.0838L31.8956 47.0518L31.8558 47.0422L31.8226 47.0337L31.8111 47.015L31.6415 46.7597L31.4949 46.5931L31.4828 46.5618L31.4611 46.5509L31.108 46.0572L31.1008 46.0349L31.0881 46.0277L30.758 45.499L30.1044 44.4839L29.6113 43.8804L29.2227 43.4163L29.2064 43.3705L29.178 43.3554L29.1032 43.2389L29.0658 43.1852L29.0634 43.1779L29.0597 43.1761L28.6705 42.5968L28.1937 41.9275L28.1907 41.9184L28.1853 41.9154L28.1527 41.8677L27.5679 41.0482L27.5649 41.0403L27.56 41.0379L27.5281 40.9909L27.0585 40.3409L27.0567 40.3336L27.0519 40.3318L26.3259 39.295L26.3096 39.2437L26.2734 39.2232L26.0066 38.7676L25.997 38.732L25.9831 38.7229L25.9004 38.5563L25.892 38.5201L25.8805 38.5129L25.8696 38.4869L25.6807 38.0766L25.6801 38.0754V38.0747L25.589 37.8792L25.2788 37.3976L25.2667 37.3566L25.2486 37.3457L25.0163 36.9058L24.9499 36.802L24.9469 36.7899L24.9409 36.7869L24.9282 36.7664L24.9125 36.7102L24.8914 36.697L24.6138 36.0995L24.6125 36.0922L24.5691 36.0084V36.0078L24.4049 35.7L24.3186 35.5479L24.0772 35.2081L24.0441 35.1031L23.9795 35.015L23.9638 34.9679L23.8298 34.7416L23.8081 34.6626L23.7821 34.6451L23.6445 34.3029L23.6138 34.1448L23.5999 34.117L23.5872 34.0017L23.583 33.9293L23.5824 33.9287V33.9263L23.557 33.8708L23.5534 33.8128L23.4194 33.5081L23.4134 33.4797L23.4055 33.4743L23.2963 33.1918L23.2655 33.0313L23.2511 33.0011L23.2185 32.6559L23.2148 32.5859L23.2161 32.5467L23.2197 32.4845V32.4797V32.4785L23.2209 32.4592L23.2281 32.4441L23.2945 32.1629L23.3536 32.0434L23.4158 32.006L23.4267 31.9794L23.449 31.9703L23.5033 31.846L23.624 31.7332L24.1285 31.1786L24.3253 31.0916L24.3868 31.0023L24.653 30.8997L24.7206 30.8871L24.7459 30.8714L25.2028 30.7639L25.3609 30.7452H25.3657Z\" fill=\"black\"/>\n        <path d=\"M33.024 18.1926L33.6462 18.2095L33.7935 18.2741L34.094 18.3912L34.2793 18.5608L34.3529 18.7273L34.4404 18.7847L34.5098 18.9386L34.5219 18.9965L34.5358 19.0061L34.7572 19.676L34.7639 19.7147L34.7723 19.7279L34.8864 20.1854L34.9069 20.3489V20.3568L34.9045 20.5384L34.9226 21.1311V21.1516V21.1576L34.9021 23.4726L34.9111 24.192L34.9443 25.5505L34.9811 26.0122L34.983 26.0538L34.9836 26.055L35.0071 27.1377L35.0578 28.5577L35.3131 31.3296L35.3861 31.5101L35.1712 32.0291L34.9359 32.1268L34.8961 32.1842L34.8194 32.2137L34.642 32.2475L34.4247 32.1962L34.3438 32.1558L34.3137 32.1063L34.1393 32.0351L34.1375 32.0309L34.1332 32.0291L34.0644 31.8637L33.9184 31.5282L33.9166 31.4654L33.6854 28.6609L33.6836 28.6277L33.683 28.6259L33.6317 27.183V27.1818L33.5937 26.0955V26.093L33.5774 25.6102V25.597L33.5563 24.215V24.2041V24.183L33.5792 23.457L33.6196 21.1582L33.5979 20.571L33.5913 20.4376L33.5098 20.0768L33.3131 19.5698L33.1049 19.5529L32.6504 19.7297L32.5165 19.8064L32.3921 19.9054L32.3704 19.9386L32.2968 20.0991L32.2714 20.1154L32.2533 20.1775L32.021 20.5348L31.948 20.6489L31.7621 21.0381L31.6667 21.2922L31.5442 21.9494L31.5243 22.5662V22.5976H31.5237V22.6072L31.4863 23.9536L31.5098 24.2717L31.61 25.387L31.613 25.4461L31.6124 25.4702L31.5478 27.1425L31.5309 28.2355L31.604 28.6869L31.6076 28.7309L31.61 28.7358L31.6595 29.358L31.6607 29.3918L31.6613 29.3924L31.6709 29.8758V29.8879V29.8951L31.6402 32.2856L31.6396 32.2874L31.6341 32.3598L31.5804 32.7086L31.6009 33.4044V33.4207V33.428L31.5991 33.5752L31.6015 33.6362V33.638L31.604 33.7086V33.7092L31.607 33.7865L31.61 33.8444L31.6329 34.1268L31.7325 34.6078L31.744 34.7171V34.7279L31.7259 35.5958V35.5988L31.7114 36.1335L31.7735 36.3544L31.7898 36.4678L31.7916 36.4726L31.8055 37.0695V37.0804L31.8013 37.1431L31.7747 37.332L31.7627 37.4545L31.7651 37.4612L31.7615 37.4684L31.7585 37.498L31.7343 37.5197L31.6758 37.6296L31.5991 37.8142L31.2461 37.9609L30.893 37.8142L30.7464 37.4612L30.893 37.1081L30.9063 37.1021L30.8701 36.5734L30.7935 36.3429L30.7747 36.227L30.7699 36.2156L30.7391 35.6108V35.6072V35.6066L30.7017 34.7678L30.6275 34.2777L30.6269 34.2656L30.6257 34.265L30.584 33.9458L30.5816 33.909L30.5804 33.906L30.5768 33.839V33.8323H30.5762L30.5726 33.7551L30.569 33.6887V33.6845V33.6839L30.5647 33.6096L30.5557 33.4515L30.5551 33.4207V33.4147L30.5635 32.6706V32.67V32.6585L30.5774 32.2723L30.5466 29.8951V29.8921L30.543 29.4304L30.4923 28.8329L30.4374 28.3381L30.4344 28.285L30.4338 28.2844L30.4163 27.1419L30.3523 25.4811L30.269 24.3694L30.2684 24.3489L30.2678 24.3477L30.2527 23.9959L30.2521 23.985L30.2135 22.6078V22.597L30.2129 22.5596V22.5511L30.2141 22.5119L30.2539 21.8384L30.2569 21.8323L30.2636 21.7623L30.4036 20.9965L30.4277 20.9554L30.4513 20.8468L30.6021 20.5191V20.5185L30.811 20.0725L30.8798 19.9138L30.9105 19.8939L30.9347 19.8142L31.1429 19.5034L31.2141 19.3526L31.2889 19.1824L31.4205 19.0973L31.5231 18.9042L31.7464 18.7533L31.7482 18.7527L31.7536 18.7418L31.9848 18.5825L32.0813 18.5523L32.1049 18.5161L32.7379 18.2475L33.0059 18.1926H33.024Z\" fill=\"black\"/>\n        <path d=\"M36.8221 29.5375L37.1528 29.5761L37.2989 29.6521L37.4932 29.7222L37.6773 29.8742L37.7605 30.0511L37.8583 30.1156L37.8909 30.1899L38.0641 30.4995L38.4292 31.0185L38.4353 31.0372L38.4455 31.0426L38.5825 31.255L38.6477 31.3504L38.6815 31.4566L38.7382 31.5393L38.836 31.867L38.8969 31.9943L38.9657 32.2925L38.8794 32.6244L38.8571 32.6642L38.7974 32.6992L38.7672 32.7728L38.7648 32.7734L38.7533 32.8L38.3043 32.9865L38.0062 32.9123L37.9651 32.8905L37.9295 32.8314L37.8553 32.8L37.7732 32.6021L37.6441 32.5097L37.5813 32.325L37.5759 32.2894L37.5668 32.2768L37.4823 31.9533L37.4703 31.9279L37.355 31.7481L36.9875 31.2037L36.9712 31.1506L36.947 31.1362L36.798 30.8465L36.6477 30.8133L36.6073 30.8097L36.565 30.8205L36.3707 30.8803L36.2759 30.8941L36.2572 30.9038L36.1383 30.9177L35.8559 31.0776L35.7931 31.1814L35.7521 31.2043L35.7268 31.2695L35.5445 31.4663L35.5379 31.4693L35.5354 31.4759L35.4099 31.6045L35.3097 31.7493L35.2059 31.8036L35.1969 31.8266L35.0339 31.8935L35.0013 31.911L34.9579 31.9599L34.9108 31.9654L34.8535 31.9684L34.7358 31.9195L34.7165 31.9279L34.3634 31.7813L34.2168 31.4282L34.3634 31.0752L34.5922 30.9805L34.7056 30.8072L34.8438 30.5918L34.9778 30.3709L35.0611 30.3244L35.1106 30.2231L35.5765 29.8598L35.7298 29.8072L35.7636 29.7608L35.9887 29.6884H35.9893L36.1896 29.6196L36.2452 29.6105L36.2633 29.599L36.4178 29.5652L36.489 29.5574L36.4986 29.5526L36.6863 29.5357L36.7473 29.5327L36.8221 29.5375Z\" fill=\"black\"/>\n        <path d=\"M41.4711 30.4194L42.0734 30.4441L42.097 30.4544L42.3118 30.5014L42.6437 30.6535L42.7162 30.7676L42.8876 30.8545L43.0988 31.1448L43.1151 31.1961L43.141 31.2112L43.3704 31.627L43.3722 31.6336L43.3752 31.6354L43.6715 32.1852L43.8936 32.5564L43.9859 32.8877L43.969 33.0283L44.03 33.1756L44.0276 33.2244L44.0221 33.2794L44.027 33.3439L43.8616 33.7422L43.82 33.7597L43.8182 33.764L43.7518 33.7917L43.718 33.8466L43.6757 33.8678L43.415 33.9311L43.0674 33.8128L43.0155 33.773L43.0101 33.7615L42.9944 33.7561L42.8019 33.4151L42.7602 33.1605L42.7566 33.149L42.5665 32.8352L42.5514 32.7815L42.5309 32.7688L42.269 32.2021L42.0909 31.8605L41.9944 31.7519L41.8809 31.7024L41.4271 31.6535L40.5466 31.6946L40.3052 31.8267L40.281 31.8328L40.2756 31.8418L39.9443 32.0011L39.7246 32.123L39.686 32.1605L39.6691 32.1931L39.6673 32.1943L39.6667 32.1973L39.485 32.5358L39.4778 32.5395L39.4736 32.5545L39.336 32.7827L39.2491 32.8316L39.2128 32.9185L38.8598 33.0645L38.8073 33.0621L38.7403 33.0549L38.4235 32.8931L38.2949 32.5582L38.4416 32.2051L38.5737 32.1502L38.686 31.7839L38.7089 31.767L38.7337 31.6765L38.7958 31.569L38.8218 31.5539L38.8387 31.5063L38.9727 31.3385L39.033 31.3095L39.062 31.2504L39.3287 31.0416L39.4048 31.015L39.4271 30.9788L39.7596 30.8128L40.1024 30.6221L40.2629 30.5799L40.3166 30.5515L41.3685 30.4236L41.4458 30.4188L41.4711 30.4194Z\" fill=\"black\"/>\n        <path d=\"M45.3835 31.4409L46.29 31.4663L46.3226 31.4802L46.6038 31.5604L47.127 31.8857L47.1747 31.9726L47.2815 32.0233L47.6291 32.4554L47.6744 32.5834L47.7251 32.6172L47.7879 32.7711L47.7969 32.8139L47.8066 32.8211L47.8905 33.08L47.8977 33.1235L47.9067 33.138L48.0184 33.6238L48.0214 33.6473L48.0244 33.6534L48.1343 34.237L48.1367 34.2629L48.1391 34.2677L48.3346 35.6274L48.3419 35.7234L48.3389 35.7867L48.3032 36.1494L48.1765 36.4005L48.1264 36.5218L48.1125 36.5272L48.1053 36.5417L47.6919 36.7017L47.2779 36.5417L47.2707 36.5272L47.2568 36.5218L47.2049 36.3957L47.08 36.147L47.045 35.7928L46.8796 34.4421L46.7987 33.902L46.6768 33.485L46.5887 33.2587L46.5537 33.1742L46.3521 32.8815L46.08 32.7149L45.4584 32.6848L45.1584 32.7916L44.6726 33.2539L44.6092 33.3389L44.5597 33.4452L44.5501 33.4512L44.5434 33.4759L44.5139 33.5291L44.4795 33.549L44.4565 33.6117L44.2284 33.7451L44.2013 33.7674L44.1904 33.7807L44.0594 34.0975L43.7891 34.2092L43.7613 34.2406L43.7016 34.2472L43.6442 34.2508L43.2912 34.1042L43.1445 33.7511L43.2544 33.6286L43.3527 33.3909L43.4137 33.3661L43.4203 33.2695L43.4596 33.1881L43.5253 32.9937L43.5851 32.9147L43.5996 32.9074L43.6285 32.8386L43.6539 32.8217L43.675 32.753L43.7909 32.5755L43.8174 32.5616L43.8325 32.5212L44.3835 31.8785L44.5416 31.8061L44.5972 31.7204L45.1131 31.494L45.366 31.4403L45.3835 31.4409Z\" fill=\"black\"/>\n      </g>\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <rect width=\"1500\" height=\"1000\" fill=\"white\" transform=\"translate(-769 -751)\"/>\n      </clipPath>\n    </defs>\n    </svg>\n)\n\nexport default CursorSketch"},"relativePath":"sketches/cursor.jsx"},{"fields":{"contents":"import React from 'react'\n\nconst D3Sketch = () => (\n  <svg className=\"sketch d3\" width=\"60\" height=\"59\" viewBox=\"0 0 60 59\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0)\">\n      <path d=\"M948.106 -81H-552.011V919.078H948.106V-81Z\" fill=\"white\"/>\n      <path d=\"M11.5092 4.54553V4.59381L11.4639 4.63847L11.4676 4.75495L11.4899 4.96014L11.4911 4.98066L11.4917 4.98126L11.5008 5.32345V5.32888L11.5158 6.94746V6.94988L11.5134 6.98549L11.4827 7.22025L11.4597 7.56364L11.4489 8.96919L11.4477 8.99333L11.3891 9.6095L11.3119 10.6228L11.3113 10.6234L11.3101 10.6373L11.2769 10.8925L11.263 11.618L11.298 13.2408L11.3064 13.4291V13.4399V13.4405L11.307 13.5123V13.5148V13.5244L11.2895 14.1146V14.1213L11.2865 14.1744L11.2877 14.6113L11.2962 16.2812V16.283V16.2836V16.356V16.3603L11.2763 17.6053V17.6113L11.2738 17.6747V17.7362L11.2811 19.0138L11.2841 19.0742L11.3336 19.6964L11.3342 19.7073L11.3348 19.7079L11.3589 20.2178V20.2341V20.2347L11.3583 20.9583V21.0169L11.3819 21.4019L11.4525 21.834L11.4639 21.8877L11.4694 21.9426L11.4712 21.9438L11.4899 22.344L11.4905 22.3609V22.3645L11.4851 22.8437L11.5098 23.1714V23.1732L11.5581 23.8201L11.5593 23.84L11.5605 23.9118V23.9167L11.5641 24.7417L11.5671 24.7893L11.5973 25.2208V25.2233L11.6317 25.7368L11.6329 25.7598L11.6335 26.5485V26.5491L11.6329 26.566L11.6299 26.6294L11.6154 27.3856L11.6148 27.4007L11.5883 27.8165L11.5871 27.8177L11.5853 27.8455L11.5804 27.8768L11.5611 28.1388L11.5412 29.2377L11.54 29.2383L11.5309 29.3126L11.4875 29.4888L11.4845 29.5093L11.4615 29.793L11.4519 30.3747L11.4682 30.694L11.4712 30.7447L11.4718 30.7622L11.4996 32.4109L11.5038 32.4423L11.505 32.4532L11.5056 32.4538L11.5122 32.5105L11.5134 32.5334L11.514 32.5341L11.5539 33.2939V33.3132V33.3138L11.5533 33.7036V33.7507L11.6034 34.9818L11.604 34.9969V35.703V35.7748L11.6172 35.9891L11.75 36.6614L11.7536 36.6958L11.7554 36.6976L11.7591 36.7374L11.7609 36.7736L11.7603 36.7984L11.7385 37.1146L11.7373 37.1152L11.7361 37.1382L11.6957 37.4206L11.6728 37.907V38.452L11.6758 38.4707L11.6794 38.5184L11.68 38.519L11.6897 38.9812V38.9897L11.6812 39.0688L11.6021 39.4158L11.5931 39.4646L11.5593 39.6535L11.5533 40.1194L11.5744 40.4369L11.651 40.9312L11.6553 40.9891V41.0066L11.6456 41.2094L11.645 41.2208L11.642 41.2564L11.6384 41.2595L11.6293 41.324L11.584 41.4828L11.5038 42.1188L11.4983 42.1707L11.3758 43.312L11.3807 43.933V43.9336L11.3813 43.9951V43.9975V44.0036L11.3614 45.1219L11.3921 45.3663L11.4302 45.5793L11.4308 45.5866H11.4314L11.5303 46.1901L11.5315 46.2045L11.5321 46.2057L11.537 46.2444L11.5406 46.292L11.54 46.3029L11.534 46.5039L11.5279 46.7761L11.5273 46.8195V46.8201V46.8249L11.5104 47.3108L11.5327 47.7036L11.6009 47.9788V47.98L11.6697 48.2528L11.6722 48.2691L11.674 48.2709L11.7747 48.773L11.782 48.8436V48.8442V48.9607V48.9692L11.7784 49.1068L11.7778 49.1074L11.7711 49.1689L11.7663 49.1913L11.6981 49.7495L11.7005 49.8159V49.8286V49.831L11.6999 49.9149L11.7204 50.7163L11.7699 51.3343L11.7711 51.3614L11.7687 51.3983L11.7452 51.6083L11.744 51.6095L11.7422 51.6294L11.6709 52.0187L11.6643 52.0905L11.6456 52.4749L11.6148 53.0947L11.6136 53.0953L11.6106 53.1297L11.5822 53.2854L11.5738 53.2926L11.5593 53.3536L11.4971 53.4785L11.4947 53.4797L11.4929 53.4864L11.4573 53.5503L11.2551 53.6686L11.0228 53.4369L11.0391 53.3506L11.0554 53.3108L11.0662 53.2263L11.0602 53.0941L11.0288 52.4755V52.4592V52.458L11.03 52.0669L11.0306 52.0488L11.0361 51.9553L11.0373 51.9547L11.0397 51.9263L11.1 51.5371L11.1085 51.3651L11.0644 50.7592L11.0638 50.7392H11.0632L11.0499 49.9233V49.9203L11.0493 49.8316V49.8286V49.8165L11.053 49.7235L11.0536 49.7085L11.1025 49.1267L11.1018 49.1086V49.1062L11.0988 48.9849L11.0874 48.8865L11.0204 48.4031L10.9522 48.1526L10.9498 48.1351L10.9474 48.1333L10.8804 47.8261L10.8749 47.7779L10.8731 47.7761L10.8429 47.3379L10.8423 47.3168L10.8387 46.8177L10.8375 46.7754L10.8321 46.5153L10.814 46.3289L10.8128 46.3071H10.8122L10.811 46.2818L10.7343 45.691L10.7337 45.6873L10.706 45.4616L10.7047 45.4435L10.7035 45.4429L10.683 45.1659L10.6824 45.1454L10.6625 44.0042V43.9975V43.9957V43.9336V43.933L10.6673 43.2914H10.6679L10.6697 43.2552L10.7989 42.0911L10.7995 42.0905L10.8001 42.082L10.8079 42.0289L10.8876 41.3669L10.8906 41.3645L10.8942 41.3313L10.9311 41.1726L10.9238 41.0108L10.887 40.5009V40.4996L10.8617 40.1544L10.8604 40.1285V40.1279L10.8611 39.6203L10.8653 39.5648L10.9021 39.3397L10.9027 39.3391L10.9033 39.3331L10.9136 39.2758H10.9142V39.2739L10.9775 38.9553L10.9739 38.5298V38.5262L10.9781 38.4731L10.9811 38.452V37.8986L10.9818 37.8829L11.0053 37.3705L11.0065 37.3699L11.0083 37.3421L11.0457 37.0627L11.0505 36.7827L11.0499 36.7736L10.9371 36.0911L10.9353 36.07L10.9341 36.0688L10.9081 35.8243L10.9057 35.7857V35.7851L10.9063 35.703V35.0036L10.8611 33.7724L10.8604 33.7586V33.7567L10.8611 33.7036L10.8598 33.3186L10.8381 32.5763L10.8333 32.5341L10.8327 32.5286L10.8267 32.4749L10.8254 32.4441L10.8248 32.4435L10.7977 30.7809L10.7953 30.7338L10.7947 30.7242L10.7838 30.3916V30.3802V30.3747L10.7941 29.7706V29.77L10.7953 29.7507L10.8188 29.4441L10.82 29.4435L10.8212 29.4248L10.8279 29.3753L10.8297 29.3735L10.8321 29.353L10.8665 29.1919L10.8864 28.1164H10.887L10.8876 28.0989L10.9081 27.8129L10.9093 27.8123L10.9111 27.7875L10.916 27.7567L10.9425 27.3645L10.9552 26.6113H10.9558V26.6004L10.9588 26.5401L10.9594 25.7712L10.9262 25.2691V25.2685L10.8955 24.8346V24.831L10.8948 24.8304L10.8918 24.773L10.8906 24.7531L10.8876 23.9197V23.9179V23.9125L10.8888 23.8557L10.8423 23.2233L10.814 22.8841L10.8128 22.8587H10.8122L10.8073 22.3663L10.7989 21.9806L10.7941 21.9336L10.7319 21.4852L10.7295 21.4568L10.7289 21.4562L10.706 21.0452L10.7053 21.0265V20.9583L10.7047 20.242L10.6818 19.7429L10.6359 19.1207L10.6353 19.1092V19.1086L10.6323 19.0374V19.0235V19.0217L10.6396 17.7362V17.6686L10.6402 17.6487L10.6438 17.5872L10.6649 16.3524V16.2836L10.6595 14.6137V14.6125V14.6071L10.6679 14.1605L10.6685 14.1484L10.6716 14.0911L10.6884 13.5093L10.6891 13.446L10.6836 13.2601V13.2534L10.6709 11.6204V11.618V11.6077L10.6975 10.8594H10.6981L10.6987 10.8425L10.7253 10.5697L10.8194 9.5564V9.55458L10.8828 8.94867L10.913 7.54734L10.9136 7.52984L10.9449 7.16895H10.9455L10.9461 7.1611L10.9739 6.93177L10.995 5.32827L10.9974 4.99695L10.9854 4.84728L10.9353 4.76219L10.9069 4.65718L10.8429 4.59381V4.54553L11.1761 4.2124L11.5092 4.54553Z\" fill=\"black\"/>\n      <path d=\"M34.1079 47.5942L34.8592 47.5991L34.928 47.5997L34.9407 47.6003L35.377 47.6202L35.3783 47.6208L35.4114 47.6238L36.0886 47.7258L36.371 47.7294H36.441L37.0131 47.7276H37.0717H37.0723H37.0837L38.1163 47.7614L38.1181 47.7626L38.1972 47.7741L38.5665 47.8785L38.584 47.8803L38.8852 47.89L39.5165 47.8875H39.5171H39.572H39.5732L39.6257 47.8918L39.9148 47.937L40.1254 47.9569L40.6245 47.94L40.6534 47.9346L40.7072 47.9298L40.7078 47.9292L40.9305 47.9244H40.9383L40.9594 47.925L41.2793 47.9461L41.2805 47.9467L41.3107 47.9497L41.6064 47.9986L41.7307 48.0058L41.8007 48.0064H41.8043L42.5074 48.0179L42.5557 48.0185V48.0191L42.5883 48.0209L42.7047 48.0348L42.7053 48.036L42.7222 48.0378L42.791 48.0505L42.8351 48.0457L42.8924 48.0523L42.9516 48.065L43.1459 48.3082L43.0023 48.5339L42.9504 48.558L42.9208 48.5647L42.916 48.5713L42.881 48.5828L42.8635 48.5906L42.8019 48.6045L42.7953 48.6129L42.7241 48.6262L42.7041 48.628L42.7029 48.6292L42.5895 48.6431L42.5557 48.6455H42.5551L42.5074 48.6461L41.8043 48.6576H41.8001L41.7216 48.6582H41.7204L41.6951 48.657L41.543 48.6455L41.5424 48.6443L41.5171 48.6425L41.2238 48.5942L40.9425 48.5828L40.7591 48.5954L40.7259 48.6021L40.68 48.6063L40.6782 48.6081L40.1344 48.6371L40.1151 48.6377L40.0801 48.6359L39.8351 48.6111L39.8345 48.6099L39.8164 48.6087L39.5448 48.5641H39.5171H39.5165L38.8786 48.561H38.8695L38.5496 48.5508L38.549 48.5502L38.5177 48.5484L38.4573 48.5405L38.4549 48.5369L38.4163 48.5321L38.0554 48.4355L37.0675 48.4084H37.0131L36.441 48.4065H36.3692H36.3656L36.0566 48.4035V48.4029L36.0095 48.3993L35.327 48.2955L34.9184 48.2756H34.8592L34.1079 48.281H34.1055H33.7017L33.1055 48.284L33.0554 48.2895L32.9286 48.3052H32.922V48.3058L32.0693 48.3981L32.0397 48.3999H32.0391L31.9468 48.4023H31.9389L31.2262 48.4047L31.1652 48.4053L30.3783 48.4904L30.2998 48.5031L30.2889 48.5037L30.2883 48.5049L30.0886 48.5303L30.056 48.5327L30.0548 48.5333L29.3149 48.5629H29.3113L29.2032 48.5659L28.5267 48.5936H28.5255L28.4229 48.5979H28.4223L27.4658 48.6353L27.3843 48.6389L26.4646 48.6836H26.4621H26.4615L26.3861 48.6866L25.5442 48.7409H25.5436L25.4428 48.7475L25.4211 48.7487L24.4609 48.7584H24.4579L24.3547 48.759L23.2328 48.7807L23.1266 48.7825L20.3173 48.8374H20.3161L20.3155 48.8381L18.4893 48.867L16.7862 48.9099L15.9649 48.9799H15.9588L15.0065 49.0481L14.992 49.0487L14.8037 49.0547H14.8031V49.0553L14.7114 49.0583H14.7096L14.6142 49.0613H14.6136L14.5116 49.0644H14.5104H14.5098L14.4042 49.0674H14.4006L14.0826 49.074L13.1405 49.0982H13.1314H13.129L13.0602 49.0976H12.9914H12.9908L12.9214 49.097H12.855H12.8532H12.8418L10.4966 49.0197L10.3716 49.0161L10.1145 49.0155L10.1007 49.0149L9.53035 48.9889L9.52975 48.9877L9.50078 48.9859L8.69692 48.8779L7.9534 48.8018L7.90935 48.8006L7.8665 48.8049L7.83512 48.8061H7.82788L7.68002 48.803L7.60217 48.8012H7.59613L7.42776 48.7946L7.42715 48.794L7.4012 48.7922L6.63295 48.6944L6.63234 48.6938L6.62389 48.6932L6.13928 48.6135L6.03427 48.6123L6.01919 48.6117L5.54725 48.5822L5.23162 48.5653L5.18394 48.5725L5.13928 48.6172L4.80615 48.284L5.13928 47.9509L5.18394 47.9956L5.24248 48.0046L5.56958 48.0131L6.04091 48.0173L6.04152 48.0179L6.08255 48.0209L6.20507 48.0396L6.70416 48.0994L7.45491 48.1645H7.60579L7.68123 48.1633L7.82727 48.1597H7.83512L7.86529 48.1609L7.90935 48.1651L7.96668 48.1639H7.97272L7.99384 48.1645L8.76089 48.2164V48.2171L8.77115 48.2177L9.57561 48.3003L10.1308 48.3353L10.3849 48.3408H10.3855L10.5159 48.3444L12.858 48.3969L12.9214 48.3975L12.9908 48.3969H12.9914L13.0602 48.3963L13.1242 48.3957L14.0626 48.3655H14.0663L14.3831 48.3583L14.4869 48.3546H14.4875L14.5895 48.351L14.6836 48.3468H14.6842L14.776 48.3432H14.7772L14.9612 48.3359L15.9087 48.2738L16.738 48.208L16.7585 48.2068H16.7591L18.4736 48.1676H18.476L20.3022 48.135L23.1091 48.0601H23.1194H23.126L23.2274 48.062L24.3463 48.0493H24.3505H24.3517L24.4555 48.0499L25.4036 48.039L25.4959 48.033H25.4972L26.3433 47.9775H26.3517H26.3523L26.4302 47.9738L27.3511 47.9292H27.3541L27.4356 47.9256H27.4362L28.3909 47.8809H28.3988L28.4996 47.8779L29.1755 47.8513H29.1791V47.8507L29.2883 47.8477L30.0216 47.8224L30.2044 47.8085L30.2787 47.7976L30.2992 47.7958L30.2998 47.7946L31.1121 47.7186L31.1453 47.7167H31.1483L31.2244 47.7174L31.928 47.7125L32.0035 47.7089L32.8454 47.6178L32.8556 47.6172L32.8562 47.6166L32.9884 47.6057L33.0518 47.5997L33.085 47.5979L33.6987 47.5942H33.7011H34.1055H34.1079Z\" fill=\"black\"/>\n      <path d=\"M43.4637 47.9711L44.037 48.003V48.0037L44.0467 48.0043L45.6441 48.1509L46.4667 48.2022L47.3496 48.2203L47.804 48.23L48.2512 48.2342L48.6616 48.2372L49.0617 48.2378H49.69L49.9984 48.2245L50.0104 48.2239L50.5071 48.2221L50.7775 48.2197H50.7805H50.789L51.5663 48.2414L51.8463 48.2402H51.8469L51.8662 48.2414L52.1595 48.2607L52.4709 48.2638L52.7268 48.5233L52.4818 48.7822L52.1643 48.7997L51.8668 48.819L51.8469 48.8196H51.8463L51.5657 48.819L50.7896 48.8407H50.7805H50.7775L50.5071 48.8383L50.0104 48.8359H49.999L49.69 48.8226H49.0617L48.661 48.8232H48.6604H48.658L48.2464 48.8196L47.7974 48.8166H47.7926L47.3363 48.8057H47.3315L46.4425 48.7689H46.4401L45.6055 48.7248V48.7242H45.5976L43.9996 48.5903L43.4389 48.5613L42.6103 48.5607L42.2132 48.5903L41.9416 48.6331L41.9036 48.6361V48.6367L41.7183 48.6416H41.7111L41.6942 48.6403L41.629 48.7055L41.2959 48.3724L41.629 48.0393L41.693 48.1032L41.859 48.0827L42.1372 48.0399L42.1511 48.0387L42.1517 48.0381L42.5687 47.9934L42.5922 47.9922H42.5928L43.4389 47.9711L43.4468 47.9705L43.4637 47.9711Z\" fill=\"black\"/>\n      <path d=\"M15.3206 41.3555V41.361L15.3218 41.4056L15.3212 41.443L15.285 42.2336L15.2819 42.3018L15.2801 42.306L15.2759 42.3706L15.25 42.5764L15.2838 44.0821L15.2844 44.1015V44.1063L15.2838 44.1419L15.3604 45.1564L15.3628 45.2197L15.3622 45.2463L15.4612 46.023L15.4636 46.0628L15.4654 46.0671L15.5161 46.711L15.5233 46.7231L15.5306 46.7587L15.5427 46.8703L15.5481 46.8818L15.5692 47.201L15.571 47.2602V47.2885L15.5523 47.8456L15.5517 47.8474L15.5505 47.8763L15.5523 47.9518L15.5529 47.9771L15.4582 48.2065L15.4135 48.373L15.3441 48.4937L15.3375 48.4973L15.3133 48.5559L15.2831 48.5686L15.2747 48.5921L15.1522 48.7363L15.0906 48.7647L15.0629 48.8226L14.9802 48.8872L14.6042 49.017L14.1745 48.8389L13.9965 48.4092L14.017 48.3573L14.0061 48.3507L13.9536 48.2481L13.8577 47.857L13.8607 47.787L13.8613 47.7792L13.8637 47.2759L13.8529 47.0085L13.8523 47.0061L13.8456 46.8969L13.8462 46.8673L13.81 46.1775V46.1672L13.7756 45.3591L13.7678 45.3024L13.7593 45.2849L13.6778 44.2861L13.6748 44.2722L13.6567 44.1015V44.1008L13.6579 42.5541L13.6453 42.3103L13.644 42.2662L13.6453 42.2222L13.6489 42.154L13.6815 41.37V41.3694L13.6821 41.3628L13.6827 41.3422L13.6833 40.5275L14.1981 40.6313H14.2017L14.4612 40.5951L14.5354 40.5855L14.6929 40.5631L15.3501 40.3821L15.3206 41.3555Z\" fill=\"#E71224\"/>\n      <path d=\"M17.0797 40.2673L17.0459 40.2878L17.0441 40.417L17.0465 41.4188L17.0532 41.5081L17.0725 41.5835L17.0972 41.776L17.1008 41.7851L17.1069 41.9909L17.1576 41.91L17.2233 41.7513L17.2704 41.732L17.3036 41.6795L17.9138 41.4658L18.5233 41.6795L18.5565 41.732L18.6042 41.7513L18.606 41.7567L18.6416 41.7109L19.262 41.5147L19.8667 41.7006L19.9457 41.7984L20.0236 41.8304L20.0332 41.8533L20.3628 41.761L21.1316 42.073L21.1352 42.0808L21.1425 42.0838L21.2451 42.3313L21.4647 42.8328L21.5299 45.1424L21.5305 45.1756L21.4762 45.3059L21.4195 45.6028L21.2982 45.9082L21.1419 46.3789L21.0688 46.4773L21.0139 46.6016L20.994 46.6638L20.9451 46.6994L20.825 46.84L20.7997 46.9022L20.7798 47.0186L20.6253 47.2872L20.5299 47.5443L20.4539 47.5865L20.4092 47.6644L20.122 47.7694L19.8643 47.9118L19.7719 47.9257L19.6048 47.9384L19.227 47.8249L19.1093 47.866L19.0176 47.9553L18.2535 48.2655L17.6506 48.085L17.5601 47.9782L17.4774 47.9438L17.466 47.9161L17.4647 47.9155L17.4237 47.8171L17.3821 47.7682L17.0876 47.6662L17.052 47.6107L16.8027 47.522L16.5281 47.6179L15.7243 47.3011L15.7152 47.2812L15.6959 47.2733L15.5921 47.0229L15.3537 46.5226L15.3278 46.1472L15.3253 46.0808L15.3247 46.0796L15.3235 45.9734V45.9577L15.3941 45.7869L15.3815 45.7658L15.3356 45.7471L15.2608 45.566L15.0532 45.2226L15.023 45.076L15.0139 44.9879L15.0067 44.9746L14.7562 42.6475L14.752 42.5757L14.7508 42.5721L14.6935 40.9372L14.6929 40.9016L14.7357 40.6167L14.7574 40.5455L14.8142 40.5298L14.8323 40.525L14.8516 40.5196L16.204 40.1466L16.2746 40.1273H16.2783L16.2855 40.1267L16.3066 40.1261L16.3501 40.1249L16.3694 40.1243L16.6042 40.1176L16.9723 40.1074L17.102 40.1037L17.1165 40.1031L17.1376 40.1025L17.0797 40.2673Z\" fill=\"#E71224\"/>\n      <path d=\"M21.0309 45.9309L21.294 46.5669L21.0309 47.203L20.3948 47.4662L19.7587 47.203L19.4956 46.5669L19.7587 45.9309L20.3948 45.6677L21.0309 45.9309Z\" fill=\"#E71224\"/>\n      <path d=\"M21.2607 44.3867L21.2722 44.4151L21.2807 44.4181L21.2885 44.4344L21.3163 44.4477L21.3664 44.508L21.4822 44.8285L21.58 45.027L21.6035 45.301L21.6609 45.3246L22.1322 46.4628L21.8624 47.3541L21.7291 47.4652L21.726 47.4736L21.682 47.6547L21.6337 47.7108L21.5746 47.8635L21.4104 48.0433L21.2463 48.1622L21.1431 48.2823L20.9711 48.4078L20.8534 48.4465L20.8208 48.47L20.7067 48.4941L20.029 48.7162L19.9155 48.7651L18.796 48.788L18.7568 48.7886L18.6808 48.7868L18.1769 48.7663L18.0332 48.7011L17.6615 48.5901L17.6059 48.5877L17.2263 48.5859L17.2022 48.5937L16.5957 48.6951L15.8709 48.5485L15.2788 48.1495L14.8799 47.5575L14.7339 46.8327L14.8799 46.1079L15.2788 45.5165L15.8709 45.117L16.5957 44.9709L16.6385 44.9715L17.2933 44.9866L17.2951 44.9872L17.367 44.9896L18.0109 45.0325L18.032 45.0427L18.2348 45.0626L18.376 45.091L18.6234 45.0741L18.7568 45.0693H18.7598L19.7043 45.0711L19.7194 45.0687L19.8154 44.6758L19.8546 44.5991L19.9439 44.5454L19.9886 44.441L19.9892 44.4404L20.0115 44.3867L20.6361 44.1284L21.2607 44.3867Z\" fill=\"#E71224\"/>\n      <path d=\"M22.8383 40.5249L22.8371 40.5853L22.8359 40.6263L22.8516 41.6275V41.6426V41.7217V41.7301L22.8377 43.3173L22.8389 43.3813V43.4024L22.8383 43.4356L22.8003 44.4827V44.5032V44.5074L22.7967 45.4543V45.467L22.7852 46.1158L22.7834 46.1194L22.778 46.1876L22.7629 47.356L22.7592 47.365L22.7025 47.677L22.6573 47.7965L22.5028 47.9939L22.4569 48.1049L22.3959 48.1303L22.3368 48.2051L21.8292 48.365L21.2016 48.1049L21.1648 48.0174L21.1509 48.0114L21.128 47.9558L21.0562 47.9136L20.9988 47.8128L20.8745 47.3433V47.3173L20.9077 46.1128L20.9101 46.1073L20.9149 46.044L20.93 45.4296L20.9463 44.4954V44.4658L20.9475 44.4278L20.991 43.3729L20.9922 43.3095L21.0055 41.7181V41.6426V41.6287L21.0212 40.6263L21.02 40.5841L21.0181 40.5141L21.0175 40.4869V40.4851L21.0187 39.9933L21.2583 39.9866L21.2795 39.986H21.2885L21.7448 39.9727L21.8208 39.9709L22.0025 39.9655L22.0592 39.9643L22.265 39.9583L22.4291 39.8858L22.8811 39.7332L22.8383 40.5249Z\" fill=\"#E71224\"/>\n      <path d=\"M19.4868 40.5355L19.4826 40.5439L19.4784 40.5988L19.3239 41.6175L19.3208 41.6224L19.319 41.6447L19.2623 41.9694L19.1959 42.0834L19.1283 42.3816L18.7234 42.8976L18.7095 42.9217L18.7029 42.9241L18.6956 42.9332L18.546 43.0569L17.4934 43.4359L17.1911 43.4081L17.1458 43.3997L17.0517 43.3441L16.7958 43.291L16.7493 43.2705L16.5689 43.1178L16.3987 43.0593L16.3305 42.9543L16.3251 42.9519L16.3178 42.935L16.2937 42.897L16.1881 42.8348L16.167 42.7775L16.039 42.6688L15.9461 42.3604L15.8133 42.1553L15.5369 41.0484L15.5091 40.8288L15.4922 40.7944L15.4759 40.6374V40.6368L15.4434 40.3562L15.6123 40.3097L15.8706 40.2385L16.275 40.1269L16.8417 40.1112L16.9515 40.1082L17.424 40.0943H17.4307L18.3776 40.0677L19.3571 40.04L19.5387 40.0352L19.4868 40.5355Z\" fill=\"#E71224\"/>\n      <path d=\"M20.0587 40.2544L20.0448 40.2598L20.0388 40.2737L19.0128 40.6877L18.0044 40.2912L17.9923 40.2647L17.9663 40.2544L17.8945 40.0812H17.9036L20.1564 40.0178L20.0587 40.2544Z\" fill=\"#E71224\"/>\n      <path d=\"M21.4899 40.8217V40.8223L21.4417 41.2086L21.2365 41.596L21.1574 41.7855L21.129 41.7976L21.1134 41.8271L20.4519 42.0782L19.7458 41.7855L19.4531 41.08L19.4561 41.0046L19.5298 40.0353L19.5768 40.0341L21.6022 39.9768L21.4899 40.8217Z\" fill=\"#E71224\"/>\n      <path d=\"M21.3955 41.2035L21.3895 41.215L21.3798 41.3146L21.1227 42.6326L20.888 43.0243L20.8264 43.1685L20.6701 43.3164L20.4239 43.4147L20.3943 43.8674L20.1614 44.358L20.0642 44.5922L20.0467 44.5994L20.0382 44.6175L19.2615 44.9247L18.9423 44.8408L18.7456 45.2192L18.5929 45.3816L18.5518 45.4811L18.4667 45.5161L18.3509 45.6398L17.7793 45.801L17.7323 45.7811L17.1849 45.6223L17.0889 45.5149L17.0069 45.4811L16.9966 45.4558L16.993 45.454L16.9562 45.3659L16.8077 45.1993L16.8023 45.1878L16.6997 44.7461L16.7003 44.7394L16.687 44.7086L16.6955 44.5723L16.722 44.3622L16.7311 44.107L16.7908 42.4316L16.7981 42.189L16.9453 41.8535L16.9562 41.7292L16.9586 41.7243L16.961 41.6821L17.0914 40.6525L17.1137 40.6103L17.1439 40.4286L17.2555 40.0991L17.3877 40.0955L17.4191 40.0949L18.3515 40.0683L19.3569 40.04L20.3309 40.0128L20.5898 40.0056L21.299 39.9857L21.4909 39.9802L21.3955 41.2035Z\" fill=\"#E71224\"/>\n      <path d=\"M22.6403 41.7385L22.6433 41.7446L22.6493 41.7476L22.7374 41.96L22.9263 42.3909L22.9583 43.5798V43.6064L22.9499 43.7337L22.9372 43.8297L22.9517 44.2292L22.9529 44.2654L22.9239 44.4923L22.8654 44.7204L22.8636 44.8357L22.8599 44.8447L22.8177 45.1067L22.6777 45.5267L22.6741 45.5315L22.6728 45.54L22.6324 45.6528V45.9389L22.3693 46.575L22.2432 46.6269L22.2341 46.6353L22.1037 46.6848L21.7332 46.8381L21.3705 46.6878L21.2329 46.6359L21.2232 46.6269L21.0971 46.575L20.834 45.9389V45.6166L20.9426 45.3547L20.9776 45.1115L20.9824 45.1036L20.9861 45.0662L21.0718 44.648L21.1001 44.4832L21.1237 44.2316L21.117 43.9087L21.1013 43.8472L21.0754 43.6462L21.0706 43.6353L21.0506 42.9721L20.9867 42.8176L20.9903 42.7421L21.0337 42.31L21.2751 41.8345L21.3114 41.7476L21.3216 41.7434L21.3307 41.724L21.4115 41.6933L21.4405 41.639L21.4538 41.6299L21.98 41.47L22.6403 41.7385Z\" fill=\"#E71224\"/>\n      <path d=\"M20.2778 38.5911L20.4244 38.6478L20.725 38.6961L20.7298 38.6985L20.7491 38.7004L21.0249 38.7529L21.1498 38.8277L21.2035 38.844L21.2361 38.8301L21.3864 38.8929L21.4027 38.8953L21.4317 38.911L21.8722 39.0938L22.1353 39.7293V39.7981L21.8722 40.4342L21.2361 40.6973L21.0038 40.6008L20.9645 40.6062L20.9519 40.6068L20.9501 40.608L20.6821 40.6388L20.5638 40.646L20.521 40.6448L20.113 40.6273L20.1082 40.6249L20.0333 40.6207L19.9362 40.608L19.4642 40.6991L19.2735 40.7179L19.2687 40.7203L19.1703 40.7215L18.6531 40.8108L18.5071 40.8911L18.25 40.9279L18.0907 40.9399L18.0889 40.9405L17.9639 40.9417L17.0883 41.0896L16.7853 41.1608L16.7829 41.1614L16.3291 41.2743L16.1263 41.2996L15.9368 41.3787L15.8137 41.3726L15.7062 41.363L15.6338 41.3696L15.3369 41.4113L15.2114 41.4203L15.2041 41.4233L15.0563 41.43L14.9971 41.4312L14.0581 41.0425L13.6694 40.1035L14.0581 39.1644L14.8994 38.8162L14.9259 38.8005L14.9434 38.7975L14.9971 38.7758L15.0533 38.777H15.0635L15.25 38.7456L15.4805 38.7251L15.4854 38.7257H15.6061L15.7274 38.7076L15.8131 38.701L15.8227 38.6961L15.8662 38.6925L16.2983 38.6388L16.6187 38.5845L16.839 38.5652L16.8976 38.5664L17.8939 38.6122L18.0158 38.6134L18.1854 38.5941L18.2397 38.5851L18.396 38.5724L18.4009 38.5706L18.9845 38.5591L19.0985 38.5434L19.2253 38.5344L19.2289 38.5332L19.8807 38.5205H19.9018L20.2778 38.5911Z\" fill=\"#E71224\"/>\n      <path d=\"M22.5828 38.7935L22.9136 39.5925L22.6341 40.336L22.5973 40.3559L22.5828 40.3915L22.3638 40.4821L21.9377 40.712L21.7741 40.7343L21.6124 40.7458L21.4537 40.7349L21.0705 40.6812L20.744 40.7543L20.6245 40.855L20.5756 40.8768L20.2093 40.9546L19.5732 40.6915L19.3101 40.0554L19.4585 39.5599L19.6148 39.429L19.6281 39.3958L19.6788 39.3747L19.849 39.2316L19.8979 39.2099L19.9812 39.1924L20.0469 39.1013L20.0506 39.0995L20.053 39.0934L20.5641 38.7349L20.7054 38.6915L20.709 38.6909H20.7096L21.2702 38.5183L21.5732 38.4724L21.5865 38.4664L21.7566 38.4628L21.7838 38.4622L22.5828 38.7935Z\" fill=\"#E71224\"/>\n      <path d=\"M27.7253 35.9235L27.872 36.2766L27.7277 36.6242L27.77 37.0557L27.7712 37.0756L27.7718 37.0762L27.8255 38.0442L27.8261 38.0635V38.0641L27.8321 38.4848L27.8931 39.1365L27.8949 39.1734V39.1746L27.9033 39.702V39.7081L27.9064 40.3351L27.9353 44.4636V44.4673V44.4691L27.9347 44.5276L27.9335 45.0001L27.9444 45.0919V45.0961L27.9287 46.8891L27.9365 47.0122L27.9371 47.0309L27.9389 47.0569L27.9383 47.081L27.9094 47.7056L27.907 47.7111L27.9003 47.7799L27.8955 47.8034L27.8466 47.8426L27.7561 48.04L27.7223 48.0539L27.7156 48.0695L27.5581 48.1347L27.5171 48.186L27.4972 48.1902L27.3964 48.2017L27.0802 48.0732L27.0633 48.0563L27.0621 48.0533L27.0596 48.0526L26.9142 47.702L26.9166 47.6676L26.9015 47.0708V47.0569L26.9051 47.0146L26.9064 46.9893L26.9202 46.8662L26.9788 45.075L26.9812 45.0702L26.9896 44.9983L26.9878 44.5276V44.4697V44.4679L26.9818 40.3393L26.9782 39.7165L26.9661 39.2011L26.9269 38.5379L26.9263 38.5173H26.9257L26.9184 38.0786V38.0744L26.9106 37.1033V37.0997L26.9124 37.0575L26.9667 36.5041L26.8726 36.2766L27.0192 35.9235L27.3723 35.7769L27.7253 35.9235Z\" fill=\"#0069BF\"/>\n      <path d=\"M31.7037 35.5306L32.4321 35.5729L32.4333 35.5735L32.4502 35.5741L32.4677 35.5759L32.8515 35.5801L33.1943 35.5795H33.1955L33.2891 35.5886L33.3211 35.5946L33.6023 35.6242L33.6059 35.6278L33.6633 35.635L33.9982 35.7171L34.0042 35.7189H34.0199L34.0205 35.7195L34.0471 35.7207L34.3126 35.7437L34.4864 35.7557L34.8135 36.1064L34.6451 36.4069L34.4943 36.4986L34.3494 36.5397L34.3356 36.556L34.0712 36.5928L34.0199 36.5964L34.0193 36.597L33.9783 36.5976L33.9391 36.6018L33.892 36.6043L33.8135 36.597L33.4985 36.5415L33.2794 36.5294L33.1955 36.5379H33.1943L32.8479 36.5367H32.8389L32.4303 36.5276L32.4261 36.5258L32.3537 36.5161L31.6645 36.4908L29.5172 36.4685L29.2831 36.4938L29.2649 36.495L29.2637 36.4956L28.5208 36.5487H28.519L28.5184 36.5493L28.2384 36.5687H28.2354L27.7954 36.5982L27.7659 36.5994L27.7652 36.5988L27.5329 36.6954L27.1799 36.5487L27.0332 36.1957L27.1799 35.8426L27.5329 35.696L27.6844 35.7588L28.1056 35.6676L28.1569 35.6622L28.1593 35.6592L28.4382 35.6308H28.4472V35.6302L29.1895 35.5668L29.207 35.5662L29.2082 35.5656L29.4719 35.553L29.4901 35.5524L31.6711 35.53H31.6765L31.7037 35.5306Z\" fill=\"#0069BF\"/>\n      <path d=\"M34.4335 36.0716L34.4582 36.0614L34.4999 36.0994L34.6773 36.173L34.7045 36.2376L34.7413 36.2527L34.7853 36.3583L34.8626 36.4289L34.8722 36.5291L34.8746 36.5743V36.5846L34.8716 36.7095L34.8704 36.7113L34.8668 36.7681L34.8227 37.0674L34.8095 37.4174L34.871 38.5538L34.8716 38.5876L34.8704 38.6232L34.8408 39.1259L34.8414 39.482V39.5731L34.8451 40.2726L34.8487 40.339L34.944 41.8785L34.9453 41.9177L34.9446 41.9419L34.9217 42.5267L34.9211 42.5279L34.9193 42.5568L34.9157 42.6015V43.0807V43.0825L34.9151 43.2026V43.2147L34.9139 43.272L34.8891 44.8375L34.9646 45.4241L34.9658 45.4398L34.9929 45.5677L34.9911 45.6124L34.9416 46.3661L34.9338 46.3824L34.9139 46.5158L34.7467 47.0716L34.6767 47.1235L34.5922 47.3275L34.1529 47.5098L33.7135 47.3275L33.5312 46.8882L33.5331 46.8405L33.5771 46.2641L33.6302 45.517L33.6369 45.5031L33.5675 44.963L33.5614 44.8749L33.562 44.8429L33.6393 43.2273L33.6399 43.2255L33.6417 43.1984L33.6459 43.1525L33.6513 43.0451L33.652 43.0439L33.6526 43.0294L33.6942 42.5212V42.5206L33.6948 42.5134L33.7002 42.4573L33.7232 41.9141L33.6761 40.3903V40.3897L33.6731 40.3088V40.2889V40.2859L33.6767 39.5731V39.482L33.6773 39.1145L33.667 38.5997V38.5876L33.6682 38.5514L33.7376 37.3879L33.7395 37.383L33.7437 37.3323L33.8107 36.9322L33.8161 36.928L33.8227 36.8815L33.8783 36.683L33.8246 36.5532V36.5261L33.9712 36.173L34.3242 36.0264L34.4335 36.0716Z\" fill=\"#0069BF\"/>\n      <path d=\"M33.4751 35.8891L33.588 35.9156L34.0273 36.1987L34.1112 36.2367L34.2174 36.3598L34.4528 36.9899L34.4262 37.2162L34.3931 37.3526L34.3743 37.3815L34.3611 37.4546L34.2452 37.7629L34.2265 37.7871L34.2319 38.0025V38.0261L34.183 38.2723L34.2772 38.4896L34.3496 38.8354L34.349 38.8734L34.3327 39.2415L34.3255 39.2578L34.2965 39.4497L34.1812 39.8293L34.1426 39.8842L34.1197 39.976L33.9036 40.3809L33.9115 40.4304L33.9096 40.4811L33.8927 40.7406L33.9682 40.9072L34.0352 41.2125L34.0334 41.2663L33.999 41.7297L33.9827 41.7629L33.944 41.953L33.7733 42.352L33.7594 42.361L33.7497 42.4008L33.6676 42.5535L33.8342 42.6404L33.9706 42.8342L34.0629 43.1232L34.0919 43.1866L34.1028 43.4364L34.1034 43.466L34.0913 43.5885L34.0328 43.8891L34.0147 43.9192L33.9978 44.0025L33.833 44.4057L33.8119 44.4195L33.7956 44.4805L33.7545 44.5505L34.1245 44.6881L34.1432 44.7225L34.1764 44.7364L34.2524 44.9198L34.4492 45.2765L34.4878 45.5342L34.4932 45.5463L34.5041 45.597L34.5246 45.6235L34.5457 45.6833L34.6085 45.7593L34.8517 46.4328L34.8427 46.571L34.8306 46.6615L34.8336 46.6784L34.8511 46.8686L34.8233 47.1069L34.7962 47.2222L34.6948 47.3797L34.6296 47.5825L34.5065 47.6736L34.4329 47.7883L34.2784 47.8426L34.1221 47.9585L33.874 48.043L33.7449 48.0653L33.7075 48.0864L33.521 48.1196L33.3303 48.1365L33.2138 48.1299L33.0261 48.1093L32.4087 48.0991L32.4063 48.0979L32.3007 48.0918L32.0183 48.0593L30.8982 48.1311L30.824 48.1335H30.8233L29.3623 48.1383H29.3581L29.1824 48.0653L28.7334 47.9319L28.6972 47.8897L28.5506 47.9132L28.4691 47.9198L28.4606 47.9241L28.3007 47.9367L28.2162 47.9398L27.4824 47.6362L27.1788 46.9029L27.1867 46.7762L27.1939 46.7135L27.3224 46.4708L27.3369 46.4316L27.2742 46.3447L27.2241 46.1866L27.1927 45.988L27.1776 45.9573L27.1728 45.9072L27.1686 45.8118L27.1692 45.7961L27.183 44.8311L27.1848 44.8275L27.1981 44.6682L27.276 44.2077L27.1788 43.8734L27.1625 43.8348L27.1565 43.5378V43.5173L27.1679 43.3658L27.1716 43.3447L27.2289 42.6646L27.2277 42.5698L27.1993 42.125L27.0569 41.02L27.0485 40.8867L27.0491 40.8456L27.0798 40.0925L27.0853 40.0804L27.1058 39.9114L27.2277 39.4171L27.2832 39.332L27.3224 39.1908L27.4299 39.0122L27.3894 38.9736L27.2802 38.906L27.2603 38.8492L27.1963 38.7883L27.1191 38.664L26.9404 38.0399L27.0919 37.4624L27.1921 37.2838L27.2639 37.2107L27.288 37.1407L27.4045 37.0641L27.4256 37.0001L27.4637 36.8492L27.6598 36.5511L27.7298 36.3785L27.7908 36.352L27.8354 36.2838L28.3629 36.1021L28.46 36.0599L29.1245 36.043L29.1523 36.0424L29.5813 36.1335L29.8487 36.2518L30.9 36.183L30.9706 36.1806L31.11 36.1902L31.2808 36.2132L31.6737 36.0804L31.8427 36.052L31.8795 36.0327L32.1305 36.0013L32.3762 35.9283L32.6326 35.8903L32.6507 35.8818L33.1927 35.8613L33.2343 35.8601L33.4751 35.8891Z\" fill=\"#0069BF\"/>\n      <path d=\"M28.4281 26.4029L28.6441 26.9238L28.6435 26.9521L28.6128 27.7524L28.6115 27.7838L28.6109 27.7856L28.6097 27.8169L28.588 28.0867L28.5844 28.0927L28.5802 28.1453L28.5681 28.2165L28.5071 29.0837V29.0927L28.5204 30.5249V30.5321V30.5357V30.584L28.5198 30.6033L28.4848 31.6794L28.4842 31.7137V31.7144L28.4818 31.7681L28.3756 32.9401L28.3261 35.2961L28.3665 35.5719L28.3689 35.6045L28.3708 35.6087L28.4263 36.1996L28.4293 36.2635V36.2653L28.4287 36.5206L28.4788 37.6015L28.5083 37.963L28.5464 38.2575L28.5518 38.342V38.348L28.5482 38.7264L28.5548 38.8483L28.579 38.9564L28.594 39.0933L28.5934 39.1187L28.5802 39.4542L28.7111 39.7506L28.7371 40.593L28.8119 40.8278L28.8566 40.9503L28.8904 41.141V41.1416L28.8898 41.6118L28.8723 41.7481L28.8499 41.835L28.8004 41.8731L28.7045 42.0783L28.3472 42.2207L27.9791 42.068L27.8988 41.8743L27.8433 41.8314L27.8222 41.7518L27.8053 41.6232L27.8041 41.6196L27.7974 41.1905L27.7932 41.1658L27.681 40.9473L27.6381 40.7717L27.6194 40.7337L27.5621 40.0209L27.544 40.0119L27.5059 39.9612L27.4166 39.6944L27.387 39.6287L27.3689 39.1803L27.3448 39.0837L27.3394 39.0402L27.3339 39.0306L27.3038 38.8441L27.2965 38.7596L27.2953 38.7566L27.2863 38.4132L27.2356 38.1609L27.2283 38.0879L27.2241 38.0801L27.1939 37.6944L27.1933 37.6775L27.1927 37.6763L27.1348 36.5761L27.1143 36.3172L27.0636 35.7596L27.008 35.4621L26.9966 35.3372V35.3287L27.028 32.893V32.8924L27.0286 32.8664L27.0907 31.6902V31.6721V31.6637V31.6558L27.1034 30.5774V30.5357L27.0962 29.1018V29.0982V29.094V29.0559L27.0968 29.0553L27.0974 29.0221L27.145 28.1483L27.1402 28.1018L27.1366 28.0246V28.0095L27.1414 27.762V27.7494L27.1408 27.7228L27.1414 27.6944L27.1722 26.8936L27.3225 26.5605L27.3877 26.4029L27.3943 26.4005L27.3973 26.3933L27.9079 26.1875L28.4281 26.4029Z\" fill=\"#0069BF\"/>\n      <path d=\"M34.0323 25.324L34.7191 25.6082L34.73 25.6342L34.7541 25.645L34.7933 25.6885L35.0269 26.2956L34.8621 26.7253L34.812 26.875L34.8012 26.8828L34.7939 26.9015L34.7535 26.9468L34.6382 26.9981L34.3184 27.2244L33.4964 27.4779L33.1886 27.5249H33.188L30.7837 27.5243L30.6853 27.5195L30.3739 27.4875L30.3685 27.4845L30.3311 27.4821L29.2846 27.3216L29.2568 27.3065L29.1536 27.2896L29.0589 27.2582L28.87 27.298L28.672 27.2715L28.3377 27.1791L28.3268 27.1719L28.0227 27.286L27.9834 27.2841L27.9225 27.2793L27.8947 27.2491L27.8283 27.2172L27.8205 27.2202L27.4675 27.0741L27.3208 26.7211V26.6728L27.4675 26.3197L27.8205 26.1731L27.8736 26.1954L27.9738 26.1459L28.0323 26.0512L28.2218 25.9576L28.3214 25.9341L28.3667 25.9051L28.526 25.8677L28.5405 25.8557L28.727 25.7869L28.9068 25.6837L29.1029 25.6487L29.2508 25.6354L29.3902 25.6475L29.459 25.6589L30.4077 25.5943L30.4753 25.5919H30.4837L30.7662 25.5943L33.0697 25.4887L33.8452 25.3415L34.0323 25.324Z\" fill=\"#0069BF\"/>\n      <path d=\"M34.448 26.1161L34.5789 26.4324L34.6676 26.4746L34.7189 26.6038L34.792 26.6478L34.8215 26.7015L34.9193 27.0853L34.9223 27.0932L34.9241 27.3841V27.3895L34.9235 27.4197L34.8988 28.1016L34.897 28.1047L34.8939 28.162L34.7678 29.2917L34.635 31.7764L34.6791 34.2875L34.7026 35.4927V35.5084V35.6695V35.6762V35.7281L34.702 35.7293L34.6978 35.8017L34.6278 36.4456L34.5699 37.0817L34.5693 37.0914L34.5687 37.0926V37.095L34.5512 37.13L34.4232 37.404L34.3617 37.5531L34.352 37.5567L34.3472 37.5669L33.8571 37.7619L33.3671 37.5669L33.3623 37.5567L33.3526 37.5531L33.2886 37.3986L33.145 37.0896L33.1438 37.0709L33.1426 37.028L33.1432 37.0033L33.1456 36.9278L33.1329 36.7238L33.1323 36.7027L33.1317 36.7021L33.1245 36.4523L33.0853 36.4686L32.7014 36.3092L32.6924 36.34L32.6085 36.4637L32.5282 36.506L32.4226 36.6593L32.419 36.6846L32.2156 37.0642L32.1384 37.2507L32.1094 37.2628L32.0925 37.2935L31.4389 37.5404L31.0841 37.4378L31.0563 37.471L30.4818 37.6478L29.9531 37.4999L29.8789 37.4553L29.8481 37.401L29.8366 37.3967L29.8203 37.4674L29.7437 37.6279L29.5958 37.7926L29.5554 37.8916L29.48 37.9224L29.387 38.0262L28.8596 38.1795L28.1643 37.8916L28.1577 37.8753L28.1426 37.8693L28.0545 37.7751L27.9585 37.5331L27.7877 37.2151L27.7739 37.1131L27.7648 36.984L27.7642 36.9821L27.7503 35.4975V35.4879L27.7509 35.4517L27.8282 33.3539L27.7364 32.6834L27.7298 32.5838L27.728 32.5796L27.6924 31.5012V31.468L27.6942 31.4064L27.7576 30.4022L27.7636 30.3895L27.7763 30.264L27.9477 29.4583L28.0134 29.3521L28.034 29.2773L28.0219 29.0238L28.0207 28.9707L28.0497 28.7245L28.2579 27.8458L28.413 27.6031L28.4848 27.4161L28.6007 27.2869L28.6242 27.2767L28.635 27.2507L29.3092 26.9713L29.7268 27.0684L29.7684 27.0884L29.8819 27.1904L30.1396 27.2785L30.1402 27.2773L30.151 27.2724L30.1553 27.2616L30.8457 26.9761L31.4462 27.1831L31.5198 27.2404L31.5729 27.1294L31.6453 26.9544L31.6592 26.9484L31.6658 26.9345L32.2482 26.7045L32.6302 26.85L32.6694 26.8234L32.6719 26.8198L32.6803 26.8162L32.6882 26.8101L32.6966 26.8077L32.7956 26.7607L32.8529 26.652L33.1034 26.4806L33.2011 26.4505L33.2265 26.4106L33.3315 26.3624L33.3532 26.3575L33.3653 26.3473L33.4311 26.3201L33.486 26.1771L33.5174 26.1427L33.5294 26.1372L33.5349 26.124L33.8879 25.9773L33.9929 25.9888L34.0666 25.958L34.448 26.1161Z\" fill=\"#0069BF\"/>\n      <g className=\"animate\">\n        <path d=\"M39.9981 26.215L40.1448 26.5681L40.0681 26.7527L40.0367 27.8203V27.8245L40.0108 28.4721L40.0198 29.3798L40.0373 29.725L40.0379 29.7509V29.7557L40.0337 30.1909L40.0772 36.422V36.4256V36.4341L40.0693 36.9664L40.0699 37.0255V37.0297L40.0693 37.0599L40.0349 37.6894L40.0331 37.7594L40.0319 37.7612L40.0295 37.8052L40.0247 37.8475L40.0259 39.2627L40.0325 39.9139L40.0331 39.973V39.9772L40.0464 41.4105L40.0627 42.1848L40.0639 42.2403V42.2566V42.2651L40.0542 43.0128L40.0536 43.0647L40.0898 45.25V45.2615V45.2802L40.0886 45.3266L40.0597 47.6266L40.0591 47.6284L40.056 47.6634L40.0572 47.6936L40.053 47.7026L40.0518 47.7213L40.0464 47.7557L39.9891 47.8577L39.8641 48.1595L39.3982 48.352L38.9577 48.1836L38.9486 48.1661L38.9323 48.1595L38.8774 48.0267L38.7428 47.7648L38.7386 47.7231L38.7344 47.6489L38.7356 47.6061L38.7368 47.5928L38.7621 45.3182L38.7615 45.2808L38.7609 45.2615V45.2548L38.7839 43.0665L38.7833 43.0122V43.0044V43.0014L38.7869 42.2536L38.7875 42.241L38.7887 42.183L38.805 41.4063V41.4051L38.8388 39.9706L38.8394 39.9133L38.846 39.2597V39.2458L38.8955 37.795L38.8961 37.7938L38.8967 37.7781L38.9015 37.702L38.9058 37.6296V37.6272L38.9462 37.0086V36.9603V36.9597L38.9468 36.9368L38.9728 36.4081L39.0645 30.1927L39.0536 29.7642L39.053 29.7509L39.0536 29.7352L39.0645 29.3786L39.0947 28.4492V28.4486L39.0953 28.4359L39.1375 27.7763V27.7732L39.2148 26.7352L39.1454 26.5681L39.292 26.215L39.6451 26.0684L39.9981 26.215Z\" fill=\"#02A556\"/>\n        <path d=\"M40.8913 11.2863L40.8919 11.2888L40.8943 11.2894L40.9692 11.471L41.1261 11.841L41.1267 11.8609V11.8705L41.1261 11.8917L41.1019 12.8005V12.821L41.105 13.1916V13.1982L41.1044 13.2236L41.0911 13.6551V13.675V13.6853V13.6871L41.0899 14.4173V14.4306L41.0887 14.4692V14.4704L41.0869 14.5114L40.9619 16.2278V16.2429L40.9625 16.258L40.9619 16.2749L40.9179 18.2888L40.9173 18.296L40.8937 19.0111L40.8925 19.0582L40.8919 19.0588L40.8913 19.0775L40.7761 21.0365L40.8533 21.0685L41.05 21.5434L41.0374 21.6587L41.0247 22.1982L41.0253 22.2194L41.0259 22.2544V22.267L41.0253 22.293L40.9867 23.2266L40.965 23.9677V24.0166V24.0172V24.1916V24.2393V24.8633L40.9656 25.3877V25.3883V25.4101L40.8756 28.1849L40.8672 28.7583L40.9414 29.054L40.9535 29.1481L40.9589 29.159L40.9969 29.6822V29.6834L41.0205 29.9985L41.0223 30.0431L41.0217 30.0673L40.9758 31.1373V31.1379V31.1439L40.9662 31.3111L41.0162 31.4095L41.0229 31.4354L41.0313 31.4408L41.0621 31.5139L41.085 31.6255L41.1146 31.6961L41.0869 31.7625L41.073 31.844L41.0591 31.8826L41.0283 31.9043L40.968 32.0492L40.6149 32.1958L40.2619 32.0492L40.1937 31.8856L40.1291 31.8373L40.1201 31.8192L40.0959 31.8102L39.9251 31.4855L39.8871 31.1831L39.8835 31.1198L39.8829 31.1186L39.872 30.0993L39.8231 29.8403L39.8171 29.7758L39.8141 29.7691L39.7821 29.3147L39.6867 29.0166L39.662 28.8603L39.6578 28.85L39.6342 28.1928L39.6336 28.1705V27.5742L39.4417 27.4945L39.4164 27.4342L39.3874 27.3678L39.318 27.3262L39.3071 27.305L39.2408 27.0371L39.2299 27.0117L39.2202 26.7178L39.1514 24.8259V24.815L39.1508 24.8144L39.1363 24.1572L39.1357 24.1397V24.1282L39.1605 22.57L39.1611 22.5694L39.1617 22.538L39.3711 18.9858L39.3729 18.9828L39.3747 18.9484L39.3777 18.9218L39.4134 18.2513L39.4097 16.2592V16.258L39.4103 16.2435L39.4109 16.191L39.4115 16.1904L39.4121 16.1687L39.4954 14.4414V14.4318V14.4161L39.496 14.3799L39.528 13.6623L39.5286 13.6551L39.5147 13.2248L39.5141 13.1982V13.1922L39.5172 12.821V12.7903V12.7697L39.5407 11.8554V11.8404L39.7006 11.4644L39.773 11.2894L39.7755 11.2888L39.7761 11.2863L40.3337 11.0576L40.8913 11.2863Z\" fill=\"#02A556\"/>\n        <path d=\"M46.9387 11.6417L46.9411 11.6465L46.9459 11.649L47.0093 11.8023L47.1463 12.1118L47.1668 12.7672L47.1716 12.8095L47.1771 12.8204L47.226 13.486L47.2266 13.5071L47.2272 13.5083L47.2278 13.521L47.3503 14.9115L47.3509 14.926L47.3515 14.9272L47.3551 14.9827L47.3575 15.0376L47.3581 15.7443V15.7455V15.7491V15.7908L47.3593 16.139L47.3605 16.1595L47.3623 16.209L47.3629 16.2096L47.3774 18.1541V18.1601L47.3714 18.2519L47.366 18.2965L47.3654 18.2977V18.3019L47.3442 18.4577L47.3213 19.477V19.4776L47.3201 19.5017L47.3086 19.7003L47.3231 19.9471L47.3249 19.9917L47.3225 20.0443L47.1867 21.9127L47.1185 22.8071L47.1209 23.5011L47.1415 26.6278V26.6321L47.1397 26.6797L46.9978 28.4293L46.9109 30.5023L46.9308 30.8904L46.9314 30.9163L46.9308 30.9404L46.8862 31.833L46.8952 31.9531L46.8964 31.9899V32.0086L46.8904 32.1505L46.8856 32.1607L46.8657 32.2826L46.7932 32.4951L46.789 32.4981L46.7854 32.515L46.7353 32.6381L46.3551 32.8922L46.1541 32.6954L46.069 32.6598L46.0359 32.5796L45.9435 32.489L45.9405 32.3599V32.3502L45.9411 32.3315L45.9435 32.2736L45.8554 32.0617V31.9761L45.9858 31.6616L45.9713 30.9447L45.9327 30.5548L45.9302 30.5114V30.5108L45.9037 28.4021V28.3949V28.3774L45.9598 26.6315L45.8639 23.5246V23.524L45.8391 22.8071L45.8385 22.7944L45.8234 21.8729V21.8608V21.8427L45.8729 19.9712V19.9706L45.8741 19.9489L45.8898 19.6791L45.8892 19.4607V19.4601V19.4528L45.9001 18.4329L45.8844 18.2796L45.8801 18.2012L45.8808 18.1692L45.882 18.1475L45.862 16.2458L45.8602 16.2229L45.859 16.1788L45.8584 16.1782L45.853 15.8016V15.7938L45.8524 15.7503L45.847 15.0593L45.8451 15.0231L45.7504 13.623L45.7498 13.6103L45.7474 13.588L45.7438 13.5802L45.7106 12.9127L45.71 12.8747L45.7118 12.8216L45.7154 12.7715V12.7703L45.716 12.7606L45.7788 12.069L45.92 11.7854L45.9767 11.649L45.9912 11.6429L45.9984 11.6278L46.4613 11.448L46.9387 11.6417Z\" fill=\"#02A556\"/>\n        <path d=\"M45.1908 10.853L45.6097 10.8573L45.6133 10.8585L45.7943 10.888L45.9368 10.9357L46.107 10.9888L46.1951 11.1095L46.3671 11.1807L46.3942 11.2471L46.4449 11.2773L46.4606 11.3063L46.5228 11.5567L46.5198 11.5633L46.5149 11.576L46.3671 11.9327L46.3453 11.9417L46.3429 11.9466L46.2983 11.9653L46.2759 12.0057L46.2482 12.0238L45.9392 12.1137L45.9175 12.1089L45.83 12.1011L45.658 12.0703L45.5511 12.0558L45.1601 12.0407L45.1589 12.0401L45.1329 12.0389L44.8945 12.0178L44.7684 12.0226L44.1673 12.0751L44.1148 12.0775L44.1045 12.0757L43.6386 12.159L43.6091 12.162L43.6042 12.1644L43.5692 12.1687L43.5228 12.1717L43.5204 12.1729L43.422 12.1777L43.3942 12.1783L43.3339 12.1753L43.2204 12.1632L43.1088 12.1687L43.1027 12.1717L42.8179 12.223L42.7153 12.232L42.6869 12.2314L42.4413 12.2194L41.8046 12.3714L41.6724 12.3871H41.6616L41.2222 12.3787L40.7768 12.4209L40.6435 12.4644L40.6266 12.4668L40.6242 12.4704L40.4721 12.5145L40.3212 12.5368L40.3025 12.5344L40.3007 12.5368L40.2174 12.5501L40.1359 12.5567L39.7829 12.4107L39.6362 12.0576L39.7829 11.704L39.9802 11.6225L40.0122 11.5718L40.0949 11.5332L40.2102 11.5072L40.2234 11.4915L40.3791 11.462L40.4057 11.4595L40.4099 11.4571L40.5946 11.4324L41.1003 11.3352L41.148 11.3304L41.154 11.3274L41.5795 11.2882L42.2512 11.1204L42.3828 11.1041L42.3852 11.1035L42.6628 11.1011L42.8734 11.063L42.8782 11.0618L42.8945 11.0594L42.9006 11.0588L42.9042 11.0582L42.9965 11.0449L43.0086 11.0389L43.1908 11.0286L43.3315 11.0142L43.3393 11.0136L43.3405 11.013L43.4268 11.0051L43.4389 11.0033L43.4491 10.9985L44.0026 10.9194L44.0363 10.917L44.0689 10.9122L44.081 10.9067L44.6972 10.8711L44.731 10.8699L44.8921 10.8693H44.8933L44.8981 10.8699L45.1456 10.8542L45.1848 10.853H45.1908Z\" fill=\"#02A556\"/>\n        <path d=\"M45.2922 11.5896L45.393 11.5944L45.5384 11.6614L45.8293 11.7688L45.8486 11.8038L45.8818 11.8189L45.9452 11.977L46.0743 12.2082L46.1135 12.4616L46.1232 12.5775L46.1214 12.6252L46.0816 13.2299L46.084 13.2347L46.1425 13.7079L46.1485 13.799L46.1455 13.8606L46.0743 14.6837L46.0677 14.6958L46.0574 14.7839L45.9319 15.315L45.9542 15.9481L46.0357 17.0476L46.0423 17.0633L46.1262 17.2552L46.1715 17.3464L46.1727 17.3615L46.1733 17.3627V17.3669L46.2185 17.8678L46.2198 17.8919L46.2204 17.8937L46.2445 18.359V18.3735L46.2451 18.3741L46.2867 19.8201V19.8388V19.84L46.2855 20.7423L46.2849 20.7724L46.2626 21.2275L46.2529 21.2492L46.2161 21.4399L46.1679 21.5612L46.0918 21.6125L46.0218 21.7809L46.0013 21.7893L45.9971 22.2818L46.1329 22.3379L46.1359 22.3452L46.1431 22.3488L46.1908 22.3995L46.3254 22.7405L46.3242 22.7773L46.3055 23.0265L46.3242 23.3669L46.3254 23.3959L46.3018 23.452L46.364 23.5027L46.405 23.7067L46.4153 23.8111L46.4141 23.8497L46.3833 24.2607L46.329 25.006L46.3278 25.0066L46.3266 25.0289L46.2137 25.9245L46.1371 26.525L46.1497 28.2039L46.1504 28.2082L46.0037 28.5612L45.6507 28.7073L45.6422 28.7036L45.6193 28.7567L45.6138 28.7592L45.6114 28.7646L45.5662 28.808L45.1944 28.9565L44.8136 28.7984L44.7098 28.5479L44.6633 28.5093L44.6567 28.4707L44.6157 28.4852L44.5921 28.525L44.5529 28.5461L44.2584 28.6204L44.2089 28.6016L44.1709 28.6644L44.1546 28.7036L44.0948 28.8473L44.0942 28.8479L44.0936 28.8485L43.6374 29.0368L43.1799 28.8473L43.1178 28.697L43.0912 28.6336L42.8727 28.7151L42.7327 28.659L42.2994 28.8328L41.7792 28.6179V28.6167H41.778L41.7074 28.4465L41.5619 28.0989L41.5589 27.5262L41.1425 27.3627L41.1353 27.3482L41.1214 27.3421L41.0532 27.1774L41.0309 27.1315L40.679 27.0048L40.6591 26.971L40.6277 26.9577L40.5728 26.8255L40.4231 26.5733L40.3773 26.3391L40.3646 26.2106L40.3634 26.207L40.3217 23.7561L40.3211 23.7429L40.3193 22.0217V22.0205L40.3205 21.9764L40.4123 20.2196L40.4135 20.2172L40.4153 20.181L40.4455 19.8823V18.7827L40.4449 18.2655V18.2643L40.4503 18.1647L40.5064 17.6855L40.5813 17.5431L40.5668 16.834L40.5149 15.3494L40.5143 15.318L40.7647 14.7133L40.7973 14.6994L40.6772 14.2824L40.8335 13.9058L40.7738 13.8811L40.5022 13.2257L40.5131 13.0826L40.533 12.9565L40.5988 12.8388L40.5879 12.694L40.7358 12.1732L40.8408 12.076L40.8498 12.0495L40.8565 12.0458L40.8782 11.9933L40.9729 11.9535L41.1268 11.8117L41.1697 11.7893L41.3574 11.7435L41.4394 11.694L41.6591 11.6493L41.8643 11.6282L41.9192 11.6294L42.3175 11.6517L42.3411 11.6632L42.5583 11.6976L43.3326 11.9511L43.4569 11.9734L44.1733 11.7875L44.402 11.758L44.6682 11.8678L44.7502 11.7906L45.2566 11.5884L45.2922 11.5896Z\" fill=\"#02A556\"/>\n        <path d=\"M46.9827 26.492L46.8349 26.792L46.7763 26.8373L46.7371 26.8795L46.6508 26.9169L46.6188 26.97L46.5174 27.0231L46.4643 27.0545L46.3563 27.0853L46.3382 27.1088L46.2712 27.1275L46.1692 27.1414L46.1601 27.145L45.8656 27.1601L45.7775 27.1716H45.7727L44.7033 27.1607H44.6707L43.9405 27.1577H43.9272L43.868 27.1559L43.8668 27.1553L43.8379 27.1535L43.7365 27.1444L43.7353 27.1438H43.7286L43.3484 27.1004L43.0093 27.1281L42.9688 27.1299H42.961L42.8988 27.1287L42.8741 27.1275L42.5072 27.1022L41.314 27.0738V27.0732H41.305L40.6025 27.0406L40.2827 27.0829L40.2477 27.0853L40.247 27.0865L39.8403 27.1082H39.821L39.5729 27.2114L39.2199 27.0648L39.0732 26.7117L39.2199 26.3587L39.5729 26.212L39.6979 26.2639L39.7377 26.2488L39.7739 26.2639L39.8059 26.2506L39.8101 26.2464L40.2012 26.2404L40.5434 26.2078L40.5651 26.2066H40.5657L41.3038 26.1722L41.3146 26.1716L42.5174 26.1426L42.5295 26.142L42.5579 26.1432L42.9175 26.1643L42.9459 26.1637L43.3171 26.1348L43.3563 26.133H43.3635L43.7932 26.1396L43.8077 26.1402L43.9085 26.1444L43.9097 26.145L43.9284 26.1456L43.964 26.1493L44.6707 26.1462L44.7033 26.1456L45.7727 26.1354H45.7775L45.8155 26.1366L45.8252 26.1372L46.1155 26.1269H46.1348L46.2676 26.1444L46.3104 26.1559L46.3134 26.1553L46.3961 26.1456L46.3979 26.1432L46.4474 26.1414L46.5102 26.1257L46.6043 26.1143L46.9827 26.492Z\" fill=\"#02A556\"/>\n        <path d=\"M47.0144 26.5505L47.161 26.9035L47.0451 27.1823L47.047 27.2034V27.2083L47.0983 28.1473L47.1351 28.5873L47.1363 28.6084V28.609L47.222 30.822V30.8389H47.2226L47.2256 31.5028L47.2811 33.6331V33.6428L47.2817 33.7309L47.3258 35.3169L47.3294 35.411V35.4135L47.3656 36.3217L47.4012 36.8311L47.4085 36.8866L47.4121 36.9445L47.4127 36.9457L47.4338 38.341V38.3495V38.3507L47.4332 38.5728V38.644L47.4338 39.8341V39.8347V39.9138V39.9301L47.3928 41.2119L47.3922 41.6911V41.6923L47.3916 41.746L47.394 43.0719V43.0725V43.4479L47.4205 44.7695V44.7804V44.8389V44.8546L47.3759 46.3441L47.3753 46.3447V46.3525L47.359 46.7037V46.7357L47.3559 46.7912L47.3197 47.1328L47.2884 47.1606L47.1791 47.4249L47.1073 47.4545L47.0922 47.4684L46.9389 47.6669L46.8738 47.6989L46.8134 47.7967L46.7784 47.8142L46.6233 47.8522L46.2859 47.5142L46.3228 47.3616L46.3421 47.3223L46.3517 47.3169L46.3891 47.1902L46.3759 47.1576L46.3457 47.1304L46.3101 46.7937L46.3071 46.7357V46.6911L46.3077 46.6663L46.3246 46.3054L46.3753 44.8299V44.7846L46.3541 43.4623V43.4533V43.0725V43.0719L46.3559 41.746V41.6923V41.6905V41.6838L46.362 41.1962L46.3626 41.1926L46.3891 39.9077V39.8347V39.8341L46.3903 38.644V38.5728L46.3897 38.3525L46.3765 36.9729L46.3728 36.9168V36.9162L46.3354 36.3881L46.3348 36.3724L46.3342 36.3718L46.295 35.4575V35.4485L46.2944 35.4479L46.292 35.3495V35.3356L46.2878 33.7406V33.7394V33.7357L46.2884 33.6464L46.2757 31.5149L46.2648 30.8492V30.8413V30.8389L46.2751 28.6325L46.2582 28.1926V28.1763V28.1684L46.2751 27.2222L46.2757 27.2047L46.2775 27.1823L46.1616 26.9035L46.3083 26.5505L46.6613 26.4038L47.0144 26.5505Z\" fill=\"#02A556\"/>\n        <path d=\"M46.8277 29.1802L47.0528 29.7245L47.0353 29.8869L47.0196 29.9599L47.0015 30.0703L46.9773 30.3655L46.9755 30.3703L46.9725 30.4101L46.7788 31.7004L46.7746 31.7082L46.7709 31.7432L46.7064 32.0335L46.707 32.0891V32.0981V32.1168L46.6967 32.5018L46.6889 33.4011V33.4017L46.6877 33.4379L46.5959 34.9424L46.5947 34.9454L46.5923 34.9822L46.5235 35.5592L46.5229 35.6159L46.5307 35.6932L46.535 35.768L46.5344 35.7976L46.4722 37.2152L46.471 37.2188L46.4674 37.2743L46.398 37.7813L46.3153 38.8211L46.3135 38.8247L46.3111 38.8573L46.2863 39.0353L46.305 39.3039L46.3068 39.3443V39.3449L46.3099 39.7897L46.3672 40.0245L46.366 40.0595L46.3545 40.2387L46.3618 40.3582L46.3624 40.3884V40.4047L46.3346 41.2122L46.3334 41.2152L46.3292 41.2725L46.3093 41.395L46.3105 41.3968L46.363 41.6195L46.3624 41.6413L46.3563 41.7813L46.3702 41.7903L46.4143 41.8947L46.4553 42.0927L46.4511 42.156L46.4131 42.4548L46.4354 42.5387L46.4318 42.5936L46.3799 43.0607L46.3787 43.0619L46.3775 43.0752L46.3081 43.5381L46.4173 43.8012L46.4167 43.8229L46.4058 44.0631L46.404 44.0661L46.401 44.1102L46.334 44.5465L46.3328 44.5477L46.331 44.564L46.3298 44.5706L46.3455 44.6099L46.3624 44.605L46.7727 45.0148L46.7733 45.2822V45.2828L46.7667 45.3564L46.678 45.841L46.7094 45.873L46.707 45.9164L46.681 46.1313L46.678 46.1337L46.6732 46.1735L46.5543 46.6575L46.5621 46.704L46.5845 46.7577L46.582 46.806L46.5507 47.1271L46.3901 47.4463L46.3491 47.462L46.3364 47.4928L46.1729 47.561L46.1717 47.5622L46.1662 47.5634L46.153 47.5688L46.1415 47.5893L45.7909 47.7885L45.5519 48.3129L45.4825 48.3576L45.4414 48.4572L45.4185 48.4668L45.4064 48.4892L45.3877 48.503L45.121 48.59L44.8005 48.4572L44.6677 48.1367L44.6828 48.0728L44.684 48.0528L44.7094 47.8482L44.7136 47.844L44.7214 47.7873L44.9116 47.1029L44.9134 47.1017L44.9146 47.0927L45.0135 46.777L44.946 46.6135L44.6478 46.4898L44.4945 46.1198L44.5018 46.0317L44.5138 45.9623L44.3606 45.8989L44.2634 45.6642L44.203 45.6165L44.1692 45.4723L44.1536 45.3383L43.8995 45.2399L43.8898 45.2212L43.8723 45.214L43.8041 45.0486L43.7546 44.9496L43.6092 44.8911L43.6062 44.8839L43.5989 44.8808L43.5247 44.7022L43.3636 44.3419L43.3485 43.9255L43.3479 43.8935L43.3497 43.8344L43.3618 43.6732L43.3243 43.631L43.2827 43.5447L43.1958 43.1663L43.1976 43.109L43.267 42.0746L43.2694 42.0697L43.273 42.0178L43.5621 39.9261L43.5663 39.9183V39.9177V39.9146L43.57 39.8356L43.7383 37.9671L43.7426 37.9599L43.7468 37.905L43.9146 36.905L44.2368 34.1747L44.2549 33.7173L44.2574 33.7113L44.2658 33.6093L44.4915 32.214L44.506 32.188L44.5211 32.0903L44.6828 31.5604L44.6883 31.5308L44.6955 31.5187L44.7015 31.4741L44.9936 30.3498L45.066 30.2405L45.1107 30.0993L45.1849 29.9931L45.2996 29.6926L45.4149 29.5465L45.4577 29.4324L45.6056 29.2641L45.6883 29.2267L45.7377 29.1862L45.7396 29.1802L45.7486 29.1766L45.8983 29.0522L45.9767 29.0184L46.2839 28.9551L46.8277 29.1802Z\" fill=\"#02A556\"/>\n        <path d=\"M46.5574 27.2537L46.7119 27.6261L46.6956 27.7553L46.5665 28.2664L46.3951 29.0081L46.3444 29.8633L46.3438 29.8657L46.342 29.8947L46.2677 30.5271L46.2635 30.535L46.2587 30.5814L46.205 30.8265L46.2002 30.8343L46.1971 30.8578L46.1857 30.8983L46.138 30.9339L46.0988 30.9973L46.0336 31.1548L45.8833 31.2169L45.8362 31.3201L45.7753 31.4662L45.768 31.4692L45.7644 31.477L45.2865 31.6683L45.1482 31.611L45.1289 31.643L44.6727 31.8072L44.182 31.6122L44.1766 31.6014L44.1658 31.5971L44.1024 31.4432L43.9575 31.1355L43.9346 30.7673L43.934 30.7504L43.7843 30.8126L43.3818 30.6454L43.2152 30.2429V30.2199L43.217 30.1801L43.2044 30.1228L43.1941 30.0274L43.1899 30.019L43.1766 29.7921L43.1748 29.7492L43.2822 29.3847L43.66 28.7957L43.6896 28.78L43.7065 28.7329L44.0716 28.2857L44.077 28.2827L44.0801 28.2755L44.409 27.8898L44.52 27.8385L44.5665 27.7559L44.6787 27.6883L45.0155 27.5935L45.3058 27.7088L45.3365 27.6388L45.4005 27.5802L45.5013 27.541L45.52 27.5235L45.683 27.4607L45.7041 27.4119L45.7638 27.3738L45.8133 27.2537L46.1851 27.0999L46.5574 27.2537Z\" fill=\"#02A556\"/>\n        <path d=\"M42.6033 26.2701L42.9401 26.278L42.9473 26.281L43.1314 26.3009L43.4458 26.3709L43.7627 26.5689L43.9099 26.6298L44.1929 26.5061L44.5478 26.4313H44.5707L44.8013 26.4373L44.8103 26.4415L45.0065 26.4681L45.1543 26.5085L45.3758 26.6594L45.5116 26.7137L45.5363 26.768L45.5979 26.8103L45.6631 27.0034L45.7602 27.0885L45.849 27.2834L45.9328 27.3426L46.024 27.6015L46.036 27.6721L46.0457 27.6799L46.1211 28.0462L46.1326 28.1579L46.1169 28.287L46.0656 28.4964L46.0234 28.529L45.9298 28.7547L45.5768 28.9014H45.546L45.1929 28.7547L45.1115 28.558L44.9739 28.7041L44.9552 28.7125L44.9467 28.7318L44.5406 29.1241L44.3595 29.1971L44.304 29.2822L44.1036 29.3703L43.7759 29.4397L43.6063 29.4216L43.4555 29.389L43.3239 29.3076L43.1549 29.252L43.094 29.1663L43.0059 29.1591L42.7808 29.1223L42.7349 29.0963L42.5876 29.0686L42.5261 29.0438L42.4295 29.1144L41.8622 29.2997L41.6498 29.2122L41.6118 29.4373L41.6444 29.6986L41.7657 30.2261L41.7922 30.456L41.7777 30.625L41.6866 31.1567L41.5013 31.4789L41.4343 31.6407L41.4006 31.6546L41.3794 31.6914L40.7922 31.9068L40.205 31.6914L40.1839 31.6552L40.1495 31.6407L40.0801 31.4735L39.8966 31.1512L39.8302 30.7662L39.6317 30.3588L39.5653 30.0746L39.5267 29.9998L39.4754 29.5345L39.4688 29.4138L39.4718 29.3323L39.5991 27.666L39.6082 27.6473L39.6257 27.4964L39.6456 27.4107L39.9208 26.9792L39.9835 26.8356L40.1091 26.7197L40.4875 26.5713L40.8152 26.418L41.517 26.3751L42.4669 26.2756L42.5792 26.2695L42.6033 26.2701Z\" fill=\"#02A556\"/>\n        <path d=\"M40.8318 28.0407L40.9175 28.0081L41.3363 28.1813L41.3768 28.2796L41.4365 28.3146L41.5306 28.4854L41.5379 28.4667L41.6441 28.3955L41.7129 28.2302L41.7908 28.1976L41.8245 28.139L41.8493 28.1245L42.186 28.034L42.6598 28.2302L42.7195 28.3738L42.7938 28.4215L42.8927 28.6351L42.929 28.7944L42.9495 28.8349L42.9597 28.9242L43.5204 28.6961L43.6417 28.7045L43.8251 28.7317L44.3152 29.0026L44.3206 29.0165L44.3315 29.0213L44.4799 29.2042L44.5457 29.3877L44.6417 29.5512L44.693 29.8246L44.7425 29.961L44.7557 30.0346L44.7702 30.0588L44.8758 30.5651L44.8891 30.6942L44.8909 30.6985L44.9102 31.6236V31.6393V31.6659L44.8541 33.1843L44.8529 33.1861L44.8511 33.2229L44.7129 34.7311L44.7099 34.7377L44.7057 34.7872L44.5862 35.486L44.5825 35.4921L44.5795 35.5168L44.5005 35.8789L44.3164 36.174L44.2621 36.3032L44.1836 36.3786L43.9199 36.4854L43.9452 36.783V36.7848L44.1003 38.5609L44.1281 38.4649L44.1722 38.1583L44.3393 37.8542L44.4021 37.7033L44.4286 37.6924L44.4437 37.6647L44.9784 37.4649L45.3019 37.585L45.3037 37.5796L45.3212 37.5723L45.3303 37.5542L45.9042 37.3309L46.4787 37.5542L46.4878 37.5723L46.5053 37.5796L46.5783 37.7558L46.7509 38.1058L46.8414 39.1354L46.8445 39.209L46.8451 39.2102L46.8487 39.7099L46.8692 40.3418L46.9018 40.8089L46.9042 40.8729V40.8868L46.8933 41.5802L46.8433 44.8934L46.8976 45.7033L46.8982 45.7081V45.7087L46.9953 47.2313L46.9977 47.2941L46.9283 47.4607L46.8089 47.8397L46.766 47.9012L46.7407 47.9145L46.7226 47.958L46.6857 47.973L46.667 48.0189L46.0315 48.282L45.8837 48.27L45.6381 48.2289L45.4956 48.1475L45.4105 48.1203L45.0279 48.1698L44.903 48.1776L44.7612 48.1674L44.3955 48.1119L44.0635 48.1179L44.0515 48.1185L44.011 48.1191L43.6525 48.0503L43.6302 48.0412L42.7769 48.1342L42.7189 48.1378L42.7153 48.1396L42.518 48.1505L42.486 48.1517H42.4818L42.4733 48.1523L41.3792 48.2036L41.3218 48.2048L40.6375 47.9827L40.55 47.9187L40.3653 47.9881L39.5928 47.6683L39.2729 46.8958L39.2802 46.7721L39.3116 46.4957L39.3725 46.378L39.4618 46.0587L39.6025 45.8252L39.6169 45.8113L39.6218 45.795L39.7364 45.62L39.6139 44.8475L39.6133 44.8457L39.5367 44.3883L39.5222 44.2205L39.5403 44.034L39.594 43.7576L39.6749 43.6218L39.7407 43.4088L39.8294 43.3376L39.8342 43.1746L39.6206 42.6598V42.652L39.6248 42.1613L39.6254 42.1601L39.6302 42.0883L39.5729 38.6345L39.4745 35.9429V35.9308L39.4063 33.2742V33.2724V33.2718L39.3924 32.7045L39.3918 32.6785L39.6821 31.9785L39.7696 31.9423L39.7624 31.8439L39.7588 31.763L39.7624 31.6761L39.7763 31.5222L39.9706 31.1288L40.0491 30.9393L40.0684 30.9314L40.0786 30.9115L40.4878 30.7522L40.3731 30.276L40.3556 30.1336L40.3508 30.1227L40.2941 28.9254L40.2935 28.8922L40.2977 28.818L40.311 28.6948L40.2289 28.4975L40.3755 28.1445L40.7286 27.9978L40.8318 28.0407ZM44.9863 41.6942L44.9839 41.6979L44.9827 41.7081L44.8873 42.1481L44.8511 42.2072L44.8209 42.3418L44.6453 42.7154L44.5379 42.8367L44.6604 43.0268L44.7382 43.3454L44.7666 43.5723L44.7642 43.6345L44.7382 44.0225L44.7618 44.0919L44.833 44.1764L44.9652 44.4776L44.9766 44.5307L44.9959 44.5572L45.0279 44.6538L45.1148 41.5397V41.5355L45.1185 41.4287L45.0575 41.4106L45.0442 41.3949L44.9863 41.6942Z\" fill=\"#02A556\"/>\n      </g>\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <rect width=\"1500\" height=\"1000\" fill=\"white\" transform=\"translate(-552 -81)\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\nexport default D3Sketch"},"relativePath":"sketches/d3.jsx"},{"fields":{"contents":"import React from \"react\";\n\nconst Guitar = () => (\n  <svg className=\"sketch guitar\" width=\"180\" height=\"206\" viewBox=\"0 0 180 206\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M140.274 40C136.735 40.4164 132.663 46.16 129.496 48.2222C126.196 50.3711 122.786 55.1523 120.274 58.2222C114.457 65.3323 106.76 70.6603 101.052 78C90.198 91.9547 77.5258 104.498 66.2739 118\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M140.274 38C144.848 40.2873 147.619 42.0352 149.274 47\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M149.274 44C138.576 59.2016 124.349 71.9246 111.274 85C105.116 91.1583 100.118 98.4884 94.3295 105C88.3276 111.752 82.0986 118.01 76.2739 125\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M67.2739 115C71.0143 118.74 73.6273 123.353 77.2739 127\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M148.274 46C152.42 44.1573 155.86 45.7786 159.218 42C162.055 38.8083 162.292 34.6509 164.274 31C166.03 27.7654 184.883 19.2438 174.274 15\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M176.274 15C173.557 13.6417 171.259 12.4975 168.274 12\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M168.274 11C165.264 15.8158 154.287 20.2152 149.274 23C141.455 27.3438 138.799 31.1518 140.274 40\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M145.274 23C145.189 21.4774 144.746 20.4171 144.274 19\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M145.274 13C144.92 16.0107 142.77 15.688 140.274 16\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M150.274 13C151.48 14.2775 152.311 15.5562 153.274 17\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M154.274 10C152.429 11.7423 150.529 12.8726 148.274 14\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M158.274 10C160.886 10.3073 160.901 11.7616 161.274 14\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M160.274 7C158.962 9.36199 157.471 10.5354 155.274 12\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M165.274 5C165.4 7.26515 166.274 8.99942 167.274 11\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M167.274 2C165.751 2.08459 164.691 2.52762 163.274 3\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M82.2739 120H82.274\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M82.2739 119C78.8303 126.748 86.4126 135.071 94.2739 135.944C101.173 136.711 108.612 135.888 115.274 134.222C127.206 131.239 117.567 144.661 113.274 148C106.93 152.934 98.5323 153.084 92.2739 157.778C85.5143 162.847 82.164 168.489 81.2184 177C80.3134 185.145 78.2821 192.159 72.2739 198C59.308 210.606 41.8983 194.083 31.2739 187\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M34.7739 188C32.7675 187.889 32.0522 186.834 30.7461 185.528C29.265 184.047 27.523 183.472 25.7739 182.5C22.2659 180.551 20.2403 176.829 16.7739 175C10.4068 171.64 5.27393 164.866 5.27393 157.5C5.27393 153.355 5.89393 151.531 8.0517 148C10.0981 144.651 13.1379 143.52 16.7739 142.611C18.2623 142.239 19.8447 141.778 21.2739 141.222C22.983 140.558 24.5518 140.728 26.2739 140.25C30.3636 139.114 33.6174 136.778 36.7739 133.972C42.9571 128.476 42.3442 121.462 45.0517 114.5C47.6109 107.919 49.1933 100.488 54.7739 95.5277C57.8011 92.837 60.6547 90.8096 64.2739 89C65.436 88.419 67.4033 86.9155 68.7461 87.0833C70.1763 87.2621 69.2755 90.5942 69.0239 91.5C68.5564 93.1832 67.5134 94.434 66.7739 96C66.0409 97.5522 66.2739 99.3262 66.2739 101C66.2739 105.048 67.5635 107.684 69.7739 111\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M41.2738 153.5C39.9458 155.758 37.9424 157.843 36.3849 160C33.6067 163.847 37.8816 163.866 40.2738 165.611C43.1093 167.68 49.7584 175.536 53.7738 174.389C56.0835 173.729 57.4971 168.35 58.8849 166.5C61.3159 163.259 60.0141 162.268 57.1626 160C54.8573 158.166 52.307 157.267 49.7738 156C47.498 154.862 45.4003 153 42.7738 153\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M58.2739 169C58.3509 170.077 59.6056 168.584 60.2739 168.25C61.58 167.597 62.9627 167.138 64.2739 166.5C66.963 165.192 69.5209 163.976 72.2461 162.75C74.9884 161.516 77.0621 160.245 76.8017 157.25C76.5751 154.644 78.4566 150.637 76.2739 149\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M68.7741 128C65.5929 127.823 63.9505 124.739 60.2741 125.556C55.6337 126.587 63.388 132.057 64.7741 132.75C66.2213 133.474 72.0931 136.16 73.5519 134.778C75.7235 132.72 69.6265 128.402 68.2741 127.5\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M66.2741 143C62.7472 141.779 60.2852 138.489 56.7741 137.611C53.3931 136.766 49.2433 138.588 53.2741 141.611C56.0556 143.697 58.8387 145.625 62.2741 146.389C63.4541 146.651 65.5488 146.779 66.7185 146.444C68.2244 146.014 64.6762 143.835 64.2741 143.5\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M91.7739 146C95.6376 145.785 100.644 145.134 104.274 143.722C106.22 142.966 108.25 142.812 110.274 142.25C112.883 141.525 113.553 138.954 116.274 138.5\" stroke=\"#F24822\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M107.274 144C107.866 144 111.829 143.984 111.829 143.222C111.829 142.154 107.689 144.497 107.385 144.722C106.71 145.222 106.649 146.219 105.746 146.444C105.081 146.611 104.317 146.508 105.274 146C106.105 145.558 109.212 142.691 109.441 143.083C110.612 145.092 106.853 145.592 105.774 145.472C103.693 145.241 102.648 145.813 100.774 146.75C98.5465 147.864 98.2396 148.263 100.774 147.278C101.255 147.091 102.572 147.364 101.663 147.667C100.985 147.892 99.4775 147.526 98.7739 147.389C96.7666 146.999 95.3243 148.269 93.7739 149.389C92.2314 150.503 90.3164 150.997 88.7739 152.111C87.0615 153.348 86.0754 154.786 84.885 156.5C83.79 158.077 84.2344 160.199 83.0517 161.889C81.2848 164.413 83.3419 154.947 85.7739 153.056C88.4911 150.942 93.018 150.323 96.2739 149.611C99.1349 148.985 90.42 151.657 88.6628 154C87.5049 155.544 86.8153 157.422 85.2739 158.611C83.3909 160.064 82.5778 161.392 81.5239 163.5C79.9887 166.57 79.5146 170.167 78.7739 173.5C77.9981 176.991 75.973 180.417 75.7739 184C75.3484 191.659 66.358 197.759 59.2739 196.972C55.7352 196.579 52.746 194.272 49.2739 193.5C44.828 192.512 43.5852 187.297 38.7739 188.5\" stroke=\"#F24822\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M61.2739 100C62.8568 99.8021 62.9574 96.2248 63.7739 95\" stroke=\"#F24822\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M58.7739 99C60.3396 97.643 58.1789 100.595 57.7739 101C57.3474 101.426 54.7183 103.393 54.7183 103.889C54.7183 104.516 57.3388 102.257 57.4961 102C58.2611 100.748 59.2663 99.404 59.9128 98.1111C61.0277 95.8812 57.1388 102.27 56.0239 104.5C54.7582 107.031 54.3827 109.936 53.2739 112.5C51.7244 116.083 54.4194 109.801 54.6628 108.611C54.9357 107.277 54.9492 106.249 55.5239 104.972C56.0838 103.728 57.5757 101.957 57.2183 100.528C56.6361 98.1988 54.8192 104.909 54.5239 105.5C53.1803 108.187 51.9078 110.02 51.1628 113C50.7607 114.608 48.4596 119.555 50.2739 115.5C50.7154 114.513 51.1447 112.677 50.7183 111.611C50.3941 110.8 49.336 114.662 49.2739 114.972C48.1919 120.382 47.3402 125.738 46.385 131.111C46.2085 132.104 46.2739 138.266 46.2739 134.5C46.2739 132.177 47.1916 129.338 46.7461 127.111C46.2885 124.823 44.5095 131.252 43.885 133.5C43.1426 136.173 42.1413 138.76 40.5239 141C38.1657 144.265 43.7953 137.851 42.1905 137.583C40.4166 137.288 35.4486 141.733 38.7739 138.5C39.8836 137.421 41.1834 136.33 41.9961 135C42.2966 134.508 44.0691 132.164 42.7739 133.5C40.3285 136.022 39.1272 138.781 36.2739 141C32.4754 143.954 19.0242 149.535 23.2739 147.278C24.4344 146.661 25.5689 145.543 26.6628 144.778C27.1474 144.439 24.6716 144.812 24.2739 145C21.7983 146.169 19.2502 147.012 16.7739 148.25C15.6828 148.796 14.2731 149.255 13.385 150.111C12.6119 150.857 11.6824 152.536 13.2461 150.972C13.5172 150.701 15.0556 147.942 13.885 148.722C12.9805 149.325 12.1408 151.477 11.885 152.5C11.2771 154.932 11.2814 157.086 11.885 159.5C12.7153 162.821 15.5998 164.336 17.5239 167C19.2751 169.425 22.3762 171.018 24.7739 172.75C27.3552 174.614 29.7466 176.429 32.1628 178.5C33.3492 179.517 34.1658 180.892 35.2739 182C35.5276 182.254 38.8292 185.249 38.4128 183.917C37.8911 182.247 36.8223 180.71 36.2739 179C35.7623 177.405 35.7851 175.508 35.0517 174C32.6778 169.12 26.9864 166.793 28.2739 161C28.9713 157.862 31.3095 156.874 33.0239 154.5C33.878 153.317 34.831 152.198 35.6628 151C36.7141 149.486 36.7141 149.486 35.6628 151C34.1256 153.214 33.2304 155.829 31.6628 158C28.8919 161.837 33.2577 155.061 34.0239 154C35.6504 151.748 37.2792 149.489 38.5239 147C39.1743 145.699 39.7879 144.581 40.7739 143.5C42.4562 141.655 39.2737 144 38.7739 144.5C36.411 146.863 33.6932 148.824 30.885 150.611C29.501 151.492 28.5348 152.555 27.0239 153.278C25.7895 153.868 24.5029 156.238 24.3017 153.722C24.2308 152.837 25.1084 149.644 23.385 150.611C22.1314 151.314 20.7965 152.781 20.0517 154C19.3561 155.138 19.2739 156.202 19.2739 157.5C19.2739 158.719 19.2333 156.16 18.6628 155.611C16.6092 153.637 14.0909 160.157 16.885 160.889C18.477 161.306 23.8734 159.975 23.1905 163.389C23.1791 163.446 16.946 158.988 20.1628 164.111C21.3684 166.031 25.4141 167.679 27.7739 167.417C29.2249 167.255 29.6512 165.779 31.2739 166.5C32.5805 167.081 33.5726 167.988 34.7739 168.722C37.1736 170.189 39.2988 172.262 41.7739 173.5C44.267 174.747 45.7314 177.229 48.2739 178.5C50.7074 179.717 53.2013 179.242 55.7739 179.528C57.2036 179.687 58.1386 180.632 59.2739 181.389C60.5182 182.218 62.0449 181.291 63.2461 180.75C66.1889 179.426 68.2647 177.063 70.7739 175.111C72.0037 174.155 73.1005 173.279 74.0239 172C74.3155 171.596 76.365 168.956 75.7739 170.611C74.3443 174.614 73.3151 177.544 70.8017 181C67.3536 185.741 64.4615 192.885 57.2739 190.889C56.0584 190.551 54.8473 189.828 53.7461 189.222C52.2599 188.405 51.6822 186.782 50.2739 186C47.591 184.51 43.6153 184.233 41.4961 181.972C40.3117 180.709 38.7663 180.428 37.4961 179.389C36.4544 178.537 36.9222 177.842 38.0794 179.444C39.4437 181.333 44.6196 181.442 46.7739 181.5C50.0528 181.589 52.6221 180.272 55.4683 182.5C57.2809 183.919 62.5946 185.743 59.7739 188\" stroke=\"#F24822\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M26.7739 164.5C27.3687 163.429 27.9788 162.608 29.2739 162.5C30.0409 162.436 31.2528 162.489 30.2739 162\" stroke=\"#F24822\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M57.7739 179C59.0182 178.309 60.758 175.156 59.885 176.611C58.3526 179.165 58.4839 178.024 59.4961 176C60.2058 174.581 61.019 172.281 61.2739 175C61.4177 176.534 64.3102 172.491 64.7739 172C65.4801 171.252 67.5695 168.314 69.0517 169.333C70.3389 170.218 64.8452 174.081 66.885 172.5C68.5473 171.212 70.6105 170.636 72.2739 169.389C73.4613 168.498 75.2674 165.49 76.2739 167\" stroke=\"#F24822\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M83.774 146C84.1313 142.963 85.3559 147.697 85.1629 149C84.808 151.396 84.4275 153.748 83.5518 156C82.8967 157.685 83.3294 159.723 82.8851 161.5C82.1053 164.619 82.274 164.068 82.274 161.028C82.274 158.951 82.774 156.988 82.774 154.889C82.774 153.188 83.8133 150.69 83.024 149.111C82.9277 148.919 82.2971 153.169 82.274 154C82.2197 155.955 81.1866 157.643 80.774 159.5C80.5333 160.583 79.6484 164.285 80.9963 161.222C81.9139 159.137 82.0724 156.687 82.774 154.5C83.9906 150.707 83.8606 144.957 87.774 143C91.254 141.26 95.0986 141.898 98.774 142C102.55 142.105 106.051 140.5 109.774 140.5\" stroke=\"#F24822\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M61.774 98C63.6959 98.7207 65.2308 94.0573 65.274 92.5C65.3306 90.4642 66.2758 91.1425 65.1629 92.3889C63.6268 94.1094 64.5129 93.3701 65.274 92C66.1997 90.3338 66.5071 89.767 64.774 91.5C64.0129 92.2612 63.3346 94.6674 63.6629 93.5C63.8567 92.8112 63.9488 92.1506 64.274 91.5C64.5543 90.9395 65.9562 89.9445 65.3296 89.9445C64.4056 89.9445 63.1093 92.79 62.774 93.5C60.2103 98.929 61.274 104.324 61.274 110C61.274 111.463 60.4554 103.891 60.8851 103.944C61.7108 104.048 62.4504 112.85 62.274 106.5C62.0914 99.9235 62.1168 109.964 63.1629 109.833C64.0761 109.719 61.8814 99.6996 62.8851 105.722C62.9753 106.263 63.6815 110.397 63.3851 109C63.0657 107.494 63.3103 106.012 62.8851 104.5C62.4453 102.936 62.264 107.448 62.274 108C62.3084 109.89 62.774 111.707 62.774 113.611C62.774 115.734 62.31 111.621 62.1629 111C61.9355 110.04 61.6959 107.686 60.8851 107.056C59.7154 106.146 60.774 110.018 60.774 111.5C60.774 112.081 61.0387 116.023 60.274 114.111C59.6397 112.525 58.4769 104.756 59.3851 111C59.6192 112.609 60.0518 117.46 60.0518 115.833C60.0518 114.124 59.4017 112.162 59.024 110.5C58.8541 109.752 58.274 106.569 58.274 109.028C58.274 111.019 58.274 113.009 58.274 115C58.274 121.255 57.3203 113.213 56.8018 111.139C56.1562 108.556 57.274 121.773 57.274 119.111C57.274 117.717 57.0034 115.943 56.4963 114.639C56.0257 113.429 55.774 117.804 55.774 118.25C55.774 118.79 55.8136 122.319 55.4963 121.639C55.2302 121.069 54.3293 117.374 54.0518 117.889C53.3673 119.16 53.774 121.352 53.774 122.75C53.774 125.372 52.8986 120.966 52.774 120.25C52.488 118.605 52.274 117.124 52.274 119.75C52.274 121.866 52.3947 123.858 52.774 125.944C53.4309 129.557 52.1841 120.416 51.5518 121.139C50.6028 122.223 51.5954 125.044 51.774 126.25C51.9939 127.734 52.2654 130.349 51.774 127.278C51.6457 126.475 50.8296 123.877 50.8296 123.889C50.8296 125.185 51.4378 127.971 52.0518 129.111C52.5204 129.981 52.774 126.503 52.774 126.111C52.774 125.755 53.2185 129.037 53.2185 127.833C53.2185 126.27 51.9272 123.675 53.024 126.722C53.5212 128.103 54.1325 129.8 55.3018 130.75C55.84 131.187 58.2185 133.55 58.2185 133.139C58.2185 131.914 55.5873 129.015 56.1351 130.111C57.3931 132.627 61.8231 133.301 62.9129 135.917C63.1029 136.373 56.139 130.041 61.274 133.75C62.5872 134.698 63.9005 135.438 65.274 136.278C66.7368 137.172 68.7929 137.361 67.274 138.5\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M56.7739 133.5C57.7482 135.156 61.8977 136.901 63.7739 137C65.2872 137.08 66.4955 137.67 67.635 138.667C68.8199 139.703 64.9468 137.022 63.6628 136.111C62.05 134.967 59.8567 134.236 59.0795 132.25C58.1668 129.918 60.0215 131.804 60.7739 132.389C63.0657 134.171 64.9751 136.252 66.7739 138.5\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M63.5239 112C63.7835 111.481 63.9296 111.066 64.0239 110.5\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M62.7739 105C63.3459 104.249 63.2739 104.92 63.2739 105.5C63.2739 106.236 63.3153 106.833 63.6489 107.5C64.6346 109.471 64.4692 107.281 64.2184 106.25C63.9778 105.261 63.5239 104.06 63.5239 103.056C63.5239 101.928 64.2264 105.199 64.635 106.25C65.0868 107.412 65.7441 108.374 66.2739 109.5C66.6333 110.264 65.529 109.786 65.7045 110.278C65.927 110.901 66.5993 111.454 66.9684 112C67.8154 113.252 64.9053 110.529 66.7461 110.792C68.0875 110.983 65.0365 113.298 64.9128 113.5C63.309 116.124 65.7649 118.06 67.2739 120C67.5982 120.417 69.5913 122.736 69.1628 123.139C68.2138 124.032 67.6297 120.314 67.5239 120.056C67.325 119.569 66.4961 118.861 66.4961 118.861C66.4961 118.861 67.5173 119.544 67.8989 120.014C68.8637 121.201 70.0886 122.047 71.0239 123.25C71.8018 124.25 71.7539 125.49 72.7739 126.306C73.9832 127.273 74.9588 128.404 76.0239 129.5C77.0339 130.539 77.9462 131.636 78.8989 132.694C79.2542 133.089 79.2089 131.926 79.1211 131.75C78.7213 130.95 78.1537 131.286 77.5795 130.889C76.5555 130.18 77.8684 127.896 78.51 127.375C78.8454 127.103 79.0971 126.104 78.7739 126.75C78.6366 127.025 78.4139 127.97 78.4267 127.944C78.6242 127.549 79.208 124.972 79.6628 124.972C79.8637 124.972 79.4813 125.331 79.3989 125.514C79.2036 125.948 79.0411 126.403 78.9128 126.861C78.7203 127.549 78.7548 128.291 78.7739 129C78.7819 129.294 79.0451 130.234 79.2184 129.444C79.2806 129.161 79.2737 127.474 79.4267 127.694C80.2681 128.91 80.3141 130.304 81.26 131.486C81.7937 132.153 83.4642 134.489 81.7739 132.75C81.3396 132.303 80.9219 131.771 80.5795 131.25C79.9627 130.311 81.2172 130.943 81.5239 131.25C82.5492 132.275 83.1854 133.331 84.5239 134C85.7383 134.607 86.8095 135.393 88.0239 136C90.1285 137.052 92.6068 138.5 95.0239 138.5C96.1828 138.5 97.3737 138.95 98.5239 138.694C99.5323 138.47 101.523 138.002 100.524 139.5\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M88.5239 140.5C90.3748 136.798 83.7442 139.289 85.385 142.139C86.2526 143.646 87.9602 140.262 88.01 139.639C88.1654 137.696 86.6104 136.968 85.0795 138.25C83.8041 139.318 85.315 141.781 85.6489 140.111C85.7846 139.433 86.1997 136.069 84.635 136.417C83.6898 136.627 82.375 139.864 82.2878 140.736C82.171 141.904 83.0333 141.164 83.4128 140.611C83.8939 139.91 84.2018 138.955 84.26 138.111C84.3144 137.322 84.3956 136.352 83.9961 135.639C83.501 134.755 82.6236 134.524 82.0795 135.5C81.1771 137.118 80.7739 139.018 80.7739 140.861C80.7739 141.566 81.0685 141.712 81.3711 140.972C81.7157 140.13 81.7611 138.901 81.7739 138C81.7851 137.22 82.0111 135.94 81.4961 135.278C80.9193 134.536 80.3326 135.133 80.0239 135.75C79.5131 136.772 79.0003 138.689 79.3017 139.819C79.46 140.413 80.0944 139.006 80.135 138.861C80.3911 137.946 80.588 136.747 80.4684 135.806C80.2693 134.238 79.7985 133.118 79.135 135.014C78.6056 136.526 78.2739 137.878 78.2739 139.486C78.2739 140.676 78.7739 141.795 78.7739 143C78.7739 144.181 78.795 145.345 79.0517 146.5C79.3843 147.997 79.9014 145.401 79.7184 144.75C79.4898 143.937 79.2739 146.812 79.2739 147.25C79.2739 148.551 79.466 145.647 78.7184 145.417C78.2012 145.257 78.0614 146.278 78.0795 146.278C78.2363 146.278 78.5211 144.992 77.9961 145.292C77.2335 145.727 76.1133 144.985 75.635 145.75C74.9303 146.878 74.0239 146.826 74.0239 148.5C74.0239 148.738 74.1387 149.778 73.7184 149.778C73.2698 149.778 72.6998 148.366 72.7878 148.806C72.882 149.277 72.9888 149.802 73.1628 150.25C73.4681 151.035 73.9895 150.762 74.3573 151.167C74.6357 151.473 74.0239 153.747 74.0239 154.25C74.0239 155.438 73.7808 156.594 73.5239 157.75C73.0617 159.83 69.5408 160.674 67.7739 161.361C65.5025 162.244 63.0721 163.065 61.5239 165\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M63.7739 164C63.842 163.456 66.3651 163.013 67.0239 162.5C68.233 161.56 69.422 160.714 70.7739 160C71.894 159.409 73.6213 158.375 74.51 157.486C75.119 156.877 74.6401 156.315 74.0795 157C73.9241 157.19 73.4062 158.728 73.135 158.583C73.0654 158.546 74.0239 155.177 74.0239 154.736C74.0239 153.259 74.0239 151.782 74.0239 150.306C74.0239 149.137 74.2186 146.924 75.5239 146.417C76.268 146.127 76.4371 147.067 76.8295 147.444C77.3742 147.969 78.0906 147.535 78.5239 148.25C79.6833 150.163 80.3714 147.499 80.6489 146.5C80.8482 145.783 80.3108 145.432 80.2739 144.75C80.2309 143.954 80.3991 143.089 80.2184 142.306C80.0182 141.438 79.6878 143.196 79.6489 143.375C79.4271 144.395 80.207 144.409 81.0378 144.097C82.6673 143.486 85.012 142.11 86.8295 142.861C88.7959 143.673 90.0662 146.292 91.5239 147.75C92.8804 149.106 93.8485 149.458 95.7184 149.5C96.9972 149.529 98.2798 149.61 99.5378 149.736C100.232 149.806 100.845 149.519 101.524 149.5C101.985 149.487 103.026 149.752 102.524 149.25\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M56.7739 134C57.697 134.346 56.7767 133.447 56.5239 133.25C55.9345 132.792 55.2214 132.41 54.5239 132.139C53.8792 131.888 53.1866 132.088 52.5239 131.944C51.3452 131.69 52.0283 131.648 52.7184 132.056C53.3822 132.448 53.7318 133.074 54.5239 133.25C54.9915 133.354 56.183 133.378 56.4684 133.778C57.08 134.634 53.7318 134.237 53.2739 134.25C51.728 134.293 50.5792 135.14 49.8989 136.5C49.3893 137.519 48.0616 139.045 48.3295 140.25C48.4729 140.896 49.0459 141.193 49.26 141.764C49.5299 142.484 49.7955 143.135 50.2739 143.75C51.2792 145.043 52.0228 146.542 52.9823 147.861C53.9202 149.151 50.5201 145.801 49.5239 144.556C48.957 143.847 48.2542 143.435 47.5656 142.875C47.2239 142.597 47.4237 141.124 47.51 141.556C47.6462 142.237 47.5529 146.947 46.8295 147.028C46.793 147.032 46.7739 142.927 46.7739 142.625C46.7739 142.275 46.8274 140.712 46.4128 140.528C45.7651 140.24 45.5284 142.65 45.5239 142.889C45.4835 145.029 46.1919 141.613 46.26 141C46.2969 140.668 46.4465 139.443 46.1628 139.222C45.6246 138.804 45.1011 141.49 45.0239 141.75C44.7624 142.633 44.2824 146.939 43.2739 144.25\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M10.7737 150.75C10.7737 150.238 10.6385 147.452 9.77373 149C9.234 149.966 8.38432 151.263 8.28762 152.375C8.10582 154.466 7.58007 157.203 8.14873 159.25C8.46271 160.38 8.44649 161.373 8.88484 162.5C9.37222 163.753 9.52127 164.574 10.4682 165.556C11.334 166.453 11.998 167.751 13.1626 168.361C14.7825 169.21 15.7772 169.778 16.0237 171.75\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M11.7739 168.5C11.8711 169.326 14.4939 170.684 15.2739 170.944C16.734 171.431 18.0158 172.81 19.2739 173.694C20.0081 174.21 20.727 174.29 21.3295 175C21.7899 175.543 22.6902 176.007 23.2739 176.444C24.6728 177.494 26.2789 177.621 27.5378 178.722C28.6397 179.686 30.5069 180.115 31.7739 180.889C32.3509 181.242 35.8348 183.483 35.6073 184.194C35.217 185.414 31.7338 182.638 31.2739 182.306C29.7871 181.232 28.138 180.519 26.5378 179.639C25.1103 178.854 23.6691 177.964 22.2739 177.111C22.0367 176.966 20.6312 176.224 20.8295 176.403C21.5685 177.068 22.3281 177.669 23.135 178.25C24.5077 179.238 26.0114 180.341 27.5239 181.097C28.2203 181.445 28.959 181.606 29.6628 182C30.5487 182.496 31.7162 182.495 32.5239 183.056C33.9884 184.073 35.68 184.535 37.2184 185.444C37.5512 185.641 38.9636 186.056 39.1073 186.361C39.3859 186.953 37.1865 186.413 37.0239 186.361C36.118 186.073 35.3621 185.592 34.5378 185.139C33.901 184.789 33.1371 184.773 32.5378 184.361C31.8449 183.885 31.6442 183 30.885 182.514C29.9245 181.899 28.9678 181.871 30.2739 181\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M44.774 144.75C45.0265 145.508 44.4295 145.72 43.8295 146C42.8924 146.437 42.6153 147.23 42.0101 147.986C41.1385 149.076 40.1065 150.069 39.3851 151.25C39.093 151.728 38.8385 152.216 38.5518 152.694C38.5495 152.698 39.1097 151.82 39.274 151.5C39.958 150.168 41.0301 149.362 42.524 149.694C43.6698 149.949 44.7146 149.992 45.774 150.639C46.9438 151.354 48.0503 151.513 49.274 152.125C50.3455 152.661 51.4507 152.993 52.524 153.5C53.7145 154.062 54.762 155.205 56.024 155.556C58.4352 156.225 61.0645 158.286 62.649 160.236C63.9659 161.857 63.8608 160.393 63.274 159.25C62.4405 157.627 61.1278 157.896 59.774 156.944C58.4886 156.041 56.8807 155.619 55.399 155.125C54.4599 154.812 53.4456 154.713 52.524 154.389C51.7848 154.129 51.2276 153.477 50.524 153.125C49.3431 152.535 48.8473 151.136 47.524 150.806C46.4375 150.534 44.893 150.5 43.774 150.5C43.44 150.5 40.7255 150.401 41.0934 150.125C41.9659 149.471 44.2985 148.61 45.399 148.514C46.7566 148.396 48.3241 148.192 46.274 147.25C46.0956 147.168 44.8494 146.798 45.0795 147.028C45.6542 147.602 46.5026 147.721 47.274 147.75C48.6785 147.802 50.3381 147.862 51.649 148.375C53.1097 148.947 49.69 147.832 49.2879 147.611C49.0825 147.498 48.0867 146.528 48.4545 146.944C49.1782 147.765 49.8551 148.399 50.774 149C52.1206 149.881 56.7135 151.47 55.274 150.75C53.8327 150.029 52.3597 149.458 50.9129 148.764C49.9856 148.319 50.3948 148.491 51.0795 148.75C51.9266 149.07 52.8107 149.297 53.649 149.639C54.4345 149.959 56.2963 152.194 57.2184 151.833C58.0161 151.521 55.8472 150.881 55.7601 150.861C54.7132 150.617 53.7401 150.213 52.774 149.75C52.2473 149.498 47.911 147.357 49.2879 149.25C50.658 151.134 52.0478 151.996 54.399 152.25C55.3877 152.357 56.4343 152.716 57.2184 153.361C57.8614 153.89 58.1622 155.067 59.0795 155.208C60.5084 155.428 56.4953 153.902 55.149 153.375C54.774 153.228 53.6981 152.578 53.3573 153.056C52.9201 153.668 54.6271 154.735 55.024 154.944C56.416 155.68 58.1214 155.911 59.274 157C60.222 157.895 61.4368 158.651 62.5101 159.389C62.6627 159.494 63.6943 160.654 63.2184 160C62.6574 159.229 62.0507 158.506 61.149 158.139C60.5029 157.876 59.8767 157.761 59.3851 157.236C58.8413 156.656 58.1406 156.666 57.5795 156.194C57.0899 155.783 58.0498 156.752 58.274 156.889C58.9133 157.28 59.3619 157.882 60.024 158.25C61.0087 158.797 63.0033 161.617 62.3573 160.694C61.9255 160.078 61.6624 159.342 61.2184 158.75C60.7833 158.17 60.0634 157.929 59.5101 157.486C59.3659 157.371 56.4962 154.868 56.4962 155.361C56.4962 156.658 59.3027 157.089 60.024 157.75C60.9697 158.617 62.0301 159.779 63.274 160.125C64.4551 160.453 66.4107 159.338 67.4268 158.736C68.2856 158.227 69.0513 157.723 69.7601 157.014C70.8348 155.939 69.5151 156.779 69.024 157.194C68.8799 157.316 67.4379 158.966 68.1907 158.833C68.9472 158.7 69.6538 157.973 70.2184 157.5C70.6914 157.104 71.0447 156.643 71.024 156C71.0033 155.358 70.113 156.978 70.0101 157.139C69.1759 158.442 69.8513 157.761 70.4684 157C71.0293 156.309 71.3501 155.441 71.649 154.611C72.4559 152.37 69.737 155.547 69.3295 155.944C68.5246 156.729 69.8711 155.07 70.0379 154.861C70.6988 154.035 71.2807 153.221 71.7184 152.25C72.4478 150.633 68.9434 153.595 68.5518 154.139C68.4123 154.333 67.6577 156.056 68.024 155.194C68.3491 154.429 68.828 153.701 69.274 153C69.5866 152.509 71.4455 148.605 70.274 149.361C69.4975 149.863 68.9968 150.851 68.5379 151.625C68.403 151.853 67.6301 153.636 68.2184 152.694C69.3244 150.925 70.7466 149.324 71.7601 147.5C72.2298 146.655 72.8448 145.858 73.274 145C73.6142 144.319 72.1895 145.922 72.0379 146.111C71.3151 147.015 71.5296 146.697 72.274 146.139C73.0402 145.564 73.971 145.224 74.7184 144.639C75.3251 144.164 76.3755 143.387 76.6073 142.625C76.9901 141.367 75.819 141.833 75.3295 142.389C74.4853 143.348 72.4091 145.271 73.899 142.75C74.6326 141.508 76.8832 137.832 75.9823 138.958C75.4902 139.573 74.9879 140.228 74.5379 140.875C73.85 141.864 74.4942 141.342 74.774 140.694C75.3865 139.276 75.8289 137.776 76.7184 136.5C77.2281 135.769 76.1316 137.116 76.0657 136.556C75.9831 135.854 76.5044 135.204 76.524 134.5C76.5629 133.099 76.6592 132.106 75.774 131\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M61.7737 115.25C62.2958 114.747 63.393 113.552 62.5376 114.889C62.1091 115.559 61.6367 116.293 61.2737 117C60.9365 117.657 60.5305 118.292 60.2043 118.944C59.8448 119.664 61.3285 117.785 61.7876 117.125C62.4898 116.116 62.1393 116.619 61.7182 117.306C61.2875 118.007 60.9353 118.707 60.6626 119.486C60.2527 120.657 60.9253 119.175 61.0793 118.861C61.4131 118.181 62.446 116.156 62.1071 116.833C61.4097 118.228 60.5202 119.469 59.7182 120.806C58.0064 123.658 60.5011 117.598 58.5515 119.764C57.1754 121.293 55.9085 123.675 54.9126 125.486C53.9889 127.166 55.1168 122.902 54.9126 122.722C54.323 122.202 51.8177 127.879 51.5793 128.444C51.1868 129.375 50.8363 130.347 50.3849 131.25C50.1429 131.734 49.36 133.252 49.8987 131.875C50.0657 131.448 50.4937 130.182 50.9126 129.972C51.3867 129.735 50.6277 130.994 50.5237 131.514C50.448 131.893 49.9755 133.126 50.7737 132.75C51.4741 132.42 52.1626 130.115 52.1626 130.889C52.1626 131.026 51.5971 132.62 52.0376 132.069C52.5646 131.411 52.75 130.528 53.0237 129.75C53.6229 128.047 54.9504 127.316 55.6487 125.764C56.5591 123.741 55.9206 125.947 56.0376 127C56.0832 127.41 57.4816 130.524 57.4126 130.528C55.9813 130.612 55.5935 128.193 55.8293 127.25C56.1604 125.926 57.1152 124.585 57.8987 123.5C58.7561 122.313 59.9729 121.975 61.2737 122.625C62.4878 123.232 63.7513 123.126 65.0237 123.444C66.4812 123.809 67.3218 124.86 68.5237 125.694C69.6303 126.463 71.1286 126.298 72.2737 127.125C73.3322 127.889 76.2378 130.524 75.2182 129.708C73.7987 128.573 72.4829 127.995 71.3293 126.5C70.8419 125.868 70.3697 125.372 70.0376 124.625C69.6714 123.801 69.696 123.124 68.9682 122.5C67.7221 121.432 66.4994 120.453 65.1487 119.514C64.5233 119.079 63.8263 118.492 63.0793 118.306C62.6398 118.196 61.5324 117.452 61.8154 117.806C62.1985 118.284 64.834 121.003 64.6071 121.389C64.3531 121.821 60.3729 120.157 62.5237 120.694C63.2464 120.875 66.0141 121.5 63.7737 121.5C62.708 121.5 60.9023 121.153 60.0099 121.778C59.8215 121.91 58.3243 123.056 59.0237 122.75C59.7164 122.447 60.2086 122.674 60.7737 122.25\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M67.7741 138.25C67.0597 138.709 69.975 138.985 70.5241 139C71.9674 139.04 72.4836 140.71 74.0241 140.111C75.427 139.566 72.0969 139.57 71.538 139.514C70.8685 139.447 70.2477 139.427 69.5797 139.306C69.3934 139.272 67.6901 139.111 68.5797 139.111C71.0829 139.111 74.6666 139.692 75.6074 136.556C75.7491 136.083 74.749 137.063 74.2741 137.194C73.696 137.355 73.1026 137.464 72.5241 137.625C71.366 137.947 69.9706 137.75 68.7741 137.75\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M68.7739 137.75C69.4454 138.134 65.7731 136.305 68.0239 138.056C69.4205 139.142 70.2117 140.845 71.01 142.375C71.1464 142.636 71.9202 144.412 71.8573 144.056C71.6521 142.893 70.6781 141.98 69.8295 141.25C69.5858 141.04 68.5209 139.528 69.5239 140C70.5283 140.473 71.0233 141.472 71.7739 142.222C72.5258 142.974 72.9326 142.452 72.0378 141.736C71.4192 141.241 70.714 140.09 71.4961 141.375C71.8194 141.906 72.2057 142.852 72.3573 143.458C72.4092 143.666 70.5058 142.381 70.2184 142.139C68.7079 140.869 68.4769 138.398 66.5239 137.639C65.8425 137.374 65.1897 137.208 64.5239 136.875C63.6674 136.447 63.4771 135.75 62.5239 135.75\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M61.5239 137C62.6492 136.625 64.0935 138.383 65.2739 138.514C66.6808 138.67 67.8567 140.333 68.7739 141.25\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M62.7739 138C63.5639 138.439 64.1936 139.131 65.0239 139.5C65.8875 139.884 66.9813 140.154 67.7739 140.639C69.6322 141.775 69.9179 143.469 69.5795 145.5C69.415 146.487 69.1372 147.493 69.0378 148.486C68.997 148.895 68.5666 150.83 69.01 149.5C69.5931 147.751 69.7739 145.579 69.7739 143.75C69.7739 143.266 69.3879 143.117 68.9684 143.222C68.6924 143.291 69.3316 144.171 69.3711 144.25C69.6083 144.724 69.4287 145.209 69.3295 145.694C68.9884 147.362 68.2841 149.23 67.5239 150.75C66.6816 152.435 66.5617 154.081 65.9128 155.75C65.3161 157.284 67.237 155.519 67.5239 155.264C68.6416 154.27 67.1065 156.388 66.885 156.75C66.438 157.482 65.5053 158.264 66.0239 156.806C66.2682 156.119 67.1969 154.432 65.7184 155.306C65.013 155.722 63.4552 157.479 63.6906 156.694C63.7942 156.349 65.1965 154.363 64.9823 154.417C64.0174 154.658 63.401 155.601 62.5239 156C61.6688 156.389 63.5426 154.225 63.7739 154C64.1159 153.667 66.4162 152.111 65.0795 152.694C64.0328 153.151 63.0743 153.787 62.0239 154.25C60.9437 154.727 62.8219 152.949 63.1489 152.75C64.6167 151.857 64.1799 152.086 62.8989 152.75C62.1655 153.13 60.6889 153.854 59.8156 153.708C59.2639 153.616 61.6382 151.734 61.8295 151.528C62.1867 151.143 60.3985 151.652 60.135 151.389C59.809 151.063 61.9679 150.767 62.2739 150.75C63.087 150.706 67.2266 150.598 67.0517 149.111C67.0043 148.708 62.6616 150.107 62.2739 150.236C60.5919 150.797 59.1617 149.825 57.4684 149.75C55.5059 149.663 53.6878 148.878 52.0239 147.861C51.1017 147.298 50.4354 146.401 49.885 145.5C49.455 144.796 48.1788 143.985 48.3156 143.028C48.4537 142.061 52.3807 145.042 52.7739 145.25C53.7079 145.743 54.5008 146.215 55.4684 146.611C56.4107 146.997 57.0274 147.89 58.0239 148.194C58.8854 148.458 59.3683 149.385 60.2739 149.486C60.9107 149.557 62.2148 150.464 62.7184 150.111C62.9829 149.926 60.4336 149.445 60.1628 149.347C59.5735 149.135 59.2413 148.615 58.7184 148.306C58.2656 148.038 57.7518 148.047 57.2739 147.861C56.0696 147.393 57.5729 147.774 58.0239 148C58.8566 148.416 59.7014 148.384 60.5239 148.75C61.1591 149.032 62.0869 149.41 62.7739 149.486C64.0308 149.626 61.9941 149 61.5239 149C59.5734 149 57.9014 148.993 56.2739 147.806C54.6655 146.632 52.5356 146.405 50.7739 145.5C49.4627 144.827 47.7739 142.232 47.7739 140.75C47.7739 138.537 50.8917 141.935 51.01 143C51.1243 144.029 51.8022 144.548 52.5239 145.25C53.778 146.469 52.8445 145.41 52.5239 144.556C52.2196 143.744 53.8646 145.474 54.0795 145.75C54.6755 146.516 55.2818 147.406 56.0239 148\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M59.7739 135.25C60.3969 137.05 60.6286 135.295 59.5239 135.111C58.3679 134.918 57.1479 134.687 56.0239 134.375C53.4259 133.653 51.2886 135.157 49.2739 136.5\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M64.2739 93C64.6935 92.7902 67.6166 90.1599 66.9128 89.9722C65.8504 89.6889 64.4653 92.7275 64.0239 93.5\" stroke=\"#F24822\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M68.0239 87C66.757 87.6335 65.3336 88.3134 64.0239 88.75\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M68.2739 87.25C68.5117 86.6555 64.6281 87.9965 64.0239 88.5\" stroke=\"#1E1E1E\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M67.5239 87.25C65.5607 87.3591 64.7445 88.3823 63.2739 89.4444C62.0922 90.2979 60.317 90.5987 59.0239 91.3889C55.8801 93.3101 53.9667 96.4306 51.7739 99.25C49.6947 101.923 47.9656 104.697 46.5239 107.75C45.118 110.727 44.2057 113.886 43.0239 116.944C41.9503 119.723 41.8854 122.906 40.885 125.764C40.3248 127.365 39.2784 128.884 38.8295 130.5C38.4175 131.983 37.5396 133.592 36.51 134.75C34.4087 137.114 31.2722 138.473 28.2739 139.306C26.8252 139.708 25.4822 140.47 24.0239 140.875C22.6511 141.256 21.1741 141.465 19.7739 141.806C16.9521 142.492 13.2208 143.269 11.1489 145.5C8.89445 147.928 5.40446 150.45 5.01001 154C4.85664 155.38 4.52391 157.15 4.1489 158.5C3.72079 160.041 4.31139 161.785 4.71835 163.25C5.16775 164.868 6.16579 166.034 6.8989 167.5C7.79204 169.286 8.98422 169.944 10.5239 171.056C11.8673 172.026 12.9432 173.196 14.2739 174.194C15.7145 175.275 17.1007 176.393 18.5239 177.5C21.4088 179.744 23.8983 182.701 27.0239 184.611C28.5103 185.519 29.8616 186.605 31.2739 187.625C32.7026 188.657 34.3501 189.238 35.7739 190.306C37.1635 191.348 38.7247 192.1 40.2739 192.875C41.6555 193.566 43.2633 193.895 44.5239 194.806C47.0881 196.657 49.8903 198.071 52.7878 199.375C54.217 200.018 55.9777 200.207 57.5239 200.25C59.0834 200.293 60.6705 200.911 62.1489 201.361C69.4533 203.584 74.3978 194.648 77.0239 189.25C77.7323 187.794 78.47 186.387 78.8295 184.806C78.9959 184.073 79.4822 183.522 79.5239 182.75C79.5667 181.958 79.6865 181.015 79.8989 180.25C80.3268 178.71 80.1395 176.913 80.4683 175.306C80.7704 173.829 81.3459 172.227 81.51 170.75C81.8837 167.387 83.7052 164.795 85.7739 162.194C86.4029 161.404 87.0057 161.042 87.7739 160.444C88.6279 159.78 89.0018 158.841 90.0378 158.375C91.6394 157.654 93.3315 157.356 95.0239 156.944C96.652 156.548 97.8082 155.534 99.4683 155.194C100.936 154.894 102.804 154.364 104.038 153.5C104.747 153.004 105.498 152.913 106.274 152.611C107.151 152.27 107.769 151.356 108.524 150.806C110 149.728 111.585 148.876 113.01 147.736C115.81 145.496 117.393 143.213 118.329 139.75C119.186 136.579 119.62 133 115.274 133C112.145 133 108.982 133.071 106.01 134.111C104.696 134.571 102.707 133.781 101.329 133.75C99.9104 133.718 98.3968 133.506 97.0239 133.125C94.0268 132.292 91.2479 130.911 88.7739 129.056C88.122 128.567 87.4939 128.13 86.7739 127.75C85.8345 127.254 85.7432 126.595 85.2739 125.75C84.6237 124.58 84.5017 122.241 83.2739 121.75\" stroke=\"#1E1E1E\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M69.2737 86.75C70.2726 87.9362 68.8502 90.9168 68.2737 92.25C67.5343 93.9599 67.2737 95.9005 67.2737 97.75C67.2737 99.4742 66.9645 101.563 67.3292 103.25C67.5095 104.084 67.5995 104.923 67.8292 105.75C68.0811 106.657 68.7332 107.378 69.0237 108.25\" stroke=\"#1E1E1E\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M67.5239 116.5C67.6179 117.346 68.7472 117.862 69.3295 118.444C70.0093 119.124 70.7136 119.752 71.3295 120.5C71.959 121.264 72.8152 122.041 73.5239 122.75C74.2237 123.45 75.161 123.593 75.5239 124.5\" stroke=\"#1E1E1E\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M76.7739 125.25C77.6854 125.143 78.4824 123.717 79.0239 123.056C79.7235 122.2 80.5199 121.297 81.2739 120.5C82.9007 118.78 84.3781 116.943 86.0239 115.25C89.2391 111.943 91.3459 107.865 94.5239 104.5C96.0705 102.862 97.1644 100.915 98.8295 99.3056C100.581 97.6123 102.148 95.7765 103.829 94.0556C106.993 90.819 110.055 87.4689 113.274 84.25C114.936 82.5877 116.19 80.4215 118.024 78.9444C119.831 77.4889 121.301 75.2754 123.218 74.0556C125.387 72.6755 126.264 71.059 127.579 68.9444C128.151 68.0253 129.036 67.0441 129.829 66.3056C130.259 65.9058 130.847 65.8271 131.246 65.3611C131.609 64.9378 131.831 64.5484 132.274 64.1944C133.147 63.4959 133.713 62.5171 134.524 61.75C135.4 60.9217 136.314 60.4836 137.079 59.5C138.295 57.9372 140.468 56.1948 140.968 54.1944C141.476 52.1639 143.078 50.6686 144.329 49C144.972 48.1439 145.31 47.5089 146.274 47C147.108 46.5596 148.273 45.9165 147.024 45.5\" stroke=\"#1E1E1E\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M68.0239 115.25C75.4791 107.795 81.9433 99.5401 89.2739 92C90.1335 91.1159 90.4267 89.8956 91.2739 89C92.2689 87.9482 92.9669 86.7414 93.8295 85.6111C95.3863 83.5711 97.6562 81.6389 99.5239 79.875C102.865 76.7198 105.736 73.198 109.274 70.25\" stroke=\"#1E1E1E\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M107.274 71C106.286 71.988 106.535 71.764 107.468 71C108.277 70.3384 108.857 69.4876 109.524 68.6944C110.822 67.1506 112.466 66.0305 113.885 64.6111C116.721 61.7749 119.681 59.093 122.524 56.25C123.245 55.5288 123.864 54.7578 124.538 54C125.189 53.2681 126.111 52.8143 126.649 51.9861C127.799 50.2171 128.938 48.3741 130.58 47C132.121 45.7099 133.221 43.9811 134.538 42.5C135.732 41.1561 137.289 39.9783 138.274 38.5\" stroke=\"#1E1E1E\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M141.774 40C142.927 40.1281 144.039 41.6345 145.024 42.25\" stroke=\"#1E1E1E\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M149.774 44.75C150.41 44.538 151.303 45 152.024 45C152.932 45 153.693 45.0405 154.524 44.625C156.254 43.7601 157.899 42.8239 159.08 41.25C160.199 39.7577 160.719 37.9628 161.385 36.25C162.041 34.5635 161.746 32.7032 163.038 31.25C165.781 28.1638 168.713 25.4847 171.774 22.7639C173.766 20.9935 178.187 15.9659 174.024 14C172.58 13.3182 170.895 12.444 169.274 12.2639C167.643 12.0826 165.992 13.0976 164.524 13.75C162.962 14.4441 161.318 14.8531 159.774 15.625C158.887 16.0686 158.429 16.9224 157.524 17.375C156.537 17.8685 155.706 18.5419 154.774 19.1111C153.053 20.163 151.845 21.8971 149.969 22.75C148.159 23.5725 146.419 25.1046 145.024 26.5C143.631 27.8935 142.198 29.2781 141.719 31.25C141.455 32.3337 140.419 35.9296 141.274 36.5\" stroke=\"#1E1E1E\" strokeWidth=\"8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M60.5238 168C60.1485 169.001 63.285 167.244 63.7738 167C65.1475 166.313 66.5112 166.002 67.7738 165.056C70.1535 163.271 73.1654 162.637 75.5238 160.75\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M75.2739 160.75C76.083 159.132 76.307 156.577 76.51 154.75C76.688 153.148 77.7508 150.159 75.7739 149.5\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M41.7739 152.25C38.8128 155.211 37.0995 159.099 35.2739 162.75\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M35.7739 163C35.894 163.96 38.8075 164.755 39.5795 165.444C40.9542 166.672 42.7703 167.789 44.2739 168.875C47.2307 171.01 50.0117 173.369 53.2739 175\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M60.7739 162.25C60.658 164.336 58.5899 166.666 57.7739 168.556C56.9901 170.371 55.6828 173.394 54.0239 174.5\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M41.7739 152.25C42.5098 152.618 43.3345 152.558 44.0239 152.903C44.7802 153.281 45.5132 153.731 46.2739 154.111C47.0362 154.492 47.7528 154.989 48.5239 155.375C49.2253 155.726 50.1469 155.87 50.7739 156.306C52.2244 157.313 53.9361 157.706 55.5239 158.5C57.0172 159.247 58.492 159.974 59.7739 161\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M61.774 139.5C60.2337 138.73 58.3923 138.314 57.024 137.25C55.8622 136.346 53.1023 136.343 52.399 137.75C51.5753 139.397 51.8748 141.3 53.524 142.125C55.1556 142.941 57.082 143.628 58.524 144.75C60.5063 146.292 66.8886 149.876 67.024 145C67.131 141.148 61.6662 139.464 58.774 138.5\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M70.5238 129.5C71.1554 129.455 69.5397 128.707 69.2738 128.5C68.5451 127.933 67.8975 128.024 67.0238 128C64.9612 127.943 64.2854 126.141 62.5238 125.75C60.841 125.376 59.3129 126.227 59.5377 128.25C59.6938 129.655 62.6306 131.115 63.7738 131.75C66.0756 133.029 70.0365 137.478 73.0238 135.486C76.3038 133.299 71.786 128 69.0238 128\" stroke=\"#1E1E1E\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n  </svg>\n)\n\nexport default Guitar"},"relativePath":"sketches/guitar.jsx"},{"fields":{"contents":"import React from 'react'\n\nconst ConnectedComponentsSketch = () => (\n  <svg className=\"sketch categories\" width=\"166.201pt\" height=\"80.902pt\" version=\"1.1\" viewBox=\"-15 555 90 80.902\">\n    <g className=\"animate\">\n      <path id=\"STROKE_1eddd466-782c-4e89-b2ee-c106b9c2627e\" opacity=\"1.000\" fill=\"#e2ebee\" stroke=\"#e2ebee\" stroke-width=\"0.500\" stroke-opacity=\"1.000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M 30.359 613.147 Q 30.262 613.147 30.295 613.147 Q 30.220 613.147 30.236 613.147 Q 30.155 613.147 30.167 613.147 Q 30.133 613.130 29.946 613.180 Q 29.760 613.231 29.546 613.205 Q 29.331 613.179 29.152 613.170 Q 28.973 613.162 28.830 613.168 Q 28.686 613.174 28.612 613.167 Q 28.537 613.159 28.338 613.106 Q 28.139 613.052 27.896 613.085 Q 27.654 613.117 27.542 613.145 Q 27.429 613.172 27.257 613.146 Q 27.086 613.120 26.930 613.090 Q 26.775 613.061 26.546 613.119 Q 26.317 613.177 26.175 613.197 Q 26.032 613.217 25.961 613.273 Q 25.890 613.330 25.874 613.369 Q 25.859 613.409 25.855 613.433 Q 25.851 613.457 25.846 613.468 Q 25.842 613.480 25.833 613.532 Q 25.824 613.584 25.794 613.650 Q 25.765 613.716 25.685 613.775 Q 25.606 613.834 25.593 613.851 Q 25.581 613.868 25.587 614.044 Q 25.593 614.219 25.582 614.315 Q 25.571 614.412 25.602 614.643 Q 25.632 614.873 25.650 615.059 Q 25.667 615.245 25.640 615.444 Q 25.612 615.642 25.662 615.850 Q 25.711 616.058 25.720 616.252 Q 25.729 616.447 25.735 616.661 Q 25.740 616.876 25.776 617.067 Q 25.813 617.259 25.797 617.466 Q 25.781 617.674 25.775 617.781 Q 25.768 617.888 25.808 618.009 Q 25.847 618.130 25.839 618.312 Q 25.831 618.495 25.838 618.570 Q 25.845 618.645 25.843 618.897 Q 25.842 619.148 25.845 619.293 Q 25.849 619.437 25.867 619.492 Q 25.885 619.547 25.888 619.569 Q 25.892 619.591 25.894 619.613 Q 25.895 619.635 25.897 619.609 Q 25.898 619.584 25.893 619.775 Q 25.888 619.966 25.892 620.098 Q 25.895 620.230 25.935 620.306 Q 25.975 620.382 25.990 620.433 Q 26.005 620.484 26.007 620.511 Q 26.008 620.539 26.002 620.544 Q 25.995 620.549 26.053 620.738 Q 26.101 620.762 26.223 620.695 Q 26.344 620.629 26.411 620.621 Q 26.477 620.614 26.670 620.645 Q 26.863 620.675 26.964 620.681 Q 27.064 620.688 27.154 620.675 Q 27.243 620.663 27.375 620.703 Q 27.508 620.744 27.597 620.766 Q 27.686 620.788 27.768 620.783 Q 27.850 620.779 27.908 620.778 Q 27.966 620.776 28.176 620.815 Q 28.386 620.854 28.606 620.848 Q 28.826 620.842 29.023 620.876 Q 29.220 620.909 29.422 620.933 Q 29.624 620.957 29.840 621.018 Q 30.055 621.078 30.335 621.050 Q 30.615 621.022 30.753 620.994 Q 30.891 620.967 31.026 621.000 Q 31.161 621.033 31.351 621.061 Q 31.540 621.088 31.614 621.094 Q 31.688 621.099 31.842 621.054 Q 31.996 621.009 32.166 620.954 Q 32.335 620.899 32.630 620.933 Q 32.924 620.967 33.219 620.961 Q 33.514 620.956 33.726 620.937 Q 33.939 620.919 34.164 620.949 Q 34.390 620.979 34.544 620.989 Q 34.698 620.999 34.910 620.965 Q 35.121 620.931 35.336 620.917 Q 35.550 620.902 35.739 620.917 Q 35.928 620.932 36.131 620.906 Q 36.333 620.880 36.477 620.812 Q 36.620 620.744 36.911 620.746 Q 37.201 620.747 37.393 620.739 Q 37.584 620.730 37.796 620.711 Q 38.009 620.692 38.188 620.705 Q 38.367 620.718 38.600 620.697 Q 38.832 620.675 39.023 620.647 Q 39.213 620.618 39.455 620.668 Q 39.698 620.718 39.860 620.735 Q 40.022 620.752 40.146 620.760 Q 40.271 620.768 40.391 620.775 Q 40.510 620.783 40.667 620.817 Q 40.825 620.851 40.913 620.871 Q 41.001 620.891 41.146 620.889 Q 41.291 620.887 41.379 620.873 Q 41.466 620.859 41.587 620.841 Q 41.707 620.824 41.809 620.811 Q 41.910 620.797 42.189 620.787 Q 42.468 620.777 42.654 620.780 Q 42.841 620.782 43.120 620.641 Q 43.400 620.500 43.561 620.435 Q 43.722 620.370 43.861 620.295 Q 44.000 620.220 44.213 620.181 Q 44.426 620.141 44.529 620.152 Q 44.632 620.162 44.783 620.067 Q 44.935 619.973 45.032 619.945 Q 45.130 619.917 45.176 619.805 Q 45.223 619.694 45.227 619.634 Q 45.231 619.575 45.238 619.547 Q 45.244 619.520 45.269 619.439 Q 45.293 619.357 45.312 619.309 Q 45.331 619.261 45.341 619.217 Q 45.350 619.173 45.354 619.143 Q 45.358 619.114 45.357 619.072 Q 45.356 619.030 45.359 618.996 Q 45.361 618.961 45.362 618.901 Q 45.363 618.841 45.297 618.582 Q 45.232 618.323 45.249 618.000 Q 45.266 617.677 45.299 617.415 Q 45.333 617.153 45.344 616.876 Q 45.356 616.598 45.361 616.358 Q 45.367 616.117 45.391 615.937 Q 45.415 615.757 45.436 615.367 Q 45.457 614.978 45.449 614.766 Q 45.441 614.554 45.427 614.433 Q 45.413 614.313 45.394 614.252 Q 45.376 614.192 45.341 614.124 Q 45.305 614.056 45.298 614.021 Q 45.290 613.986 45.284 613.910 Q 45.279 613.834 45.276 613.799 Q 45.274 613.765 45.272 613.753 Q 45.269 613.740 45.262 613.705 Q 45.255 613.669 45.260 613.671 Q 45.266 613.673 45.256 613.662 Q 45.247 613.650 45.210 613.641 Q 45.173 613.631 45.175 613.628 Q 45.177 613.625 45.017 613.666 Q 44.857 613.707 44.650 613.644 Q 44.444 613.580 44.332 613.536 Q 44.220 613.492 44.167 613.478 Q 44.114 613.463 43.955 613.471 Q 43.797 613.478 43.630 613.432 Q 43.464 613.387 43.349 613.328 Q 43.234 613.268 43.156 613.228 Q 43.078 613.188 42.745 613.194 Q 42.413 613.199 42.215 613.211 Q 42.018 613.222 41.875 613.188 Q 41.732 613.154 41.547 613.085 Q 41.362 613.016 41.084 613.010 Q 40.806 613.004 40.580 613.050 Q 40.355 613.096 40.149 613.105 Q 39.944 613.114 39.732 613.060 Q 39.519 613.006 39.361 612.963 Q 39.204 612.921 39.015 612.925 Q 38.827 612.930 38.578 613.024 Q 38.330 613.119 38.076 613.166 Q 37.822 613.214 37.543 613.176 Q 37.263 613.137 37.057 613.117 Q 36.850 613.097 36.625 613.150 Q 36.400 613.203 36.264 613.227 Q 36.128 613.250 36.079 613.267 Q 36.030 613.284 35.456 613.256 Q 34.881 613.229 34.577 613.198 Q 34.273 613.167 34.048 613.181 Q 33.824 613.194 33.720 613.216 Q 33.615 613.237 33.421 613.253 Q 33.226 613.269 32.956 613.205 Q 32.687 613.142 32.359 613.114 Q 32.032 613.086 31.687 613.143 Q 31.342 613.201 30.947 613.218 Q 30.553 613.235 30.211 613.232 Q 29.868 613.229 29.621 613.217 Q 29.373 613.206 28.909 613.333 Q 28.446 613.460 28.205 613.560 Q 27.964 613.659 27.787 613.677 Q 27.611 613.696 27.467 613.718 Q 27.323 613.739 26.828 613.263 \"></path>\n      <path id=\"STROKE_9c47de8d-ad38-47b6-a6ba-9ec0ad195eba\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" stroke-width=\"0.999\" stroke-opacity=\"1.000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M 25.868 613.482 Q 25.864 613.504 25.868 613.611 Q 25.872 613.718 25.869 613.849 Q 25.866 613.980 25.858 614.070 Q 25.851 614.161 25.833 614.418 Q 25.815 614.675 25.806 614.823 Q 25.797 614.971 25.784 615.138 Q 25.771 615.305 25.743 615.842 Q 25.714 616.379 25.709 617.216 Q 25.703 618.054 25.704 618.464 Q 25.706 618.874 25.716 619.245 Q 25.727 619.615 25.788 620.005 Q 25.850 620.395 25.987 620.693 Q 25.995 620.707 26.207 620.819 Q 26.419 620.932 26.772 620.965 Q 27.126 620.997 27.368 620.995 Q 27.611 620.993 27.845 620.999 Q 28.080 621.004 28.250 621.021 Q 28.420 621.038 28.644 621.046 Q 28.867 621.055 29.121 621.033 Q 29.375 621.010 29.697 620.986 Q 30.019 620.961 30.435 620.984 Q 30.852 621.007 31.084 621.035 Q 31.316 621.063 31.587 621.072 Q 31.857 621.080 32.280 621.030 Q 32.702 620.980 32.957 620.942 Q 33.211 620.905 33.407 620.895 Q 33.603 620.885 33.866 620.886 Q 34.128 620.888 34.550 620.865 Q 34.972 620.843 35.287 620.829 Q 35.601 620.815 36.003 620.838 Q 36.404 620.861 36.693 620.878 Q 36.982 620.895 37.279 620.891 Q 37.575 620.887 38.090 620.880 Q 38.605 620.874 38.874 620.871 Q 39.144 620.869 39.451 620.865 Q 39.758 620.861 40.552 620.872 Q 41.347 620.882 41.770 620.876 Q 42.193 620.870 42.370 620.863 Q 42.547 620.856 42.626 620.845 Q 42.705 620.834 43.345 620.790 Q 43.985 620.746 44.248 620.722 Q 44.511 620.698 44.715 620.653 Q 44.918 620.609 44.993 620.583 Q 45.067 620.558 45.175 620.492 Q 45.282 620.426 45.352 620.361 Q 45.422 620.297 45.513 619.928 Q 45.603 619.558 45.609 619.249 Q 45.616 618.939 45.617 618.724 Q 45.618 618.509 45.599 618.197 Q 45.581 617.885 45.545 617.574 Q 45.509 617.263 45.489 617.045 Q 45.470 616.827 45.457 616.668 Q 45.445 616.509 45.433 616.392 Q 45.421 616.274 45.380 615.900 Q 45.339 615.526 45.304 615.027 Q 45.270 614.529 45.208 613.940 Q 45.203 613.940 45.160 614.006 L 45.127 614.034 \"></path>\n    </g>\n    <g>\n      <path id=\"STROKE_cbca1b79-c68a-428a-af8b-7c6b20b57209\" opacity=\"1.000\" fill=\"#9bc1e6\" stroke=\"#9bc1e6\" stroke-width=\"0.500\" stroke-opacity=\"1.000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M 31.030 598.230 Q 31.030 598.156 31.030 598.178 L 31.030 598.176 Q 30.961 598.138 30.688 598.276 Q 30.414 598.413 30.232 598.491 Q 30.049 598.569 29.877 598.574 Q 29.706 598.580 29.543 598.493 Q 29.380 598.405 29.000 598.378 Q 28.621 598.350 28.356 598.369 Q 28.091 598.388 27.744 598.344 Q 27.397 598.301 27.182 598.273 Q 26.967 598.245 26.314 598.267 Q 25.661 598.288 25.326 598.304 Q 24.990 598.320 24.830 598.337 Q 24.670 598.354 24.399 598.363 Q 24.127 598.373 23.935 598.369 Q 23.742 598.365 23.619 598.359 Q 23.496 598.353 23.242 598.359 Q 22.987 598.365 22.701 598.340 Q 22.416 598.314 22.251 598.307 Q 22.086 598.301 21.949 598.273 Q 21.812 598.246 21.542 598.241 Q 21.272 598.237 21.150 598.230 Q 21.029 598.222 20.969 598.210 Q 20.910 598.198 20.822 598.271 Q 20.734 598.344 20.660 598.370 Q 20.585 598.397 20.466 598.416 Q 20.346 598.435 20.202 598.486 Q 20.057 598.536 19.936 598.720 Q 19.815 598.904 19.746 599.048 Q 19.678 599.192 19.732 599.523 Q 19.787 599.853 19.827 600.078 Q 19.866 600.303 19.871 600.369 Q 19.876 600.434 19.830 600.604 Q 19.785 600.773 19.753 600.888 Q 19.721 601.003 19.724 601.256 Q 19.726 601.508 19.726 601.639 Q 19.725 601.771 19.660 601.964 Q 19.595 602.158 19.567 602.263 Q 19.539 602.368 19.531 602.413 Q 19.523 602.458 19.498 602.577 Q 19.473 602.696 19.456 602.756 Q 19.439 602.816 19.427 602.846 Q 19.416 602.876 19.420 602.880 Q 19.425 602.884 19.406 602.898 Q 19.388 602.912 19.344 603.103 Q 19.300 603.294 19.326 603.493 Q 19.351 603.693 19.345 603.912 Q 19.339 604.131 19.370 604.346 Q 19.400 604.560 19.423 604.671 Q 19.447 604.782 19.484 605.058 Q 19.522 605.334 19.553 605.541 Q 19.584 605.749 19.621 606.067 Q 19.657 606.385 19.651 606.614 Q 19.644 606.844 19.593 607.026 Q 19.542 607.209 19.495 607.403 Q 19.447 607.597 19.423 607.725 Q 19.399 607.852 19.362 608.084 Q 19.324 608.315 19.294 608.403 Q 19.264 608.491 19.238 608.715 Q 19.212 608.939 19.218 609.021 Q 19.225 609.103 19.225 609.334 Q 19.225 609.565 19.236 609.983 Q 19.247 610.400 19.266 610.698 Q 19.285 610.996 19.284 611.143 Q 19.282 611.289 19.306 611.365 Q 19.329 611.441 19.359 611.484 Q 19.389 611.527 19.405 611.557 Q 19.421 611.587 19.428 611.602 Q 19.435 611.618 19.435 611.610 Q 19.434 611.602 19.434 611.625 Q 19.434 611.649 19.510 611.761 Q 19.585 611.873 19.698 611.974 Q 19.812 612.075 19.857 612.131 Q 19.902 612.187 19.917 612.210 Q 19.933 612.233 19.929 612.227 Q 19.925 612.220 19.946 612.255 Q 19.966 612.289 20.031 612.374 Q 20.096 612.459 20.149 612.526 Q 20.202 612.593 20.206 612.630 Q 20.210 612.668 20.249 612.732 Q 20.288 612.797 20.323 612.836 Q 20.359 612.875 20.366 612.877 Q 20.374 612.880 20.400 612.895 Q 20.425 612.909 20.418 612.909 Q 20.411 612.909 20.437 612.912 Q 20.463 612.915 20.561 612.976 Q 20.658 613.038 20.705 613.103 Q 20.752 613.169 20.775 613.193 Q 20.798 613.217 20.821 613.259 Q 20.845 613.300 20.935 613.325 Q 21.024 613.351 21.085 613.355 Q 21.146 613.360 21.208 613.392 Q 21.271 613.425 21.506 613.458 Q 21.742 613.491 22.063 613.537 Q 22.385 613.582 22.586 613.592 Q 22.788 613.601 22.907 613.596 Q 23.026 613.591 23.407 613.591 Q 23.788 613.592 24.449 613.609 Q 25.111 613.626 25.436 613.662 Q 25.762 613.699 26.047 613.659 Q 26.333 613.619 26.473 613.568 Q 26.614 613.518 26.856 613.529 Q 27.098 613.540 27.251 613.562 Q 27.404 613.584 27.515 613.564 Q 27.626 613.544 27.835 613.486 Q 28.044 613.428 28.142 613.425 Q 28.239 613.423 28.474 613.434 Q 28.709 613.445 28.932 613.380 Q 29.156 613.314 29.306 613.271 Q 29.456 613.228 29.613 613.236 Q 29.769 613.244 29.932 613.279 Q 30.094 613.314 30.228 613.245 Q 30.361 613.177 30.532 613.139 Q 30.703 613.100 30.869 613.121 Q 31.034 613.142 31.220 613.153 Q 31.406 613.164 31.596 613.118 Q 31.787 613.073 32.126 613.081 Q 32.465 613.090 32.711 613.091 Q 32.957 613.092 33.093 613.084 Q 33.228 613.076 33.579 613.082 Q 33.929 613.089 34.317 613.095 Q 34.706 613.101 34.991 613.085 Q 35.276 613.068 35.570 613.052 Q 35.863 613.036 36.120 612.990 Q 36.376 612.944 36.535 612.921 Q 36.694 612.899 37.027 612.931 Q 37.360 612.963 37.641 612.980 Q 37.922 612.996 38.165 612.995 Q 38.408 612.993 38.517 612.992 Q 38.626 612.991 38.847 612.945 Q 39.068 612.899 39.215 612.899 Q 39.362 612.898 39.437 612.900 Q 39.513 612.902 39.688 612.908 Q 39.863 612.913 40.033 612.872 Q 40.202 612.832 40.337 612.811 Q 40.471 612.790 40.570 612.789 Q 40.669 612.788 40.754 612.811 Q 40.839 612.833 40.872 612.852 Q 40.905 612.870 40.914 612.870 Q 40.923 612.869 40.952 612.892 Q 40.980 612.914 41.144 612.958 Q 41.307 613.002 41.486 612.959 Q 41.665 612.916 41.794 612.878 Q 41.924 612.841 42.012 612.839 Q 42.099 612.838 42.340 612.869 Q 42.580 612.900 42.821 612.930 Q 43.063 612.960 43.280 612.994 Q 43.497 613.027 43.613 613.040 Q 43.730 613.053 43.962 613.046 Q 44.194 613.040 44.326 613.048 Q 44.458 613.055 44.579 613.023 Q 44.699 612.992 44.745 612.979 Q 44.791 612.965 44.833 612.966 Q 44.875 612.968 44.938 612.965 Q 45.000 612.962 45.187 612.963 Q 45.373 612.965 45.432 612.979 Q 45.492 612.994 45.671 613.003 Q 45.850 613.012 45.961 613.031 Q 46.073 613.050 46.169 613.061 Q 46.265 613.073 46.376 613.027 Q 46.488 612.982 46.664 612.987 Q 46.840 612.992 46.956 613.021 Q 47.072 613.050 47.269 613.095 Q 47.467 613.141 47.662 613.176 Q 47.857 613.211 47.951 613.217 Q 48.046 613.224 48.076 613.214 Q 48.105 613.203 48.297 613.239 Q 48.489 613.274 48.677 613.298 Q 48.864 613.322 48.916 613.305 Q 48.967 613.289 49.168 613.264 Q 49.368 613.240 49.544 613.171 Q 49.720 613.102 49.842 613.050 Q 49.964 612.997 50.005 612.766 Q 50.046 612.536 50.050 612.420 Q 50.055 612.304 50.089 612.170 Q 50.123 612.035 50.151 611.881 Q 50.179 611.726 50.188 611.500 Q 50.196 611.273 50.223 610.647 Q 50.249 610.022 50.270 609.679 Q 50.291 609.335 50.297 609.230 Q 50.302 609.125 50.317 608.822 Q 50.331 608.518 50.348 608.350 Q 50.365 608.182 50.426 607.809 Q 50.487 607.436 50.488 607.192 Q 50.489 606.948 50.524 606.772 Q 50.560 606.595 50.583 606.426 Q 50.606 606.256 50.613 606.157 Q 50.620 606.058 50.611 605.876 Q 50.602 605.694 50.567 605.342 Q 50.533 604.990 50.504 604.757 Q 50.474 604.523 50.450 604.392 Q 50.425 604.260 50.432 604.172 Q 50.438 604.084 50.444 604.031 Q 50.450 603.979 50.456 603.946 Q 50.461 603.913 50.462 603.894 Q 50.463 603.876 50.473 603.792 Q 50.482 603.708 50.550 603.300 Q 50.617 602.892 50.645 602.664 Q 50.673 602.436 50.673 602.290 Q 50.673 602.144 50.699 602.033 Q 50.726 601.922 50.738 601.690 Q 50.750 601.458 50.728 601.302 Q 50.705 601.147 50.708 600.734 Q 50.712 600.322 50.726 600.127 Q 50.740 599.932 50.725 599.802 Q 50.710 599.673 50.679 599.528 Q 50.647 599.383 50.553 599.262 Q 50.458 599.141 50.387 599.047 Q 50.315 598.954 50.293 598.920 Q 50.271 598.887 50.239 598.859 Q 50.206 598.830 50.187 598.817 Q 50.168 598.804 50.166 598.806 Q 50.163 598.809 50.167 598.804 Q 50.171 598.799 50.099 598.797 Q 50.028 598.795 49.899 598.756 Q 49.771 598.718 49.681 598.694 Q 49.590 598.670 49.518 598.669 Q 49.446 598.669 49.423 598.671 Q 49.400 598.672 49.316 598.669 Q 49.232 598.665 49.093 598.637 Q 48.953 598.609 48.831 598.592 Q 48.709 598.576 48.650 598.586 Q 48.591 598.595 48.297 598.574 Q 48.003 598.554 47.806 598.528 Q 47.609 598.502 47.447 598.523 Q 47.286 598.545 47.120 598.609 Q 46.954 598.673 46.764 598.686 Q 46.575 598.699 46.303 598.690 Q 46.031 598.681 45.881 598.683 Q 45.730 598.685 45.631 598.650 Q 45.531 598.614 45.369 598.551 Q 45.207 598.487 45.106 598.461 Q 45.006 598.436 44.776 598.455 Q 44.547 598.473 44.407 598.473 Q 44.267 598.473 44.117 598.405 Q 43.966 598.336 43.660 598.363 Q 43.354 598.390 43.084 598.361 Q 42.815 598.331 42.609 598.337 Q 42.403 598.342 42.216 598.378 Q 42.030 598.415 41.886 598.423 Q 41.742 598.431 41.447 598.430 Q 41.151 598.430 40.829 598.447 Q 40.507 598.465 40.262 598.477 Q 40.017 598.489 39.892 598.479 Q 39.766 598.468 39.645 598.464 Q 39.525 598.460 39.340 598.510 Q 39.155 598.559 38.835 598.563 Q 38.514 598.567 38.329 598.554 Q 38.144 598.541 37.953 598.608 Q 37.763 598.674 37.545 598.685 Q 37.328 598.695 37.207 598.688 Q 37.086 598.680 36.988 598.666 Q 36.890 598.652 36.631 598.598 Q 36.372 598.544 36.145 598.512 Q 35.919 598.480 35.748 598.500 Q 35.577 598.521 35.209 598.522 Q 34.841 598.522 34.619 598.502 Q 34.398 598.481 34.273 598.483 Q 34.149 598.485 33.993 598.484 Q 33.837 598.484 33.734 598.487 Q 33.632 598.490 33.390 598.455 Q 33.148 598.419 32.897 598.434 Q 32.646 598.448 32.416 598.416 Q 32.185 598.384 32.052 598.332 Q 31.919 598.279 31.618 598.287 Q 31.316 598.295 31.071 598.288 Q 30.825 598.280 30.686 598.249 Q 30.548 598.218 30.460 598.194 Q 30.373 598.171 30.252 598.159 Q 30.130 598.147 29.866 598.160 Q 29.601 598.173 29.377 598.154 Q 29.152 598.134 29.009 598.064 Q 28.867 597.994 28.630 598.034 Q 28.392 598.073 28.258 598.100 Q 28.124 598.127 28.062 598.125 Q 27.999 598.123 27.963 598.124 Q 27.927 598.125 27.795 598.109 Q 27.663 598.093 27.496 598.095 Q 27.329 598.098 27.092 598.111 Q 26.856 598.125 26.551 598.101 Q 26.247 598.078 26.090 598.074 Q 25.933 598.069 25.578 598.059 Q 25.224 598.049 25.016 598.050 Q 24.808 598.050 24.713 598.064 Q 24.617 598.077 24.470 598.126 Q 24.323 598.174 24.095 598.147 Q 23.866 598.119 23.753 598.091 Q 23.640 598.062 23.577 598.066 Q 23.514 598.070 23.458 598.071 Q 23.402 598.072 23.373 598.089 Q 23.344 598.107 23.269 598.122 Q 23.195 598.138 23.110 598.142 Q 23.024 598.147 22.921 598.119 Q 22.819 598.091 22.720 598.090 Q 22.622 598.089 22.594 598.099 Q 22.565 598.109 22.522 598.128 Q 22.479 598.146 22.423 598.173 Q 22.367 598.200 22.306 598.223 Q 22.244 598.245 22.162 598.254 Q 22.079 598.262 21.959 598.224 Q 21.839 598.186 21.800 598.160 Q 21.761 598.135 21.553 598.153 Q 21.346 598.172 21.232 598.191 Q 21.119 598.209 20.907 598.234 Q 20.694 598.258 20.595 598.269 Q 20.496 598.280 20.411 598.311 Q 20.325 598.343 20.249 598.465 Q 20.173 598.586 19.972 598.662 \"></path>\n      <path id=\"STROKE_a6f2ea42-da5b-4947-a258-50c5c1b02a62\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" stroke-width=\"0.999\" stroke-opacity=\"1.000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M 20.081 598.348 Q 20.073 598.435 20.025 598.553 Q 19.977 598.670 19.922 598.805 Q 19.868 598.940 19.843 599.021 Q 19.819 599.102 19.689 599.641 Q 19.560 600.180 19.514 600.396 Q 19.468 600.611 19.416 601.062 Q 19.363 601.513 19.356 601.745 Q 19.348 601.977 19.345 602.177 Q 19.342 602.377 19.344 602.546 Q 19.346 602.714 19.349 602.937 Q 19.351 603.160 19.365 603.431 Q 19.379 603.702 19.382 603.963 Q 19.385 604.224 19.378 604.385 Q 19.371 604.547 19.330 604.844 Q 19.288 605.141 19.252 605.557 Q 19.216 605.973 19.190 606.478 Q 19.164 606.984 19.146 607.458 Q 19.128 607.933 19.130 608.371 Q 19.132 608.808 19.149 609.098 Q 19.167 609.387 19.250 609.857 Q 19.334 610.328 19.345 610.390 Q 19.356 610.452 19.457 610.868 Q 19.557 611.284 19.618 611.517 Q 19.679 611.750 19.778 612.034 Q 19.876 612.317 20.006 612.535 Q 20.136 612.753 20.467 612.951 Q 20.797 613.149 21.096 613.228 Q 21.394 613.307 21.789 613.357 Q 22.183 613.407 22.805 613.453 Q 23.428 613.499 23.949 613.502 Q 24.470 613.504 25.114 613.450 Q 25.758 613.396 26.183 613.367 Q 26.607 613.337 27.100 613.325 Q 27.594 613.313 27.855 613.307 Q 28.116 613.300 29.026 613.275 Q 29.936 613.251 30.745 613.267 Q 31.554 613.282 32.066 613.290 Q 32.578 613.297 33.067 613.301 Q 33.556 613.305 34.806 613.284 Q 36.055 613.262 36.709 613.244 Q 37.363 613.226 37.710 613.210 Q 38.057 613.194 38.312 613.188 Q 38.567 613.181 39.399 613.200 Q 40.231 613.218 40.716 613.221 Q 41.201 613.224 41.456 613.220 Q 41.711 613.217 41.916 613.212 Q 42.121 613.206 43.316 613.273 Q 44.511 613.341 45.172 613.378 Q 45.834 613.416 46.132 613.427 Q 46.429 613.439 46.757 613.449 Q 47.086 613.460 47.688 613.510 Q 48.291 613.559 48.621 613.575 Q 48.950 613.591 49.157 613.579 Q 49.363 613.566 49.392 613.561 Q 49.422 613.555 49.769 613.440 Q 49.885 613.305 50.021 612.990 Q 50.156 612.675 50.192 612.356 Q 50.227 612.036 50.220 611.581 Q 50.213 611.126 50.209 610.851 Q 50.205 610.576 50.209 610.289 Q 50.213 610.002 50.223 609.601 Q 50.232 609.200 50.212 608.531 Q 50.193 607.862 50.210 607.264 Q 50.228 606.665 50.256 606.356 Q 50.285 606.047 50.374 605.228 Q 50.462 604.409 50.506 604.050 Q 50.550 603.691 50.581 603.424 Q 50.612 603.156 50.691 602.530 Q 50.770 601.905 50.798 601.559 Q 50.825 601.213 50.821 600.923 Q 50.816 600.633 50.756 600.219 Q 50.695 599.804 50.604 599.254 Q 50.608 599.196 50.614 599.160 Q 50.619 599.124 50.623 599.050 Q 50.627 598.976 50.622 598.897 Q 50.618 598.817 50.587 598.628 \"></path>\n    </g>\n    <g>\n      <path id=\"STROKE_675ded5d-19aa-468b-b06e-6d8ea5896a35\" opacity=\"1.000\" fill=\"#4378c3\" stroke=\"#4378c3\" stroke-width=\"0.500\" stroke-opacity=\"1.000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M 14.379 577.945 Q 14.379 577.945 14.375 577.950 Q 14.371 577.956 14.367 577.944 Q 14.363 577.932 14.435 577.958 Q 14.507 577.984 14.530 578.139 Q 14.394 578.016 13.932 578.065 Q 13.469 578.113 13.250 578.154 Q 13.032 578.194 12.916 578.188 Q 12.799 578.182 12.747 578.178 Q 12.694 578.174 12.648 578.166 Q 12.602 578.158 12.559 578.154 Q 12.516 578.151 12.538 578.149 Q 12.559 578.147 12.407 578.158 Q 12.255 578.169 12.041 578.138 Q 11.828 578.107 11.702 578.074 Q 11.576 578.040 11.495 578.049 Q 11.414 578.058 11.386 578.064 Q 11.359 578.069 11.276 578.107 Q 11.194 578.144 11.102 578.143 Q 11.010 578.143 10.893 578.174 Q 10.776 578.206 10.751 578.232 Q 10.725 578.258 10.683 578.294 Q 10.641 578.330 10.638 578.337 Q 10.634 578.345 10.621 578.354 Q 10.609 578.364 10.626 578.352 Q 10.644 578.340 10.594 578.379 Q 10.544 578.417 10.450 578.469 Q 10.356 578.520 10.302 578.574 Q 10.249 578.628 10.251 578.626 Q 10.254 578.623 10.211 578.674 Q 10.169 578.724 10.171 578.720 Q 10.173 578.717 10.168 578.724 Q 10.163 578.731 10.169 578.718 Q 10.175 578.705 10.116 578.914 Q 10.057 579.122 10.024 579.233 Q 9.990 579.343 9.951 579.406 Q 9.912 579.469 9.906 579.494 Q 9.899 579.518 9.899 579.513 Q 9.899 579.508 9.889 579.546 Q 9.879 579.583 9.875 579.624 Q 9.871 579.665 9.870 579.740 Q 9.869 579.816 9.867 579.840 Q 9.864 579.864 9.869 579.932 Q 9.873 580.000 9.878 580.237 Q 9.884 580.474 9.829 580.744 Q 9.775 581.013 9.768 581.293 Q 9.762 581.573 9.678 581.880 Q 9.594 582.187 9.558 582.471 Q 9.522 582.755 9.589 583.160 Q 9.655 583.566 9.660 583.737 Q 9.665 583.909 9.673 584.293 Q 9.682 584.677 9.737 585.003 Q 9.792 585.328 9.800 585.518 Q 9.807 585.708 9.815 585.899 Q 9.823 586.089 9.826 586.244 Q 9.828 586.399 9.828 586.501 Q 9.828 586.604 9.823 586.689 Q 9.818 586.774 9.815 586.758 Q 9.812 586.743 9.804 586.904 Q 9.797 587.066 9.810 587.237 Q 9.823 587.408 9.822 587.547 Q 9.822 587.687 9.822 587.748 Q 9.823 587.810 9.821 587.870 Q 9.819 587.931 9.810 588.050 Q 9.801 588.170 9.802 588.217 Q 9.803 588.265 9.803 588.292 Q 9.803 588.318 9.803 588.377 Q 9.803 588.436 9.802 588.438 Q 9.801 588.439 9.804 588.462 Q 9.807 588.485 9.792 588.840 Q 9.776 589.195 9.738 589.489 Q 9.701 589.782 9.682 590.037 Q 9.663 590.293 9.665 590.388 Q 9.667 590.483 9.687 590.750 Q 9.706 591.016 9.714 591.378 Q 9.722 591.740 9.720 591.907 Q 9.719 592.074 9.719 592.145 Q 9.719 592.215 9.709 592.361 Q 9.698 592.507 9.699 592.588 Q 9.699 592.669 9.699 592.718 Q 9.699 592.767 9.705 592.804 Q 9.711 592.842 9.721 592.872 Q 9.732 592.902 9.745 592.936 Q 9.758 592.971 9.811 593.108 Q 9.864 593.245 9.873 593.394 Q 9.882 593.542 9.922 593.915 Q 9.961 594.287 9.965 594.481 Q 9.968 594.675 9.944 594.804 Q 9.919 594.933 9.905 595.009 Q 9.891 595.085 9.893 595.181 Q 9.895 595.276 9.895 595.380 Q 9.894 595.485 9.894 595.518 Q 9.894 595.551 9.896 595.607 Q 9.898 595.664 9.896 595.641 Q 9.895 595.619 9.903 596.050 Q 9.911 596.481 9.910 596.691 Q 9.909 596.900 9.925 596.999 Q 9.940 597.097 9.961 597.155 Q 9.982 597.214 9.979 597.203 Q 9.976 597.192 9.998 597.222 Q 10.020 597.252 10.080 597.323 Q 10.139 597.394 10.156 597.435 Q 10.173 597.475 10.211 597.523 Q 10.249 597.571 10.288 597.610 Q 10.327 597.648 10.328 597.651 Q 10.328 597.654 10.402 597.669 Q 10.475 597.684 10.544 597.684 Q 10.613 597.684 10.645 597.679 Q 10.676 597.675 10.740 597.648 Q 10.805 597.621 11.026 597.595 Q 11.246 597.569 11.404 597.574 Q 11.562 597.579 11.689 597.683 Q 11.816 597.787 12.097 597.828 Q 12.378 597.869 12.577 597.840 Q 12.777 597.811 12.891 597.821 Q 13.006 597.831 13.058 597.860 Q 13.110 597.888 13.168 597.896 Q 13.225 597.903 13.202 597.906 Q 13.178 597.908 13.353 597.889 Q 13.528 597.871 13.757 597.916 Q 13.986 597.962 14.125 598.009 Q 14.264 598.056 14.322 598.048 Q 14.379 598.039 14.363 598.051 Q 14.348 598.063 14.490 598.033 Q 14.632 598.004 15.018 597.984 Q 15.403 597.965 15.712 597.987 Q 16.021 598.009 16.174 598.042 Q 16.327 598.075 16.462 598.068 Q 16.597 598.060 16.681 598.062 Q 16.764 598.065 16.777 598.065 Q 16.790 598.065 16.979 598.064 Q 17.167 598.063 17.316 598.060 Q 17.465 598.057 17.596 598.087 Q 17.727 598.117 17.782 598.136 Q 17.837 598.156 17.886 598.167 Q 17.935 598.178 17.959 598.196 Q 17.984 598.214 18.308 598.251 Q 18.631 598.287 18.934 598.327 Q 19.237 598.366 19.391 598.376 Q 19.545 598.386 19.686 598.382 Q 19.828 598.378 19.965 598.361 Q 20.102 598.343 20.282 598.340 Q 20.462 598.338 20.560 598.341 Q 20.658 598.344 20.879 598.346 Q 21.100 598.349 21.386 598.290 Q 21.672 598.231 21.847 598.192 Q 22.023 598.152 22.307 598.165 Q 22.591 598.177 22.753 598.172 Q 22.916 598.166 23.632 598.172 Q 24.347 598.178 24.945 598.206 Q 25.544 598.234 25.991 598.233 Q 26.439 598.231 26.675 598.213 Q 26.910 598.196 26.957 598.199 Q 27.005 598.202 27.706 598.229 Q 28.408 598.257 28.803 598.278 Q 29.198 598.300 29.366 598.298 Q 29.533 598.296 29.753 598.229 Q 29.972 598.161 30.095 598.148 Q 30.218 598.134 30.275 598.121 Q 30.332 598.109 30.554 598.152 Q 30.776 598.195 31.109 598.229 Q 31.441 598.264 31.867 598.251 Q 32.293 598.238 32.560 598.249 Q 32.826 598.260 33.298 598.237 Q 33.770 598.215 34.220 598.254 Q 34.669 598.293 35.017 598.295 Q 35.366 598.297 35.551 598.294 Q 35.737 598.291 36.011 598.360 Q 36.284 598.429 36.446 598.426 Q 36.608 598.424 36.707 598.410 Q 36.807 598.395 36.864 598.382 Q 36.921 598.368 36.973 598.346 Q 37.025 598.324 37.252 598.328 Q 37.478 598.332 38.189 598.407 Q 38.900 598.482 39.457 598.501 Q 40.013 598.521 40.384 598.476 Q 40.755 598.431 40.963 598.399 Q 41.171 598.367 41.753 598.352 Q 42.335 598.338 42.784 598.379 Q 43.232 598.420 43.421 598.478 Q 43.611 598.535 43.770 598.516 Q 43.930 598.497 44.275 598.540 Q 44.621 598.583 44.854 598.601 Q 45.088 598.618 45.297 598.587 Q 45.505 598.556 45.836 598.652 Q 46.167 598.748 46.350 598.802 Q 46.533 598.856 46.760 598.865 Q 46.987 598.873 47.448 598.853 Q 47.909 598.834 48.350 598.807 Q 48.792 598.780 49.016 598.756 Q 49.240 598.732 49.332 598.739 Q 49.425 598.747 49.640 598.742 Q 49.855 598.737 49.985 598.746 Q 50.116 598.756 50.209 598.760 Q 50.302 598.764 50.477 598.764 Q 50.652 598.763 50.773 598.749 Q 50.893 598.734 51.086 598.803 Q 51.279 598.871 51.467 598.902 Q 51.655 598.934 51.835 598.923 Q 52.016 598.913 52.317 598.971 Q 52.618 599.028 52.813 599.034 Q 53.008 599.041 53.273 599.090 Q 53.538 599.140 53.676 599.135 Q 53.814 599.130 54.132 599.201 Q 54.450 599.272 54.707 599.236 Q 54.964 599.201 55.089 599.165 Q 55.214 599.129 55.281 599.117 Q 55.347 599.105 55.374 599.098 Q 55.401 599.091 55.487 599.071 Q 55.573 599.050 55.666 599.014 Q 55.760 598.977 55.799 598.956 Q 55.838 598.935 55.911 598.892 Q 55.984 598.848 56.097 598.802 Q 56.210 598.755 56.406 598.717 Q 56.601 598.678 56.716 598.658 Q 56.832 598.637 56.943 598.602 Q 57.054 598.567 57.118 598.550 Q 57.183 598.533 57.277 598.508 Q 57.372 598.484 57.394 598.480 Q 57.416 598.476 57.403 598.478 Q 57.390 598.479 57.478 598.464 Q 57.566 598.450 57.774 598.425 Q 57.981 598.399 58.075 598.393 Q 58.169 598.386 58.250 598.363 Q 58.331 598.339 58.402 598.314 Q 58.473 598.288 58.523 598.268 Q 58.573 598.248 58.603 598.235 Q 58.633 598.223 58.652 598.215 Q 58.672 598.206 58.651 598.214 Q 58.631 598.222 58.740 598.178 Q 58.848 598.133 58.901 598.118 Q 58.954 598.103 58.996 598.085 Q 59.039 598.068 59.062 598.047 Q 59.085 598.026 59.111 597.994 Q 59.138 597.962 59.142 597.955 Q 59.146 597.949 59.151 597.936 Q 59.156 597.922 59.227 597.814 Q 59.298 597.705 59.380 597.635 Q 59.462 597.565 59.518 597.175 Q 59.574 596.785 59.590 596.564 Q 59.605 596.344 59.655 596.199 Q 59.705 596.054 59.769 595.879 Q 59.834 595.703 59.855 595.640 Q 59.876 595.576 59.901 595.503 Q 59.925 595.430 59.947 595.366 Q 59.969 595.302 59.972 595.283 Q 59.975 595.264 59.992 595.223 Q 60.009 595.182 60.006 595.144 Q 60.002 595.107 60.084 594.840 Q 60.167 594.574 60.270 594.425 Q 60.372 594.277 60.458 593.981 Q 60.545 593.686 60.586 593.443 Q 60.627 593.199 60.662 593.056 Q 60.696 592.913 60.744 592.788 Q 60.792 592.664 60.848 592.329 Q 60.905 591.995 60.914 591.816 Q 60.923 591.638 60.940 591.125 Q 60.957 590.612 60.975 590.148 Q 60.994 589.685 60.969 589.557 Q 60.944 589.428 60.976 588.891 Q 61.008 588.353 61.008 587.922 Q 61.008 587.492 61.023 587.247 Q 61.039 587.002 61.076 586.915 Q 61.114 586.829 61.106 586.469 Q 61.098 586.110 61.098 585.484 Q 61.098 584.858 61.109 584.547 Q 61.119 584.236 61.121 583.967 Q 61.122 583.698 61.066 583.461 Q 61.010 583.224 60.975 583.043 Q 60.940 582.861 60.947 582.439 Q 60.955 582.017 60.947 581.750 Q 60.939 581.482 60.983 581.340 Q 61.027 581.198 61.024 580.879 Q 61.021 580.560 60.976 580.295 Q 60.930 580.031 60.836 579.762 Q 60.742 579.493 60.609 579.310 Q 60.476 579.127 60.335 578.906 Q 60.194 578.685 60.122 578.597 Q 60.051 578.510 59.936 578.391 Q 59.820 578.271 59.710 578.220 Q 59.601 578.168 59.380 578.055 Q 59.159 577.942 59.060 577.875 Q 58.962 577.809 58.893 577.801 Q 58.825 577.793 58.807 577.794 Q 58.790 577.795 58.791 577.793 Q 58.793 577.791 58.634 577.801 Q 58.475 577.811 58.332 577.816 Q 58.188 577.820 58.105 577.827 Q 58.022 577.834 57.830 577.719 Q 57.639 577.605 57.519 577.540 Q 57.399 577.475 57.328 577.464 Q 57.256 577.453 57.225 577.453 Q 57.194 577.452 57.166 577.453 Q 57.138 577.454 57.153 577.442 Q 57.168 577.430 57.001 577.502 Q 56.835 577.575 56.579 577.509 Q 56.324 577.442 56.139 577.373 Q 55.954 577.304 55.790 577.322 Q 55.626 577.340 55.406 577.361 Q 55.186 577.381 54.827 577.368 Q 54.468 577.354 54.060 577.397 Q 53.652 577.440 53.427 577.454 Q 53.201 577.469 53.101 577.440 Q 53.001 577.411 52.734 577.417 Q 52.467 577.423 52.320 577.444 Q 52.173 577.465 52.099 577.458 Q 52.025 577.451 51.987 577.446 Q 51.948 577.441 51.918 577.427 Q 51.887 577.413 51.848 577.398 Q 51.810 577.383 51.761 577.365 Q 51.712 577.347 51.674 577.318 Q 51.637 577.289 51.483 577.225 Q 51.329 577.161 51.041 577.227 Q 50.752 577.293 50.491 577.351 Q 50.230 577.409 49.917 577.367 Q 49.603 577.325 49.404 577.292 Q 49.204 577.260 49.027 577.278 Q 48.849 577.297 48.702 577.378 Q 48.556 577.460 48.423 577.470 Q 48.291 577.480 48.201 577.455 Q 48.110 577.430 48.019 577.388 Q 47.929 577.347 47.882 577.334 Q 47.835 577.321 47.794 577.317 Q 47.754 577.313 47.766 577.315 Q 47.778 577.316 47.728 577.302 Q 47.678 577.289 47.512 577.437 Q 47.347 577.585 47.264 577.626 Q 47.182 577.667 46.894 577.662 Q 46.606 577.656 46.460 577.633 Q 46.315 577.610 46.208 577.682 Q 46.100 577.753 45.864 577.759 Q 45.628 577.765 45.528 577.727 Q 45.429 577.690 45.302 577.651 Q 45.175 577.612 45.083 577.604 Q 44.991 577.596 44.941 577.634 Q 44.891 577.672 44.760 577.719 Q 44.629 577.767 44.531 577.776 Q 44.433 577.786 44.412 577.790 Q 44.391 577.795 44.385 577.797 Q 44.379 577.799 44.378 577.790 Q 44.378 577.780 44.293 577.810 Q 44.209 577.840 43.900 577.937 Q 43.590 578.034 43.251 578.043 Q 42.911 578.052 42.604 578.023 Q 42.298 577.995 42.024 577.964 Q 41.751 577.933 41.649 577.942 Q 41.548 577.950 41.232 577.946 Q 40.917 577.941 40.731 577.933 Q 40.545 577.924 40.422 577.981 Q 40.298 578.038 40.026 578.043 Q 39.754 578.049 39.602 578.039 Q 39.450 578.029 39.190 578.133 Q 38.931 578.238 38.779 578.250 Q 38.628 578.262 38.317 578.334 Q 38.006 578.405 37.835 578.461 Q 37.664 578.516 37.291 578.461 Q 36.919 578.405 36.661 578.388 Q 36.403 578.371 36.191 578.377 Q 35.979 578.384 35.881 578.375 Q 35.784 578.367 35.627 578.317 Q 35.469 578.266 35.358 578.256 Q 35.247 578.247 35.188 578.247 Q 35.129 578.248 35.064 578.252 Q 35.000 578.256 34.972 578.264 Q 34.944 578.273 34.903 578.286 Q 34.863 578.299 34.817 578.325 Q 34.772 578.351 34.588 578.414 Q 34.404 578.478 34.040 578.458 Q 33.676 578.439 33.498 578.401 Q 33.320 578.363 33.144 578.376 Q 32.968 578.389 32.553 578.382 Q 32.138 578.376 31.935 578.390 Q 31.732 578.404 31.615 578.367 Q 31.497 578.330 31.244 578.277 Q 30.990 578.223 30.715 578.269 Q 30.440 578.315 30.130 578.259 Q 29.820 578.204 29.461 578.225 Q 29.102 578.246 28.910 578.264 Q 28.718 578.281 28.540 578.250 Q 28.361 578.218 28.106 578.145 Q 27.851 578.073 27.501 578.123 Q 27.151 578.174 26.866 578.227 Q 26.580 578.280 26.430 578.278 Q 26.280 578.276 25.999 578.179 Q 25.718 578.082 25.336 578.040 Q 24.954 577.997 24.722 578.016 Q 24.490 578.035 24.223 578.131 Q 23.955 578.227 23.372 578.270 Q 22.789 578.313 22.464 578.353 Q 22.139 578.392 21.957 578.390 Q 21.774 578.388 21.674 578.401 Q 21.573 578.413 21.396 578.447 Q 21.219 578.480 21.021 578.488 Q 20.823 578.496 20.658 578.471 Q 20.493 578.446 20.422 578.426 Q 20.352 578.406 20.208 578.385 Q 20.064 578.365 20.018 578.363 Q 19.973 578.361 19.779 578.357 Q 19.585 578.352 19.221 578.298 Q 18.858 578.244 18.519 578.246 Q 18.180 578.248 17.971 578.177 Q 17.762 578.105 17.309 578.066 Q 16.855 578.027 16.646 578.025 Q 16.436 578.023 16.104 578.073 Q 15.771 578.122 15.596 578.131 Q 15.420 578.139 15.060 578.180 Q 14.700 578.221 14.488 578.274 Q 14.276 578.326 14.020 578.267 Q 13.763 578.207 13.641 578.155 Q 13.519 578.103 13.404 578.116 Q 13.289 578.130 13.238 578.141 Q 13.188 578.151 13.174 578.154 Q 13.161 578.157 13.012 578.149 Q 12.864 578.141 12.645 578.126 Q 12.427 578.111 12.328 578.136 Q 12.230 578.161 11.850 578.169 Q 11.471 578.176 11.189 578.146 Q 10.908 578.115 10.788 578.100 Q 10.668 578.086 10.566 578.192 Q 10.464 578.297 10.417 578.338 Q 10.369 578.380 10.316 578.414 Q 10.262 578.447 10.211 578.492 Q 10.159 578.538 10.160 578.538 Q 10.160 578.539 10.169 578.528 Q 10.178 578.518 10.161 578.538 Q 10.143 578.557 10.119 578.583 Q 10.123 578.514 10.136 578.540 Q 10.149 578.566 10.039 578.377 \"></path>\n      <path id=\"STROKE_a07be3a9-f544-418c-9d17-6fe392cf61d3\" opacity=\"1.000\" fill=\"none\" stroke=\"#000000\" stroke-width=\"0.999\" stroke-opacity=\"1.000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M 31.790 578.066 L 31.717 578.049 L 31.431 578.031 Q 31.424 578.032 31.019 578.014 Q 30.614 577.995 30.319 577.995 Q 30.025 577.995 29.834 578.000 Q 29.643 578.005 29.522 578.011 Q 29.402 578.017 29.212 578.039 Q 29.023 578.062 29.017 578.064 Q 29.010 578.065 28.830 578.078 Q 28.650 578.090 28.276 578.100 Q 27.901 578.111 27.742 578.112 Q 27.583 578.114 27.223 578.105 Q 26.862 578.096 26.509 578.119 Q 26.156 578.141 25.807 578.165 Q 25.458 578.188 25.285 578.200 Q 25.111 578.212 24.966 578.227 Q 24.821 578.241 24.571 578.261 Q 24.321 578.281 23.952 578.294 Q 23.584 578.308 23.128 578.325 Q 22.671 578.341 22.415 578.344 Q 22.158 578.347 21.779 578.339 Q 21.400 578.332 21.217 578.330 Q 21.035 578.328 20.852 578.326 Q 20.670 578.325 20.379 578.324 Q 20.087 578.323 19.763 578.308 Q 19.439 578.293 18.978 578.285 Q 18.517 578.277 17.860 578.281 Q 17.204 578.285 16.766 578.273 Q 16.329 578.261 16.184 578.248 Q 16.039 578.236 15.750 578.216 Q 15.460 578.196 15.292 578.195 Q 15.123 578.194 14.773 578.201 Q 14.422 578.208 14.199 578.216 Q 13.975 578.225 13.859 578.235 Q 13.743 578.245 13.605 578.251 Q 13.468 578.256 13.154 578.259 Q 12.841 578.262 12.578 578.257 Q 12.315 578.252 12.179 578.244 Q 12.043 578.235 11.937 578.224 Q 11.830 578.214 11.745 578.208 Q 11.659 578.201 11.597 578.200 Q 11.535 578.200 11.120 578.198 Q 10.704 578.196 10.541 578.221 Q 10.378 578.247 10.314 578.269 Q 10.249 578.292 10.210 578.318 Q 10.171 578.344 10.135 578.381 Q 10.100 578.417 10.089 578.424 Q 10.079 578.430 10.017 578.568 Q 9.954 578.706 9.944 579.039 Q 9.933 579.373 10.025 580.085 Q 10.118 580.797 10.178 581.263 Q 10.238 581.730 10.258 582.422 Q 10.277 583.115 10.260 583.471 Q 10.244 583.827 10.224 584.012 Q 10.205 584.196 10.150 584.677 Q 10.096 585.157 10.054 585.617 Q 10.012 586.076 9.986 586.298 Q 9.959 586.520 9.932 586.723 Q 9.905 586.926 9.898 586.990 Q 9.892 587.053 9.852 587.300 Q 9.813 587.547 9.760 587.869 Q 9.707 588.190 9.677 589.031 Q 9.648 589.873 9.649 589.963 Q 9.649 590.053 9.676 590.642 Q 9.702 591.230 9.699 591.718 Q 9.695 592.206 9.683 592.438 Q 9.670 592.670 9.663 592.939 Q 9.656 593.208 9.642 593.547 Q 9.628 593.886 9.608 594.466 Q 9.588 595.045 9.587 595.342 Q 9.586 595.638 9.587 595.781 Q 9.587 595.924 9.599 596.217 Q 9.612 596.509 9.845 597.435 Q 9.854 597.456 9.947 597.520 Q 10.040 597.583 10.258 597.700 Q 10.477 597.816 10.630 597.877 Q 10.783 597.938 11.245 598.022 Q 11.706 598.107 12.728 598.110 Q 13.750 598.114 14.622 598.172 Q 15.495 598.230 15.896 598.231 Q 16.297 598.233 17.692 598.228 Q 19.088 598.223 19.828 598.222 Q 20.568 598.221 21.029 598.209 Q 21.490 598.198 21.850 598.177 Q 22.210 598.156 22.680 598.154 Q 23.150 598.152 23.517 598.180 Q 23.885 598.209 24.189 598.238 Q 24.493 598.266 25.351 598.326 Q 26.209 598.386 26.665 598.409 Q 27.121 598.432 27.494 598.428 Q 27.868 598.424 28.503 598.417 Q 29.138 598.410 29.466 598.405 Q 29.795 598.399 30.008 598.385 Q 30.221 598.370 30.662 598.356 Q 31.103 598.341 31.635 598.362 Q 32.166 598.384 32.608 598.387 Q 33.051 598.391 33.520 598.373 Q 33.989 598.355 34.225 598.349 Q 34.462 598.343 34.848 598.361 Q 35.234 598.380 35.486 598.409 Q 35.739 598.438 36.002 598.463 Q 36.265 598.488 36.438 598.500 Q 36.611 598.512 37.031 598.531 Q 37.450 598.549 38.122 598.572 Q 38.793 598.596 39.841 598.591 Q 40.889 598.586 41.735 598.596 Q 42.581 598.606 42.915 598.613 Q 43.248 598.620 43.394 598.625 Q 43.541 598.631 44.424 598.633 Q 45.307 598.634 45.892 598.626 Q 46.476 598.617 46.746 598.618 Q 47.016 598.618 47.386 598.622 Q 47.756 598.627 48.054 598.627 Q 48.351 598.627 49.170 598.615 Q 49.989 598.604 50.361 598.601 Q 50.732 598.599 50.951 598.598 Q 51.171 598.596 51.806 598.596 Q 52.441 598.597 52.860 598.617 Q 53.279 598.637 53.950 598.720 Q 54.621 598.803 55.036 598.859 Q 55.451 598.916 55.933 598.933 Q 56.414 598.951 56.835 598.930 Q 57.255 598.909 57.464 598.887 Q 57.674 598.864 57.981 598.778 Q 58.288 598.692 58.534 598.585 Q 58.779 598.477 58.868 598.425 Q 58.957 598.372 59.039 598.320 Q 59.122 598.268 59.166 598.233 Q 59.209 598.198 59.297 598.107 Q 59.385 598.017 59.480 597.902 Q 59.574 597.788 59.584 597.775 Q 59.594 597.761 59.639 597.679 Q 59.685 597.597 59.799 597.275 Q 59.912 596.953 59.953 596.770 Q 59.994 596.587 60.019 596.467 Q 60.044 596.348 60.085 596.157 Q 60.126 595.967 60.176 595.732 Q 60.226 595.496 60.298 595.078 Q 60.371 594.659 60.407 594.355 Q 60.443 594.052 60.465 593.674 Q 60.488 593.297 60.500 593.105 Q 60.511 592.913 60.546 592.380 Q 60.580 591.847 60.603 591.119 Q 60.626 590.391 60.629 590.039 Q 60.631 589.688 60.633 589.477 Q 60.634 589.266 60.634 589.111 Q 60.634 588.955 60.643 588.444 Q 60.652 587.932 60.683 587.352 Q 60.714 586.773 60.726 586.064 Q 60.738 585.355 60.741 584.976 Q 60.743 584.598 60.751 584.035 Q 60.758 583.471 60.766 583.229 Q 60.773 582.987 60.788 582.769 Q 60.804 582.551 60.829 582.173 Q 60.854 581.796 60.860 581.482 Q 60.866 581.168 60.854 580.905 Q 60.841 580.642 60.837 580.583 Q 60.833 580.525 60.790 580.242 Q 60.747 579.959 60.705 579.756 Q 60.663 579.554 60.617 579.377 Q 60.571 579.201 60.567 579.184 Q 60.562 579.167 60.532 579.075 Q 60.501 578.982 60.450 578.863 Q 60.399 578.744 60.375 578.693 Q 60.352 578.642 60.274 578.517 Q 60.196 578.391 60.151 578.336 Q 60.105 578.280 60.026 578.202 Q 59.947 578.123 59.849 578.042 Q 59.751 577.960 59.722 577.938 Q 59.693 577.916 59.625 577.878 Q 59.557 577.840 59.537 577.832 Q 59.517 577.823 59.282 577.758 Q 59.047 577.693 58.435 577.645 Q 57.824 577.598 57.467 577.598 Q 57.111 577.597 56.956 577.598 Q 56.800 577.598 56.233 577.605 Q 55.666 577.611 54.954 577.595 Q 54.241 577.579 53.749 577.565 Q 53.257 577.551 53.017 577.541 Q 52.777 577.530 52.366 577.483 Q 51.956 577.436 50.807 577.411 Q 49.658 577.386 49.022 577.399 Q 48.386 577.413 48.090 577.424 Q 47.793 577.436 47.240 577.468 Q 46.687 577.500 45.468 577.660 Q 44.248 577.821 43.638 577.914 Q 43.027 578.008 42.607 578.068 Q 42.186 578.127 41.886 578.156 Q 41.587 578.185 41.436 578.195 Q 41.286 578.204 40.267 578.278 Q 39.249 578.352 39.080 578.353 Q 38.911 578.353 38.779 578.353 Q 38.647 578.352 38.517 578.344 Q 38.387 578.335 37.630 578.335 Q 36.874 578.334 36.477 578.340 Q 36.080 578.345 35.838 578.339 Q 35.597 578.333 35.373 578.326 Q 35.150 578.320 34.799 578.301 Q 34.448 578.282 34.199 578.270 Q 33.950 578.258 33.543 578.274 Q 33.135 578.291 32.900 578.313 Q 32.666 578.335 32.358 578.353 Q 32.051 578.371 31.851 578.382 Q 31.652 578.394 31.476 578.409 Q 31.300 578.424 31.100 578.447 Q 30.899 578.471 30.796 578.478 Q 30.693 578.485 30.535 578.488 Q 30.377 578.491 30.306 578.487 Q 30.235 578.483 29.801 578.447 Q 29.368 578.411 29.200 578.380 Q 29.032 578.348 28.735 578.276 Q 28.438 578.203 28.230 578.155 Q 28.022 578.108 27.647 578.082 Q 27.272 578.056 27.090 578.048 Q 26.908 578.041 26.816 578.034 Q 26.725 578.027 26.395 577.963 \"></path>\n    </g>\n  </svg>\n);\n\nexport default ConnectedComponentsSketch;\n"},"relativePath":"sketches/heirarchical_categories.jsx"},{"fields":{"contents":"import React from 'react'\n\nconst MusicNote = () => (\n  <svg className=\"sketch music-note\" width=\"51\" height=\"57\" viewBox=\"0 0 51 57\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0)\">\n      <path d=\"M668.106 -84H-832.011V916.078H668.106V-84Z\" fill=\"white\"/>\n      <path d=\"M23.3514 33.316L23.8994 33.3546L24.005 33.4053L24.4093 33.52L24.804 33.7644L25.18 34.1573L25.1824 34.1663L25.1884 34.173L25.3876 34.5387L25.4552 34.8024L25.5101 34.902L25.5343 35.0637L25.9392 35.249L25.9501 35.2762L25.9742 35.287L26.0684 35.3951L26.3586 36.1663L26.2651 36.6244L26.1196 36.9678L25.7938 37.357L25.7594 37.427L25.7171 37.4596L25.7129 37.4796L25.6477 37.628L25.4986 38.1277L25.3985 38.2707L25.3454 38.4313L24.9621 38.9509L24.8722 38.9961L24.8257 39.0999L24.4817 39.4065L24.3218 39.6733L24.2621 39.7318L24.2428 39.7855L23.7648 40.383L23.6302 40.4476L23.5668 40.5743L22.527 41.3558L22.4087 41.3963L22.2923 41.4928L21.4914 41.838L21.3285 41.8718L21.2669 41.9092L21.247 41.9135L21.2313 41.9231L21.2047 41.9292L21.0563 42.0016L20.9549 42.0251L20.9018 42.0625L19.9772 42.3413L19.7847 42.3697L19.7582 42.383L19.5638 42.3981L19.2929 42.4832L19.0937 42.5139L19.0696 42.5254L18.5765 42.558L17.9332 42.8423L17.6604 42.9002L17.6031 42.9292L17.1951 42.9678L17.0901 42.9732L16.7654 42.9219L16.6393 42.8815L16.4552 42.7481L16.2892 42.6884L16.2247 42.5803L16.104 42.4928L16.0219 42.2418L15.9875 42.1838L15.7382 41.9225L15.7244 41.8682L15.6918 41.8308L15.5584 41.5399L15.4443 41.0221L15.4498 40.9092L15.5174 40.17L15.5499 40.106L15.6127 39.7994L16.0623 38.7541L16.1402 38.6624L16.1728 38.5562L16.9368 37.4355L17.1058 37.2846L17.1414 37.205L18.2892 36.1947L18.3532 36.1706L18.4311 36.0867L18.7413 35.8839L18.9096 35.7191L19.0309 35.6697L19.2174 35.4958L19.6248 35.2834L19.9374 35.0118L20.0032 34.9871L20.0816 34.905L20.7569 34.4838L20.8897 34.4458L21.0062 34.3347L21.0786 34.3057L21.1782 34.2001L21.9645 33.6968L22.1414 33.6449L22.2639 33.5604L22.944 33.3607L23.2711 33.313L23.3514 33.316Z\" fill=\"black\"/>\n      <path d=\"M28.204 10.0059L28.2221 10.0108L28.236 10.0295L28.3163 10.0512L28.3344 10.0621L28.3959 10.1719L28.3977 10.1725L28.4189 10.2081L28.4557 10.2341L28.5076 10.2558L28.6542 10.6094V11.0597L28.5076 11.4127L28.2601 11.5153L28.1274 12.3439L27.9228 14.2817L27.2378 22.68L27.0495 25.808L26.9886 27.3481L26.9336 30.4133L26.9348 31.6553L26.962 32.7488V32.7603V32.7609L26.965 34.6831L26.9662 35.3735L26.968 35.7718L26.9783 36.2292L26.9849 36.2678L26.9855 36.2691L26.9867 36.5153V36.5171L26.8437 36.8617L26.4991 37.0041L26.1612 36.8683L26.1594 36.8635L26.1545 36.8617L26.1099 36.7537L26.0127 36.5358L26.003 36.2908L26.0024 36.2709L26.0055 36.2196L26.0121 36.1556L26.0097 35.7814V35.7784V35.776L26.0115 35.3735L26.0127 34.6831L26.0151 32.7603V32.7543L26.032 31.6577L26.0332 30.4091V30.4054L26.0622 27.33L26.0628 27.3155L26.1268 25.7639V25.7633L26.1274 25.7549L26.3259 22.6161H26.3265V22.6076L27.0453 14.2003L27.0459 14.1997V14.1918L27.2589 12.2359L27.2601 12.2347L27.2625 12.2099L27.4653 11.0512L27.4689 11.0476L27.4738 11.0138L27.6029 10.5443L27.6102 10.5394L27.6162 10.5056L27.7188 10.2467L28.0972 9.99146L28.204 10.0059Z\" fill=\"black\"/>\n      <g className=\"animate\">\n        <path d=\"M30.7901 9.88428L31.4726 9.89876L31.4859 9.9048L31.7364 9.9567L31.9168 10.0358L31.9687 10.1154L32.128 10.1818L32.3966 10.4534L32.4388 10.556L32.5668 10.7322L32.6344 10.9386L32.6585 11.0883L32.6682 11.1088L32.6905 11.4003L32.6923 11.4552L32.682 11.5753L32.6235 11.9157L32.6175 11.9253L32.6126 11.9633L32.3912 12.8294L32.3785 12.8487L32.37 12.8939L31.2994 15.763L30.9331 17.1836L30.7508 18.5415L30.7563 19.7503L30.9289 20.7129L31.0828 21.072L31.5577 21.8819L31.9934 22.4135L32.1884 22.5819L32.6645 22.8601L33.0791 22.9633L33.7007 23.0949L33.7466 23.1516L33.9838 23.25L34.1516 23.6549L33.9838 24.0605L33.5782 24.2283H33.5589L32.912 24.2059L32.9035 24.2023L32.772 24.1854L32.2608 24.049L32.2475 24.0321L32.1642 24.014L31.5227 23.7183L31.4865 23.6622L31.3682 23.6175L31.0852 23.3701L31.0628 23.32L31.0146 23.2977L30.5046 22.6887L30.4684 22.5898L30.4195 22.5596L29.9584 21.6417L29.9379 21.5584L29.9102 21.5161L29.7846 21.0394L29.7804 21.0086L29.7756 21.0001L29.5613 19.9271L29.5511 19.8263L29.5493 19.8221L29.5131 18.5186L29.5125 18.5011L29.5167 18.4316L29.6796 16.9863L29.6845 16.9772L29.6899 16.9253L30.0182 15.4166L30.0315 15.396L30.0411 15.3381L31.0779 12.4449L31.2867 11.699L31.2892 11.4872L31.2729 11.3248L31.2686 11.314L31.2385 11.2778L30.7822 11.2385L30.3749 11.2814L29.6953 11.4093L29.1594 11.623L28.6229 11.8885L28.3767 11.9464L28.3405 11.9452L28.2536 11.9392L28.0393 11.8378L27.9373 11.7956L27.9343 11.7877L27.9265 11.7841L27.7925 11.4449L27.8607 11.1945L27.9005 11.1257L27.9041 11.1118L27.9784 10.9621L28.0393 10.9247L28.084 10.8221L28.157 10.7545L28.4974 10.6205L28.5094 10.626L28.5631 10.5874L28.6265 10.5662L28.6446 10.5373L29.23 10.2397L29.3242 10.2174L29.3399 10.1963L30.0834 9.97601L30.1757 9.96213L30.1944 9.95187L30.6881 9.88971L30.7762 9.88428H30.7901Z\" fill=\"black\"/>\n      </g>\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <rect width=\"1500\" height=\"1000\" fill=\"white\" transform=\"translate(-832 -84)\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\nexport default MusicNote"},"relativePath":"sketches/music_note.jsx"},{"fields":{"contents":"import React from 'react'\n\nconst PianoSketch = () => (\n\n  <svg className=\"sketch piano\" width=\"18\" height=\"21\" viewBox=\"0 0 18 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1.74995 0.5C1.15461 3.62553 1.74995 7.05358 1.74995 10.25C1.74995 13.4167 2.2687 16.6375 1.74995 19.75\" stroke=\"black\" strokeLinecap=\"round\"/>\n    <path d=\"M8 19C8 16.8232 7.75 14.641 7.75 12.5\" stroke=\"black\" strokeLinecap=\"round\"/>\n    <path d=\"M8.5 19H13\" stroke=\"black\" strokeLinecap=\"round\"/>\n    <path d=\"M1.75 19.25C5.48919 19.1752 9.23724 19 13 19\" stroke=\"black\" strokeLinecap=\"round\"/>\n    <path d=\"M13 12.75C13.0376 14.6303 13 16.3706 13 18.25\" stroke=\"black\" strokeLinecap=\"round\"/>\n    <path d=\"M5.50027 0.75C4.95474 4.1596 5.50027 7.78089 5.50027 11.25\" stroke=\"black\" strokeLinecap=\"round\"/>\n    <path d=\"M5.75 11.25C7.01137 11.2752 8.01818 11.4553 9.25 11.25\" stroke=\"black\" strokeLinecap=\"round\"/>\n    <path d=\"M9 11.25C9 9.35723 8.55123 7.59413 8.5 5.75C8.4573 4.21296 8.50237 2.76421 8.25 1.25\" stroke=\"black\" strokeLinecap=\"round\"/>\n    <path d=\"M8 0.75L6.5 1\" stroke=\"black\" strokeLinecap=\"round\"/>\n    <path d=\"M6.74993 2.00002C6.74993 2.16816 6.58598 4.41669 6.99993 4.41669C7.3886 4.41669 7.24993 2.88913 7.24993 3.2778C7.24993 3.76444 7.72217 6.88754 7.74993 5.30558C7.76214 4.6097 7.55489 1.74583 7.49993 3.94447C7.48269 4.63399 7.57336 2.24217 7.48604 1.80558C7.33556 1.05317 6.99993 4.82288 6.99993 4.05558C6.99993 1.97734 6.69638 4.00387 6.51382 4.91669C6.35934 5.68909 7.06276 1.91026 6.61104 2.55558C6.28048 3.0278 6.24993 3.61218 6.24993 4.16669C6.24993 4.64334 6.3534 3.21791 6.44437 2.75002C6.85561 0.635084 5.35334 3.7778 5.99993 3.7778C6.46854 3.7778 6.04703 0.753459 5.99993 3.25002C5.97389 4.63024 6.49993 8.7416 6.49993 7.36113C6.49993 6.8037 6.76521 3.78277 6.37493 5.50002C6.17633 6.37385 6.29605 9.22957 6.86104 6.88891C6.96589 6.45454 6.99993 5.10873 6.99993 5.55558C6.99993 6.20372 6.99993 6.85187 6.99993 7.50002C6.99993 7.64707 7.00445 8.90419 7.19437 8.25002C7.31146 7.84673 7.45355 6.61042 7.49993 7.0278C7.56951 7.65405 7.48417 8.31411 7.49993 8.94447C7.51862 9.69225 7.74993 8.07529 7.74993 7.86113C7.74993 6.81201 7.52771 7.15306 7.52771 8.00002C7.52771 8.33076 7.74993 9.44726 7.74993 9.43058C7.74993 9.04418 7.95873 6.05558 7.49993 6.05558C7.02354 6.05558 7.24993 9.04489 7.24993 9.48613C7.24993 11.6142 7.40357 9.25312 7.19437 8.50002C6.63045 6.46988 6.15135 9.45679 6.05548 10C5.80217 11.4355 8.00791 8.20191 6.55548 8.66669C5.26081 9.08098 6.67165 11.4956 7.38882 10.25C8.50565 8.31026 5.86768 8.88261 7.02771 10.2084C8.23717 11.5906 8.16483 7.9296 7.2916 9.16669C6.93671 9.66944 7.58305 10.441 7.83326 9.83335C8.06791 9.26348 7.59411 9.02741 7.51382 9.75002C7.45677 10.2634 7.81011 10.6105 8.08326 9.98613C8.26357 9.57401 7.98817 8.9077 7.87493 8.50002C7.5168 7.21074 7.83173 10.0495 7.94437 10.5C8.37033 12.2038 7.49993 7.00628 7.49993 5.25002C7.49993 4.35537 7.71786 3.13777 7.47215 2.2778C7.38346 1.96739 6.62856 2.03065 6.7916 1.84724C7.33381 1.23725 6.85208 1.25002 6.24993 1.25002\" stroke=\"black\" strokeLinecap=\"round\"/>\n    <path d=\"M17.0002 0.75C16.5218 3.74033 17.2502 6.95354 17.2502 10C17.2502 12.6956 17.0002 15.3167 17.0002 18\" stroke=\"black\" strokeLinecap=\"round\"/>\n    <path d=\"M13.25 18.9999C14.6038 18.7833 15.938 18.5626 17.25 18.9999\" stroke=\"black\" strokeLinecap=\"round\"/>\n    <g className=\"animate\">\n      <path d=\"M11.75 0.75C11.75 3.16811 12 5.62105 12 8C12 9 12 10 12 11C12 12.2533 13.6331 11.461 14.5 11.75\" stroke=\"black\" strokeLinecap=\"round\"/>\n      <path d=\"M12.25 1.00006C14.5378 0.267967 14 0.707716 14 2.50006C14 3.50006 14 4.50006 14 5.50006C14 7.52281 14.5 9.49512 14.5 11.5001\" stroke=\"black\" strokeLinecap=\"round\"/>\n      <path d=\"M13.75 9.49993C13.1908 6.56406 12.9317 9.53005 13.375 10.4166C13.6448 10.9562 13.5116 9.21422 13.5 8.61104C13.4925 8.22178 13.0173 7.05585 12.7778 8.01382C12.7243 8.22788 12.7661 9.48548 12.9444 8.74993C13.0766 8.20471 13.0966 7.35815 12.9861 6.80549C12.9207 6.47856 12.2522 10.8505 12.9861 10.0555C13.8227 9.14923 13.3616 5.42264 13.1111 4.27771C12.5492 1.70918 12 4.26914 12 5.51382C12 5.66828 12.0195 7.27067 12.1111 7.22215C12.6937 6.91372 12.75 5.78283 12.75 5.22215C12.75 4.31769 12.8847 1.09039 12.375 3.63882C12.2902 4.06259 12.0956 5.14535 12.7361 5.30549C13.1503 5.40902 13.245 3.5182 13.25 3.24993C13.254 3.03209 13.3338 1.17977 13 1.68049C12.6928 2.14125 12.5 2.94719 12.5 3.49993C12.5 4.18557 12.8237 2.87378 12.7222 2.56938C12.5329 2.00126 11.947 3.69261 12.3889 2.74993C12.642 2.20992 12.3528 1.62498 12.2639 2.51382C12.1924 3.22883 12.2159 4.02583 12.5 4.69438C12.892 5.61677 13.0466 4.21342 12.75 4.56938C12.3528 5.04604 12.226 6.15919 12.3056 6.74993C12.4035 7.47768 12.5318 8.33675 12.8889 8.98604C13.0117 9.20931 13.9533 10.4975 14 9.74993C14.1576 7.2277 12.1312 9.79604 13 10.0277C13.3341 10.1168 12.7448 11.2534 13.5 10.7499\" stroke=\"black\" strokeLinecap=\"round\"/>\n    </g>\n  </svg>\n)\n\nexport default PianoSketch\n"},"relativePath":"sketches/piano.jsx"},{"fields":{"contents":"import React from 'react'\n\nconst PipesSketch = () => (\n  <svg className=\"sketch pipes\" width=\"46\" height=\"47\" viewBox=\"0 0 46 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0)\">\n      <path d=\"M647.106 -349H-853.011V651.078H647.106V-349Z\" fill=\"white\"/>\n      <path d=\"M31.9101 28.6007L32.1576 28.611L32.1618 28.6116L32.4026 28.6254H32.4032L32.4141 28.626L32.6627 28.6502V28.6508L32.6706 28.6514L33.1624 28.7136L33.1642 28.7154L33.1859 28.7178L33.408 28.7636L33.8287 28.833L34.0652 28.8674L34.0658 28.8681L34.0731 28.8687L34.2849 28.9067L34.4744 28.9356L34.8703 28.9604H34.8709L34.88 28.961L35.0809 28.9815L35.2891 28.9918L35.4967 28.9996L35.6989 28.9839L35.717 28.9827L35.9439 29.2096L35.7424 29.4347L35.5281 29.4589L35.5173 29.4595L35.5167 29.4601L35.2958 29.4752H35.2903H35.2897L35.0767 29.486L34.8721 29.4999L34.8528 29.5005L34.8425 29.4999L34.4376 29.4842L34.2318 29.4818H34.2228L34.0055 29.4722L34.0049 29.4716L33.9771 29.4697L33.7351 29.4359L33.7321 29.4353L33.3121 29.3702L33.09 29.3496L33.0894 29.349L33.0809 29.3484L32.5939 29.2881L32.3579 29.2652L32.1316 29.2525L31.8969 29.2495L31.5173 29.2561L31.3483 29.2621L30.845 29.311L30.6941 29.3303L30.6838 29.3309V29.3315L30.1805 29.3816L30.1654 29.3828L29.988 29.3931L29.9687 29.3937L29.2071 29.3943H29.1944L28.4292 29.3647L27.4442 29.3291L27.44 29.1028L27.4382 29.0992L27.431 28.9519L27.4086 28.7274L27.4038 28.6773L28.4551 28.7184H28.4557L29.2125 28.7504L29.9578 28.7437L30.1208 28.7341L30.6138 28.6834L30.7641 28.6635L30.7792 28.6623L30.7798 28.6617L31.297 28.6158L31.3139 28.6152V28.6146L31.4949 28.6073H31.5022H31.5028L31.8896 28.6001H31.8963L31.9101 28.6007Z\" fill=\"black\"/>\n      <path d=\"M35.877 28.7966L36.3755 28.8196L36.3761 28.8202L36.3882 28.8208L36.9844 28.8727L40.1848 29.0688L40.3658 29.0754H40.3682L40.6827 29.0893L40.8251 29.0869L41.195 29.0785L41.5439 29.0205L41.6181 29.0054L41.6241 29.0048L41.6247 29.0036L41.8172 28.9662L41.8184 28.9898L41.8191 29.1195L41.8209 29.6675V29.7218L41.7762 29.7315L41.7672 29.7321L41.7665 29.7333L41.6833 29.7496L41.67 29.7508L41.6688 29.752L41.2898 29.8123L41.2415 29.8159L41.2409 29.8165L40.8432 29.8286H40.8317H40.8257L40.6712 29.8262H40.6706L40.3441 29.8196L40.3242 29.819L40.1377 29.8051L40.1353 29.8045L36.9319 29.5347L36.3338 29.4913H36.3332L35.8384 29.4526L35.4382 29.4279L35.0399 29.4394L34.8329 29.478L34.7231 29.5884H34.6646L34.5946 29.5178L34.5849 29.5172L34.5469 29.51L34.3604 29.2837L34.332 29.2553L34.3375 29.2499L34.3399 29.2149L34.3417 29.2052L34.3779 29.1744L34.4576 29.0266L34.565 28.9566L34.6422 28.933L34.6549 28.9167L34.9319 28.8467L34.9856 28.8401L34.988 28.8377L35.422 28.8093L35.4346 28.8087L35.8522 28.7966H35.8619H35.877Z\" fill=\"black\"/>\n      <path d=\"M37.3195 32.1936L37.4571 32.1972H37.462L37.8844 32.2141H37.885L37.8874 32.2147L38.0124 32.2208H38.9267L39.5441 32.2105H39.5501H39.5513L39.6708 32.2111H40.0377H40.0444L40.1711 32.2135L40.6919 32.222V32.2226L40.7148 32.2232L40.8428 32.234H40.8446L41.8217 32.3252V32.9993L40.7873 32.9275H40.7854L40.6702 32.9184L40.1663 32.9136L40.045 32.916H40.0377H39.6708H39.5537L38.9357 32.9263H38.9297H38.0033H37.9852L37.8524 32.919L37.436 32.9021L37.3063 32.8991H36.6201L36.0341 32.9293L35.9176 32.9389L35.9013 32.9395V32.9401L35.2984 32.9643H35.2833H35.1602H35.1572L34.774 32.9613H34.6418H34.6406L34.1095 32.9588H33.9822L33.2809 32.9685L33.1669 32.9715L32.6442 32.9981L32.6394 32.9987H32.6388L32.5091 33.0035H32.5036V33.0041L32.0751 33.0144L32.0661 33.015H32.0637L31.9665 33.0144L31.506 33.0174H31.5036H31.4988L31.4191 33.0162L30.8168 33.0282L30.6901 33.0349H30.6883L29.7903 33.082L29.7716 33.0826H29.7698L28.6032 33.0759L28.5748 33.0747L27.8313 33.0065H27.8307L27.5115 32.9763L27.5 32.3535L27.8784 32.3801L28.6104 32.4078L29.7571 32.4012L30.6418 32.3324L30.6533 32.3318L30.7861 32.3252H30.7951L31.4089 32.3095H31.4131L31.4988 32.3083H31.5036H31.506L31.9665 32.3119L32.0613 32.3113L32.4795 32.3016L32.6008 32.2932H32.6062H32.6068L33.1337 32.2654L33.1427 32.2648L33.2622 32.2612H33.2683L33.9743 32.2503H33.9798H34.1101H34.1132L34.6436 32.2546H34.7752H34.7758H34.7794L35.1614 32.2582H35.2767L35.8657 32.2352L35.9798 32.2256L35.9925 32.225L36.5917 32.1936H36.611H37.3105H37.3195Z\" fill=\"black\"/>\n      <path d=\"M18.8797 19.4158L19.6788 19.4224H19.6794L19.7096 19.4242L20.2255 19.4749L20.2274 19.4767L20.2618 19.4803L20.9401 19.6234L22.2141 19.8008L22.2159 19.8032L22.2412 19.8062L22.6172 19.8925L22.6214 19.8986L22.657 19.9052L22.8496 19.9776L22.861 19.9945L22.9129 20.0102L23.2062 20.2027V20.2033H23.2074L23.4651 20.3759L23.6534 20.4556L23.9823 20.5347L24.3505 20.6143L24.3535 20.6179L24.3776 20.6216L24.7476 20.7399L24.753 20.7477L24.7856 20.7549L25.3945 21.0464L25.4 21.0549L25.4211 21.0609L25.8375 21.3156L25.8453 21.3295L25.8689 21.3379L27.1441 22.359L27.4881 22.5817L27.928 22.8509L27.9304 22.8551L27.9395 22.8581L28.2937 23.0989L28.3016 23.1152L28.3251 23.1237L28.5707 23.3452L28.5804 23.3669L28.6009 23.3771L29.129 24.0144L29.1344 24.0289L29.1441 24.0344L29.4362 24.4508L29.4428 24.4713L29.4531 24.4773L29.5774 24.6976L29.584 24.723L29.5925 24.729L29.9009 25.4484L30.1948 26.0675L30.199 26.0875L30.2044 26.0911L30.3293 26.4206V26.423H30.3299L30.3499 26.4761L30.3541 26.4978L30.3583 26.5009L30.3921 26.6228L30.3945 26.6373L30.3963 26.6385L30.4856 27.0344L30.4923 27.0911L30.4935 27.0923L30.5056 27.5582V27.566V27.5685V27.6065V27.6083L30.5025 27.7972L30.5019 27.7978L30.4971 27.8455L30.447 28.111L30.4434 28.114L30.4386 28.1424L30.3981 28.2685L30.3975 28.2691L30.3969 28.2721L30.3354 28.4502L30.3185 28.5365L30.2829 28.7429L30.269 28.875L30.266 28.8774L30.2605 28.9173L30.2436 28.9758V28.9788L30.3197 29.0549V29.082L29.9866 29.4152L29.6534 29.082V29.0549L29.7452 28.9631L29.7464 28.9215V28.9209L29.747 28.9155L29.75 28.8467L29.7427 28.7217L29.7421 28.7048V28.7006L29.7458 28.4773L29.747 28.4767L29.7596 28.3946L29.7928 28.2884L29.7946 28.2872L29.7958 28.2812L29.8659 28.0838L29.8996 27.9861L29.9371 27.7706L29.934 27.6089V27.6065V27.5721L29.9196 27.1357L29.8387 26.77L29.8097 26.6662L29.7952 26.627L29.6673 26.318L29.3487 25.7199L29.3432 25.6982L29.336 25.694L29.0342 24.9825L28.9274 24.7863L28.6534 24.3916L28.1495 23.7821L27.9334 23.5926L27.6076 23.3717L27.1634 23.1273L27.1592 23.1207L27.1453 23.1164L26.7838 22.8829L26.7777 22.8708L26.7584 22.8642L25.4893 21.843L25.1048 21.6077L24.5303 21.3313L24.2056 21.2227L23.8532 21.1629V21.1623H23.8526L23.4881 21.0977L23.4826 21.0905L23.4271 21.0802L23.1803 20.9831L23.1688 20.9668L23.1211 20.9523L22.8345 20.764H22.8339L22.5689 20.5884L22.4374 20.5328L22.1085 20.458L20.8369 20.3029L20.8351 20.3011L20.8103 20.2981L20.1374 20.1593L19.657 20.1104L18.8846 20.1038L18.6939 20.1134L18.4923 20.1297L18.0246 20.1864H18.0216V20.187L17.8176 20.2106L17.8055 20.2118H17.8049L17.3227 20.2534L17.3088 20.254H17.3082L17.0861 20.2649H17.0783L16.6703 20.2752L16.6613 20.2758L16.6245 20.2733L16.412 20.251V20.2504L16.4048 20.2498L16.0698 20.2045L16.0686 20.2027L16.0469 20.2009L15.8948 20.1671L15.8846 20.1545L15.8146 20.1364L15.587 20.0102L15.4585 19.7905L15.7108 19.5383L15.7433 19.5401L16.0016 19.5733L16.0022 19.5745L16.0173 19.5763L16.1423 19.5998L16.4374 19.6023L16.6341 19.5878L16.6522 19.5872V19.5866L17.0572 19.5769L17.2702 19.5673L17.7421 19.5268L17.9401 19.5039H17.9407L18.4144 19.4453L18.4301 19.4441L18.4307 19.4435L18.642 19.4266L18.654 19.426H18.6546L18.8598 19.4158H18.8767H18.8797Z\" fill=\"black\"/>\n      <path d=\"M21.5893 10.0288L22.2042 10.0753L22.2054 10.0765L22.2332 10.0789L22.4498 10.1163L22.6333 10.1459L22.6369 10.1495L22.6743 10.1555L23.3231 10.3511L23.6822 10.4506L24.0389 10.4742L24.85 10.3873L24.862 10.3867L24.8626 10.3861L25.2869 10.3553L25.311 10.3547H25.3195L26.3527 10.3818V10.3824L26.3774 10.3837L26.8578 10.4337L26.8584 10.435L26.8747 10.4362L27.6472 10.5641L27.6484 10.5659L27.6665 10.5683L28.0974 10.6715L28.1016 10.6776L28.1366 10.6842L28.509 10.8321L28.5126 10.8375L28.5301 10.8417L29.2253 11.1881L29.5464 11.3239L30.4287 11.584L30.4335 11.5907L30.4619 11.5961L30.8113 11.7488L30.815 11.7548L30.8313 11.759L31.2175 11.9672L31.2211 11.9733L31.2332 11.9769L31.8801 12.3843L31.8813 12.3873L31.8868 12.3885L32.547 12.8345L33.4197 13.3951L33.4233 13.4024L33.4354 13.4066L33.8886 13.747L33.8952 13.7596L33.9115 13.7657L34.1608 13.998L34.1668 14.0119L34.1801 14.0179L35.8886 15.9624L35.891 15.969L35.8964 15.9721L36.3171 16.4935L36.3201 16.5013L36.3255 16.5044L36.3907 16.5925L36.3943 16.6039L36.401 16.6075L36.5156 16.7856L36.5186 16.7964L36.5247 16.8001L36.9344 17.5194L36.9351 17.5212L36.9357 17.5219L37.3128 18.1905L37.3159 18.2032L37.3213 18.2062L37.5132 18.5967L37.5144 18.6009L37.5156 18.6015L37.5657 18.7065L37.5693 18.7234L37.5748 18.7264L37.9073 19.5629L38.3364 20.3843L38.3388 20.3933L38.3418 20.3957L38.5398 20.8091L38.55 20.8544L38.5591 20.861L38.8264 21.8604L38.8276 21.8664L38.8282 21.8677L38.859 21.989V21.9896L38.9127 22.1905L39.1239 22.7331L39.127 22.7476L39.13 22.75L39.3382 23.3794L39.3424 23.4066L39.3466 23.4096L39.5422 24.2817L39.9145 25.3776L39.92 25.4114L39.9248 25.415L39.9942 25.753L39.999 25.7964L40.0002 25.7976L40.0256 26.246L40.0588 26.7156L40.0594 26.7264L40.0805 27.3088L40.0811 27.3203V27.3281L40.0431 28.6594L40.0425 28.6721L40.0262 28.8888L40.0232 28.8918L40.0129 28.954L39.967 29.094L39.9562 29.1012L39.9459 29.1404L39.8156 29.3734L39.786 29.3903L39.7667 29.4355L39.7021 29.4977L39.515 29.5731L39.4824 29.5713L39.4305 29.5647L39.4052 29.5363L39.2434 29.4518L39.2133 29.4084L39.1662 29.2581L39.1674 29.234L39.1529 29.1827L39.1505 29.1694L39.1215 29.0916L39.0684 29.0384V29.0077L39.4016 28.6745L39.4782 28.7512L39.48 28.6468L39.4903 27.3221L39.4776 26.7488L39.4498 26.2835L39.4154 25.8574L39.3491 25.5526L38.9845 24.4537L38.9809 24.4313L38.9773 24.4283L38.7673 23.5569L38.5621 22.9407L38.3587 22.3843L38.3539 22.3595L38.3497 22.3565L38.2923 22.1386L38.2917 22.1338L38.2905 22.1332L38.2603 22.0113L38.0008 21.0384L37.8162 20.6552L37.3672 19.8351L37.3593 19.8055L37.3503 19.7989L37.0165 18.9497L37.0141 18.9365L37.0111 18.934L36.9779 18.8369L36.8041 18.4627L36.4402 17.7989L36.034 17.0903L35.9248 16.9256L35.8681 16.8477L35.4535 16.3372L33.7606 14.4084L33.5307 14.2008L33.0968 13.8755L32.2296 13.3179V13.3173H32.229L31.5603 12.8791L30.9272 12.4772L30.5669 12.2792L30.2459 12.1483L29.3599 11.896L29.3557 11.8906L29.331 11.8858L28.9815 11.7433L28.9779 11.7385L28.9628 11.7349L28.27 11.3903L27.932 11.2557L27.5373 11.161L26.7926 11.0529L26.3303 11.0288L25.3183 11.001L24.9151 11.0306L24.0835 11.1248L24.0455 11.1272L24.0244 11.1266L23.6049 11.0994L23.6025 11.0964L23.541 11.0885L23.1402 10.9787L23.139 10.9769L23.1318 10.9757L22.4848 10.7741L22.3249 10.7283L22.1396 10.6963L21.5524 10.6486H21.3219L20.8862 10.6576L20.6593 10.6842L20.1155 10.7741L19.9001 10.8133L19.8964 10.8139L19.8958 10.8146L19.3895 10.9027L19.3708 10.9039L19.3696 10.9051L19.1445 10.9298L19.1197 10.931V10.9316L18.6943 10.9413H18.6876H18.684L18.4885 10.9389V10.9383H18.4734L17.8711 10.8936L17.7739 10.7886L17.7932 10.5339L17.885 10.441L18.4879 10.4307H18.4891L18.6707 10.4283L19.0781 10.3782H19.0787L19.2953 10.3493L19.7908 10.2545L20.002 10.2074L20.0135 10.2062L20.0147 10.205L20.5645 10.1042L20.5796 10.103L20.5802 10.1018L20.8252 10.0692L20.8403 10.0686L20.8409 10.068L21.2911 10.0294L21.3183 10.0282L21.5651 10.0276H21.5657L21.5893 10.0288Z\" fill=\"black\"/>\n      <path d=\"M18.4809 10.0912L19.216 10.1443L20.9324 10.1847H20.9342L21.5805 10.2034L22.3946 10.2167H22.3995L23.5582 10.2553L23.5594 10.2559L23.6035 10.2608L23.6385 10.2674L23.6409 10.265L23.6439 10.2686L23.6891 10.2771L23.8521 10.4762L23.974 10.5981L23.6409 10.9313L23.5413 10.8317L22.4001 10.8697H22.3892H22.3886L21.5721 10.8691H21.5648L20.9203 10.8534H19.1991L19.1822 10.8528L18.4532 10.8178L17.77 10.8462L17.8255 10.0996L18.449 10.0906H18.455L18.4809 10.0912Z\" fill=\"black\"/>\n      <path d=\"M10.6102 10.0015L11.0966 10.0093L11.2734 10.0117L11.3247 10.0123L11.3265 10.1366L11.3283 10.1397L11.3331 10.2495L11.335 10.2815L11.3863 10.8222L11.2656 10.821H11.2583L11.0827 10.8162L10.5993 10.8108L10.4436 10.8096L9.91432 10.8089L9.75922 10.8096L9.03623 10.8192L8.86483 10.8258L8.35427 10.8518H8.35126L8.19797 10.859H8.19616L7.71396 10.8796L7.5836 10.8868L7.56852 10.8874L6.9101 10.8995H6.90286H6.72784H6.72362L6.01149 10.8922L5.83768 10.8916L5.29151 10.8989L5.10624 10.9073L4.64818 10.9321L4.45204 10.9465L3.73388 11.0214L3.52145 11.0546L3.51119 11.0552L3.51058 11.0558L3.06822 11.1125L2.84673 11.1505L2.81837 11.1529L2.81716 11.1548L2.45023 11.1861L2.30962 11.2103L2.26496 11.2145L2.0127 10.9616L2.17564 10.7257L2.31988 10.6713H2.32048V10.6707L2.67292 10.5362L2.70069 10.5307L2.70431 10.5259L2.92881 10.4637L2.9445 10.4613L2.94631 10.4595L3.38505 10.3593L3.40014 10.3581L3.40135 10.3563L3.62163 10.3153L3.6349 10.3141L3.63551 10.3135L4.36212 10.2048L4.38324 10.203L4.38445 10.2018L4.58843 10.1831H4.58964V10.1825L5.05071 10.1397L5.06399 10.1391V10.1385L5.2553 10.127L5.27039 10.1264L5.27099 10.1258L5.82621 10.1125H5.83466L6.00968 10.1119L6.71939 10.098H6.72784H6.89561L7.54438 10.0763L7.67413 10.0697H7.67775L8.16055 10.0497H8.16115L8.31444 10.0431H8.31565V10.0425L8.82923 10.0208H8.83164L9.00907 10.0135H9.01993L9.75017 10.0033H9.7562H9.75681H9.91432L10.4436 10.0027L10.5993 10.0015H10.6035H10.6102Z\" fill=\"black\"/>\n      <path d=\"M2.42186 19.3833L3.01088 19.3845L3.28728 19.3839H3.28788L3.56549 19.3833H3.5661H3.58118L3.86 19.3942H3.86785L4.44781 19.4286L4.66748 19.437V19.4376H4.67714L5.14968 19.469L5.39229 19.4756L5.83345 19.4811L6.05433 19.4817L6.70912 19.472L6.91371 19.4654H6.91673L7.56791 19.4479H7.57635L7.78879 19.4461H7.7918H7.79422L8.00665 19.4473L8.21124 19.4479H8.83827H8.84069L9.08028 19.4497L9.5148 19.4509H9.52747L9.78094 19.4593L10.2535 19.4732V19.4738H10.2631L10.4973 19.4865L10.9885 19.5064H10.9891L11.3018 19.5197V19.5203H11.3072L11.8208 19.5505L12.102 19.5607V19.5613H12.1111L12.9523 19.6138L13.2112 19.6265V19.6271H13.2161L13.4732 19.644L13.7091 19.6579L14.7139 19.6742L15.7435 19.6573H15.7496H15.755L17.6035 19.6857L17.612 19.6863L18.1503 19.7086L18.1515 19.7098L18.2022 19.7152L18.5251 19.7846L18.5383 19.8009L18.612 19.8239L18.6343 19.8015L18.9674 20.1347L18.6343 20.4678L18.5214 20.3549L18.5106 20.3513L18.4436 20.3465L18.1261 20.3278L17.6011 20.323L15.7598 20.3718L14.7254 20.4032H14.7152L13.6964 20.4062H13.6952H13.6856L13.4381 20.3996H13.4327L13.1744 20.3887H13.1702L12.9125 20.3742L12.0718 20.3447H12.0634L11.7834 20.3278L11.2722 20.3103L10.9626 20.3036H10.962H10.9541L10.4623 20.2819L10.2275 20.2747H10.2239L9.75499 20.2542L9.50695 20.2493L9.07666 20.2433L8.84129 20.2451H8.83827H8.21124L8.00665 20.2457L7.79784 20.2469L7.59144 20.2517L6.94328 20.2753H6.94087L6.73266 20.2825H6.72542L6.06338 20.2934H6.05795L5.83164 20.2946H5.82983H5.82862L5.38263 20.2928L5.36211 20.2922L5.10744 20.2783H5.10563L4.62403 20.2487L4.62343 20.2475L4.60412 20.2469L4.39229 20.2228L3.825 20.1896L3.55101 20.1793H3.54558L3.26736 20.1648L2.99881 20.151L2.41703 20.1455L2.40677 20.1449L2.23297 20.1389L2.22693 20.0441L2.22029 19.947L2.21064 19.7967L2.20641 19.7351L2.19796 19.6054L2.1877 19.4449L2.18408 19.3917L2.40617 19.3833H2.42065H2.42186Z\" fill=\"black\"/>\n      <path d=\"M27.4016 28.6942L27.4221 28.7744L27.4245 28.7931L27.4264 28.7949L27.4481 28.909L27.4493 28.9205L27.4505 28.9217L27.509 29.2965L27.5096 29.3025L27.5102 29.3031L27.786 31.2958L27.7878 31.317L27.7885 31.3176L27.8416 32.04L27.8428 32.0641L27.8422 32.0695L27.8325 32.7243H27.8319L27.8307 32.7497L27.8096 32.9615L27.535 33.2083L27.2604 32.9603L27.2393 32.7509L27.2381 32.734V32.7334L27.2073 32.081L27.165 31.3695L26.9164 29.399L26.8373 29.0792L26.8011 29.0056L26.7872 28.9464L26.7764 28.938L26.7559 28.8583L26.7456 28.775L27.0787 28.4419L27.4016 28.6942Z\" fill=\"black\"/>\n      <path d=\"M41.6513 29.034L41.816 29.11L41.8335 29.1305L41.8396 29.1468L41.8504 29.1522L41.8927 29.2126L41.912 29.2741L41.9301 29.2874L41.9651 29.3924L41.976 29.457L41.979 29.46L41.9898 29.5934L42.0188 29.8897L42.02 29.9169V29.9175L42.0248 31.0388V31.04L42.0236 31.0665L41.9536 31.8408V31.842L41.8884 32.5059L41.8794 32.7075L41.8782 32.7262L41.8233 33.2283L41.8202 33.3514L41.5716 33.5934L41.3224 33.3508L41.3193 33.2247L41.2777 32.7189L41.2765 32.693L41.2771 32.6767L41.288 32.4673L41.2886 32.4667V32.4642L41.3326 31.7901L41.3332 31.7895L41.3338 31.7732L41.4274 31.0171L41.4588 29.9163L41.4545 29.6556L41.4304 29.5705L41.405 29.5041L41.3815 29.4667L41.3664 29.4154L41.2554 29.3043L41.5885 28.9712L41.6513 29.034Z\" fill=\"black\"/>\n      <path d=\"M11.5841 8.13565L11.5636 8.23161L11.5214 8.32636L11.5244 8.35412L11.5256 8.36981V8.37042L11.5515 8.81037L11.5521 8.82847L11.5515 8.84115L11.5063 9.92926L11.496 10.161L11.5775 10.2419L11.4846 10.3348L11.4761 10.4314L11.4767 10.441L11.4725 10.47L11.4671 10.5303L11.4604 10.537L11.4483 10.5822L11.2166 10.7591L11.1653 10.8055L10.8629 10.5219L10.8448 10.2431L10.8442 10.2214L10.8497 10.1628L10.9016 9.88098L10.9511 8.81399V8.81157L10.9764 8.36981L10.9788 8.368L10.9855 8.3155L11.0096 8.22558L11.0186 8.21833L11.0295 8.17428L11.0615 8.11332L11.0862 8.09824L11.1031 8.05539L11.1828 7.97331L11.3506 7.9021L11.5841 8.13565Z\" fill=\"black\"/>\n      <path d=\"M18.1106 8.19583L18.0931 8.25739L18.0858 8.35395L18.0871 8.35938L18.0961 8.42637L18.0985 8.42878L18.1896 10.1379L18.1903 10.1608L18.189 10.1886L18.1806 10.3232L17.7738 10.7022L17.3671 10.322L17.3586 10.1898L17.3574 10.1608L17.358 10.1385L17.4431 8.54104L17.3858 8.4837L17.4528 8.41732L17.46 8.3618L17.4781 8.29239L17.4884 8.28455L17.4998 8.23687L17.5602 8.11617L17.7038 8.02806L17.7497 7.97133L17.7847 7.96409L17.8052 7.95926L17.8662 7.95142L18.1106 8.19583Z\" fill=\"black\"/>\n      <path d=\"M14.2334 7.85838L14.5067 7.88192L14.8079 7.89822L16.8525 7.88252H16.855H16.9479H16.9497L17.4953 7.88675H17.5737L17.587 7.88735L17.9817 7.90727L17.9829 7.90787L18.0203 7.91149L18.0801 7.92236L18.0867 7.9302L18.1428 7.94167L18.2943 8.00805L18.2985 8.00926L18.2913 8.09013L18.3148 8.206L18.3166 8.21626L18.3939 8.59828L18.3921 8.60009L18.313 8.58862L18.1271 8.53189L17.9708 8.50292L17.9364 8.49689L17.5671 8.48361H17.4953L16.9503 8.48784H16.9479H16.8568L14.8037 8.50654H14.8006L14.7837 8.50594L14.4675 8.48844L14.4591 8.48784L14.2044 8.46611L13.724 8.49749L13.7029 8.49809H13.7017L11.6124 8.49025L11.4651 8.4993L11.3329 8.63147L11.2575 8.55603L11.1784 8.57051L10.8857 8.27782L11.0795 8.00202L11.1422 7.97908L11.1495 7.97788L11.1507 7.97667L11.3052 7.92477L11.3879 7.91089L11.3897 7.90908L11.5918 7.90063H11.6015H11.6021L13.6932 7.88554L14.1893 7.85778L14.2074 7.85718L14.2334 7.85838Z\" fill=\"black\"/>\n      <path d=\"M14.4751 5.84906L14.4648 5.92932L14.4509 5.98122L14.4437 6.03675L14.4443 6.03856L14.4449 6.05847V6.06451L14.4358 6.41695L14.4382 6.42781L14.536 6.52498L14.4002 6.66077L14.39 6.82492L14.3888 6.82552L14.3863 6.85328L14.3556 7.05847L14.3477 7.06511L14.3338 7.13331L14.3055 7.19969L14.0242 7.38376L13.7183 7.07718L13.7195 7.05123L13.7237 6.99812L13.7201 6.80923V6.80259L13.7207 6.78629L13.7297 6.60343L13.7394 6.31436L13.7406 6.31315L13.7478 6.24978L13.842 5.84845L13.8486 5.84302L13.8559 5.80561L13.8842 5.73319L14.1685 5.54248L14.4751 5.84906Z\" fill=\"black\"/>\n      <path d=\"M14.3673 5.64954L14.3359 5.74489L14.3413 5.79679V5.7974V5.92775L14.3389 5.96819L14.3304 6.04121L14.3353 6.32606V6.3321L14.3323 6.37857L14.3244 6.43831L14.3027 6.71109L14.2834 6.7292L14.1886 6.94284L14.1464 6.98086L13.9279 7.06535L13.6032 6.75756L13.6002 6.70144L13.5996 6.68213V6.66704L13.6105 6.41598L13.6062 6.38038L13.6026 6.3321L13.6038 6.30192L13.6298 5.99293L13.631 5.99172L13.6334 5.96517L13.6497 5.8674L13.6527 5.86499L13.6563 5.83723L13.6907 5.70928L13.698 5.70325L13.7052 5.66704L13.701 5.64954L13.7209 5.62962L13.7239 5.62359L13.7269 5.60971L13.7306 5.60669L13.7342 5.59884L13.7795 5.56927L13.7885 5.56203L14.0341 5.31641L14.3673 5.64954Z\" fill=\"black\"/>\n      <path d=\"M14.4637 5.72756L14.4685 5.84584V5.84826L14.48 6.1482L14.5083 6.51512L14.5095 6.5459L14.5011 6.62617L14.4751 6.74868L14.4607 6.76014L14.4395 6.84524L14.3804 6.95447L14.3406 6.97801L14.3134 7.04198L14.2561 7.09629L14.2181 7.13673L14.1662 7.15966L14.1456 7.19527L14.1354 7.2013L13.9712 7.24657L13.6514 6.92671L13.6954 6.76437L13.7033 6.75049L13.7105 6.74687L13.7141 6.73359L13.7214 6.72273L13.7274 6.70342L13.7389 6.64246L13.7353 6.5628L13.7347 6.5459L13.7359 6.51693L13.7642 6.14035L13.769 6.13613L13.7847 6.04681L13.8143 5.96413L13.789 5.93878L13.8433 5.88447L13.8855 5.76799L13.9145 5.66298L14.1837 5.46021L14.4637 5.72756Z\" fill=\"black\"/>\n      <path d=\"M14.4389 5.05447L14.4811 5.01283L14.4908 5.02188L14.5777 4.94162L14.9458 5.31035L14.9416 5.36467L14.9271 5.46002L14.9494 5.55537L14.9585 5.62961V5.63021L14.9627 6.17879V6.1812L14.9591 6.22828L14.8957 6.67547H14.8951L14.8945 6.68151L14.871 6.82273L14.8378 6.85109L14.8257 7.20957L14.8197 7.215L14.7509 7.41959L14.708 7.47571L14.6664 7.49683L14.6453 7.53968L14.5813 7.59038L14.3616 7.66702L14.2041 7.5258L14.1866 7.5427L13.8988 7.26087L13.8975 7.18905V7.18301V7.17577L13.9048 6.88851L13.6785 6.69237L13.6399 6.42381L13.6362 6.37312L13.6368 6.35984L13.6567 5.85109H13.6574L13.658 5.83842L13.6791 5.56201L13.6839 5.55719L13.699 5.46968L13.7352 5.36769L13.9416 5.22345L13.9253 5.20716L14.2584 4.87402L14.4389 5.05447Z\" fill=\"black\"/>\n      <path d=\"M13.3623 1.63804L13.7111 1.67365L14.1631 1.69598L14.1643 1.69718L14.2047 1.70141L14.4558 1.7515L15.6797 1.9072L15.9265 1.91867L15.9271 1.91927L15.9591 1.92229L16.6314 2.03152L16.6393 2.04058L16.7117 2.05808L16.9072 2.15584L17.1106 2.20231V2.20292H17.113L17.2935 2.24697L17.3146 2.27353L17.4154 2.31336L17.6574 2.53846L17.7129 2.6664L17.7407 2.68934L17.7642 2.81426L17.7696 2.86797V2.87522L17.766 3.02247L17.7648 3.02368L17.7557 3.08886L17.7491 3.1136L17.7425 3.17516L17.7225 3.42742L17.7213 3.42923L17.7183 3.4582L17.6791 3.6664L17.6706 3.67365L17.6568 3.7352L17.6212 3.81245L17.6127 3.81788L17.6067 3.83961L17.5958 3.85832L17.5862 3.86315L17.5807 3.88004L17.553 3.91867L17.4757 4.0617L17.4588 4.07196L17.4474 4.10515L17.326 4.25904L17.2832 4.27956L17.2627 4.31879L17.2494 4.32844L17.1969 4.3731L17.1722 4.38216L17.1637 4.39785L17.0859 4.44854L17.0611 4.45578L17.0545 4.46665L16.9881 4.50044L16.9808 4.50165L16.9796 4.50406L16.7497 4.6133L16.7286 4.62416L16.67 4.63804L16.6616 4.6489L16.4305 4.70684L16.4208 4.70805L16.4196 4.70925L16.206 4.75693L16.1709 4.76055L16.1691 4.76296L16.0267 4.77866L15.9905 4.78047H15.9851L15.9573 4.77986L15.2814 4.76779V4.76719L15.2548 4.76598L15.2325 4.76357L15.2307 4.76176L15.2005 4.75874L15.0261 4.72072L14.7738 4.69537H14.7582L14.3333 4.69416H14.317L13.909 4.69477H13.9084H13.865L13.0394 4.6996H13.037H13.0195L12.8125 4.68692L12.8113 4.68572L12.7793 4.6827L12.7002 4.66882L12.5041 4.66942L12.139 4.68209H12.1281L12.0804 4.67847L11.9983 4.6652L11.9911 4.67244L11.9808 4.66218L11.9736 4.66097L11.9404 4.62175L11.8976 4.57829L11.7521 4.47811L11.737 4.43647L11.7328 4.41354L11.658 4.33931L11.7527 4.24516L11.4811 4.10696L11.4781 4.10213L11.4667 4.09911L11.2325 3.95669L11.2241 3.9416L11.1999 3.93255L11.0828 3.83056L11.0509 3.75995L11.0165 3.73701L10.9917 3.67425L10.9766 3.597L10.9742 3.59519L10.9712 3.527V3.51613L10.9742 3.4763L10.9971 3.34233L11.0321 2.99833L11.034 2.99652L11.037 2.96876L11.0575 2.87703L11.078 2.86073L11.1106 2.77081L11.212 2.64709L11.2271 2.63985L11.2349 2.62295L11.2548 2.60424L11.4105 2.45035L11.4703 2.3731L11.5125 2.28922L11.5409 2.27232L11.5614 2.22163L11.7225 2.05747L11.7678 2.03877L11.7847 2.0098L11.7992 2.00135L11.8849 1.94341L11.9 1.93858L11.9042 1.93134L12.1118 1.81185L12.186 1.79193L12.1957 1.77926L12.5385 1.70684L12.661 1.67244L12.7292 1.66278L12.7304 1.66158L13.0358 1.65313L13.3146 1.63683L13.3321 1.63623L13.3623 1.63804ZM12.7871 2.22645L12.6857 2.25542L12.6676 2.25784L12.6658 2.26025L12.3586 2.32784L12.1963 2.42078L12.1106 2.47872L12.1028 2.48113L11.9694 2.597L11.9271 2.66339L11.9054 2.67546L11.8927 2.70684L11.7938 2.80762L11.7853 2.81125L11.7817 2.81969L11.6031 2.97962L11.5988 2.98083L11.5493 3.05265L11.5379 3.08886L11.4739 3.42078L11.4582 3.51131L11.5101 3.55717L11.7057 3.68934L12.1082 3.87099L12.4636 4.03454L12.4703 4.0448L12.4956 4.05264L12.5687 4.10032L12.7075 4.09248H12.7117L12.8173 4.08765L12.8312 4.08704L12.8535 4.08825L13.0466 4.10213L13.8607 4.09368H13.8638H13.9084H13.909H14.317H14.3333L14.7582 4.09308H14.7883H14.7901L14.8107 4.09368L15.0967 4.11299L15.0973 4.1142L15.1172 4.11541L15.3122 4.14257L15.3128 4.14377L15.9591 4.13895L15.9748 4.13834L16.0865 4.12929L16.279 4.08644H16.2796L16.4818 4.03575L16.483 4.03333L16.7123 3.93315L16.7563 3.91082L16.8131 3.87401L16.868 3.83357L16.947 3.74003L17.0171 3.60726L17.034 3.597L17.0448 3.56441L17.0756 3.52398L17.078 3.52036L17.0786 3.51975L17.0865 3.5101L17.0877 3.50527L17.1003 3.48717L17.1317 3.3387L17.1335 3.3375L17.1353 3.32362L17.2041 3.07437L17.2047 3.07377L17.2053 3.07015L17.2198 3.02247V3.01704L17.2168 2.89694L17.2144 2.88367L17.0895 2.77141L16.9869 2.74546L16.7582 2.70443L16.7509 2.69537L16.6839 2.67968L16.4993 2.58795L15.8789 2.50527L15.6284 2.48415L15.6278 2.48354L15.6151 2.48234L14.3689 2.31094L14.3683 2.30974L14.3556 2.30853L14.1154 2.26206L13.6767 2.24456H13.6743L13.3164 2.22585H13.3152L13.0478 2.21076L12.7871 2.22645Z\" fill=\"black\"/>\n      <path d=\"M14.5098 4.96472V4.96955L14.5074 5.08965L14.6383 5.18138L14.6534 5.22181L14.6655 5.2882L14.6703 5.29303L14.6812 5.38597L14.6836 5.42399L14.5973 5.51029L14.5979 5.55314V5.55796L14.5931 5.60926L14.4054 6.53201L14.4029 6.53382L14.4011 6.54951L14.3728 6.6509L14.3704 6.67021L14.3667 6.67323L14.3661 6.67565L14.3595 6.71849L14.3034 6.89894L14.2545 7.07516L13.9636 7.29423L13.6606 6.99128L13.6727 6.90739L13.6884 6.85247L13.7651 6.56762L13.8224 6.12827L13.8514 5.78488L13.852 5.77945L13.8972 5.34795L13.8773 5.32803V5.27975L13.9123 5.13189L13.928 5.0993L13.9558 4.92067L14.231 4.6853L14.5098 4.96472Z\" fill=\"black\"/>\n      <g className=\"animate\">\n        <path d=\"M32.2922 44.2462L32.2476 44.2909L32.2415 44.3108L32.2403 44.3235L32.2397 44.3295L32.2548 44.3319L32.2566 44.3343L32.2759 44.3361L32.565 44.408L32.5668 44.4104L32.5813 44.4122L33.11 44.5775L33.3345 44.6131L33.521 44.6144L33.7171 44.6107L33.906 44.5703L34.1154 44.5051L34.5523 44.3186L34.6181 44.3054L34.6236 44.2981L34.839 44.2661L34.8746 44.2637L35.1076 44.4967L35.0068 44.6886L34.8269 44.8117L34.7956 44.822L34.7871 44.8352L34.3435 45.0459L34.3333 45.0477L34.3309 45.0513L34.1052 45.1478L34.0744 45.1539L34.0702 45.1605L33.845 45.2269L33.8155 45.2317L33.8125 45.2354L33.5886 45.2782L33.5234 45.2842L33.5035 45.2836L33.2868 45.2716V45.271L33.2693 45.2698L32.9929 45.2378L32.9869 45.2317L32.9102 45.2166L32.3701 45.0048L32.3695 45.0036L32.3665 45.003L32.0919 44.8889L31.8963 44.8087L31.8825 44.7876L31.8306 44.7688L31.7841 44.7308L31.6899 44.5311L31.7074 44.458L31.7099 44.4393L31.7231 44.3929L31.7135 44.3337L31.626 44.2462L31.9591 43.9131L32.2922 44.2462Z\" fill=\"#0069BF\"/>\n        <path d=\"M34.1029 34.8018L34.1089 34.8127L34.1445 34.9557L34.1095 35.0969L34.1023 35.1114L34.0299 35.1548L34.022 35.1681L34.0148 35.1723L34.0105 35.1862L33.2954 36.1911L32.9423 36.7656L32.8615 36.9038L32.6376 37.2936L32.6364 37.2943L32.6358 37.2967L32.5736 37.4005L32.5646 37.4053L32.5597 37.421L32.372 37.6769L32.2574 37.7348L32.226 37.7752L32.2157 37.7777L32.1512 37.7861L31.8965 37.5314L31.9043 37.4687L31.908 37.4548L31.92 37.4451L31.9363 37.3872L32.0993 37.1144V37.1138L32.1608 37.0112L32.3871 36.6232L32.4698 36.4819L32.4716 36.4813L32.4728 36.4771L32.8343 35.8941L32.8422 35.8893L32.847 35.876L33.5066 34.9877L33.4746 34.9557L33.8078 34.6226L34.1029 34.8018Z\" fill=\"#0069BF\"/>\n        <path d=\"M33.9416 35.2128L33.9295 35.2242L33.9488 35.2435L33.9446 35.2906L33.9379 35.3292L33.9198 35.3443L33.883 35.4518L33.6241 35.7837L33.6223 35.7843L33.6217 35.7861L33.3206 36.1615L32.9736 36.6775L32.7841 36.9997L32.6102 37.3226L32.402 37.8271L32.3495 37.9846L32.2143 38.5332L32.192 38.6388L32.1872 38.6425L32.1818 38.6738L32.0677 38.9967L32.0568 39.0046L32.0466 39.042L31.8746 39.3401L31.8643 39.3455L31.8577 39.3649L31.5016 39.8464L31.4883 39.8531L31.4817 39.8706L31.2475 40.118L31.084 40.1886L30.8589 39.9635L30.8897 39.8495L31.0623 39.5543L31.0665 39.5519L31.0695 39.5435L31.393 39.0534L31.539 38.7867L31.6332 38.5L31.6549 38.4023L31.7756 37.838L31.7762 37.8374L31.7768 37.8338L31.8203 37.6479L31.8263 37.6437L31.8323 37.6105L32.0393 37.074L32.0424 37.0722L32.0448 37.0625L32.2035 36.704L32.2119 36.6986L32.218 36.6763L32.4123 36.3377L32.4238 36.3305L32.431 36.3087L32.813 35.7873L32.8221 35.7825L32.8269 35.7692L33.1486 35.3932L33.1588 35.3884L33.1637 35.3769L33.3013 35.2381L33.2753 35.2128L33.6084 34.8796L33.9416 35.2128Z\" fill=\"#0069BF\"/>\n        <path d=\"M31.6893 39.1322L31.6278 39.1938L31.6036 39.2849L31.5451 39.3863L31.4141 39.676L31.2892 39.9976L31.2421 40.2976L31.2307 40.6892L31.2457 40.9837L31.3489 41.4478L31.5077 42.061L31.5149 42.1153L31.5179 42.1183L31.5662 42.6403L31.568 42.6717L31.5674 42.6874L31.5572 42.9143L31.5559 42.9149L31.5535 42.9487L31.5052 43.2487L31.498 43.2547L31.4871 43.3145L31.4527 43.4008L31.4244 43.4201L31.3984 43.4889L31.2904 43.6132L31.0955 43.7019L30.8372 43.4436V43.4297L30.8462 43.2644L30.8492 43.262L30.8613 43.1859L30.8818 43.1219L30.9205 42.8799L30.9126 42.7073L30.8299 42.2209L30.6791 41.6114L30.676 41.5884L30.6736 41.5866L30.5855 41.0894L30.5813 41.0399L30.5801 41.0393L30.5698 40.7037V40.6929L30.571 40.6657L30.606 40.2396L30.6084 40.2378L30.6139 40.1944L30.696 39.8455L30.7044 39.8383L30.7153 39.7906L30.877 39.437L30.8879 39.4303L30.8957 39.4038L31.0502 39.1594L31.0231 39.1322L31.078 39.0779L31.0828 39.0598L31.1323 39.023L31.3562 38.7991L31.6893 39.1322Z\" fill=\"#0069BF\"/>\n        <path d=\"M34.0395 34.8699L34.0431 34.8681L34.2688 35.0938L34.2676 35.0981L34.3352 35.1657L34.0021 35.4988L33.6689 35.1657L33.8343 35.0003L33.856 34.9677L33.8796 34.955L34.0021 34.8325L34.0395 34.8699Z\" fill=\"#0069BF\"/>\n        <path d=\"M34.3579 35.0936L34.2994 35.2819L34.2541 35.3477L33.9801 35.4919L33.647 35.1588L33.7055 34.9705L33.7508 34.9047L34.0248 34.7605L34.3579 35.0936Z\" fill=\"#0069BF\"/>\n        <path d=\"M34.2053 34.9907L34.2994 35.0698L34.3103 35.0927L34.3338 35.1036L34.5939 35.4053L34.6012 35.4253L34.6151 35.4325L35.1516 36.202L35.1564 36.2176L35.1649 36.2219L35.5245 36.8121L35.5511 36.9056L35.5704 36.9207L35.6229 37.1326L35.6253 37.1519L35.6277 37.1537L35.6742 37.3981L35.6778 37.4337L35.679 37.4355L35.6977 37.6854L35.7146 37.7288L35.7249 37.7825L35.7466 37.8218L35.5215 38.0469L35.5022 38.0463L35.4805 38.0444L35.4726 38.0354L35.3628 37.9992L35.2922 37.9461L35.2614 37.8839L35.2192 37.858L35.0894 37.6009L35.0876 37.5948L35.0858 37.5936L34.9868 37.3866L34.8794 37.2219L34.8734 37.2008L34.8637 37.1953L34.5348 36.5924L34.0568 35.7964L33.8492 35.4615L33.8486 35.459L33.8474 35.4584L33.7128 35.2388L33.7086 35.2237L33.6108 35.1259L33.6827 35.0541L33.6905 35.01L33.7092 34.9618L33.7231 34.9521L33.7358 34.9117L33.7539 34.8851L33.9404 34.788L33.9645 34.8097L34.0025 34.7874L34.2053 34.9907Z\" fill=\"#0069BF\"/> -->\n        <path d=\"M35.6565 37.3815L35.6004 37.4376L35.6432 37.644L35.7012 37.8226L35.7917 38.0085L35.9528 38.2656H35.9534L36.3493 38.892L36.3626 38.9379L36.3789 38.9488L36.5497 39.3591L36.5563 39.3893L36.563 39.3947L36.7543 40.0188L36.7621 40.0689L36.7669 40.0731L36.8309 40.4768L36.8357 40.5372V40.5541L36.8206 40.886L36.4791 41.2113L36.4724 41.2052L36.4688 41.2083H36.4585L36.3867 41.2059L36.3861 41.2052L36.356 41.2028L36.1821 41.1781L36.1713 41.1654L36.0735 41.1352L36.012 41.0942L35.8985 40.88L36.1091 40.6693L36.0995 40.5963L36.024 40.2155L35.8701 39.6192L35.7108 39.2523L35.3572 38.6235L35.3517 38.6024L35.3439 38.5975L35.2093 38.306L35.2003 38.2662L35.1912 38.2596L35.1224 38.026L35.1164 37.9856L35.1127 37.982L35.0802 37.7617L35.0777 37.7273L35.0771 37.7267L35.0693 37.4817L35.0657 37.4563L34.9902 37.3815L35.3234 37.0483L35.6565 37.3815Z\" fill=\"#0069BF\"/>\n        <path d=\"M36.3261 39.8625L36.5095 39.9796L36.5246 40.0122L36.5602 40.0834L36.5644 40.1009L36.5675 40.1039L36.5656 40.1063L36.5741 40.1407L36.5844 40.1491L36.6737 40.5342L36.6743 40.5366V40.5372L36.7829 41.0122L36.7859 41.0369L36.7883 41.0393L36.9042 41.7925L36.9066 41.8269L36.9078 41.8281L36.9398 42.3616L36.9404 42.3821L36.9422 42.708V42.7104L36.9296 42.8082L36.8481 43.1147L36.8372 43.1232L36.8251 43.1757L36.6918 43.4545L36.6761 43.4648L36.664 43.5016L36.4987 43.7418L36.4015 43.7919L36.3586 43.8607L36.244 43.9168L36.2355 43.9186L36.2337 43.921L36.0484 44.0049L35.9543 44.0254L35.9501 44.0297L35.798 44.0393L35.7817 44.0399L35.7183 44.0315L35.6562 44.0152L35.4878 43.7943L35.6574 43.5734L35.6936 43.5637L35.7666 43.5269L35.8378 43.4533L35.8686 43.3845L35.8897 43.3706L35.9066 43.3193L36.0563 43.1141L36.1486 42.9132L36.1872 42.6676L36.2072 42.3797L36.1854 41.877L36.104 41.1304V41.1298L36.0497 40.6452L36.0484 40.6295L36.0478 40.6289L36.0285 40.3338L35.8704 40.1757L35.8813 40.0912L35.8994 40.0236L35.9796 39.9621L36.072 39.8124L36.0834 39.807L36.2343 39.7708L36.3261 39.8625Z\" fill=\"#0069BF\"/> -->\n        <path d=\"M31.6343 39.9418L31.6252 40.0064L31.6234 40.0119L31.6301 40.042L31.6319 40.0601L31.6892 40.1169V40.1513L31.3561 40.4844L31.0229 40.1513V40.1169L31.105 40.0354L31.1636 39.899L31.1817 39.8821V39.8815L31.1835 39.8803L31.2293 39.8368L31.2517 39.8278L31.4044 39.7119L31.6343 39.9418Z\" fill=\"#0069BF\"/>\n        <path d=\"M32.0407 39.5066L31.9055 39.7746L31.8271 39.8325L31.6285 39.8983L31.2954 39.5651L31.4306 39.2972L31.5084 39.2399L31.7076 39.1741L32.0407 39.5066Z\" fill=\"#0069BF\"/>\n        <path d=\"M31.8928 37.8063L31.9115 37.8027L32.1565 38.0477L32.1553 38.0683L32.2 38.1129L32.1897 38.1938L32.1758 38.2511L32.0261 38.3664L31.9471 38.5468L31.8439 38.8214L31.766 39.0773L31.5995 39.7122L31.0449 42.096L31.0624 42.9645L31.0642 42.9681L31.1981 43.125L32.171 44.0731L32.1831 44.1014L32.2054 44.1129L32.3339 44.2909L32.3864 44.4521L32.3913 44.4569L32.3955 44.5571V44.568L32.1275 44.8365L31.9199 44.7381L31.8566 44.6609L31.8529 44.6518L31.8469 44.6482L31.7316 44.4925L30.7522 43.5692L30.7491 43.5619L30.7419 43.5595L30.5645 43.376L30.5373 43.3078L30.5029 43.2861L30.4558 43.1835L30.4263 43.0489V43.0447L30.4395 42.0598H30.4402L30.4486 41.9904L31.0569 39.5722L31.0581 39.5716L31.0587 39.5661L31.2404 38.9246L31.2422 38.9234L31.244 38.9138L31.3339 38.6458L31.337 38.6434L31.3394 38.6319L31.4577 38.3435L31.4655 38.3386L31.4709 38.3157L31.5421 38.1902L31.5198 38.1678L31.5301 38.087L31.544 38.0296L31.7787 37.8486L31.789 37.8323L31.8089 37.8244L31.8668 37.7798L31.8928 37.8063Z\" fill=\"#0069BF\"/>\n        <path d=\"M36.4234 43.0232L36.4216 43.051L36.4029 43.2055L36.4011 43.2079L36.3968 43.2386L36.3292 43.4981L36.3262 43.5006L36.3232 43.5169L36.2321 43.7758L36.2272 43.7788L36.2236 43.7957L36.1071 44.051L36.0915 44.0612L36.0794 44.098L35.9919 44.2169L35.9828 44.2217L35.978 44.235L35.8688 44.3593L35.8042 44.471L35.7034 44.5283L35.6497 44.6158L35.217 44.8373L35.1886 44.8446L35.1826 44.853L34.8495 44.9809L34.8229 44.9858L34.8187 44.9906L34.6569 45.0347L34.6497 45.0359L34.6491 45.0371L34.5236 45.0685L34.5133 45.0697L34.3968 45.1089H34.3624L34.0293 44.7758L34.3624 44.4426H34.3968L34.4807 44.4704L34.5115 44.4686L34.6014 44.4318L34.8712 44.2622L35.2472 43.9767L35.3866 43.9297L35.4065 43.9055L35.5055 43.8868L35.5821 43.8403L35.6274 43.7842L35.7414 43.5688L35.838 43.3455L35.9032 43.1047L35.9074 43.1016L35.911 43.0811L35.9677 42.9357L36.1874 42.7866L36.4234 43.0232Z\" fill=\"#0069BF\"/> -->\n        <path d=\"M36.2895 40.4843V40.5597L36.1501 40.6991L36.1332 40.7854L36.1163 40.9103L36.0789 41.4692L36.1954 41.585L36.1701 41.6888L36.1266 41.7733L36.0421 42.0226L36.0415 42.0286H36.0409L36.0403 42.0437L35.9172 42.9749L35.9154 42.9767L35.9118 43.0021L35.884 43.1149L35.6444 43.3008L35.397 43.0534L35.3976 43.0425L35.4115 42.7299L35.4121 42.7293L35.4145 42.6997L35.4495 42.5005L35.4507 42.4993L35.4531 42.4843L35.4863 42.3545L35.5358 41.9821L35.6317 40.8639L35.6323 40.859L35.6474 40.7172L35.6492 40.7154L35.6516 40.6925L35.6704 40.6068L35.6233 40.5597V40.4843L35.9564 40.1511L36.2895 40.4843Z\" fill=\"#0069BF\"/>\n        <path d=\"M36.4486 40.9774L36.3925 41.071L36.3871 41.1066L36.3659 41.1705L36.3515 41.3631L36.3484 41.3661L36.3376 41.4361L36.3116 41.52L36.2573 41.7789L36.2024 42.2212L36.1469 42.7239L36.1463 42.7246L36.1451 42.7354L36.0636 43.255L35.8101 43.4705H35.8053L35.7811 43.4699L35.7781 43.4675L35.6309 43.415L35.6104 43.3981L35.5699 43.313L35.5355 43.2876L35.5228 43.2472L35.5138 43.1892L35.512 43.1874L35.5029 43.0166V43.0046L35.5041 42.978L35.5355 42.7161L35.5391 42.7131L35.5464 42.669L35.6019 42.5121L35.6146 42.173L35.6158 42.1723L35.6194 42.1331L35.6973 41.6956L35.7142 41.4783L35.7021 41.4385L35.6864 41.3377L35.6876 41.313L35.7045 41.0788L35.7081 41.0752L35.7208 40.9991L35.7558 40.8935L35.8367 40.8356L35.9127 40.7083L35.9556 40.6853L36.1155 40.6443L36.4486 40.9774Z\" fill=\"#0069BF\"/>\n        <path d=\"M33.8148 35.7201L33.8154 35.7195L34.1642 36.0683L34.157 36.1371L34.0272 36.7823L34.0224 36.8082L34.0393 36.83L34.0387 36.8559L34.0242 37.0448L34.0489 37.0424L34.274 37.2246L34.3332 37.1993L34.3374 37.1945L34.3543 37.1939H34.3609L34.6995 37.533V37.5493L34.6862 37.8179L34.8431 37.9754V37.9826L34.8401 38.1233V38.1239L34.8389 38.1504L34.816 38.3725L35.0188 38.5759L35.0151 38.6266L35.0007 38.7231L34.9994 38.7237L34.9982 38.7358L34.9735 38.8571L35.0308 38.9766L35.0375 38.9832L35.0393 39.0557L35.0876 38.9887L35.3072 38.8764L35.5794 39.1486L35.5788 39.1691L35.5522 39.5198L35.7327 39.7008L35.7242 39.7708L35.5885 40.3067L35.7261 40.4449L35.723 40.4841L35.7158 40.5312L35.7586 40.5548L35.7961 40.5366L35.8226 40.5029L35.8576 40.4938L35.918 40.486L36.1551 40.7213L36.1564 40.9344V40.9356L36.1527 40.9772L36.1431 41.0309L36.2258 41.1136L36.2167 41.148L36.2028 41.4878L36.2022 41.4884L36.201 41.5071L36.1974 41.5342L36.4153 41.7521L36.4116 41.7605L36.402 41.8034L36.4364 41.8378L36.4328 41.8849L36.4225 41.9585L36.2849 42.0774L36.1268 42.4401L36.0978 42.5288L36.0882 42.6326L36.0863 42.6344L36.0833 42.6634L36.0031 43.0152L35.9994 43.0182L35.9958 43.0406L35.8872 43.3496V43.3502L35.8419 43.4757L35.5957 43.6471L35.3332 43.3846L35.3362 43.3447L35.3416 43.3097L35.3102 43.361L35.2161 43.4129L35.1775 43.4691L35.1401 43.4829L35.064 43.4962L34.9988 43.6483L34.9819 43.6881L34.9246 43.8378L34.924 43.8384L34.9234 43.8408L34.8594 44.0001L34.8558 44.0026L34.8534 44.0134L34.8057 44.1136L34.5667 44.2639L34.3012 43.9983V43.9953L34.0725 44.1546L33.793 43.8752L33.8063 43.7907L33.8703 43.5873L33.7206 43.4377L33.5685 43.5463L33.4273 43.4051L33.2022 43.4974L33.1232 43.5131L33.1147 43.524L32.9856 43.5493L32.8896 43.559L32.7502 43.5385L32.5148 43.4678L32.4919 43.4365L32.379 43.4003L32.1545 43.2403H32.1539L32.1413 43.2361L32.1008 43.2289L32.0821 43.2059L31.9922 43.1444L31.9898 43.1432L31.9162 43.1359L31.9077 43.1263L31.7774 43.0991L31.5082 42.982L31.4804 42.9398L31.3875 42.9048L31.2541 42.7871L31.1998 42.6658L31.1346 42.6236L31.0574 42.4497L31.0163 42.2578L31.0157 42.2566L31.0151 41.9754V41.9748L31.026 41.8734L31.1069 41.5071L31.1244 41.4926L31.1503 41.3906L31.1696 41.3544L31.1195 41.0701L31.1123 40.9905L31.1135 40.9579L31.1467 40.5041L31.1491 40.501L31.1558 40.4425L31.268 39.9283L31.2795 39.9193L31.294 39.8505L31.4328 39.527L31.4527 39.4425L31.4647 39.4328L31.4804 39.3653L32.0761 38.1118V38.1112L32.0767 38.1106L32.4732 37.2959L32.4804 37.291L32.4853 37.2729L32.6404 37.0056L32.6947 36.9084L32.7086 36.9L32.7176 36.8722L32.7574 36.8161L32.9306 36.4588L33.0393 36.183V36.1589L33.0411 36.1577L33.0785 35.9995L33.1835 35.7895L33.2191 35.6881L33.2197 35.6869L33.2203 35.6839L33.548 35.4534L33.8148 35.7201Z\" fill=\"#0069BF\"/>\n        <path d=\"M34.4589 36.4856L34.468 36.5043L34.5042 36.6552L34.4686 36.6908L34.4637 36.7403L34.4498 36.8103L34.2259 36.9937L34.1777 36.9817L34.171 36.9883L34.1493 36.975L34.1191 36.9672L34.0558 36.934L34.0395 36.9068L33.8729 36.8042L33.8638 36.7855L33.8276 36.6346L34.1608 36.3015L34.4589 36.4856Z\" fill=\"#0069BF\"/>\n        <path d=\"M34.6237 35.4857L34.6666 35.543L34.7191 35.6999L34.7402 35.7186L34.7638 35.8707L34.7644 35.8792L34.765 35.8798L34.8452 36.47L35.0227 37.5792L35.0251 37.6112L35.0269 37.613L35.0637 38.0542L35.0649 38.0904L35.0643 38.1133L35.0377 38.5997L35.0233 38.613L34.9243 38.852L34.8863 38.8894L34.6298 38.9956L34.5393 38.9836L34.4801 38.9685L34.4439 38.922L34.3081 38.8568L34.287 38.8309L34.284 38.8224L34.2785 38.82L34.2562 38.7898L34.2152 38.6673L34.1989 38.6528L34.1826 38.5418L34.1796 38.502L34.2538 38.4271L34.2375 38.1224L34.1935 37.6927L34.0571 36.5762V36.5732L34.0027 36.1188L33.8682 35.9842L33.8833 35.9238L33.8784 35.919V35.9148L33.8802 35.7977L33.8808 35.7971L33.8959 35.7005L33.9201 35.6233L33.9653 35.5901L34.0172 35.4718L34.0583 35.4338L34.3178 35.3318L34.6237 35.4857Z\" fill=\"#0069BF\"/>\n        <path d=\"M34.1434 35.2376L34.2665 35.8194L34.2683 35.8363L34.2695 35.8375L34.3033 36.0318L34.3274 36.0559L34.3099 36.0728L34.389 36.5327L34.3896 36.5369L34.3902 36.5375L34.4524 36.9117L34.5308 37.2461V37.2473L34.6829 37.8791L34.6871 37.9099L34.6901 37.9129L34.7088 38.024L34.7107 38.0457L34.7119 38.0469L34.7885 38.677L34.7915 38.7252L34.7921 38.7258L34.7982 39.2436V39.2491L34.7849 39.3547L34.7716 39.4078L34.3685 39.718L33.9508 39.301V39.2949L33.9515 39.2581L33.9255 38.7753L33.8374 38.1881L33.8157 38.106L33.6304 37.4947L33.6262 37.4651L33.6213 37.4615L33.5399 37.1115L33.5375 37.0903L33.535 37.0885L33.4632 36.7047L33.456 36.6287L33.4554 36.6263L33.4385 35.919V35.9087L33.4475 35.8218L33.5712 35.2358L33.8573 35.0059L34.1434 35.2376Z\" fill=\"#0069BF\"/>\n        <path d=\"M34.6066 36.92L34.8082 37.115L34.8239 37.1524L34.8534 37.1675L35.2373 37.6943L35.262 37.7686L35.2904 37.7879L35.5281 38.3461L35.539 38.3986L35.5493 38.4065L35.6863 38.8983L35.6947 38.9605L35.7001 38.9653L35.7876 39.6159L35.7919 39.6829L35.7913 39.7046L35.7496 40.6334L35.7478 40.6352L35.74 40.7088L35.685 40.9599L35.6633 41.1228L35.65 41.1349L35.615 41.2652L35.5939 41.3033L35.2747 41.4879L35.0128 41.3793L34.9838 41.3497L34.8914 41.1252L34.8697 41.1053L34.8534 40.9273L34.8516 40.8941V40.8935L34.8486 40.7076L34.7997 40.6014L34.7786 40.506L34.8414 40.4427L34.8196 39.7106L34.7671 39.1047L34.6627 38.681L34.4328 38.1651V38.1644L34.2385 37.745L33.9639 37.4704L33.9651 37.4421L33.979 37.2797L34.0321 37.2314L34.0194 37.1687L34.0296 37.1578L34.0236 37.1512L34.3453 36.8295L34.3513 36.8361L34.3658 36.8223L34.6066 36.92Z\" fill=\"#0069BF\"/>\n        <path d=\"M34.0347 37.0673L34.0383 37.0552L34.1976 36.8657L34.2049 36.8621L34.0347 37.0673Z\" fill=\"#0069BF\"/> -->\n        <path d=\"M35.4769 38.3751L35.507 38.4487L35.5107 38.4656L35.5149 38.4686L35.5988 38.7094L35.7853 39.1849L36.0478 39.7323L36.0508 39.7474L36.0562 39.751L36.0605 39.7607L36.1003 39.7734L36.1347 39.7969L36.1968 39.9158L36.2101 39.9218L36.2403 39.9936L36.3067 40.0455L36.3266 40.1246L36.3411 40.2368L36.3344 40.3141L36.3248 40.369L36.4304 40.6122L36.4545 40.7269L36.4666 40.7372L36.5113 41.0341L36.5173 41.1083L36.5155 41.1463L36.4944 41.4107L36.4901 41.4143L36.4787 41.4988L36.4057 41.7528L36.393 41.7625L36.3797 41.8192L36.3218 41.9399L36.3815 42.0932L36.4268 42.1288L36.4618 42.2767L36.4769 42.398L36.4545 42.5464L36.4111 42.6889L36.3344 42.745L36.2457 42.9321L35.8317 43.2688L35.8221 43.3364L35.7201 43.6762L35.7038 43.6883L35.6869 43.7553L35.5089 44.0842L35.4793 44.1017L35.4594 44.156L35.3007 44.3449L35.2101 44.3871L35.1739 44.4481L35.0333 44.5241L34.839 44.5736L34.8287 44.5778L34.6815 44.5802L34.6736 44.5808L34.6688 44.579L34.5058 44.6213L34.4419 44.6164L34.2663 44.5917L34.2566 44.5802L34.1938 44.567L34.0249 44.6762L33.8456 44.7293L33.7786 44.7637L33.5022 44.7927L33.361 44.8289L33.2125 44.8482L33.1045 44.8379L32.8504 44.7903L32.8269 44.7764L32.7575 44.7631L32.6066 44.7058L32.463 44.6696L32.3357 44.5048L32.1069 44.3437L32.0327 44.1355L32.0218 44.1343L31.8529 44.0956L31.8148 44.0467L31.6175 43.9695L31.4841 43.8458L31.4376 43.7396L31.3737 43.7009L31.2246 43.4119L31.2144 43.3714L31.2023 43.363L31.0586 43.0063L31.0236 42.8283L31.0176 42.815L31.0104 42.5893L31.0098 42.5694L31.017 42.4789L31.0514 42.2761L31.1136 42.1668L31.1612 42.0286L31.2771 41.8802L31.3731 41.8343L31.4159 41.7559L31.6996 41.579L31.7466 41.5652L31.7497 41.5338L31.7666 41.5L31.801 41.3449L31.9301 41.0709L32.0309 41.0075L32.1063 40.8591L32.3194 40.704L32.5161 40.64L32.6018 40.5971L32.8909 40.5706L32.9452 40.5682L33.0049 40.5712L33.457 40.6195L33.4739 40.6279L33.5626 40.6418L34.0858 40.8047L34.1045 40.8307L34.2011 40.8572L34.5728 41.0793V41.0673L34.5771 41.0154L34.6078 40.8325L34.6175 40.8241L34.6344 40.7492L34.7147 40.5814L34.7316 40.5706L34.7442 40.532L34.8643 40.3642L34.8879 40.3521L34.8999 40.3219L35.113 40.1095L35.1383 40.0993L35.1486 40.0787L35.1691 40.063L34.9941 39.4752L34.9911 39.4541L34.9874 39.4517L34.982 39.4276L34.7659 39.2115V39.1807L34.8462 39.1005L34.8752 39.0063L34.8782 39.0015L34.8619 38.9345L34.8535 38.8657L34.8516 38.8639L34.836 38.6056L34.8354 38.5839L34.845 38.5042L34.8637 38.4221L35.1781 38.1753L35.4769 38.3751Z\" fill=\"#0069BF\"/>\n        <path d=\"M31.4649 41.6032L31.3031 41.8886L31.1673 41.9701L31.1535 41.9743L31.1317 42.092L31.1311 42.0986L31.1341 42.101L31.1879 42.4052L31.1909 42.4408L31.2011 42.4692L31.2108 42.4788L31.212 42.4963L31.3725 42.585L31.4443 42.6985L31.4504 42.7196L31.46 42.7257L31.5488 42.8886L31.5741 42.8934L31.8155 42.9852L31.8445 43.0274L31.9549 43.0672L32.1142 43.2006L32.1571 43.293L32.2247 43.3316L32.2506 43.3762L32.3828 43.3038L32.4763 43.2423L32.6133 43.2006L32.8614 43.4487L32.8095 43.6001L32.737 43.6943L32.6182 43.8621L32.5144 44.0111L32.4697 44.034L32.4456 44.0853L32.3393 44.1741L32.2609 44.2024L32.2392 44.2356L32.1679 44.2664L32.1444 44.2712L32.1402 44.2773L32.0961 44.2936L31.941 44.3207L31.6507 44.2139L31.5669 44.1421L31.5192 44.0383L31.4504 43.9972L31.3979 43.8995L31.358 43.8651L31.2319 43.8011L31.1064 43.7697L30.9784 43.6038L30.7708 43.4529L30.6592 43.1107L30.4238 42.783V42.7721L30.4274 42.6333V42.5217L30.4244 42.4746L30.425 42.4577L30.4371 42.1783L30.4268 42.1487L30.4534 42.0159L30.4836 41.9429L30.5065 41.8337L30.5083 41.8325L30.5095 41.8216L30.5325 41.7329L30.6882 41.6134L30.7455 41.5283L30.7521 41.5259L30.8233 41.3998L30.9591 41.3183L31.1317 41.27L31.4649 41.6032Z\" fill=\"#0069BF\"/> -->\n        <path d=\"M31.2957 42.2934L31.3078 42.3103L31.3452 42.4219L31.3663 42.4394L31.3802 42.5064L31.3941 42.5203L31.385 42.5293L31.3959 42.5812L31.4025 42.6446L31.4037 42.6458L31.405 42.6868L31.4116 42.6899L31.4713 42.7731L31.5269 42.9439L31.545 42.9602L31.5546 43.0363L31.5757 43.1117L31.6186 43.1594L31.6578 43.2608L31.7206 43.2867L31.7815 43.4267L32.0477 43.5366L32.0917 43.6434L32.1503 43.6494L32.3386 43.746L32.4448 43.7894L32.5794 43.9216L32.6675 43.985L32.6705 43.9862L32.7387 43.9934L32.8214 43.9783L32.9113 43.9584L32.9861 43.9228L33.1153 43.8932L33.4128 44.1908L33.4086 44.2408L33.3874 44.367L33.3681 44.3827L33.3295 44.5088L33.248 44.6277L33.1587 44.6748L33.1147 44.7514L32.9825 44.8287L32.8932 44.8534L32.8775 44.8739L32.6892 44.9276L32.5528 44.9469L32.5341 44.9463L32.4019 44.9415L32.3343 44.9107L32.1068 44.8317L31.9415 44.7001L31.9234 44.6627L31.8817 44.644L31.8666 44.6271L31.761 44.6217L31.4231 44.466L31.3693 44.3326L31.3585 44.3253L31.3217 44.3169L31.2287 44.201L31.0809 44.1401L31.0332 44.0284L30.9734 43.9826L30.9608 43.9355L30.9457 43.8208L30.9445 43.8184L30.9439 43.7647L30.9173 43.7472L30.8739 43.647L30.8087 43.5136L30.7707 43.3525L30.7646 43.3465L30.7538 43.1545L30.7447 43.087L30.7357 43.0514L30.7188 43.0194L30.6777 42.8498V42.8377L30.6838 42.6452L30.685 42.644L30.6916 42.5836L30.6983 42.551L30.6989 42.5366L30.7031 42.4859L30.7139 42.4762L30.7218 42.437L30.7429 42.4201L30.7791 42.3109L30.7924 42.2921L30.8527 42.262L30.8666 42.2523L30.8859 42.2457L31.0441 42.166L31.2957 42.2934Z\" fill=\"#0069BF\"/> -->\n      </g>\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <rect width=\"1500\" height=\"1000\" fill=\"white\" transform=\"translate(-853 -349)\"/>\n      </clipPath>\n    </defs>\n  </svg>\n\n)\n\nexport default PipesSketch"},"relativePath":"sketches/pipes.jsx"},{"fields":{"contents":"import React from 'react'\n\nconst SkiGraphsSketch = () => (\n  <svg className=\"sketch ski-graphs\" width=\"66\" height=\"56\" viewBox=\"0 0 66 56\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0)\">\n      <path d=\"M815.106 -29H-685.011V971.078H815.106V-29Z\" fill=\"white\"/>\n      <path d=\"M15.1539 23.5536L15.7128 23.6122L15.8455 23.6798L16.2306 23.7872L16.6687 24.0515L16.7369 24.1215L16.7985 24.1432L17.2143 24.4818L17.262 24.5814L17.3652 24.6291L17.5571 24.853L17.577 24.9073L17.6452 24.9694L17.7936 25.1927L17.8226 25.2875L17.8908 25.3665L18.2155 26.0835L18.2668 26.3177L18.3096 26.3949L18.4183 27.0696L18.4346 27.2664L18.434 27.2736L18.4539 27.3677L18.4931 27.439L18.5595 27.8994L18.6446 28.276L18.6736 28.5289L18.6729 28.5548L18.6621 29.04L18.6554 29.0557L18.6041 29.369L18.5957 29.4402L18.408 30.1891L18.3736 30.2422L18.3489 30.3587L18.0616 31.0123L17.924 31.174L17.8763 31.3008L17.411 31.8324L17.3127 31.8771L17.2891 31.9L16.9536 32.3442L16.784 32.4287L16.7007 32.5935L16.2408 32.9326L15.9518 33.028L15.7381 33.1571L15.2577 33.2555L14.9856 33.2839L14.6548 33.2416L14.37 33.168L14.1576 33.1704L14.0682 33.2054L13.6428 33.4492L13.2559 33.5162L13.0061 33.5379L12.5106 33.4486L11.9361 33.2344L11.4895 32.8862L11.3628 32.827L10.9319 32.3158L10.8667 32.1384L10.7001 31.9302L10.3603 31.0781L10.3036 30.7866L10.268 30.719L10.1986 30.1312L10.1751 30.0503L10.1226 29.6846L10.1244 29.6248L10.1654 28.7347L10.1835 28.6948L10.2481 28.3575L10.2927 27.7962L10.3211 27.7389L10.3839 27.4064L10.7623 26.4396L10.9162 26.247L10.9765 26.0787L11.2239 25.7781L11.236 25.7407L11.7677 25.0304L11.9874 24.8457L12.1274 24.6961L12.653 24.3587L12.8214 24.3092L12.9469 24.2151L13.5022 24.0213L13.6941 23.9049L13.9288 23.8391L14.0713 23.7455L14.6778 23.5898L15.0163 23.5464L15.1539 23.5536Z\" fill=\"#02A556\"/>\n      <path d=\"M13.8882 22.5356L14.3438 22.5718L14.368 22.5839L14.5418 22.6062L15.3903 22.8325L15.5122 22.914L15.6915 22.9665L15.7935 23.0311L15.7965 23.0317L16.3801 23.2779L16.5032 23.3805L16.6142 23.4197L16.8592 23.6183L16.8671 23.6346L17.2147 23.8277L17.2714 23.9249L17.4271 23.9894L17.6987 24.2628L17.7403 24.363L17.8122 24.4016L18.0343 24.7317V24.7323L18.2612 25.0655L18.2853 25.1433L18.4947 25.3986L18.5104 25.4421L18.5394 25.4571L19.0379 26.1651L19.0831 26.3081L19.1688 26.4264L19.4157 27.1964L19.4229 27.2399L19.4326 27.255L19.5303 27.6412L19.5533 27.8211L19.5575 27.8307L19.5822 28.6225L19.5828 28.6503L19.572 28.7848L19.432 29.6394L19.3982 29.6998L19.3994 29.8488V29.8579L19.3964 29.9321L19.3547 30.4209L19.3457 30.439L19.3294 30.5664L19.0982 31.4547L19.0524 31.5241L19.0204 31.6521L18.6088 32.4246L18.473 32.5676L18.4374 32.6539L17.8743 33.2097L17.7512 33.2604L17.5466 33.4264L16.9111 33.6871L16.7035 33.7287L16.648 33.7589L15.9824 33.8506L15.8212 33.8615L15.6341 33.8464L15.3607 33.8005L15.2431 33.8711L14.5605 34.0075L14.3426 34.0293L14.0584 33.9912L13.3939 33.8102L13.301 33.7474L13.1465 33.7064L12.4959 33.3352L12.3227 33.1632L12.3119 33.1584L11.776 33.1089L11.7144 33.0781L11.4127 33.0178L10.721 32.7299L10.619 32.646L10.502 32.6098L10.1634 32.3775L10.0095 32.2049L9.93045 32.1693L9.41265 31.5754L9.37222 31.4662L9.24609 31.3316L8.85381 30.5833L8.80794 30.3974L8.74639 30.3026L8.51645 29.3859L8.47964 29.0908L8.47783 29.0872L8.47119 28.0655V28.057L8.48749 27.8585L8.66673 26.7728L8.70475 26.7058L8.74639 26.5024L9.19117 25.4481L9.30523 25.3111L9.34989 25.1795L10.0349 24.2996L10.1574 24.2399L10.2171 24.1119L11.0916 23.3847L11.2256 23.3364L11.3795 23.2061L12.3746 22.7631L12.6311 22.7082L12.7035 22.669L13.6378 22.5434L13.7971 22.532L13.8882 22.5356ZM14.3064 28.4125L14.0337 28.567L14.0355 28.5923L14.0306 28.6738L14.0161 28.803L14.0367 28.9261L14.0445 29.0172L13.8876 29.3956L13.7192 29.4656L13.7349 29.5133L13.8882 29.7595L13.9347 29.8036L13.9425 29.7046L13.9498 29.6979L13.9781 29.5778L14.0065 29.5211L13.9938 29.4909L14.1405 29.1373L14.1574 29.1307L14.1646 29.115L14.3288 28.9713L14.6583 28.847L15.0113 28.9937L15.158 29.3467L14.9872 29.7227L14.823 29.8663L14.6969 29.914L14.7132 29.9279L14.8327 29.9774L15.3282 29.8796L15.7126 29.7197L15.9256 29.471L16.0856 29.1451L16.1773 28.8482L16.1797 28.6666L16.1368 28.5742L15.9968 28.4505L15.7138 28.3189L15.327 28.2429L14.9136 28.2121L14.3064 28.4125Z\" fill=\"#02A556\"/>\n      <path d=\"M14.5605 21.6973L14.8327 21.7915L15.018 21.9309L15.0198 21.9315L15.572 21.9122L15.616 21.911L15.9872 21.9713L16.8218 22.2471L16.9208 22.3201L17.0566 22.3594L17.8085 22.8331L17.8266 22.8669L17.9142 22.8735L18.4941 22.9701L18.7132 23.095L18.9751 23.1874L19.3306 23.4728L19.3825 23.5814L19.4881 23.6333L19.7953 24.0311L19.8641 24.2302L19.9703 24.401L20.0228 24.6309L20.0294 24.6913L20.0367 24.7034L20.1163 25.2399L20.1266 25.3775L20.1236 25.4511L20.0602 26.2218L20.056 26.2308L20.0524 26.2682L20.1205 26.3521L20.1598 26.4613L20.26 26.5827L20.4676 27.0679L20.5261 27.3527L20.5442 27.3907L20.5804 28.0196L20.5822 28.0733L20.5816 28.0992L20.5623 28.7595L20.5581 28.7685L20.5382 28.9399L20.4428 29.3352L20.4537 29.4179L20.441 29.5664L20.3873 29.8826L20.3722 29.9085L20.3577 29.9991L20.2364 30.3738L20.1477 30.4951L20.1043 30.6267L20.0463 30.704L19.6136 31.5857L19.5539 31.6521L19.5315 31.7196L18.9992 32.4444L18.9395 32.474L18.9087 32.5495L18.2533 33.2079L18.1616 33.2459L18.1248 33.3171L17.5213 33.748L17.3656 33.7981L17.2322 33.8959L16.581 34.1143L16.3656 34.1499L16.3275 34.1693L15.7838 34.2236L15.6607 34.2302L15.5231 34.2139L15.4941 34.2362L15.2425 34.3213L15.0385 34.4469L14.3469 34.5965L14.0862 34.6249H14.0686L13.8689 34.6219L13.8031 34.6641L13.6909 34.6973L13.6021 34.7703L13.2153 34.9309L12.8737 35.0003L12.8158 35.028L12.4736 35.0552L12.3674 35.06L12.1556 35.0419L11.4048 34.917L11.2642 34.8367L10.9655 34.7546L10.2829 34.3515L10.1948 34.2622L10.1175 34.2338L9.83027 33.9948L9.77957 33.8868L9.67094 33.8367L9.04029 33.095L8.99985 32.9858L8.87734 32.8566L8.65706 32.4457L8.64741 32.4064L8.62448 32.3811L8.43799 31.9894L8.40661 31.8518L8.35894 31.7824L8.07227 30.809L8.03305 30.5422L8.01796 30.5102L7.97813 29.9399L7.95882 29.8989L7.9045 29.0667L7.90088 28.9683L7.90872 28.8204L8.04391 27.5102L8.07227 27.4547L8.12055 27.1771L8.61542 25.7981L8.67517 25.7196L8.70595 25.6008L9.50015 24.1741L9.61663 24.0546L9.65284 23.9562L10.2853 23.2224L10.3764 23.1807L10.5641 22.9804L11.2533 22.5356L11.4959 22.4638L11.6504 22.3654L12.2956 22.2121L12.5871 22.1771L12.5937 22.1777L12.6903 22.0896L12.9461 21.9906L13.2769 21.786L13.8574 21.6581L14.1411 21.6267L14.5605 21.6973Z\" fill=\"#02A556\"/>\n      <path d=\"M18.1661 30.0201L18.3158 30.3671L18.3188 30.5626V30.5717L18.2506 30.824L18.2337 30.8523L18.2373 30.9302L18.2488 30.961L18.2742 31.0998L18.2542 31.2241L18.2259 31.3086L18.2235 31.4739L18.1354 31.6803L18.0949 31.7769L18.0937 31.7775L18.0931 31.7793L17.7853 31.9054L17.4751 31.7769L17.3472 31.4667L17.3725 31.3188L17.4504 31.1022L17.4564 31.0979L17.4612 31.0762L17.4932 31.0038L17.4751 30.9398L17.4323 30.8867L17.3375 30.6212L17.32 30.5801L17.3164 30.3852V30.3762L17.4631 30.0231L17.8161 29.8765L18.1661 30.0201Z\" fill=\"#02A556\"/>\n      <path d=\"M12.3405 33.1708L12.4268 33.379L12.4437 33.3742L12.597 33.3971L12.667 33.4183L12.6912 33.4508L12.9996 33.37L13.2965 33.4895L13.3218 33.4792L13.4751 33.4961L13.6073 33.5251L13.6707 33.5649L13.795 33.5963L13.8879 33.647L13.9308 33.7206L14.0497 33.7701L14.2651 34.2885L14.0497 34.8075L13.5312 35.0224L13.2585 34.933L13.2084 34.9511L12.7232 34.7502L12.7081 34.7146L12.6773 34.6995L12.6562 34.6735L12.5481 34.6542L12.4184 34.6065L12.3605 34.5221L12.32 34.5033L12.3067 34.4696L12.2585 34.443L12.1824 34.446L12.1625 34.4466L12.0231 34.4249L11.9465 34.4008L11.9006 34.338L11.8348 34.3108L11.7745 34.1648L11.7702 34.1588L11.6507 34.0574L11.6194 33.8642L11.6188 33.8636L11.6061 33.7906L11.4878 33.5239L11.6344 33.1708L11.9875 33.0242L12.3405 33.1708Z\" fill=\"#02A556\"/>\n      <path d=\"M14.8516 20.482L16.6391 20.6685L16.6705 20.6848L16.8395 20.7101L17.2698 20.8429L17.3736 20.9165L17.5015 20.9503L17.6307 21.0227L17.9638 21.1736L18.3006 21.2798L18.4617 21.3957L18.6216 21.4512L19.2692 21.9587L19.2704 21.9612L19.2734 21.9624L19.2951 21.9793L19.4237 22.077L19.4955 22.2219L19.6325 22.2925L20.5474 23.5743L20.5649 23.6274L20.5697 23.6329L20.5909 23.6443L20.7773 23.931L20.8087 24.0366L20.8733 24.1193L21.1527 24.8543L21.1563 24.8634L21.1594 24.8779L21.1654 24.8851L21.3114 25.2472L21.3404 25.3939L21.3682 25.4415L21.4732 26.0203L21.4738 26.03L21.475 26.0318L21.4804 26.0638L21.4907 26.1742L21.4943 26.1832L21.5052 26.383L21.507 26.4373L21.5064 26.4657L21.4786 27.3896V27.3902L21.478 27.3999L21.4545 27.9533L21.4533 27.9563L21.4508 28.0082L21.4454 28.0565L21.437 28.074L21.4243 28.1778L21.3639 28.4252L21.3585 28.4331L21.3555 28.4554L21.1117 29.2967L21.1099 29.2991L21.1093 29.3045L21.0972 29.3456L21.0966 29.3462L20.988 29.695L20.9874 29.6956L20.8274 30.1959L20.8039 30.2279L20.7906 30.2895L20.7743 30.3257L20.7731 30.3269L20.6005 30.8061L20.4859 31.1362L20.4677 31.1603L20.4581 31.205L20.1913 31.8006L20.172 31.8236L20.1636 31.8555L20.0151 32.1313L20.0133 32.1325L19.8504 32.4596L19.6241 32.7065L19.5939 32.7686L18.8999 33.3021L18.8836 33.3076L18.8763 33.322L18.781 33.3951L18.7001 33.4228L18.6174 33.4959L16.4014 34.552L16.3483 34.5647L16.3181 34.5876L15.9723 34.7155L15.9439 34.7204L15.9312 34.7294L14.8009 35.0969L14.7122 35.1114L14.6856 35.1271L14.402 35.1814L14.2276 35.1983L14.1159 35.1917L13.4871 35.1126L13.2209 35.1012L13.2173 35.0994L13.1582 35.0957L13.0809 35.0855L12.5975 34.8272L12.5903 34.8079L12.5746 34.8006L12.5619 34.7849L12.5052 34.7608L12.4702 34.7077L12.3428 34.6624L12.2547 34.5912L12.1413 34.619L12.134 34.6232L11.8986 34.6817L11.5456 34.5351L11.399 34.182L11.5456 33.829L11.752 33.7433L11.7997 33.6594L11.8999 33.6021L11.9614 33.482L12.0676 33.4053L12.2577 33.3444L12.3573 33.2913L12.5009 33.2732L12.5915 33.2671L12.8836 33.3884L13.0067 33.3685L13.3398 33.4814L13.4889 33.4542L13.5142 33.4421L14.099 33.4114L14.2535 33.3746L15.312 32.9781L15.3302 32.9744L15.338 32.969L15.653 32.8586L17.7792 31.8827L17.7888 31.8761L18.3187 31.4602L18.3983 31.3009L18.4026 31.2961L18.5209 31.0523L18.7405 30.4898L18.8576 30.1639V30.1633L19.0375 29.6491L19.0531 29.6286L19.0543 29.622L19.2137 29.1217L19.3139 28.788L19.3217 28.7614L19.3271 28.7536L19.3295 28.7373L19.5776 27.9859L19.5951 27.87L19.5987 27.3528L19.6047 26.4886L19.5921 26.3782L19.4889 25.8821L19.3784 25.587L19.3778 25.584L19.3766 25.5828L19.3682 25.561L19.1032 24.9334L18.9656 24.7324L18.962 24.7222L18.1014 23.6009L18.0743 23.581L18.0731 23.5791L18.0694 23.5767L18.0676 23.5761L18.0622 23.5719L17.5112 23.2068L17.2716 23.1217L16.8425 22.9974L16.7532 22.9358L16.6114 22.8978L16.545 22.8592L16.3682 22.8109L14.8208 22.7825L14.4346 22.8501L14.1129 23.042L14.0242 23.0668L13.9596 23.1205L13.609 23.2689L13.574 23.3045L13.4889 23.3402L13.4545 23.4108L13.1087 23.6805L13.058 23.698L13.0495 23.7252L12.7116 24.2345L12.338 24.8676L12.1473 25.2708L11.8274 26.1802L11.6735 27.2472L11.6663 27.2599L11.6603 27.3196L11.3163 28.9044L11.3084 28.9165L11.303 28.9533L11.268 29.0746L11.2976 29.1422L11.3464 29.3733L11.1793 29.7759L10.7767 29.9424L10.3971 29.797L10.2306 29.6473L10.2082 29.5972L10.1618 29.5749L10.058 29.4464L10.0344 29.3788L9.99763 29.3571L9.86546 29.1265L9.82442 28.9738L9.77674 28.896L9.4418 27.3227L9.41706 27.0957L9.41525 27.0915L9.40197 25.8996L9.40137 25.8851L9.43878 25.5846L9.72243 24.4584L9.75019 24.4162L9.7695 24.3154L9.97952 23.7747L10.0405 23.698L10.0694 23.5924L10.4955 22.8737L10.5341 22.8356L10.5474 22.794L10.9204 22.2635L11.0857 22.1187L11.1207 22.0414L11.2891 21.893L11.3302 21.8779L11.3452 21.8465L11.5438 21.6908L11.5891 21.6751L11.6361 21.6244L12.0018 21.386L12.0519 21.3709L12.0936 21.3311L12.341 21.1965L12.4098 21.179L12.4545 21.1422L12.9994 20.9129L13.4997 20.6715L13.8148 20.5985L13.895 20.5574L14.6053 20.4826L14.7321 20.4753L14.8516 20.482Z\" fill=\"#02A556\"/>\n      <path d=\"M13.1981 21.8593L13.4003 21.8973L13.6694 21.9142L13.6755 21.9166L13.734 21.922L13.9808 21.9655L14.0231 21.9902L14.1293 22.015L14.3671 22.1332L14.387 22.1664L14.4558 22.19L14.5156 22.2364L14.5168 22.237L14.8324 22.4857L15.177 22.7204L15.1969 22.7579L15.2464 22.779L15.2941 22.8273L15.4286 23.1556L15.4063 23.2099L15.4292 23.2654L15.381 23.4265L15.3755 23.4597L15.3369 23.5835L14.8614 23.9299L14.5083 23.7832L14.3617 23.4302L14.3647 23.4115L14.3212 23.394L14.3031 23.3668L14.2295 23.3445L13.8982 23.1224L13.8855 23.1151L13.8155 23.088L13.7213 23.1019L13.7201 23.1025L13.4208 23.1483L13.3333 23.155L13.3315 23.1562L13.2512 23.1574L13.2391 23.164L13.2011 23.1737L13.1927 23.1876L13.0171 23.2678L12.8414 23.307L12.7968 23.33L12.2385 23.3927L12.1516 23.3982L12.113 23.397L12.0678 23.3946L12.0213 23.4139L11.7901 23.5563L11.7159 23.5726L11.6936 23.5925L11.1269 24.1556L10.5186 25.3596L10.1987 26.7772L10.1909 26.7905L10.1854 26.8279L9.96818 27.572L9.83118 28.3517L9.88791 29.3813L10.0068 29.8448L10.2904 30.2014L10.7895 30.6426L11.3423 31.0596L11.3816 31.1387L11.4661 31.1785L11.6031 31.342L11.6435 31.4525L11.6948 31.4851L11.731 31.5617L11.7883 31.8164L11.6501 32.196L11.6254 32.2105L11.6157 32.234L11.5077 32.2787L11.3019 32.3976L11.2186 32.4127L11.1372 32.4199L11.1311 32.4223L10.9193 32.4332L10.8789 32.4344L10.6338 32.3939L9.94162 32.1598L9.79256 32.0487L9.66401 32.0023L9.06655 31.5008L9.02853 31.4205L8.95007 31.3831L8.49141 30.8218L8.42805 30.6456L8.31398 30.4694L8.13233 29.741L8.11483 29.601L8.10698 29.5847L8.01706 28.3674L8.01465 28.2974L8.0243 28.1652L8.16251 27.222L8.17156 27.2063L8.18001 27.1375L8.37856 26.3445L8.70988 24.8309L8.76118 24.7488L8.80282 24.5871L9.57952 23.1682L9.73342 23.0777L9.8336 22.8786L10.6109 22.3016L10.7069 22.2696L10.7974 22.196L11.0358 22.0988L11.2482 22.0566L11.282 22.0403L11.4341 22.0288L11.4884 22.0053L11.6338 21.9751L11.6779 21.951L11.8632 21.9226L11.9338 21.9172L11.9386 21.9154L12.1112 21.9063L12.1516 21.9051H12.1722L12.6827 21.919L12.7757 21.9075L12.897 21.8737L13.078 21.8484L13.1981 21.8593Z\" fill=\"#02A556\"/>\n      <path d=\"M28.3742 20.3569L28.3917 20.3726L28.5118 20.6406L28.5293 20.6575L28.557 21.1209L28.5673 21.1451L28.5595 21.1632L28.5926 21.7148L28.5939 21.7456L28.5933 21.7697L28.5619 22.4022L28.6856 25.2724V25.2893L28.6862 25.2899L28.6971 26.0304V26.0346L28.7085 27.4474L28.7266 28.2893L28.8135 29.7926L28.8141 29.8168V29.8174L28.8304 30.4818V30.4987V30.5005L28.828 31.2893L28.8286 31.3436V31.3491L28.8274 31.3883L28.7701 32.3931L28.7441 33.1632L28.7333 33.1867L28.6777 33.4287L28.5655 33.6593L28.5359 33.6774L28.5148 33.7419L28.4985 33.7631L28.4671 33.7788L28.4508 33.818L28.0815 33.9713L27.7115 33.818L27.6663 33.7075L27.621 33.6816L27.6114 33.6635L27.6035 33.6339L27.5082 33.4601L27.4388 33.1909L27.4255 33.162L27.3995 32.3853L27.3989 32.3611L27.4001 32.3165L27.4647 31.3237L27.4653 31.2851V31.2754L27.4828 30.4969L27.4719 29.8457L27.4713 29.8337L27.4701 28.3147V28.3141V28.3008L27.4882 27.4438L27.5136 26.0322L27.5178 25.2954V25.2875L27.5739 22.3901H27.5745L27.5751 22.3684L27.618 21.7118V21.7112L27.6186 21.7069L27.6476 21.3376L27.5679 21.1451L27.6856 20.8614L27.7025 20.6478L27.726 20.6261L27.8401 20.372L27.857 20.3575L28.1159 20.2585L28.3742 20.3569Z\" fill=\"#0069BF\"/>\n      <path d=\"M39.4356 20.415L39.4429 20.4295L39.4568 20.435L39.5268 20.6045L39.6891 20.9431L39.7024 21.1163L39.7048 21.1803V21.1815L39.7036 21.9401L39.7513 22.272L39.7603 22.4012V22.4024L39.7591 23.2805L39.8038 23.5424L39.8164 23.6908L39.8176 23.6927L39.8533 27.5225V27.5327L39.8333 27.7343L39.6426 28.683L39.6626 28.7283L39.6734 29.0928L39.674 29.1205L39.6692 29.2129L39.5708 30.1718L39.5968 30.3348L39.6052 30.435L39.6094 30.444L39.668 31.3885L39.6704 31.4567L39.6638 31.5762L39.607 32.0698L39.4061 32.4549L39.3777 32.5231L39.4368 32.5369L39.6125 32.6263L39.6644 32.7114L39.7682 32.7681L39.8026 32.8212L39.8683 33.0415L39.8285 33.2153L39.7899 33.2955L39.7839 33.2992L39.7796 33.3149L39.7344 33.3957L39.6957 33.4181L39.6704 33.4772L39.6692 33.4778L39.6203 33.5967L39.2673 33.7433H39.1641L38.811 33.5967L38.735 33.4132L38.7338 33.4144L38.6867 33.4368L38.6644 33.4814L38.4984 33.6124L38.3807 33.6534L38.3536 33.6908L38.2232 33.7343L38.0699 33.7596L37.9438 33.7427L37.9329 33.7397L37.7199 33.8188L37.1146 33.5677L37.0325 33.3692L36.9963 33.2823L36.8877 33.435L36.7489 33.5056L36.6788 33.6413L36.4948 33.7705L35.9776 33.9353L35.4157 33.7367L35.3759 33.7047L35.365 33.6818L35.3451 33.6733L35.3379 33.6558L35.3071 33.6432L35.2667 33.5454L34.7283 33.6136L34.6819 33.6166L34.677 33.6184L34.2854 33.6504L34.2009 33.6534L34.2003 33.654L33.7863 33.6552H33.7833L33.7175 33.6576L33.7163 33.6582L33.2848 33.6649H33.2679L33.2455 33.6643L32.9166 33.6908L32.1991 33.7596L32.1556 33.7838L31.7519 33.8496L31.5841 33.8634L31.5793 33.8652L31.3825 33.8689L31.0977 33.934L31.088 33.9353L31.0862 33.9365L31.0536 33.9443L30.7845 33.9751L30.6885 33.9709L30.4658 33.9528L29.5123 33.9751L29.4948 33.9757H29.4942H29.4676H29.4574L29.1641 33.9371L28.6632 33.8019L28.362 33.5997L28.2033 33.5339L28.1798 33.4766L28.1146 33.4325L27.8973 32.794L27.9082 32.6413L27.9281 32.508L28.0621 32.2648L28.1617 31.992L28.3095 31.8158L28.397 31.7747L28.4375 31.6878L28.7682 31.4096L28.7054 31.3336L28.5461 30.9534L28.5286 30.8659L28.5008 30.826L28.2878 30.1048L28.2099 29.8918L28.19 29.7814L28.1665 29.7427L28.1176 29.5255L28.0874 29.2581V29.2376L28.088 29.2183L28.0699 28.3161L27.98 27.75L27.9764 27.7023L27.9728 27.6951L27.9046 27.1193L27.8955 26.9703V26.8948L27.9021 26.7705L27.9619 26.1827L28.0337 25.0463L28.0536 24.1839V24.1833L28.0542 24.1628L28.0922 23.2895L28.0947 23.2829L28.1019 23.1851L28.2558 22.0632L28.4085 21.7826L28.5231 21.4694L28.6535 21.3161L28.706 21.2515L28.8026 21.205L29.2166 20.8846L29.633 20.7277L30.0645 20.648L30.1351 20.6504L30.5425 20.6739L30.5581 20.6818L30.7211 20.6987L30.9649 20.7512L31.0132 20.7808L31.1411 20.8049L31.2256 20.8381L34.2045 20.8447L34.7603 20.8007L34.8508 20.7971L34.8521 20.7965L35.1912 20.7916L35.3813 20.7705L35.5189 20.7621L35.5201 20.7615L36.4881 20.753L37.403 20.6854L37.49 20.6824L37.5443 20.6836L37.8496 20.6981L38.0886 20.8079L38.1779 20.6329L38.2564 20.5852L38.3892 20.3758L38.8895 20.2002L39.4356 20.415ZM33.8599 23.5237L33.8647 23.4718L33.843 23.4706L33.8599 23.5237Z\" fill=\"#0069BF\"/>\n      <path d=\"M38.9495 20.1595L39.4787 20.212L39.7189 20.3339L39.8348 20.3816L39.8408 20.3955L39.8547 20.4027L39.9277 20.591L39.9585 20.6115L39.9621 20.62L39.9917 20.7576L40.0074 20.7986L39.9989 20.8197L39.9633 20.9887L39.9573 21.0032L39.9108 21.0334L39.8348 21.2156L39.4178 21.3888L39.3846 21.3876L38.8541 21.3581L38.8523 21.3569L38.8257 21.3556L38.8167 21.3544L38.7666 21.3563H38.7587L38.3399 21.3653L38.3381 21.3659L38.2536 21.3725L38.2518 21.3738L37.5729 21.3852H37.562H37.4304L37.0068 21.4625L36.9579 21.4667L36.9519 21.4697L36.5807 21.5047L36.5228 21.5071H36.5125L36.4709 21.5065H36.4667L36.1945 21.4993L35.8034 21.5379L35.801 21.5385L35.7147 21.547L35.7087 21.55L34.8921 21.5862L34.8577 21.5898L34.7944 21.5934H34.7841L34.5747 21.5898H34.5741L34.1377 21.5814L34.1329 21.5795L34.0816 21.5723L33.4461 21.588L33.3936 21.5922L33.3629 21.5934L33.3616 21.594L32.9585 21.6073H32.9386L32.871 21.6037L32.5741 21.5687L32.559 21.5602L32.4817 21.5494L32.4274 21.5331L31.9416 21.5572L31.9132 21.5578H31.9048L31.8523 21.5566L31.7394 21.559H31.728L31.6525 21.5542L31.3097 21.5077L31.0587 21.4896L31.0008 21.4957H30.9977L30.3562 21.4926L30.3544 21.4914L30.2162 21.4727L30.0092 21.4154L30.0014 21.4051L29.9531 21.3955L29.932 21.3864L29.81 21.3919L29.381 21.4244L29.3405 21.4263L29.2621 21.4202L29.0877 21.3931L29.0852 21.3894L29.0545 21.3858L28.8644 21.3412L28.4534 21.3164L28.221 21.3188H28.2156L27.8674 21.1746L27.7231 20.8264L27.737 20.7926L27.7364 20.792L27.8831 20.4389L28.0539 20.3677L28.0605 20.3587L28.0816 20.3514L28.1003 20.3484L28.2361 20.2923L28.3393 20.3351L28.4715 20.3363L28.4721 20.3369L28.5077 20.3381L28.979 20.3786L28.9875 20.3828L29.049 20.39L29.1951 20.4251L29.279 20.4154L29.291 20.4142L29.2922 20.4136L29.7286 20.3719L29.7569 20.3707L29.7588 20.3701L30.0008 20.3599L30.0231 20.3593L30.1341 20.3719L30.2615 20.3997L30.4021 20.4263L30.9639 20.4112L30.9808 20.4094L31.0418 20.4057H31.0484L31.3749 20.41L31.3755 20.4106L31.4184 20.4124L31.7594 20.4438L31.8523 20.4456L31.8982 20.445L32.4431 20.4244L32.4654 20.4238H32.4998L32.5481 20.4257L32.6893 20.4383L32.9633 20.457L33.3182 20.4625L33.3538 20.4588L33.4057 20.4558L33.4069 20.4552L34.0732 20.445L34.1335 20.4371L34.1383 20.4347L34.5735 20.4263H34.5753L34.7835 20.4226H34.7944L34.8553 20.4263L34.8638 20.4269L35.6296 20.3858L35.6447 20.384L35.6519 20.3804L36.1046 20.3291L36.1565 20.3261L36.1583 20.3255L36.466 20.3176H36.4715L36.4908 20.317L36.8191 20.2875L37.2711 20.2084L37.3773 20.1987H37.5584L38.1933 20.1903L38.1957 20.1897L38.2506 20.1861L38.2548 20.1843L38.7123 20.1595L38.7455 20.1589L38.7654 20.1595L38.8161 20.1607L38.8233 20.1601L38.8897 20.1565L38.9495 20.1595Z\" fill=\"#0069BF\"/>\n      <path d=\"M40.1019 20.797L40.1013 20.8061L40.0989 20.9123L40.1864 21.1223L40.1689 21.2539L40.1574 21.2955L40.1122 21.3299L40.1261 21.6721L40.1267 21.686L40.1339 22.2653L40.1345 22.2714L40.1327 22.3088L40.1134 22.5502L40.1128 22.5562L40.0742 22.9564L40.085 23.7566V23.7572L40.1267 26.4898L40.1369 26.8423L40.1816 28.1115V28.1121L40.2993 31.214V31.2171H40.2999L40.35 32.7047L40.3741 33.2032L40.3747 33.2303L40.3741 33.2557L40.356 33.6359L40.3656 33.6455V33.6504L40.3644 33.7457L40.3771 33.89L40.3789 33.9334L40.3457 34.109L40.3083 34.2032L40.2528 34.2406L40.2021 34.3631L39.8617 34.5043L39.5213 34.3631L39.5075 34.3299L39.4797 34.316L39.4405 34.2647L39.3512 34.004L39.3355 33.9678L39.3216 33.2478L39.2987 32.7518L39.2981 32.7282V32.7276L39.2932 31.243L39.1918 28.1471V28.1446L39.1544 26.8725V26.8719L39.1442 26.5158L39.1436 26.5007L39.1442 23.7638V23.753L39.1629 22.9262V22.9256L39.1641 22.9008L39.1973 22.485L39.2051 22.2605L39.2124 21.6854H39.213L39.2136 21.66L39.2383 21.3082L39.1767 21.1603L39.1942 21.0288L39.2057 20.9877L39.26 20.9461L39.2703 20.9226L39.2781 20.8646L39.3288 20.686L39.7072 20.4023L40.1019 20.797Z\" fill=\"#0069BF\"/>\n      <path d=\"M33.755 32.9684L34.3597 32.9931L34.3615 32.9937L34.3911 32.9955L34.434 32.9992L34.9542 33.0028L35.0345 33.0016H35.0405L35.816 33.001H35.8166H35.8884L35.9874 33.0094L36.2752 33.0583L36.3006 33.0728L36.3809 33.0879L36.5233 33.1416L36.6548 33.153L37.0423 33.1223L37.2789 33.0752L37.3453 33.0686L37.3531 33.0649L37.402 33.0607L37.4491 33.0589L37.5378 33.0655L37.7653 33.0999L37.8637 33.1549L38.023 33.2062L38.1751 33.316L38.2511 33.3263L38.3694 33.3359H38.411L38.8775 33.3057L38.9174 33.3045H38.921L38.9898 33.3051L38.991 33.3057L39.061 33.31L39.3821 33.351L39.4267 33.3745L39.5673 33.4077L39.682 33.4651L39.7206 33.5284L39.8335 33.5755L40.0085 33.9979L39.8335 34.4204L39.411 34.5954L39.1449 34.5079L38.9614 34.4922H38.9506L38.5004 34.5405L38.4334 34.5441H38.4267L38.3694 34.5435L38.236 34.5544L38.1829 34.5568L38.0942 34.5502L37.8474 34.5139L37.6892 34.427L37.5348 34.3691L37.4062 34.2568L37.2445 34.29L37.1787 34.2967L37.1714 34.3003L36.7037 34.3383L36.6536 34.3407L36.5559 34.3323L36.3072 34.2906L36.2952 34.284L36.2505 34.278L36.1883 34.2611L36.1829 34.2538L36.1479 34.2478L36.023 34.2025L35.8395 34.1718H35.8214L35.0513 34.1844H35.0411H35.0345L34.9488 34.1838H34.9445L34.3917 34.1736L34.3905 34.173L34.3428 34.1705L34.2928 34.1651L33.717 34.1428L33.6494 34.1422L32.1274 34.1434L31.1455 34.1494L30.1195 34.2955L30.0622 34.2997L30.0592 34.3009L29.5897 34.3196L29.1974 34.3468L28.4195 34.4409L28.3803 34.4433L28.3778 34.4439L28.0652 34.4578L28.0453 34.4584H27.9934L27.924 34.4874L27.571 34.3407L27.4243 33.9877L27.571 33.6346L27.924 33.488L28.0037 33.5212L28.201 33.459L28.2722 33.4476L28.2783 33.4409L29.0459 33.3208L29.4213 33.2267L29.5076 33.2158L29.5185 33.211L29.9729 33.1766L31.0139 33.0167L31.0984 33.01L31.0996 33.0094L32.1177 33.0022L33.6386 32.969L33.647 32.9684L33.7255 32.9678H33.7309L33.755 32.9684Z\" fill=\"#0069BF\"/>\n      <path d=\"M53.5199 18.2623L53.3908 18.3915L53.3739 18.4349L53.3576 18.4524L53.0902 18.7844L52.8114 19.138L52.3787 19.7922L52.1958 20.1302L52.1868 20.1356L52.1808 20.1537L51.5815 21.0276L51.363 21.4235L51.2351 21.6908H51.2345V21.692L51.2001 21.7608L51.0365 22.109L51.0311 22.1121L51.0275 22.1253L50.4083 23.2316L50.4034 23.234L50.4004 23.2442L50.3763 23.2828L50.1711 23.6709L50.1011 23.8254L50.0987 23.8272L50.0969 23.8332L50.0727 23.8821L49.7299 24.7113L49.6298 24.96L49.6273 24.9618L49.6255 24.9702L49.3521 25.5701L49.3298 25.6184L49.0963 26.1712L49.0945 26.1724L49.0932 26.1778L49.0281 26.3203L49.01 26.3619H49.0094V26.3631L48.768 26.893L48.7444 26.9497L48.5097 27.5387L48.5072 27.5405L48.5054 27.5496L48.3787 27.832L48.3353 27.8598L48.3002 27.9376L48.2628 27.9708L48.0625 28.0463L47.8018 27.7856L47.8042 27.6974L47.8072 27.5888V27.5719V27.5695L47.9074 27.3016L47.9086 27.301L47.9092 27.2967L48.1451 26.7059L48.1657 26.6486L48.1723 26.6443L48.1771 26.6226L48.4288 26.0909L48.4511 26.0451L48.5145 25.9105L48.7571 25.3607L48.7583 25.3595L48.7589 25.3559L48.7843 25.3022L49.0576 24.7137L49.1596 24.4693V24.4687L49.506 23.6335L49.5072 23.6323L49.5085 23.6274L49.5356 23.5665L49.5374 23.5653L49.5386 23.5599L49.6171 23.3981L49.6213 23.3951L49.6243 23.3842L49.8488 22.9805L49.8549 22.9769L49.8585 22.9636L49.8856 22.9226L50.5066 21.8405L50.6732 21.4995H50.6738L50.6744 21.4983L50.7076 21.4313L50.8356 21.1603L50.8404 21.1573L50.844 21.1446L51.0751 20.7282L51.086 20.7222L51.0926 20.7005L51.713 19.8393L51.9104 19.5098L51.9164 19.5067L51.9194 19.4959L52.3799 18.8314L52.389 18.8266L52.3932 18.8139L52.6901 18.4567L52.6931 18.4555L52.6949 18.4512L52.8579 18.2666L52.8537 18.2623L52.9255 18.1905L52.984 18.1247L52.9973 18.1187L53.1868 17.9292L53.5199 18.2623Z\" fill=\"black\"/>\n      <path d=\"M47.9888 27.5493L48.037 27.5837L48.0431 27.6024L48.1565 27.6766L48.2211 27.7134L48.2259 27.7231L48.2434 27.7285L48.2664 27.7454L48.3032 27.8172L48.3521 27.8474L48.4203 27.9898L48.8258 28.8015L48.827 28.807L48.8288 28.8082L49.0032 29.1751L49.0081 29.1956L49.0135 29.1992L49.2217 29.7635L49.2229 29.7695L49.2241 29.7701L49.413 30.3121L49.6466 30.8377L49.9676 31.3978L49.9694 31.4062L49.9731 31.408L51.0117 33.3803L51.0177 33.4038L51.025 33.4093L51.2241 33.9089L51.4577 34.4503L51.8131 35.1648L52.0576 35.6392L52.5518 36.4213L52.8602 36.8257L52.8608 36.8275L52.862 36.8281L53.1306 37.1866L53.1366 37.2053L53.1469 37.2113L53.3955 37.6235L53.3997 37.6374L53.4058 37.641L53.4257 37.6802L53.4414 37.7442L53.4522 37.7526L53.4679 37.8239L53.518 37.9385L53.5373 38.0315L53.5404 38.0339L53.5416 38.0653V38.0755L53.3008 38.3163L53.1994 38.2934L53.1686 38.2795L53.1288 38.2161L53.0539 38.1727L52.9851 38.0514L52.9363 37.9832L52.9254 37.9494L52.9103 37.9403L52.8952 37.9089L52.6641 37.5155L52.4076 37.1672L52.407 37.1654H52.4064L52.0992 36.7442L52.095 36.7321L52.0883 36.7285L51.5814 35.9271L51.576 35.9089L51.5681 35.9041L51.3189 35.4183L51.3177 35.4147L51.3165 35.4141L50.9568 34.6917L50.9544 34.6802L50.9507 34.6778L50.7099 34.128L50.7081 34.1214L50.7063 34.1202L50.506 33.6319L49.4806 31.6682L49.162 31.0966L49.1565 31.0773L49.1499 31.0725L48.9073 30.5257L48.9031 30.5058L48.8982 30.5028L48.7069 29.9524V29.9518L48.5035 29.4032L48.3291 29.0526V29.0508L48.3285 29.0502L47.9266 28.2342L47.9254 28.2294L47.9236 28.2282L47.8886 28.1546L47.8325 28.1027L47.8246 28.084L47.8071 28.0761L47.7944 28.0604L47.8071 27.5891L47.8077 27.5414V27.5408L47.8204 27.5221L47.8439 27.405L47.9888 27.5493Z\" fill=\"black\"/>\n      <path d=\"M53.2782 17.815L53.2837 17.8144H53.2963L53.4146 17.8434L53.4907 17.8826L53.5063 17.9085L53.551 17.9267L53.7828 18.1506L53.8087 18.2121L53.8419 18.2332L54.0235 18.6122L54.0242 18.6146L54.0254 18.6152L54.1255 18.8271L54.4176 19.4052L54.4194 19.4137L54.4231 19.4161L55.2402 21.1886L55.2414 21.1934L55.2426 21.1946L55.5118 21.8053L55.6017 21.9816L55.7013 22.1324L55.7019 22.1337L56.0242 22.6219L56.0326 22.6496L56.0441 22.6569L56.3024 23.1892L56.303 23.1928L56.3042 23.1934L56.4792 23.5615L56.5939 23.7595L56.618 23.7999L56.6222 23.8138L56.6283 23.8174L56.9336 24.4064L57.6723 25.7402L57.6977 25.7848L57.7001 25.7933L57.7037 25.7957L58.4273 27.1759L58.6711 27.6213L58.6717 27.6231L58.6723 27.6237L58.6904 27.6569L58.8033 27.8458L58.8437 27.99L58.8262 28.0075L58.8292 28.0105L58.5818 28.258L58.5788 28.255L58.5649 28.2688L58.3464 28.1632L58.2046 27.984L58.1937 27.9526L58.1774 27.9429L58.1575 27.9067L58.1569 27.9061V27.9055L57.9095 27.4583L57.9083 27.4523L57.9059 27.4511L57.1847 26.0721L57.1611 26.0311L57.1599 26.0268L57.1581 26.0256L56.42 24.6853L56.417 24.6756L56.4134 24.6732L56.1219 24.0896L56.1026 24.0588L56.1014 24.0546L56.099 24.0534L55.9747 23.8464L55.9716 23.8349L55.9668 23.8319L55.7701 23.4644L55.7671 23.4535L55.7634 23.4505L55.5142 22.9291L55.2155 22.4463L55.2149 22.4432L55.2136 22.4426L55.1111 22.2737L55.1098 22.2688L55.1074 22.2676L54.9964 22.0769L54.9898 22.0516L54.9813 22.0461L54.7115 21.43L53.9059 19.6545L53.6246 19.0799L53.5124 18.8862L53.5076 18.8681L53.5009 18.8639L53.3313 18.5078L53.3247 18.4988L53.2758 18.5477L52.9499 18.2827L52.933 18.2025L52.9258 18.1324L53.0779 17.9804L53.233 17.8168H53.2408L53.2589 17.7993L53.2782 17.815Z\" fill=\"black\"/>\n      <path d=\"M58.512 27.9253L58.5476 27.9277L58.5609 27.9416L58.7426 28.0345L58.7534 28.0496L58.8041 28.2041L58.7371 28.2705L58.7329 28.291L58.719 28.32L58.7215 28.3538V28.355L58.7589 28.3924L58.6388 28.6483L58.6189 28.6652L58.4601 28.7231L58.1928 29.3345L58.191 29.3357L58.1892 29.3417L57.8886 29.9663L57.8766 29.9742L57.8675 30.0025L57.7094 30.2343L57.3654 30.7334L56.6219 31.9875L56.6201 31.9887L56.6189 31.9929L56.398 32.3435L56.3938 32.3459L56.3907 32.3544L56.051 32.8426L55.4487 33.7141L55.162 34.2451L55.0461 34.5457L55.0425 34.5481L55.0401 34.5596L54.9254 34.813L54.9194 34.8173L54.9152 34.8342L54.8965 34.868L54.7365 35.221L54.6412 35.4636L54.471 35.9838L54.465 35.9881L54.4589 36.0134L54.0359 36.9482L54.028 36.953L54.0226 36.9736L53.9804 37.0466L53.9749 37.0496L53.9719 37.0605L53.7631 37.3785L53.7565 37.3821L53.7528 37.3936L53.7106 37.4491L53.7052 37.4521L53.7021 37.46L53.6671 37.5022L53.6496 37.5101L53.6418 37.5294L53.5271 37.6374L53.3183 37.7207H53.3081L53.2266 37.7177L53.2242 37.7147L53.1204 37.6905L53.1107 37.6857L52.9707 37.4582L52.9822 37.4395L53.0232 37.3097L53.0697 37.2421L53.0763 37.2391L53.0793 37.2295L53.1771 37.1051L53.1813 37.1027L53.1831 37.0973L53.2121 37.0629L53.2429 37.0218L53.4426 36.7237L53.4704 36.6742L53.8814 35.7636L54.0679 35.2536L54.1566 34.9953L54.1626 34.9911L54.1668 34.9693L54.3364 34.597L54.34 34.5946L54.3431 34.5837L54.3648 34.5421L54.4819 34.2976H54.4825L54.6261 33.9923L54.6297 33.9905L54.6315 33.9814L54.9327 33.4165L54.9429 33.4105L54.949 33.39L55.5579 32.4992H55.5585L55.5591 32.498L55.8947 32.017L56.1101 31.6724L56.8772 30.425L56.8838 30.4214L56.8874 30.4099L57.2411 29.9138L57.3817 29.6948L57.6973 29.0985L58.022 28.4111L58.0172 28.4063L58.0304 28.393L58.0842 28.2795L58.0908 28.2753L58.095 28.259L58.1711 28.1317L58.1898 28.1208L58.2012 28.0913L58.264 28.0231L58.3455 27.9868L58.369 27.9543L58.4143 27.9392L58.4976 27.9253H58.512Z\" fill=\"black\"/>\n      <path d=\"M54.2828 22.1429L54.2773 22.2093L54.1222 23.1948L53.9961 24.1471L54.0589 24.1205L54.4511 24.5128V24.5243L54.4469 24.6685L54.4463 24.6691L54.4457 24.6878L54.418 25.0306L54.6594 24.884L54.7294 24.8906L54.7547 24.8954L55.045 25.2503L55.0438 25.2768L55.0215 25.5798L55.0208 25.5804L55.0196 25.5985L54.9611 26.0511L55.0915 25.9962L55.1397 25.9992L55.1699 26.0035L55.2852 26.1368L55.4668 26.2865L55.4886 26.3963L55.4958 26.4682L55.4916 26.5207L55.389 27.2213L55.3872 27.2231L55.3854 27.2418L55.2345 27.9697L55.4011 27.7403L55.4113 27.7355L55.4161 27.721L55.7692 27.3052L55.803 27.2895L55.8181 27.2581L55.9478 27.1555L55.9985 27.138L56.013 27.1145L56.1301 27.0584L56.2568 27.0294L56.2616 27.0246L56.3395 27.0198L56.3606 27.0191L56.5133 27.0548L56.5881 27.0916L56.6322 27.1628L56.7245 27.2123L56.7668 27.2768L56.8 27.3867L56.8187 27.4018L56.8549 27.5834L56.8621 27.6546L56.8609 27.6812L56.8567 27.7373L56.9635 27.6993L57.0842 27.6788L57.1204 27.6806L57.188 27.6872L57.2085 27.6776L57.2309 27.6371L57.3087 27.5864L57.4855 27.5339H57.4867L57.6207 27.5345L57.6219 27.5351L57.8114 27.5979L57.911 27.6715L58.0094 27.8677L58.0383 27.8936L58.0571 28.0602L58.0589 28.097L58.0486 28.1773L57.9883 28.412L57.9774 28.4205L57.9641 28.4748L57.8096 28.7783L57.7752 28.9443L57.7716 28.9473L57.7674 28.9727L57.6624 29.2907L57.6557 29.2955L57.6497 29.3215L57.4511 29.7355L57.4361 29.7452L57.4246 29.7796L57.3027 29.9437L57.2399 29.9751L57.2122 30.0216L57.1313 30.065L56.9985 30.0994L56.8802 30.0729L56.8549 30.0608L56.7704 29.9262L56.7215 29.9244L56.7119 29.9147L56.6081 29.8671L56.4584 30.1598L56.3775 30.3366L56.1325 30.4923L55.9973 30.82L55.9919 30.8236L55.9883 30.8393L55.7366 31.3559L55.7318 31.3589L55.7288 31.3698L55.5362 31.7228L55.5018 31.7433L55.4789 31.8025L55.3178 31.9787L55.1766 32.0409L55.1379 32.0934L55.0951 32.1073L54.9677 32.1272L54.5827 31.861L54.5592 31.7983L54.532 31.6504L54.5338 31.6112L54.5399 31.5478L54.5423 31.5454L54.5465 31.505L54.6533 30.9968L54.6612 30.9902L54.6708 30.9383L54.9146 30.3028L54.9225 30.298L54.9279 30.2738L55.2604 29.5967L55.2683 29.5919L55.2731 29.5732L55.6316 28.9685L55.6425 28.9618L55.6491 28.9413L55.9195 28.5671L55.9321 28.5611L55.9382 28.5436L56.054 28.409L56.1403 27.96L56.1415 27.928L55.952 28.1495L55.6123 28.6655L55.2013 29.3885L54.6799 30.4983L54.2188 31.5593L54.013 32.1441L54.0118 32.1453L54.0106 32.1507L53.7493 32.8423L53.7366 32.8508L53.7263 32.8924L53.7004 32.9407L53.2906 33.1863L52.9617 33.0499L52.8814 32.8568L52.5465 32.9799L52.1548 32.8176L51.9925 32.4259L51.9973 32.3945L52.0003 32.3462L52.0341 32.0976L52.0353 32.0958L52.0359 32.0849L52.0758 31.8441L52.0824 31.8387L52.0909 31.7802L52.2116 31.3776L52.0709 31.3197L51.9285 30.9751L51.9309 30.9232L51.9358 30.8822L51.6304 30.756L51.4753 30.3818V30.38L51.4759 30.0879L51.4771 30.0572L51.1506 29.922L51.0088 29.5798L50.87 29.8152L50.5091 29.9467L50.1108 29.7814L50.0516 29.6389L49.9225 29.5858L49.7607 29.1948L49.7613 29.1646L49.8078 28.3161L49.809 28.3143L49.8102 28.2889L49.9309 27.173L49.9333 27.1688L49.9358 27.1398L50.1633 25.8278L50.1699 25.8164L50.1753 25.7753L50.5344 24.4869L50.5887 24.275L50.5948 24.2702L50.8187 23.4663L50.8241 23.4621L50.8289 23.4362L50.8561 23.3571L50.917 23.3143L50.9798 23.1628L51.3498 23.0095L51.5043 22.5062L51.5501 22.2569L51.5556 22.2527L51.5616 22.2117L51.6014 22.0777L51.6527 22.0403L51.7143 21.8906L52.0353 21.7578L52.3558 21.8906L52.4107 22.0228L52.4608 22.0023L52.8024 22.1441L52.809 22.1598L52.8283 22.0916L52.8591 22.0421L53.2321 21.8357L53.5441 21.9648L53.5453 21.9691L53.8567 21.7168L54.2828 22.1429Z\" fill=\"black\"/>\n      <path d=\"M55.0269 28.0283L55.1271 28.0289V28.0295L55.182 28.0356L55.2701 28.0561L55.284 28.073L55.3649 28.0989L55.4439 28.1545L55.4632 28.1919L55.5037 28.2112L55.5839 28.3126L55.5906 28.3319L55.6045 28.3277L55.6473 28.3307L55.6938 28.3355L55.7179 28.3633L55.9213 28.452L55.9907 28.5268L56.0764 28.7465L56.0903 28.7592L56.1156 29.1599L56.1162 29.1846L56.1156 29.2112L56.0595 29.9794L56.0583 29.9806L56.0553 30.0132L55.9714 30.4918L55.9702 30.493L55.9684 30.5063L55.768 31.388L55.7644 31.391L55.7608 31.4158L55.5646 32.0181L55.5616 32.0199L55.5598 32.0313L55.3275 32.6403L55.322 32.6439L55.3178 32.6632L55.1072 33.1074L55.0854 33.1213L55.0698 33.1695L54.8609 33.4465L54.7565 33.4984L54.7149 33.5612L54.6039 33.6101L54.4554 33.6415L54.3118 33.5908L54.2291 33.7622L54.2122 33.773L54.1995 33.8111L54.1313 33.9046L53.8652 34.0392L53.8561 34.0386L53.8314 34.038L53.5049 33.7018V33.6916L53.5182 33.242L53.5188 33.2414L53.5206 33.21L53.596 32.6252L53.5978 32.6234L53.6002 32.601L53.7529 31.8684L53.7571 31.8648L53.7626 31.834L54.007 31.0959L54.0136 31.0911L54.0197 31.0651L54.2007 30.6723L54.2116 30.6656L54.2194 30.6385L54.2816 30.5407L54.4204 30.0325L54.4264 30.0277L54.4319 29.9981L54.6533 29.423L54.6636 29.4164L54.6721 29.3832L54.9008 28.9517L54.9153 28.9432L54.9243 28.9143L55.0323 28.7598L55.036 28.6783L55.0191 28.5751L55.0082 28.5298L54.9913 28.5274L54.7734 28.2788L55.0245 28.0283H55.0269Z\" fill=\"black\"/>\n      <path d=\"M51.6333 21.2158L51.7672 21.5392L51.734 21.7112L51.4528 22.4065L51.4353 22.4179L51.4214 22.4674L51.3001 22.6684L51.2911 22.6877L51.238 22.815H51.2374V22.8162L51.1191 23.089L51.1155 23.0914L51.113 23.1023L51.0714 23.1874L50.9996 23.5573L50.9875 23.567L50.9712 23.6473L50.9048 23.8024L50.8016 24.118L50.6894 24.6346L50.6127 25.0522L50.6067 25.1228L50.6055 25.124L50.6037 25.1488L50.4311 26.2815L50.4305 26.2821V26.2852L50.2965 27.0884L50.2953 27.0896L50.2941 27.0993L50.276 27.191L50.3188 27.2109L50.3472 27.2556L50.3937 27.2749L50.3949 27.2779L50.4401 27.2966L50.5687 27.6068V27.6135L50.5639 27.9532L50.5632 27.9617L50.553 28.2459L50.7527 28.3286L50.8191 28.4879L50.8825 28.5459L50.9109 28.8404L51.1311 28.9315L51.2132 29.1295L51.2186 29.1337L51.2856 29.1059L51.308 28.9472L51.311 28.9442L51.3146 28.9098L51.3828 28.6195L51.387 28.6159L51.3919 28.5881L51.4045 28.5471L51.4558 28.5097L51.5138 28.3703L51.8312 28.2387L52.0436 28.2924L52.0756 28.3093L52.0998 28.3497L52.1486 28.3703L52.1975 28.4885L52.2808 28.5459L52.41 28.8953L52.4196 28.946L52.4275 28.952L52.4425 29.0178L52.5518 28.9496L52.6978 28.981L52.7431 29.0015L52.8258 29.1307L52.9278 29.2019L53.0285 29.4789L53.0358 29.5211L53.0418 29.526L53.0605 29.6117L53.2066 29.2049L53.2174 29.1977L53.2271 29.1614L53.2929 29.0498L53.3212 28.8706L53.2265 28.5803L53.2186 28.529L53.2048 28.5266L52.9181 28.1971L53.2512 27.8639L53.2965 27.8669L53.5246 27.8983L53.5886 27.9726L53.7902 28.1126L53.8475 28.2677L53.8638 28.3564L53.868 28.36L53.8747 28.4481L53.8759 28.4747L53.8644 28.5604L53.7745 28.9007L53.7334 29.1476L53.7304 29.3027V29.3033L53.725 29.3534L53.617 29.87L53.7636 29.9557L53.8095 30.0365L53.8553 30.2067L53.8602 30.2121L53.8795 30.6847L53.8801 30.701L53.8795 30.7245L53.8559 31.1023L54.1849 31.4318V31.4469L54.1523 32.3256L54.1517 32.3262L54.1492 32.3576L54.0786 32.9514L54.0768 32.9532L54.0738 32.9822L54.0116 33.287L53.9646 33.7728L53.9628 33.774L53.961 33.7987L53.8813 34.2683L53.8771 34.2719L53.8716 34.3099L53.7558 34.7094L53.7461 34.7167L53.7371 34.7601L53.6483 34.9569L53.5741 35.0045L53.5156 35.121L53.4202 35.1916L53.3538 35.2139L53.3484 35.223L53.3381 35.2483L52.9495 35.5036L52.8644 35.4952L52.8409 35.4903L52.5995 35.1922L52.5077 35.1065L52.4993 34.9852L52.3798 35.0902L52.0629 34.9593L51.9314 34.6418L51.9362 34.5791L51.9785 34.2785L52.1004 33.2272L52.0967 33.1983L52.0943 33.1627L52.0937 33.1614L52.0545 32.3021L52.0533 32.631V32.6376L52.0473 32.9605L51.9465 33.1958L51.9006 33.3051L51.8988 33.3063L51.8976 33.3081L51.5464 33.4517L51.1921 33.3051L51.0756 33.0238L51.0684 33.0178L51.0654 32.9985L51.0454 32.9508L51.046 32.9279L51.0479 32.8947L51.046 32.8796L51.0448 32.8784L51.0171 32.666L51.0165 32.6581L50.7956 32.5664L50.661 32.2411V32.2266L50.6701 31.946L50.6658 31.698L50.655 31.7028L50.3188 31.5712L50.3146 31.5616L50.3056 31.5579L50.2621 31.4541L50.1619 31.2471L50.145 31.0329L50.1438 30.9925L50.1444 30.9701L50.1667 30.4735L50.1571 30.4771L49.8378 30.3449L49.7678 30.1753L49.7202 30.1385L49.7117 30.1065L49.6972 29.9943L49.6978 29.975L49.7008 29.8977L49.7057 29.1307V29.1228L49.7075 29.0619L49.6803 29.0794L49.5639 29.0631L49.5337 29.054L49.2422 28.6636V28.6605L49.2428 28.5851V28.5748L49.2537 28.2586L49.2549 28.258L49.2585 28.2109L49.3158 27.8446L49.3176 27.8434L49.3188 27.8301L49.4269 27.2942L49.4667 26.9647L49.4673 26.9641L49.4679 26.9587L49.5814 26.1524L49.5826 26.1512L49.5832 26.1403L49.7817 25.0112L49.7835 25.01L49.7853 24.9949L49.8028 24.9158L49.8771 24.4789L49.9718 23.9303L49.9724 23.9285L50.0406 23.5573L50.0485 23.5507L50.0587 23.491L50.1227 23.3111L50.1444 23.296L50.1643 23.226L50.3756 22.8863L50.4142 22.8024L50.4878 22.5447L50.4945 22.5398L50.5005 22.5091L50.5548 22.3727L50.559 22.3697L50.5608 22.3618L50.5995 22.1518L50.6079 22.1446L50.62 22.0794L50.8825 21.3763L50.935 21.3401L50.9863 21.2158L51.3098 21.0818L51.6333 21.2158Z\" fill=\"black\"/>\n      <path d=\"M53.1116 19.2562L53.1146 19.2646L53.1225 19.2677L53.1406 19.287L53.2758 19.628L53.2721 19.6883L53.2438 19.9206L53.2365 19.9273L53.2438 20.0582L53.2444 20.0776L53.2202 20.2019L53.1653 20.3383L53.1412 20.4167L53.0881 20.6153L53.082 20.6195L53.0766 20.6485L52.7362 21.4783L52.589 22.083L52.5878 22.0842L52.5866 22.0926L52.3186 23.0456L52.3156 23.048L52.3132 23.0625L52.0145 23.9394L51.7525 24.9068L51.3711 25.1958L50.9752 24.8005L50.9758 24.7788L50.9963 24.401L50.9982 24.3992L51.003 24.3497L51.006 24.3328L50.7797 24.8217L50.3814 25.7408L50.3361 25.7698L50.2987 25.8687L50.184 25.9979L50.1714 26.0033L50.1659 26.0172L49.8376 26.153L49.5099 26.0172L49.3735 25.6889L49.4091 25.5103L49.4749 25.3528L49.8388 24.4191L49.8425 24.4167L49.8449 24.4047L50.2202 23.5392L50.2305 23.5326L50.2384 23.5018L50.7845 22.4916L51.0253 22.0238L51.0573 21.8772L51.1756 21.6207L51.8654 19.9617L52.006 19.8687L52.0621 19.7613L52.0971 19.7366L52.108 19.7203L52.1394 19.707L52.14 19.7064L52.1659 19.6889L52.204 19.6768L52.309 19.4324L52.321 19.4041L52.3759 19.3684L52.4285 19.2502L52.767 19.1138L53.1116 19.2562Z\" fill=\"black\"/>\n      <path d=\"M51.0619 23.1512L51.0535 23.2266L51.0179 23.3781L51.0155 23.3799L51.013 23.3962L50.765 24.2278L50.7632 24.229L50.762 24.2375L50.5791 24.7903L50.3926 25.4746L50.3094 25.952L50.3082 25.9707L50.3057 25.9731L50.2979 26.0401L50.1766 26.5682L50.1675 26.5748L50.1579 26.6279L50.15 26.6478L50.1156 26.7909L49.9865 27.439L49.9442 27.4734L49.8658 27.6629L49.552 27.7927L49.2388 27.6629L49.1084 27.3497L49.1181 27.2586L49.2502 26.6261L49.2647 26.4837L49.2653 26.4493L49.2683 26.442L49.2919 26.3069L49.4723 25.7963L49.4789 25.7915L49.59 25.2918H49.5906L49.7445 24.5706L49.7499 24.5664L49.756 24.5296L49.9412 23.9635L49.9515 23.9556L49.9611 23.9146L50.2913 23.2242L50.3033 23.1874L50.3118 23.1819L50.3353 23.1325L50.345 23.1258L50.3589 23.0872L50.3727 23.0691L50.3776 23.0673L50.3788 23.0637L50.4747 22.9436L50.7318 22.821L51.0619 23.1512Z\" fill=\"black\"/>\n      <path d=\"M50.2244 25.257L50.1562 25.3517L50.1163 25.4664L50.1091 25.476L50.0741 25.6004L49.9274 26.1972L49.9244 26.1996L49.922 26.2159L49.6703 27.0421L49.6637 27.0469L49.6577 27.0765L49.5539 27.327L49.3758 27.9124L49.2998 28.1942L48.9721 28.4434L48.6323 28.1037L48.6329 28.0759L48.6577 27.7772L48.6595 27.7754L48.6631 27.7379L48.7868 27.1115L48.7929 27.1067L48.8007 27.0608L48.8961 26.7844L49.1719 25.9709L49.3656 25.3849L49.3776 25.3765L49.3891 25.3306L49.4845 25.1501L49.5617 25.1043L49.6106 25.0174L49.6782 24.9757L49.7621 24.9522L49.7651 24.9474L49.7838 24.9413L49.8218 24.9353L49.8496 24.9274L49.8508 24.9262H49.8773L49.8912 24.9238L50.2244 25.257Z\" fill=\"black\"/>\n      <path d=\"M49.8428 25.536L49.8247 25.5795L49.8272 25.609L49.8278 25.6356L49.7626 25.8353L49.7276 25.883L49.6974 26.0605L49.6189 26.5698L49.5423 27.0955L49.5411 27.0967L49.5399 27.1118L49.3969 27.851L49.392 27.8553L49.386 27.8939L49.2792 28.224L49.2037 28.4714L48.8887 28.7026L48.5586 28.3725L48.5604 28.3417L48.5851 28.0774L48.5858 28.0761L48.5876 28.0592L48.6389 27.7165L48.7427 26.9766L48.7433 26.976L48.7439 26.9687L48.832 26.4388L48.8332 26.4376L48.8344 26.425L48.9412 25.9144L48.9491 25.9078L48.9599 25.8535L49.0444 25.6404L49.071 25.6223L49.0945 25.5535L49.144 25.4901L49.1814 25.472L49.1995 25.434L49.2104 25.425L49.2538 25.3212L49.2743 25.3006L49.5097 25.2029L49.8428 25.536Z\" fill=\"black\"/>\n      <path d=\"M48.6456 27.0356L48.6999 27.0525L48.7301 27.0947L48.8442 27.143L48.9208 27.2209L48.9601 27.318L49.0011 27.3464L49.0319 27.4273L49.0403 27.4725L49.0445 27.4767L49.0753 27.557L49.1121 27.5805L49.2636 27.9257L49.4519 28.1907L49.4634 28.2257L49.5159 28.2571L49.5949 28.4019L49.6088 28.4562L49.6227 28.4665L49.6855 28.6596L49.6692 28.5811L49.6324 28.4767L49.6167 28.3856L49.5696 28.3385V28.318L49.9027 27.9849L50.2359 28.318V28.3385L50.1894 28.385L50.1852 28.4321L50.1683 28.5232L50.1839 28.6662L50.2588 28.9662L50.4205 29.4363L50.951 30.7761L51.1393 31.175L51.2709 31.4297L51.2757 31.4502L51.2823 31.455L51.365 31.653L51.3789 31.7236L51.3861 31.7296L51.4109 31.895L51.4815 32.1738L51.4875 32.1937L51.502 32.2897L51.1683 32.6234L50.8472 32.3796L50.8363 32.341L50.6716 32.0531L50.5714 32.1533L50.2256 31.9493L50.1417 31.7972L50.1248 31.7344L50.1097 31.723L50.0319 31.4779L49.8744 31.2281L49.8725 31.2203L49.8683 31.2184L49.6492 30.8503L49.6444 30.8334L49.6372 30.8292L49.4911 30.548L49.4887 30.5371L49.4616 30.4961L49.441 30.4273L49.4193 30.4116L49.365 30.2613L49.3403 30.2245L49.3397 30.2215L49.3378 30.2209L49.0542 29.7924L49.0494 29.7773L49.0421 29.7731L48.6643 29.1309L48.6511 29.0839L48.6366 29.0736L48.5708 28.9034L48.5563 28.8262L48.5491 28.8195L48.534 28.7067L48.5304 28.6578L48.6782 28.5099L48.6698 28.3391L48.6692 28.3216L48.6698 28.3192L48.6529 28.2927L48.6517 28.2891L48.6499 28.2878L48.4392 27.9451L48.3246 27.7815L48.3161 27.77L48.2389 27.5431L48.2594 27.5226L48.2171 27.4508L48.1616 27.3953L48.1701 27.3277L48.1773 27.2939L48.2262 27.2559L48.2992 27.1134L48.3378 27.0851L48.5412 27.0193L48.6456 27.0356Z\" fill=\"black\"/>\n      <path d=\"M48.4492 27.5433L48.5451 27.5716L48.5856 27.5982L48.6399 27.6978L48.6984 27.7388L48.7322 27.8263L48.7346 27.8287L48.7334 27.8299L48.7467 27.8643L48.7473 27.868L48.7479 27.8686L48.8245 28.0726L48.9314 28.3327L49.1764 28.8879L49.5156 29.5964L49.9102 30.3164L49.9259 30.3767L49.9404 30.3876L50.0328 30.6815L50.1372 30.9537V30.9543L50.2174 31.1564L50.2283 31.2138L50.2355 31.2198L50.2373 31.2258L50.2428 31.2862L49.9911 31.5976L49.9851 31.5988L49.9139 31.6066L49.6875 31.5155L49.527 31.3616L49.4884 31.2705L49.4431 31.2409L49.3206 30.9615L49.3122 30.9205L49.3037 30.9138L49.2216 30.635L48.8813 29.9084L48.5258 29.1999L48.521 29.18L48.5149 29.1757L48.2772 28.6097L48.276 28.603L48.2742 28.6018L48.1667 28.3327L48.1559 28.2783L48.148 28.2717L48.1028 28.0581L48.0955 27.9863L48.1076 27.8969L48.1136 27.874L48.0684 27.8287L48.148 27.7491L48.1577 27.7153L48.2536 27.6435L48.4015 27.4956L48.4492 27.5433Z\" fill=\"black\"/>\n      <path d=\"M49.2043 26.7503L49.2465 26.7841L49.372 27.0467L49.3769 27.0521L49.3781 27.1064L49.5458 27.3526L49.4614 27.4371L49.4638 27.6037L49.5108 27.9097L49.5169 27.941L49.5652 28.0394L49.8518 28.4957L50.0172 28.7552V28.757H50.0178L50.2568 29.1324L50.3141 29.3285L49.952 29.6906L49.6702 29.5554L49.3901 29.2084L49.3883 29.2036L49.3853 29.2018L49.2115 28.9773L49.0172 28.906L48.9659 28.8626L48.9484 28.8252L48.914 28.8083L48.8084 28.6689L48.7885 28.6103L48.7649 28.5946L48.6551 28.3369L48.6382 28.2549L48.6309 28.2482L48.6014 28.0304L48.5977 27.9839L48.599 27.9604L48.6128 27.757L48.6153 27.7552L48.6213 27.7027L48.6231 27.6948L48.6219 27.6936L48.5869 27.3587L48.5845 27.3182L48.5869 27.2754L48.6153 27.0358L48.6219 27.0298L48.6376 26.9477L48.6605 26.891L48.9846 26.6731L49.2043 26.7503Z\" fill=\"black\"/>\n      <path d=\"M49.5693 28.3014L49.6097 28.3521L49.646 28.4541L49.6719 28.474L49.6985 28.573L49.7636 28.6889V28.6895H49.7642L49.9145 28.955L49.9163 28.9629L49.9193 28.9647L50.0678 29.2459L50.0738 29.2719L50.0823 29.2773L50.1795 29.5199L50.1825 29.5332L50.1855 29.535L50.4987 30.4203L50.7455 30.9743L51.1698 31.7402L51.3913 31.5181L51.6677 31.6478L51.7479 31.745L51.7673 31.7975L51.7944 31.8138L52.0841 32.3714L52.2965 32.159L52.6864 32.5115L52.6942 32.5923L52.8288 33.1687L52.853 33.2513L53.1426 33.993L53.2247 34.1572L53.2301 34.1596L53.2639 34.194L53.317 34.322L53.3291 34.3389L53.3406 34.3763L53.3575 34.3914L53.3623 34.4451L53.4154 34.5428L53.0376 34.9212L52.9827 34.9092L52.8252 35.0667L52.5156 34.923L52.2965 35.0142L52.1209 34.9761L52.005 34.9242L51.9827 34.8905L51.9079 34.8633L51.6737 34.6678L51.6484 34.6134L51.6001 34.5887L51.4812 34.4239L51.3979 34.4445L51.1668 34.3763L51.0769 34.3183L51.0425 34.255L50.9706 34.2194L50.8204 34.0196L50.8041 33.9719L50.7817 33.958L50.5476 33.5L50.5452 33.4909L50.5422 33.4891L50.2211 32.8204V32.8186L50.2205 32.818L50.0099 32.3793L49.996 32.3195L49.9845 32.3105L49.9157 32.0468L49.9049 31.9641L49.9037 31.9623L49.8976 31.7848L49.897 31.7716L49.9694 31.5501L49.9918 31.5193L50.197 31.4155L50.1306 31.2797L50.1263 31.2616L50.1209 31.258L49.8789 30.6738L49.8753 30.6551L49.8705 30.6515L49.5645 29.7535V29.7529L49.4782 29.5066L49.4752 29.4897L49.4722 29.4873L49.3907 29.2049L49.276 28.9755L49.2072 28.8808L49.1263 28.8072L49.1143 28.7806L49.0901 28.7692L49.0497 28.7185L48.9761 28.5096L49.3092 28.1765L49.5693 28.3014Z\" fill=\"black\"/>\n      <path d=\"M56.9006 30.567V30.6081L56.5675 30.9412L56.2344 30.6081V30.567L56.5675 30.2339L56.9006 30.567Z\" fill=\"black\"/>\n      <path d=\"M56.9623 29.2017L57.0667 29.1305L57.3503 29.4141L57.3437 29.4763L57.3171 29.5934L57.3087 29.6006L57.2972 29.6519L57.2731 29.7032L57.2429 29.8275L57.1361 30.0345L57.0884 30.1697L56.9792 30.2457L56.8386 30.4829L56.8343 30.5089L56.8023 30.6115L56.7734 30.6326L56.7414 30.7322L56.6877 30.8082L56.6533 30.8879L56.6509 30.8897L56.6497 30.8963L56.6104 30.9814L56.6056 30.9844L56.6026 30.9977L56.4348 31.32L56.232 31.7394L56.1964 31.7611L56.1699 31.8323L55.6967 32.3821V32.3827L55.6641 32.5113L55.6466 32.5252L55.6255 32.6097L55.465 32.9144L55.3075 33.2651L55.3038 33.2675L55.302 33.2765L54.7879 34.3248L54.7824 34.3278L54.7794 34.3405L54.5308 34.7967L54.5284 34.7979L54.5277 34.8022L54.4372 34.9609L54.1868 35.1057L54.1409 35.2144L54.0528 35.4546L53.9828 35.5034L53.8953 35.7738L53.7004 35.9138L53.6835 35.9591L53.6828 35.9597L53.6816 35.9633L53.6484 36.0484L53.3026 36.2826L53.2966 36.3176L53.2544 36.3526L53.1663 36.5656L52.8343 36.7032L52.5018 36.5656L52.3642 36.2331L52.3654 36.1981L52.401 35.7249L52.4022 35.7231L52.4046 35.6923L52.4318 35.5137L52.474 35.1371L52.4197 35.1763L52.4028 35.2126L52.3787 35.2699L52.3232 35.3061L52.2761 35.4208L51.9285 35.565L51.5815 35.4208L51.471 35.154L51.4402 35.1269L51.4052 34.8004L51.3702 34.705L51.3612 34.6555L51.3527 34.6489L51.3008 34.4383L51.2616 34.364L51.1681 34.3115L51.0528 34.125L51.0033 33.953L50.9798 33.9331L50.9478 33.7448L50.9399 33.6537L50.9472 33.5668L50.9683 33.4401L51.0124 33.4033L51.1095 33.1679L51.4692 33.0188L51.9599 33.396L52.0232 33.6332L52.0516 33.6941L52.124 33.7364L52.1385 33.7623L52.2067 33.8118L52.2344 33.8661L52.2465 33.8722L52.2628 33.8336L52.2906 33.8221L52.3117 33.7853L52.366 33.7539L52.6183 33.6863L52.8621 33.7497L52.9472 33.7967L52.9568 33.8124L52.9882 33.8227L53.092 33.8963L53.1463 34.0025L53.229 34.052L53.3069 34.1957L53.3564 34.0653L53.3642 34.0599L53.3702 34.0327L53.4083 33.9537L53.5935 33.8378L53.678 33.5783L53.7299 33.5409L53.7879 33.4002L53.923 33.3447L54.0981 32.9325L54.258 32.4014L54.6792 32.0912L54.742 32.1172L54.9574 31.6857L54.9749 31.6748L54.9822 31.6616L54.9937 31.6272L55.0299 31.5783L55.2538 31.1848L55.2737 31.1733L55.2857 31.1371L55.5585 30.7786L55.6092 30.6712L55.7384 30.3912L55.7589 30.3779L55.774 30.329L55.9707 30.0466L56.0552 30.0031L56.0968 29.9289L56.1487 29.8975L56.2127 29.7865L56.2157 29.7847L56.2182 29.778L56.4282 29.4401L56.4499 29.428L56.4632 29.393L56.5953 29.2427L56.8711 29.1184L56.9623 29.2017Z\" fill=\"black\"/>\n      <path d=\"M52.1289 33.0994L52.1356 33.0934L52.4168 33.3457L52.4289 33.4513L52.8073 33.8297V33.8327L52.8036 34.33L52.8936 34.2925L53.2062 34.4223L53.284 34.6106L53.3269 34.645L53.3456 34.7355L53.3486 34.7609L53.3504 34.7627L53.3951 35.0578L53.6419 35.1598L53.7614 35.4482L53.7668 35.4543L53.7747 35.8447V35.8532L53.7741 35.8737L53.7475 36.4543L53.7457 36.4555L53.7415 36.508L53.6787 36.8665L53.6407 36.8979L53.5598 37.0928L53.4494 37.1387L53.4126 37.2268L53.1096 37.3523L52.6811 36.9449L52.6733 36.7868L52.6546 36.5092V36.4995L52.5677 36.581L52.173 36.2388L52.1416 36.0173L52.1404 36.0023L52.1392 36.0017L52.1132 35.7597L52.1024 35.7554L52.0915 35.7446L52.0167 35.5702L51.9835 35.5418L51.9521 35.3601L51.9479 35.3131L51.9467 35.3125L51.94 35.17L51.9346 35.1658L51.9255 35.1151L51.9225 35.0813L51.9213 35.0801L51.8272 33.9437L51.826 33.9154L51.8266 33.8997L51.8435 33.5514L51.689 33.3976L51.762 33.1893L51.7765 33.1718L51.937 33.0946L51.9708 33.0536L51.9853 33.0505H51.9877L52.0028 33.0475L52.0704 33.0403L52.1289 33.0994Z\" fill=\"black\"/>\n      <path d=\"M53.9133 25.9166V26.1466L53.5802 26.4797L53.2471 26.1466V25.9166L53.5802 25.5835L53.9133 25.9166Z\" fill=\"black\"/>\n      <path d=\"M55.1011 25.1268L54.9853 25.3797L54.9376 25.4201L54.7203 25.501L54.3872 25.1679L54.5037 24.915L54.5514 24.874L54.7686 24.7937L55.1011 25.1268Z\" fill=\"black\"/>\n      <path d=\"M53.7082 21.8201L53.7426 21.8273L53.856 21.9686L54.0117 22.0911L54.0298 22.1653L54.0334 22.1931L54.0359 22.1955L54.0992 22.595L54.2887 23.146L54.3551 23.2884L54.4891 23.1538L54.8385 23.3759L54.8524 23.4049L54.8983 23.3343L54.9218 23.3216L54.9321 23.2963L54.929 23.2824L55.0624 22.9601L55.3847 22.8267L55.707 22.9601L55.7166 22.983L55.7365 22.9927L55.8373 23.1152L55.8421 23.1279L55.8512 23.1321L55.9369 23.2462L56.0781 23.4284L56.1107 23.5232L56.1457 23.5467L56.2682 23.8605L56.2809 23.9257L56.2905 23.9336L56.328 24.1043L56.3847 24.1852L56.5651 24.4351L56.5899 24.5105L56.6182 24.5292L56.7721 24.9028L56.786 24.9728L56.7969 24.9818L56.8138 25.0597L56.8385 25.0971L56.9381 25.2395L56.9695 25.3385L56.9966 25.359L57.089 25.6517L57.1578 25.7066L57.1934 25.7803L57.2531 25.8135L57.4281 26.0941L57.4487 26.1647L57.4692 26.1798L57.9109 27.4447L57.9194 27.4954L57.926 27.5015L57.9574 27.6559L57.964 27.7187L57.9652 27.7199L57.9695 27.8153L57.9701 27.834L57.8331 28.1387L57.8156 28.1544L57.7733 28.1707L57.7582 28.1973L57.7118 28.2263L57.5301 28.2776L57.4873 28.2969L57.1747 28.0724L57.0968 28.0404L57.086 28.0241L57.0872 28.1249V28.1291V28.1381L57.0847 28.2413L57.0359 28.289L57.0516 28.324L57.2453 28.735L57.2809 28.8907L56.9212 29.2504L56.6816 29.1043L56.684 29.1273L56.5525 29.4447L56.235 29.5763L55.8699 29.388L55.8192 29.3174L55.8065 29.2782L55.7878 29.2667L55.2682 28.289L55.261 28.2854L55.0105 27.9836L54.9948 27.9396L54.9695 27.9251L54.6979 27.461L54.6876 27.4248L54.675 27.4164L54.5434 27.1218L54.5144 26.9861L54.506 26.9788L54.4927 26.8177V26.8147L54.442 26.7L54.3955 26.6421L54.3153 26.4176L54.5476 26.1858L54.4094 25.773L54.3986 25.706L54.3919 25.7006L54.3485 25.4013L54.3461 25.3675L54.3449 25.3669L54.3352 25.2027L54.3346 25.1792L54.4595 24.9408L54.1976 24.534L54.1928 24.5171L54.1849 24.5123L53.8886 23.9764L53.8446 24.0205L53.5114 23.6873L53.5126 23.6632L53.5337 23.3699L53.5114 23.1647L53.2893 22.3795L53.2809 22.3216L53.2779 22.3186L53.2712 22.2311L53.27 22.2057V22.1961L53.2712 22.1569L53.2797 22.149L53.3835 21.9185L53.4034 21.9004L53.6351 21.8123L53.7082 21.8201Z\" fill=\"black\"/>\n      <path d=\"M53.821 18.6036L53.888 18.7654L53.9417 18.8052L53.9725 18.9078L53.9942 19.0508L53.9864 19.0786L54.0503 19.2862L54.066 19.3864L54.0715 19.3978L54.1004 19.8517L54.1143 19.9977L54.1403 20.0556L54.1928 20.0949L54.2501 20.2801L54.6219 21.0418L54.6237 21.0484L54.6255 21.0496L54.8222 21.4684L54.8271 21.4896L54.8331 21.4938L54.9284 21.7334L54.9327 21.7539L55.0039 21.8498L55.0256 21.9144L55.054 21.9319L55.3744 22.6103L55.5682 22.9983L55.5869 23.0261L55.5923 23.0448L55.6013 23.0496L55.9321 23.6091L55.9423 23.6471L55.9568 23.6561L56.0443 23.8523L56.1801 24.0925L56.2012 24.1715L56.2223 24.1866L56.2628 24.3085L56.3805 24.5155L56.3895 24.5511L56.4028 24.559L56.5615 24.9108L56.6062 25.1148L56.5018 25.3664L56.8421 25.9434L57.086 26.2234L57.101 26.2638L57.127 26.2777L57.1753 26.3508L57.2622 26.638L57.2616 26.6477L57.305 26.7684L57.3074 26.7702L57.4517 26.7104L57.7896 26.8438L57.8415 26.9536L57.8952 26.9874L58.0117 27.2258L58.019 27.2572L58.0286 27.2632L58.1584 27.594L58.1626 27.6175L58.168 27.6217L58.258 27.8933L58.2761 28.0043L58.2815 28.0092L58.293 28.1631L58.3117 28.2331L58.1686 28.5789L58.1433 28.5891L58.1029 28.7448L58.0938 28.7617L58.0787 28.816L58.0274 28.8547L57.9586 29.0206L57.6267 29.1582L57.3002 29.0261L57.2145 28.9434L57.1976 28.9023L57.1735 28.8486L57.1493 28.8692L56.8602 29.16L56.7359 29.2113L56.7239 29.2252L56.6255 29.2355L56.6013 29.2367L56.3762 29.0116L56.5784 28.7877L56.5881 28.7865L56.8029 28.5354L56.8102 28.5324L56.8138 28.524L56.9031 28.4322L56.9731 28.352L57.0123 28.3339L57.0292 28.3019L57.1125 28.2457L57.1228 28.2427L57.1258 28.2373L57.1668 28.2125L57.1282 28.0562L57.0528 27.938L56.8198 27.7509L56.8186 27.7503V27.7497L56.7927 27.7291L56.7613 27.664L56.6792 27.6223L56.573 27.4787L56.5506 27.4099L56.5217 27.3912L56.4149 27.1582V27.1576L56.4034 27.1341L56.372 27.0834L56.3539 27.0176L56.3334 27.0037L56.2948 26.9036L56.2815 26.871L56.2736 26.8577L56.0341 26.5553L56.0147 26.501L55.987 26.4847L55.7257 26.0116L55.6032 26.1341L55.27 25.801L55.3919 25.6797L55.3949 25.6676L55.3937 25.6664L55.3853 25.5457V25.5433L55.3702 25.317L55.2121 24.9778L55.2079 24.9573L55.2018 24.9536L54.9592 24.3616L54.9532 24.3333L54.9508 24.3278L54.9453 24.3242L54.9399 24.3073L54.6454 23.7418L54.4855 23.6374L54.4511 23.7195L54.1348 23.8505L53.9852 23.7883L53.9586 23.8233L53.9182 23.8348L53.7884 23.8523L53.7015 23.8444L53.6526 23.8354L53.6502 23.8414L53.2604 24.0031L52.8705 23.8414L52.8053 23.6845L52.7522 23.6471L52.7064 23.6284L52.6188 23.4974L52.4625 23.4002L52.3853 23.2463L52.3823 23.2337L52.0425 23.0973L52.0069 23.0635L52.0009 23.0484L51.8482 22.7153L51.8409 22.5698L51.8403 22.5427L51.9972 22.1643L52.0117 22.1582L52.0184 22.1444L52.1312 22.0424L52.1789 22.0243L52.203 21.9657L52.1867 21.9524L52.1101 21.6259L52.0974 21.5167L52.1077 21.4189L52.1252 21.3375L52.1698 21.3019L52.2453 21.119L52.5609 20.9887L52.6641 21.0007L52.7058 21.0104L52.6611 20.8824L52.7933 20.5626L52.8572 20.536L52.8524 20.5228L52.754 20.3037L52.7172 20.1347L52.7142 20.1317L52.7076 19.8649L52.6997 19.568L52.6991 19.5547L52.7184 19.4256L52.7558 19.2976L52.8265 19.2451L52.8596 19.1775L52.8446 19.0985L52.8349 19.0025L52.9755 18.6628L52.9822 18.6604L52.9846 18.6543H52.9858L52.9864 18.6525L52.9948 18.6447L53.3153 18.5173L53.3316 18.524L53.48 18.4624L53.821 18.6036Z\" fill=\"black\"/>\n      <g className=\"animate\">\n        <path d=\"M47.0895 17.7708L47.1565 17.9054L47.1571 17.909L47.1589 17.9096L47.3435 18.2904L47.349 18.314L47.3556 18.3188L47.5252 18.7708L47.5288 18.7914L47.533 18.795L47.7503 19.521L47.7539 19.5445L47.7569 19.5475L48.0008 20.6387V20.6393L48.0937 21.0279L48.0943 21.0321H48.0949L48.1178 21.1329L48.1275 21.212L47.7871 21.5524L47.4878 21.3743L47.4389 21.2838L47.4184 21.2041L47.4039 21.1927L47.3749 21.0672L47.3731 21.0647L47.3236 20.8897L47.3321 20.8813L47.3134 20.8004L47.3128 20.795H47.3122L47.0696 19.7026L46.8915 18.9712V18.9706L46.7708 18.515L46.6429 18.1347L46.5874 18.0116L46.562 17.8952L46.8402 17.6169L47.0895 17.7708Z\" fill=\"black\"/>\n        <path d=\"M47.7729 21.1942L47.6625 21.4417L47.6287 21.4724L47.4054 21.5581L47.0723 21.225L47.1827 20.9776L47.2165 20.9468L47.4398 20.8611L47.7729 21.1942Z\" fill=\"black\"/>\n        <path d=\"M48.295 21.0731L48.251 21.1172L48.2679 21.1449L48.1822 21.3447L48.1556 21.37L48.0561 21.4099L48.0331 21.4401L47.2667 21.6597L47.2522 21.6615L47.2504 21.6639L46.3771 21.8782L45.6451 22.0955L45.4061 22.189L45.3445 22.2011L45.3379 22.2089L45.1943 22.2367L45.1393 22.2674L45.0874 22.2807L45.0784 22.2928L45.0639 22.2976L44.9879 22.3085L44.7676 22.1878L44.7591 22.1739L44.7139 22.02L44.7766 21.8414L44.8491 21.7515L44.8635 21.7442L44.8708 21.7273L45.0102 21.5885L45.0868 21.5565L45.1122 21.5167L45.3596 21.399L45.4007 21.39L45.4079 21.3797L46.1568 21.1389L46.1961 21.1329L46.2003 21.1274L47.0868 20.9464L47.1242 20.9422L47.1261 20.9404L47.8322 20.8697L47.9619 20.74L48.295 21.0731Z\" fill=\"black\"/>\n        <path d=\"M30.4329 14.6538L31.5584 14.6731L31.5747 14.6737L33.1269 14.7769L33.1275 14.7775L33.1414 14.7781L34.3423 14.9109L34.3436 14.9121L34.3629 14.9139L35.413 15.0962L35.4142 15.098L35.4274 15.0992L36.8517 15.4118L36.8535 15.4136L36.8674 15.4154L37.862 15.6834L37.865 15.687L37.8813 15.6894L39.7069 16.2917L39.7111 16.2977L39.7346 16.3026L40.4932 16.6218L40.4956 16.6254L40.5071 16.6285L41.9615 17.3207L41.9627 17.3237L41.97 17.3255L43.0207 17.8699L43.0243 17.8759L43.0382 17.8801L43.658 18.2519L43.6586 18.2531L43.661 18.2543L44.5155 18.7848L44.5216 18.7956L44.5409 18.8023L45.4558 19.4854L46.0774 19.8862L46.3164 20.0153L46.3182 20.0183L46.3248 20.0201L46.7225 20.2501L47.1878 20.4438L47.1915 20.4492L47.209 20.4534L47.6157 20.6568L47.8082 20.7383L47.9772 20.9948L47.6972 21.2748L47.6224 21.2645L47.428 21.2102L46.9851 21.1384L46.9796 21.1312L46.9199 21.1209L46.4232 20.9381L45.9694 20.7715L45.9561 20.7522L45.8945 20.7341L45.6507 20.5814L45.6447 20.5699L45.6248 20.5633L45.0092 20.1016L44.0865 19.4178L43.2844 18.8487L42.6821 18.4987L41.6501 17.9682L40.1957 17.3394L39.4407 17.0672L37.6212 16.4848L36.6525 16.1939L35.2615 15.8391L34.2379 15.6405L33.0623 15.4746L31.53 15.3394L30.4202 15.2899L28.5143 15.2869L27.7974 15.308L26.7564 15.4317L26.1112 15.5367L25.3967 15.6973L24.8137 15.8674L23.8789 16.2018L23.037 16.5512L22.2862 16.9091L20.7352 17.7769L19.3876 18.5766L19.2548 18.6604L18.7751 18.9851L18.5059 19.2054L18.3701 19.3412L18.3049 19.3684L18.282 19.4064L18.0478 19.5313L17.9797 19.5482L17.9694 19.5621L17.8783 19.5856L17.8759 19.5862L17.8752 19.5868L17.8028 19.6055L17.7093 19.6176L17.4806 19.5373L17.419 19.4878L17.3834 19.4124L17.3309 19.381L17.308 19.3382L17.2699 19.1885L17.2675 19.1855L17.2627 19.0044V18.9954L17.5958 18.6623L17.7956 18.8457L17.8825 18.7805L17.9278 18.7655L17.9404 18.7443L18.1082 18.6604L18.4045 18.4625L18.9006 18.1276L18.9072 18.1251L18.909 18.1221L19.0485 18.0334L19.0575 18.0304L19.0599 18.0262L20.4196 17.232L20.4274 17.2302L20.4299 17.2265L22.0008 16.3726L22.0153 16.369L22.0183 16.3641L22.7859 16.0038L22.8046 15.9996L22.8083 15.9942L23.6719 15.6641L23.6803 15.6623L23.6815 15.6604L24.6308 15.3285L24.6477 15.3255L24.6501 15.3219L25.2494 15.1547L25.2615 15.1529L25.2627 15.1511L25.9905 14.9797L26.0026 14.9785L26.0038 14.9767L26.6586 14.8512L26.6815 14.8487L26.6827 14.8475L27.7413 14.7268L27.7539 14.7256H27.7545L28.4866 14.6713L28.5071 14.6707L30.4244 14.6538H30.4274H30.4329Z\" fill=\"black\"/>\n      </g>\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <rect width=\"1500\" height=\"1000\" fill=\"white\" transform=\"translate(-685 -29)\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\nexport default SkiGraphsSketch"},"relativePath":"sketches/ski_graphs.jsx"},{"fields":{"contents":"import React from 'react'\n\nconst ChessSketch = () => (\n  <svg className=\"sketch chess\" width=\"26\" height=\"51\" viewBox=\"0 0 26 51\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0)\">\n      <path d=\"M654.106 -590H-846.011V410.078H654.106V-590Z\" fill=\"white\"/>\n      <path d=\"M2.78444 41.1833L2.80677 41.2074L2.87134 41.374L2.88643 41.3879L2.90272 41.5701L2.90393 41.5907V41.5913L2.91298 41.8852V41.896L2.91238 41.9238L2.88945 42.196L2.91781 42.7379L3.01498 43.3064V43.3124H3.01558L3.10791 43.8912L3.11214 43.9407L3.11335 43.9419L3.1405 44.8019V44.8067L3.18577 47.0379L3.19361 47.3094L3.19421 47.3221L3.19301 47.3474L3.16645 47.7808L3.16404 47.7832L3.15559 47.8496L3.11395 48.0228L2.74038 48.3137L2.35595 47.9292V47.9159L2.36199 47.7439L2.36923 47.3149L2.36983 47.31L2.37768 47.0427L2.36802 44.8206L2.3475 43.9799L2.28474 43.4132L2.2081 42.8254L2.20508 42.7771V42.7675L2.22198 42.1809V42.1718L2.23948 41.8755L2.25275 41.6275L2.21534 41.5907L2.26241 41.4965L2.27267 41.3867L2.28776 41.3728L2.35173 41.208L2.37406 41.1833L2.57925 41.0928L2.78444 41.1833Z\" fill=\"black\"/>\n      <path d=\"M12.012 27.5202L12.0139 27.5244L12.0181 27.5262L12.0658 27.6409L12.1696 27.8745L12.1744 28.0271L12.2601 28.0609L12.2909 28.0368L12.5443 27.9499L12.7018 27.9807L12.7387 27.9964L12.9861 28.3687L12.9451 28.5461L12.9366 28.5637L12.9143 28.5769L12.8986 28.6246L12.8932 28.6318L12.8467 28.9933L12.825 29.5896L12.7918 31.2649L12.7912 33.4737L12.8219 36.9982V37.0018L12.8213 37.0169L12.7676 38.513H12.767V38.5214L12.6952 39.7133L12.6946 39.7187L12.6572 40.204L12.6566 40.2094L12.6192 40.6053L12.6186 40.6065L12.6174 40.6228L12.5649 40.9885L12.5395 41.0102L12.4743 41.1889L12.4478 41.2196L12.1496 41.3578L11.7604 41.0012L11.7544 40.933L11.7537 40.9227V40.9221L11.7387 40.6831L11.7375 40.6584V40.6512L11.7405 40.4955L11.653 40.4586L11.5642 40.2456L11.525 40.2118L11.5021 40.0802L11.4967 40.0199L11.4948 40.0163L11.4448 38.8201L11.4442 38.8093L11.4327 38.2716L11.3548 39.2643L11.2969 39.3826L11.2257 39.5818L11.1955 39.618L11.1786 39.6258L11.1732 39.6373L11.1677 39.6391L11.1611 39.656L10.7676 39.8189L10.4104 39.6892L10.3965 39.665L10.3741 39.656L10.3319 39.5552L10.2196 39.3627L10.2118 39.318L10.2021 39.2142L10.219 39.0959L10.3126 37.5582L10.3132 37.5564L10.3144 37.5389L10.7984 32.525L11.0386 29.8256L11.111 28.3947L11.1358 27.8666L11.2414 27.6355L11.2866 27.5262L11.2927 27.5238L11.2951 27.5178L11.6524 27.3748L12.012 27.5202Z\" fill=\"black\"/>\n      <path d=\"M10.3042 17.7193L10.3343 17.7628L10.3567 17.8352L10.376 17.8497L10.4611 18.1255L10.4683 18.1725L10.4725 18.1768L10.5112 18.426V18.4302H10.5118L10.5438 18.6505L10.5462 18.6879L10.5474 18.6885L10.5715 19.3494V19.3608V19.3614L10.58 20.8792L10.6415 21.3307L10.6439 21.362L10.6445 21.3632L10.6614 21.6396L10.7978 22.776L10.7996 22.805L10.8009 22.8056L10.8365 23.4936L10.8371 23.5165V23.5238L10.8274 24.1037H10.8268L10.8262 24.1303L10.7924 24.5371H10.7918V24.5425L10.6047 26.4236L10.5776 27.1037L10.5673 27.5533L10.5667 27.5539L10.5631 27.6016L10.5558 27.6517L10.5468 27.6602L10.5287 27.7477L10.4786 27.8666L10.1104 28.1092L10.0754 28.0742L10.0658 28.0838L9.84189 28.0036L9.81775 27.9836L9.69464 27.7217L9.70973 27.7066L9.72119 27.6469L9.7218 27.639L9.73387 27.557L9.74171 27.5497L9.76283 27.4978L9.75982 27.0941V27.0911V27.079L9.78033 26.382V26.3813L9.78154 26.3548L9.9638 24.4598L9.9644 24.458L10.0036 24.0784L9.99397 23.5262L9.97587 22.8509L9.87508 21.7109V21.7078V21.7072L9.85094 21.4212V21.4206L9.80749 20.9432L9.80568 20.9064V20.8943L9.85517 19.3518L9.87207 18.7139L9.85336 18.528L9.85275 18.5262L9.66748 18.3409L9.6711 18.2938L9.69343 18.1339L9.72421 17.9191L9.72783 17.8684L9.92517 17.6855L10.0199 17.5871L10.0398 17.5865L10.0519 17.5859L10.3042 17.7193Z\" fill=\"black\"/>\n      <path d=\"M9.81186 27.9758L9.80462 27.9674L9.72556 27.8213L9.72314 27.8129L9.81186 27.9758Z\" fill=\"black\"/>\n      <path d=\"M10.1041 21.7937L10.1759 21.8377L10.1983 21.8776L10.2562 21.9017L10.3878 22.2185L10.3872 22.2312L10.3847 22.3272L10.3793 22.3326L10.3033 22.5643L10.2634 22.6193L10.3244 22.6814L10.2001 22.8057L10.2031 23.1576L10.249 23.892L10.3715 24.7098L10.3757 24.7665L10.3769 24.7695L10.3986 25.3718L10.3992 25.3911V25.3978L10.3715 27.5348L10.3709 27.5372L10.3642 27.5879L10.4777 27.8607L10.4771 27.8854L10.462 28.1823L10.4578 28.1926L10.4415 28.3018L10.3938 28.4623L10.3359 28.8359L10.3353 28.8365L10.3347 28.8438L10.2272 29.4503L10.2242 29.4527L10.2218 29.4756L9.81504 31.2071L9.68408 31.8419L9.84642 31.9089L10.0063 32.2958L9.98703 32.3778L9.97798 32.4442L9.93755 32.5848L9.92849 32.6374L9.92729 32.6386L9.92608 32.647L9.70037 33.7442L9.69856 33.7454L9.69735 33.7575L9.42337 34.8896L9.41793 34.8938L9.41311 34.9264L8.83857 36.6675L8.83193 36.6724L8.82711 36.6989L7.81926 39.1594L7.52717 39.9138L7.47587 40.1334L7.47346 40.137L7.47225 40.1467L7.43061 40.3054L7.42638 40.3084L7.42276 40.3302L7.41371 40.3585L7.35879 40.3984L7.32862 40.4466L7.26525 40.6005L7.22119 40.6186L7.2055 40.644L6.89108 40.755L6.83194 40.7798L6.39923 40.6005L6.31655 40.3996L6.11739 40.7255L6.07334 40.7496L6.04678 40.819L5.75469 41.1419L5.66537 41.1811L5.62916 41.2487L5.42518 41.3803L5.27491 41.4255L5.19042 41.475L5.0504 41.5016L4.96229 41.51L4.95867 41.5136L4.92729 41.5251L4.91643 41.5462L4.8941 41.5625L4.52717 41.6808L4.08299 41.4967L3.89893 41.0526L4.02989 40.6687L4.14998 40.513L4.16748 40.504L4.17654 40.481L4.24654 40.402L4.14033 40.1805L4.13489 40.1051L4.13308 40.058L4.24352 39.7037L5.26163 38.2276L5.27551 38.2203L5.28275 38.1986L5.65149 37.7309L5.69192 37.711L5.72572 37.6633L5.76555 37.6428L5.77159 37.6283L5.77521 37.6271L5.78667 37.6054L5.85728 37.5577L6.04135 37.501L6.23206 37.4026L6.31051 37.4352L6.54407 36.9554L6.9629 36.0417L7.20912 35.3839L7.62675 33.9391L7.63097 33.9361L7.63399 33.9174L8.00876 32.8148L8.01057 32.813L8.01178 32.8063L8.10834 32.5414L8.21335 32.4684L8.37871 31.9276L8.43423 31.7412L8.69434 30.7502L8.82711 30.1395L8.86332 29.9645L8.88987 29.8142L9.19766 28.1298L9.19886 28.1292L9.19947 28.1214L9.22783 27.9844L9.22964 27.9826L9.23145 27.9681L9.35758 27.4629L9.3775 25.3911L9.37207 24.8214L9.26947 24.0079L9.26766 23.9856L9.26645 23.9838L9.20429 23.2173L9.20309 23.1751V23.1564L9.22119 22.679L9.223 22.6754L9.22783 22.6174L9.28878 22.2541L9.30568 22.2403L9.33706 22.1147L9.39862 21.9983L9.51087 21.9313L9.54044 21.8601L9.57424 21.8462L9.60079 21.8033L9.65873 21.7744L9.86452 21.7261L10.1041 21.7937Z\" fill=\"black\"/>\n      <path d=\"M5.45118 39.2655L5.47834 39.2468L5.5586 39.2577L5.58093 39.2631L5.73301 39.4635L5.82233 39.5419L5.83018 39.6005L5.83319 39.6463L5.82294 39.7296L5.79638 39.8364L5.77767 39.8509L5.75293 39.9378L5.64249 40.1152L5.62559 40.1243L5.61593 40.1521L5.26228 40.5932L4.94907 40.9915L4.83078 41.1484L4.81026 41.2209L4.51153 41.6964L4.34979 41.9758L4.36005 42.0344L4.3685 42.1327L4.36609 42.1865L4.3347 42.5075L4.22064 42.7338L4.17538 42.8437L4.16331 42.8485L4.15667 42.8618L3.78431 43.0054L3.39264 42.8437L3.2303 42.452L3.23211 42.4104L3.25142 42.1533L3.2134 41.8986L3.21219 41.8877L3.21159 41.8859L3.17779 41.6288L3.17236 41.5534L3.17478 41.5045L3.1959 41.2625L3.2128 41.2281L3.2484 41.0724L3.36971 40.8189L3.39264 40.805L3.40894 40.7519L3.69077 40.3313L4.13736 40.0947L4.43911 40.2197L4.5924 40.0398L4.61714 40.0283L4.62861 40.0024L5.04442 39.6192L5.04563 39.6186V39.618L5.06313 39.6017L5.01847 39.557L5.3516 39.2239H5.41014L5.45118 39.2655Z\" fill=\"black\"/>\n      <path d=\"M3.50809 41.0235L3.57026 41.1731L3.61854 41.2087L3.65173 41.3222L3.65535 41.3469L3.65897 41.35L3.68915 41.4809L3.6994 41.5654L3.70182 41.572L3.72234 42.0005L3.77605 42.0385L3.78752 42.0717L3.80441 42.1719L3.81407 42.1906L3.85028 42.5401L4.044 43.3807L4.05909 43.5117V44.0023V44.0174L4.04762 44.4507L4.06271 44.5533L4.08021 44.6614L4.08866 44.7573L4.08806 44.7845L4.0428 45.7211L3.93115 45.9655L3.88347 46.0808L3.87683 46.0838L3.87382 46.0898L3.49602 46.2413L3.10858 46.0808L2.94805 45.6933V45.6879L2.9577 44.8038L2.94624 44.7392L2.93718 44.6372L2.93779 44.6076L2.94443 44.4821L2.87804 44.3216L2.87925 44.286L2.89071 44.1315L2.90218 43.6988L2.90037 43.423L2.88468 43.3578L2.87442 43.2745L2.8714 43.2715L2.86356 43.1405L2.79898 42.709L2.79295 42.63L2.79234 42.6294L2.79174 42.3837L2.72837 41.6378L2.72656 41.595L2.73441 41.5075L2.75674 41.385L2.76941 41.2775L2.79898 41.2516L2.89373 41.0235L3.20091 40.8961L3.50809 41.0235Z\" fill=\"black\"/>\n      <path d=\"M3.45944 43.5115L3.47935 43.561L3.49866 43.6576L3.50289 43.6624L3.50651 43.7107L3.50772 43.7348V43.736L3.56686 43.8754L3.59583 43.9002L3.62117 44.0831L3.6254 44.1392V44.1446L3.62238 44.3926L3.65919 44.8368L3.67609 45.0209L3.70989 45.1947L3.71954 45.2882V45.2943L3.71532 45.6051L3.78291 45.8797L3.80645 45.9557L3.82757 46.0945L3.82999 46.1006L3.833 46.2424L4.07259 46.342L4.20476 46.6606L4.18786 46.7825L4.13656 46.9666L4.07983 47.0088L4.00621 47.1941L3.87947 47.3287L3.65376 47.4258L3.60307 47.491L3.52703 47.5103L3.3834 47.5284L2.98086 47.3619L2.81429 46.9587L2.82938 46.8284L2.84507 46.7602L2.84206 46.6721L2.833 46.5882L2.82999 46.5695L2.82274 46.564L2.80041 46.4627L2.78895 46.3534L2.78834 46.3522L2.78714 46.182L2.77929 46.1537L2.76058 46.0155L2.76119 45.9901L2.77748 45.6546L2.76722 45.3142L2.75213 45.1241V45.1199L2.73705 44.9117L2.73584 44.8767L2.74067 44.8115L2.80705 44.3468L2.84447 44.0818L2.86982 43.8984L2.89154 43.8797L2.90542 43.8398L2.86197 43.8103L2.84206 43.7614L2.81731 43.6353L3.15044 43.3021L3.45944 43.5115Z\" fill=\"black\"/>\n      <path d=\"M13.0831 46.9428L13.3885 46.9712L13.7681 46.9827L13.9974 46.9803H14.0028L14.0294 46.9809L14.0777 46.9839L14.4 46.9827H14.4012H14.4078L14.4597 46.9839L15.0155 46.9845H15.0161H15.0982H15.103L15.6365 46.9911L15.6951 46.9917H15.9817H15.9823H15.9853H16.0348L16.9075 46.9899H16.9081H16.96L16.9763 46.9905L17.5876 47.011L17.5882 47.0116H17.5961L17.6468 47.0147L18.1272 47.0177H18.1863H18.1875H18.2111L19.0644 47.0587H19.0952L19.106 47.0593L19.9703 47.0816L19.9709 47.0823H19.9835L20.0197 47.0847L20.6148 47.0871H20.6238L20.6757 47.0883L20.6776 47.0889L20.721 47.0919L20.9286 47.1179L20.9353 47.1251L21.0191 47.139L21.1235 47.1758L21.1501 47.1824L21.1543 47.1879L21.1797 47.1921L21.4114 47.2724L21.5394 47.3037H21.7198L21.8308 47.2778L21.8791 47.2615L21.8864 47.2494L22.0113 47.1794L22.1501 47.1432L22.1507 47.1426L22.1881 47.142L22.2551 47.1342L22.2829 47.1323L22.508 47.3574L22.4283 47.5294L22.4168 47.5391L22.4156 47.5451L22.3565 47.6797L22.348 47.6851L22.342 47.7081L22.3305 47.7286L22.3269 47.731L22.3245 47.7389L22.3088 47.7642L22.2955 47.7714L22.2877 47.7938L22.2273 47.871L22.141 47.9127L22.1048 47.9718L21.9491 48.0521L21.8025 48.0883L21.7946 48.0961L21.5225 48.1167L21.4911 48.1179L21.2889 48.1185H21.2883L21.2086 48.1106L20.9449 48.0611L20.9437 48.0593L20.928 48.0575L20.884 48.0472L20.8791 48.0418L20.8453 48.0364L20.7723 48.0116L20.645 47.9978L20.6244 47.9984L20.0246 48.0147L19.9853 48.0165L19.9576 48.0177H19.9552L19.0928 48.0128H19.0541H19.0523H19.0372L18.1791 47.9857H18.1248H18.1223L17.6281 47.9821L17.6039 47.9815L17.5448 47.9778L16.9491 47.9513H16.9081H16.9075L16.0348 47.9495L15.9853 47.9501H15.9823H15.9817H15.6951H15.6365L15.1036 47.9567H15.0982H15.0161H15.0155L14.4597 47.9579L14.4084 47.9585H14.4012H14.4L14.0777 47.9579L14.0306 47.9603L14.0028 47.9609H13.9974L13.7572 47.9585L13.7566 47.9579L13.7204 47.9567L13.3149 47.9211L13.3143 47.9205L13.301 47.9193L13.001 47.8831L12.9884 47.8825L12.7283 47.8897L12.6764 47.8921H12.6758L12.1893 47.9169L12.1646 47.9175H12.1628H12.0735H12.0674L11.8773 47.9139L11.5382 47.9115L11.1296 47.9471L11.0946 47.9489L11.094 47.9495L11.0119 47.9501H11.0053H10.9847L10.2105 47.9157L10.1917 47.9175L10.1386 47.9229H10.1368L9.52126 47.9875L9.47237 47.9899H9.46936L9.38728 47.9893H9.38547L8.62023 47.9821H8.6142L8.5635 47.9809L7.96785 47.9869H7.96302H7.95759L7.88155 47.9863L7.86948 47.9857L7.3209 47.9634L7.25451 47.9628H7.0294H7.0282L6.9594 47.9622L6.94069 47.9616L6.73188 47.9513H6.67877L6.59368 47.9525L6.30883 47.9827L5.94974 48.0533L5.89362 48.0587L5.89181 48.0605L5.19658 48.1022H5.1839L5.1833 48.1028L4.33055 48.1287L4.097 48.177L4.05958 48.1806L4.05717 48.183L3.60213 48.2319L3.56592 48.2337L3.56531 48.2343L3.34262 48.238H3.33598L3.3034 48.2367L3.13864 48.2223L3.13683 48.2198L3.08976 48.2144L3.04268 48.2036L2.97992 48.2096L2.93647 48.215L2.92983 48.2156L2.92923 48.2162L2.90388 48.2186L2.84534 48.2772L2.51221 47.9441L2.84534 47.6109L2.86284 47.629L2.8731 47.6212L2.92017 47.6055L2.93285 47.5862L3.02277 47.5457L3.11812 47.5246L3.12536 47.5162L3.28589 47.4956L3.2865 47.495L3.50436 47.4655H3.50496L3.95457 47.3985L3.97449 47.3973L3.97569 47.3961L4.24606 47.3689H4.25029V47.3683L5.1314 47.2862H5.13864V47.2856L5.81697 47.2325L6.17847 47.1728L6.20382 47.171L6.20502 47.1692L6.52548 47.1354L6.57014 47.1329H6.57316L6.67877 47.1342H6.73248L6.93948 47.1239L6.9594 47.1233L7.02759 47.1227H7.0294H7.25451L7.32633 47.1221L7.87974 47.113H7.88215L7.95276 47.1124L8.55022 47.0913H8.55566L8.61359 47.0901L8.62083 47.0895L9.38547 47.0823H9.38728H9.44401L10.0336 47.0122H10.0342L10.0855 47.0056L10.1477 47.0014L10.1899 47.0032L10.2261 47.0068L11.0143 47.0255L11.071 47.0261L11.4784 46.9911L11.5068 46.9899L11.5074 46.9893L11.8707 46.9797H11.8749H11.8755L12.0668 46.976H12.0735H12.0741H12.1525L12.6251 46.9531L12.677 46.9495L12.6993 46.9489H12.6999L12.9769 46.9428L13.0197 46.941L13.0391 46.9404L13.0831 46.9428Z\" fill=\"black\"/>\n      <path d=\"M9.83441 36.4585L9.87605 36.5593L10.1368 36.6673L10.1669 36.7398L10.2804 36.6263L10.5532 36.7687L10.5918 36.788L10.7795 37.0958L10.7904 37.1067L10.7916 37.1604V37.1689L10.6938 37.4259L10.5634 37.5732L10.0269 38.231L9.67328 38.6927L9.34256 39.1495L9.3148 39.1942L9.39869 39.155L9.78432 39.3143L9.94425 39.6999L9.87364 39.9576L9.88149 39.9383L10.31 39.5424L10.6853 39.3952L11.0752 39.5569L11.2369 39.9468L11.1253 40.2793L10.7892 40.7253L10.7825 40.7283L10.7795 40.7374L10.4409 41.1556L9.56827 42.2407L10.1398 41.6927L11.2152 40.5509L11.2315 40.5442L11.2382 40.5279L11.587 40.2002L11.9817 40.0433L12.3782 40.2075L12.3848 40.2051L12.4023 40.1707L12.5109 40.0892L12.829 39.9824L13.2013 40.1369L13.3558 40.5092L13.2901 40.7651L13.2213 40.8882L13.179 40.9136L13.1506 40.9872L12.5007 41.712L12.4922 41.7156L12.4886 41.7253L11.4397 42.8212L11.1712 43.1695L11.514 42.8852L12.4983 41.9395L13.077 41.3046L13.832 40.4591L13.8489 40.4513L13.8561 40.4338L14.0118 40.2835L14.0124 40.2817L14.0239 40.2654L14.039 40.2576L14.0698 40.228L14.0837 40.1936L14.4584 40.0385L14.7922 40.1574L14.8066 40.1695L14.8151 40.1864L14.8326 40.1936L14.8356 40.2008L14.8477 40.2057L15.0076 40.5919L14.9961 40.7017L14.9581 40.8858L14.9322 40.9069L14.8899 41.059L14.6745 41.4211L14.6618 41.4284L14.6546 41.4513L14.6153 41.508L15.0577 41.018L15.0589 41.0174L15.0595 41.0168L15.3232 40.7271L15.7342 40.546L16.0662 40.6565L16.0782 40.6649L16.0933 40.6951L16.1277 40.709L16.1295 40.7138L16.1392 40.718L16.3057 41.12L16.2756 41.2678L16.4029 41.2069L16.7922 41.3608L16.7964 41.3698L16.8048 41.3728L16.8555 41.4947L16.9702 41.7392L16.975 41.811L16.9762 41.8466L17.2122 41.741L17.6099 41.9057L17.6208 41.9323L17.7035 41.8363L17.826 41.6637L18.2623 41.4386L18.6407 41.5955L18.7976 41.9739L18.7795 42.1115L18.7614 42.1803L18.7391 42.1972L18.7125 42.2998L18.4572 42.7573L18.4452 42.7645L18.4379 42.7887L17.8785 43.6384L17.8706 43.6426L17.8658 43.6559L17.4639 44.2105L17.3703 44.2582L17.3257 44.3372L17.1917 44.4187L17.1687 44.4356L16.9346 44.5135L16.8809 44.4597L16.8797 44.4603L16.803 44.3843L16.8006 44.3855L16.7795 44.4314L16.73 44.4742L16.3926 44.5998L16.0275 44.4483L16.0124 44.4115L15.6304 44.8852L15.6147 44.8925L15.6069 44.9118L15.1899 45.3626L15.1645 45.3734L15.1537 45.3976L14.8429 45.6764L14.7692 45.7048L14.7445 45.747L14.5719 45.8448L14.2937 45.919L14.1072 45.887L14.0481 45.8665L14.0028 45.8019L13.8423 45.7355L13.7771 45.578L13.7312 45.5998L13.7059 45.6535L13.5719 45.7645L13.2098 45.8955L12.8085 45.7295L12.803 45.7162L12.8018 45.7156L12.7602 45.6142L12.6998 45.5768L12.6944 45.5666L12.6359 45.3149L12.6769 45.1194L12.66 45.1266L12.6522 45.1441L12.3329 45.4265L12.1971 45.4778L12.1615 45.5291L12.0106 45.5853L11.8205 45.6197L11.4403 45.4622L11.3492 45.2425L11.2955 45.1996L11.2792 45.1284L11.2653 45.0059L11.3039 44.8068L11.5182 44.266L11.5363 44.2539L11.5508 44.199L11.6546 44.0198L11.2744 44.3692L11.2478 44.3795L11.2382 44.3994L10.7783 44.7476L10.6968 44.7748L10.6751 44.8086L10.386 44.9377L10.1941 44.9788L10.1796 44.9848L10.0951 44.9878H10.0782L9.68837 44.8267L9.67026 44.7826L9.63586 44.7657L9.55922 44.6625L9.55318 44.6444L9.5387 44.6498L9.52301 44.68L9.38662 44.7766L9.06254 44.8804L8.66905 44.7174L8.65336 44.68L8.5568 44.4465L8.28764 44.6408L8.23635 44.6571L8.22186 44.6818L7.96175 44.8182L7.70768 44.8822L7.70164 44.8846L7.61595 44.8852H7.61172L7.21462 44.7205L7.20376 44.6939L7.18022 44.683L7.16755 44.6673L7.08366 44.7289L7.01667 44.7506L6.99796 44.7808L6.68414 44.9335L6.46024 44.9854L6.45059 44.9896L6.30333 44.992H6.29489L5.90744 44.8315L5.85735 44.7108L5.73182 44.8218L5.62802 44.8617L5.59664 44.9112L5.453 44.9788L5.211 45.0331L4.89718 44.9377L4.86399 44.9154L4.84649 44.8828L4.81329 44.8689L4.80907 44.8593L4.78251 44.8478L4.61776 44.4507L4.625 44.3602L4.66242 44.1302L4.68052 44.0982L4.69923 44.0101L4.69078 44.0065L4.61897 43.8327L4.55198 43.9401H4.55137L4.47835 44.0578L4.04142 44.2986L3.6757 44.1471L3.52422 43.7814L3.52723 43.7271L3.53387 43.6625L3.54353 43.6444L3.55801 43.5533L3.5906 43.4555L3.59241 43.4543L3.46387 43.1435L3.54594 42.8538L3.60086 42.7651L3.6081 42.7615L3.60991 42.7591L3.61354 42.7458L3.82717 42.4362L3.9346 42.2763L4.76501 41.0047L4.95149 40.7132L5.87787 39.1707L6.32023 38.3958L6.3323 38.3891L6.33894 38.3656L6.4174 38.2485L6.85735 38.0138L6.94063 38.0488L7.54715 37.3372L7.59362 37.3155L7.61534 37.2702L7.93097 37.0077L8.00339 36.9818L8.02633 36.9444L8.16634 36.8713L8.41438 36.8098L8.73242 36.9275L8.93037 36.6474L9.01486 36.5273L9.4536 36.301L9.83441 36.4585Z\" fill=\"black\"/>\n      <path d=\"M15.8958 27.3705V27.4737L15.5626 27.8068L15.2295 27.4737V27.3705L15.5626 27.038L15.8958 27.3705Z\" fill=\"black\"/>\n      <path d=\"M15.6223 22.686L15.7291 22.718L15.746 22.7409L15.8263 22.7681L15.8661 22.7977L16.0001 23.0674L15.9971 23.1109L15.9935 23.1398L16.0031 23.2986L16.0943 24.406V24.4066L16.2059 25.7095L16.2071 25.7379L16.2132 26.2267L16.2614 26.7228L16.4232 27.5635V27.5641L16.6284 28.5732L16.6344 28.6299L16.6356 28.6317L16.6706 29.2925L16.6712 29.3137L16.6658 29.3782L16.6018 29.7518L16.5897 29.7621L16.568 29.8562L16.4678 30.0596L16.4509 30.0698L16.4395 30.1073L16.1389 30.5339L15.8782 30.6685L15.8541 30.645L15.8366 30.6619L15.5686 30.3939L15.5747 30.3656L15.5584 30.3493L15.5855 30.2207L15.7859 29.7639L15.8384 29.5882L15.8993 29.2829L15.8758 28.6933L15.6954 27.7047V27.7041L15.5324 26.8465L15.5294 26.8127L15.5276 26.8115L15.4757 26.2847L15.4739 26.2527V26.2521L15.4666 25.7548L15.4002 24.4543V24.4482L15.3628 23.3758L15.1504 23.1634V23.0946L15.2204 22.9781L15.2059 22.954L15.294 22.8556L15.3266 22.8013L15.3568 22.785L15.4485 22.6818L15.5034 22.6758L15.5384 22.6733L15.6223 22.686Z\" fill=\"black\"/>\n      <path d=\"M15.819 30.6631L15.7852 30.657L15.5782 30.4645L15.5703 30.4355L15.819 30.6631Z\" fill=\"black\"/>\n      <path d=\"M15.1686 24.6036L15.1759 24.6042L15.2024 24.635L15.4263 24.842L15.4305 24.8969L15.4631 24.9343V24.9995L15.4456 25.0164L15.5386 25.6434L15.5398 25.6555L15.5404 25.6567L15.64 26.5004V26.501L15.7407 27.265L15.8192 27.7322L16.3406 30.3441L16.343 30.3707L16.3455 30.3731L16.3575 30.457L16.4426 30.9971L16.445 31.0303L16.4468 31.0321L16.4915 31.5535L16.5905 32.0846V32.0852L16.6225 32.2475L16.9568 33.6489L16.958 33.6573L16.9592 33.6585L16.9997 33.8408L17.0027 33.8667L17.0051 33.8685L17.1348 34.6597L17.1372 34.6899L17.1391 34.6917L17.2036 35.3664V35.367L17.2199 35.5276L17.3189 36.3326V36.3332L17.3738 36.7315L17.3768 36.7756L17.3774 36.7762L17.3793 36.8722L17.3895 37.0876V37.1039L17.375 37.2041L17.3165 37.3966L17.2984 37.4105L17.2773 37.4763L17.2646 37.4944L17.0407 37.609L17.028 37.5964L17.0268 37.5976L16.9133 37.571L16.8409 37.5342L16.8005 37.4684L16.7383 37.4298L16.7184 37.3882L16.6955 37.2892L16.7299 37.2548L16.7172 37.2174L16.7124 37.1878L16.7076 37.1842L16.6599 36.9838L16.6345 36.9072L16.6297 36.8776L16.6249 36.874L16.5301 36.4805L16.5277 36.4612L16.5259 36.4588L16.3726 35.6573L16.369 35.6217L16.3666 35.6193L16.3497 35.4606L16.2592 34.8028L16.1179 34.0291L16.0799 33.8571V33.8559L15.7595 32.4401L15.7583 32.4292L15.7564 32.428L15.722 32.2596L15.7214 32.2494L15.7202 32.2481L15.6182 31.6953L15.6158 31.6712L15.614 31.6694L15.544 31.1317V31.1311L15.4704 30.6102L15.4553 30.5541L15.4505 30.5149L15.4462 30.5113L15.0033 27.8764L15.0027 27.8716V27.871L14.9254 27.393L14.9236 27.3707L14.9224 27.3695L14.8391 26.5946L14.8373 26.5614L14.8367 26.5608L14.8132 25.7098V25.7032L14.8053 25.0074L14.7969 24.9995V24.9343L14.8071 24.9174L14.8132 24.8408L14.9097 24.7515L14.9809 24.6362L14.9906 24.632L15.0576 24.6157L15.1197 24.5583L15.1686 24.6036Z\" fill=\"black\"/>\n      <path d=\"M15.7682 28.5013L15.7947 28.5484L15.8098 28.6033L15.8249 28.6142L15.9354 28.9328L15.9438 28.9841L15.951 28.9896L16.1043 29.7578L16.1055 29.7681L16.1067 29.7687L16.2643 30.6456V30.6468L16.4139 31.4416L16.5787 32.0433V32.0439L16.9148 33.1966L16.9203 33.2352L16.9251 33.2388L17.0669 33.989L17.0681 34.004L17.0693 34.0052L17.2112 34.9075L17.3035 35.266L17.4725 35.7663V35.7669L17.694 36.4084L17.709 36.4965L17.7151 36.5019L17.7428 36.7554L17.7459 36.8013L17.741 36.8634L17.6752 37.2901L17.6433 37.3173L17.566 37.4887L17.4972 37.549L17.3065 37.6214L17.1731 37.5888L17.1671 37.5858L17.1617 37.5846L17.1593 37.5816L17.1297 37.5665L17.0892 37.4983L16.9583 37.3432L17.0114 37.281L16.9426 36.8767L16.8955 36.66L16.6819 36.0427V36.0421L16.5008 35.5279L16.4966 35.5049L16.4924 35.5013L16.3813 35.1151L16.3741 35.0638L16.3687 35.0596L16.2262 34.1392V34.1386L16.1049 33.4096L15.7724 32.2786L15.7718 32.275L15.7712 32.2744L15.592 31.6576L15.5889 31.6365L15.5859 31.6341L15.3964 30.832L15.3922 30.7976L15.3892 30.7946L15.2528 29.9141L15.2522 29.9081H15.2516L15.1393 29.132L15.1387 29.1253L15.1381 29.1247L15.0965 28.8145L15.0874 28.7705L15.0796 28.6999L15.0856 28.6944L15.085 28.683L15.4507 28.3173L15.7682 28.5013Z\" fill=\"black\"/>\n      <path d=\"M15.8482 27.8841L15.8765 27.8534H15.879L15.9085 27.8516L16.1004 28.0284L16.1686 28.073L16.1831 28.105L16.2175 28.137L16.2266 28.2553L16.2308 28.2752L16.2344 28.2782L16.2411 28.4454L16.2417 28.4599L16.238 28.4635L16.2404 28.5703L16.3919 29.1135L16.8102 30.3048V30.3054L17.1065 31.105L17.1119 31.1364L17.1185 31.1406L17.3799 32.0187L17.398 32.1424L17.4022 32.1515L17.4197 32.5552L17.4203 32.5794V32.5854L17.4124 33.2843L17.4438 34.0097L17.48 34.265L17.5295 34.5051L17.5331 34.5414L17.5362 34.5438L17.5494 34.65L17.7583 34.7858L17.8518 34.9976L17.8759 35.1111L17.8898 35.1231L17.9134 35.2547L17.9544 35.35L17.9634 35.3935L17.9743 35.4013L18.3605 36.5691V36.5703V36.5709L18.5392 37.102L18.5838 37.1183L18.7564 37.4188L18.7788 37.4363L18.8385 37.6934L19.3231 38.475L19.331 38.5009L19.3418 38.5076L19.6327 39.0519L19.6448 39.1008L19.6599 39.1111L19.8065 39.4852L19.8874 39.5106L19.9061 39.5232L19.9785 39.6633L20.0678 39.7182L20.0781 39.7381L20.0986 39.7508L20.1819 39.9258L20.2767 40.0821L20.4155 40.2523L20.5144 40.3217L20.5277 40.3476L20.5657 40.3621L20.7806 40.5486L21.1668 40.3893L21.5718 40.557L21.6267 40.6898L21.7395 40.962L21.7401 41.5196L21.7564 41.557L21.7589 41.6319L21.7878 41.8075L21.7957 41.9022V41.9155L21.7745 42.764L21.8138 43.2173L21.8144 43.2396L21.815 43.2414L21.8427 43.8021L21.8433 43.8274H21.8439L21.8693 46.557V46.5637L21.8524 46.6922L21.8832 46.7658L21.8796 46.8292L21.8669 46.9626L21.7383 47.2179L21.687 47.341L21.6732 47.347L21.6659 47.3615L21.2459 47.5238L20.8313 47.3669L20.7854 47.2794L20.7293 47.2867L20.7269 47.2873H20.7263L20.1499 47.3663L19.8367 47.446L19.7516 47.4569L19.7377 47.4641L19.3708 47.5039L19.2338 47.5468L19.0159 47.5812L18.8934 47.5703L18.6273 47.5238L18.5712 47.4913L18.4318 47.4581L18.3286 47.4062L17.9055 47.268L17.9025 47.2674L17.6007 47.2933L17.538 47.2957L17.3672 47.2746L17.1723 47.2263L16.9616 47.0893L16.8518 47.0435L16.8367 47.0079L16.7963 46.9813L16.6472 46.5498L16.8518 46.0555L16.9809 46.0024L17.2151 45.7677L17.3388 45.854L17.3455 45.8509L17.4692 45.8624L17.6315 45.8914L17.9954 45.9222L18.0009 45.9252L18.0455 45.9288L18.1867 45.9523L18.1879 45.9529L18.1928 45.9535L18.7323 46.0513L18.7631 46.0694L18.8566 46.0869L18.9719 46.131L19.06 46.1527L19.1047 46.1473L19.127 46.1461L19.168 46.1406L19.1813 46.134L19.5663 46.1098L19.8663 46.041L19.9852 46.0278L19.993 46.0241L20.6104 45.9988H20.6164L20.6406 45.9976L20.6339 43.8413L20.6207 43.2867L20.6056 42.8238V42.8147L20.6025 42.6584L20.5193 42.2456L20.4408 42.163L20.439 42.1587L20.4354 42.1569L20.2658 41.9729L20.0757 42.0513L19.9381 42.0368L19.8083 42.0085L19.4312 41.7749L19.3968 41.6777L19.3509 41.6494L18.8041 40.545L18.7546 40.4575L18.7637 40.5106L18.7721 40.6017V40.6029L18.7758 41.2511V41.2535L18.7721 41.3193L18.7528 41.4732L18.6007 41.7592L18.5893 41.787L18.585 41.7888L18.5808 41.7972L18.6888 42.1883L18.7118 42.3512L18.71 42.3947L18.6997 42.5389L18.5814 42.784L18.5331 42.901L18.5235 42.9053L18.5187 42.9149L18.2755 43.0109L18.1934 43.2088L17.8017 43.3712L17.8379 43.5299L17.8542 43.6687L17.678 44.0936L17.2531 44.2692L16.8711 44.1322L16.8542 44.1038L16.8283 44.0936L16.7842 43.9873L16.7033 43.8522L16.6931 43.8449L16.6858 43.8226L16.6641 43.7858L16.6502 43.717L16.6291 43.6542L16.6273 43.6452L16.6255 43.6439L16.5458 43.3977L16.506 43.3724L16.3322 43.0103L16.3195 42.9535L16.305 42.9433L15.9351 41.8624L15.929 41.8262L15.9224 41.8214L15.4855 40.2094V40.2064L15.4849 40.2058L15.3231 39.6126L15.3068 39.4943L15.3008 39.4816L15.2809 39.1732L15.2791 39.1304L15.4613 38.6904L15.509 38.6711L15.471 38.4822L15.465 38.4207L15.4607 38.4122L15.3624 37.3428L15.3593 37.2855L15.3599 37.2637L15.372 36.9306L15.55 36.5317H15.5506V36.5311L15.5663 36.516L15.9568 36.3585L15.955 36.338L15.952 36.3313L15.92 35.8733L15.9182 35.8347L15.9345 35.7037L15.9622 35.5933L16.019 35.5498L16.101 35.3513L16.2634 35.2843L16.1849 35.0742L15.8355 34.3042L15.8059 34.1714L15.7927 34.1599L15.7866 34.1201L15.7812 34.0441L15.8307 33.924L15.7945 33.7453L15.7884 33.6808L15.7854 33.6747L15.7619 33.3126L15.7607 33.2788L15.7625 33.2366L15.7782 33.0507L15.879 32.8461L15.9194 32.7484L15.929 32.7441L15.9345 32.7339L16.06 32.685L15.9019 32.1986L15.5663 31.3193L15.5621 31.2969L15.5573 31.2933L15.3642 30.6826L15.3533 30.6126L15.3467 30.6071L15.2652 30.0392L15.2634 30.0133L15.2616 30.0121L15.1113 28.373L15.1089 28.3229L15.2628 27.9511L15.6339 27.7972L15.8482 27.8841Z\" fill=\"black\"/>\n      <path d=\"M18.9901 39.355L19.0263 39.4226L19.074 39.4467L19.1977 39.6157L19.226 39.7014L19.2598 39.7237L19.4204 40.0949L19.5966 40.1842L19.6708 40.2868L19.6859 40.3327L19.7076 40.3459L19.7288 40.3864L19.8567 40.3333L20.2055 40.4775L20.2248 40.5246L20.2604 40.5433L20.2791 40.5698L20.2973 40.6266L20.3214 40.6416L20.3419 40.6845L20.3661 40.7901L20.3817 40.8028L20.4868 41.3194L20.4958 41.4045L20.497 41.4075L20.5085 41.8818L20.5857 42.218L21.3576 44.7201L21.3811 44.8734L21.3588 45.0225L21.3268 45.1269L21.2707 45.1685L21.2031 45.3314L20.8483 45.4787L20.6521 45.4377L20.812 45.9458L20.835 46.0888L20.8374 46.0955L20.844 46.3664L20.8446 46.3791L20.7451 46.6791L20.7125 46.7225L20.6998 46.7285L20.698 46.7334L20.6811 46.74L20.6672 46.7744L20.3196 46.9187L19.9726 46.7744L19.9478 46.7153L19.9068 46.6923L19.8893 46.6658L19.8712 46.6042L19.8495 46.5897L19.8169 46.5113L19.8163 46.5101L19.6853 46.1993L19.6769 46.1558L19.6672 46.1492L19.4723 45.4956L19.465 45.501L19.3999 45.6579L19.2598 45.7165L19.2526 45.9036L19.144 46.1462L19.0963 46.2602L19.0915 46.262L19.089 46.2675L18.7179 46.4171L18.1916 45.976L18.0685 45.2898L18.0118 44.9856L17.9762 44.8499L17.768 44.8052L17.7312 44.7889L17.7306 44.7883L17.6708 44.7611L17.6358 44.7056L17.605 44.6929L17.5803 44.6332L17.4511 44.5578L17.4234 44.5083L17.4101 44.4576L17.3944 44.4467L17.2846 44.1661V44.1655L17.1391 43.8028L17.1253 43.7304L17.1162 43.7231L17.0963 43.6127L17.0408 43.4703L17.019 43.3544L17.3359 43.0375L17.5803 43.1534L17.6256 43.2077L17.7179 42.985L17.8241 42.941L17.8139 42.7986L17.8126 42.7557V42.7551V42.7141V42.7129L17.9895 42.2856L18.2429 42.1806L18.2423 42.1673L18.2472 42.0907L18.2623 41.9657L18.389 41.7261L18.4216 41.6471L18.3872 41.5324L18.3836 41.5089L18.3799 41.5059L18.1325 40.5415L18.1277 40.5028L18.1222 40.4932L18.0842 40.2777L18.0782 40.2107L18.0758 40.2053L18.0553 39.8118L18.054 39.7798L18.2194 39.3809L18.6183 39.2156L18.9901 39.355Z\" fill=\"black\"/>\n      <path d=\"M15.7617 45.5048L16.02 45.5362L16.0303 45.5483L16.1594 45.5761L16.1872 45.5887L16.3224 45.5736L16.5789 45.5296L16.6579 45.5229H16.6603L16.8728 45.5242H16.8734L16.9367 45.529L17.8347 45.6678H17.8353H17.8372L18.3888 45.7595L18.405 45.7788L18.5318 45.8199L18.5758 45.8525L18.7062 46.112L18.6591 46.2797L18.6302 46.328L18.4551 46.4258L18.425 46.4602L18.4093 46.4626L18.3815 46.4644L18.3314 46.5139L18.2415 46.4415L17.819 46.4904L17.769 46.4934L17.7225 46.491L16.8752 46.395L16.7551 46.4113L16.5294 46.4819L16.4775 46.4898L16.4726 46.4964L16.1993 46.5471L16.1087 46.5555L15.9627 46.5326L15.8728 46.5036L15.7183 46.4982L15.2331 46.5501L15.2198 46.5513L15.2186 46.5519L14.9017 46.5785L14.8728 46.5797L14.8716 46.5803L13.6652 46.6141L13.6507 46.6147L12.9066 46.6159H12.9054L12.7859 46.6014L12.4612 46.5242L12.425 46.4783L12.256 46.4083L12.1274 46.0987L12.1293 46.0625L12.1311 46.0389L12.1407 46.0305L12.1781 45.8796L12.2035 45.8313L12.4714 45.6714L12.4726 45.6702H12.4739L12.5589 45.6195L12.5819 45.6424L12.5831 45.6412L12.609 45.6406L12.7925 45.6008L12.8879 45.5899L12.8921 45.5881L13.6356 45.5688H13.6465L14.8329 45.5622L15.1293 45.5362L15.1431 45.535H15.1443L15.6682 45.5024L15.7008 45.5012L15.7617 45.5048Z\" fill=\"black\"/>\n      <path d=\"M19.647 43.7092L19.8069 44.0961L19.6681 44.4606L19.5058 44.5451L19.4949 44.5608L19.6162 44.6109L19.7852 45.0188L19.7791 45.0387L19.7978 45.0466L19.8051 45.0641L19.8715 45.04L19.994 45.0182L20.0398 45.0647L20.3887 44.979L20.4478 44.9718L20.4593 44.9657L20.6615 44.9386L20.7447 44.9331L21.1744 45.1106L21.3525 45.5403L21.1316 46.0086L21.1141 46.0237L21.0151 46.0593L20.9861 46.1051L20.306 46.4286L19.8546 46.6779L19.8196 46.6869L19.8111 46.6996L19.379 46.8999L19.1847 46.9434L19.1521 46.9591L18.9155 46.9754L18.8721 46.9766L18.653 46.9362L18.5492 46.8963L18.4985 46.8221L18.4412 46.7979L18.4237 46.7569L18.3289 46.7177L18.2921 46.6284L18.2487 46.6477L18.0145 46.7672L17.866 46.7835L17.1449 46.9989L16.9946 47.0212L16.9855 47.0255L15.9023 47.0617H15.8811H15.8685L15.4364 47.0526L14.3947 47.2132L14.3398 47.2174L14.3356 47.2192L13.5281 47.2645L13.4937 47.2651L13.4345 47.262L11.854 47.1021L11.7097 47.0955L11.5275 47.1806L10.8745 47.2222H10.866L10.8654 47.2228L9.69767 47.2808H9.69224H9.69164L9.1509 47.3037L9.11952 47.3109L9.08451 47.3151L9.0815 47.3188L8.35066 47.4401L8.29574 47.4443L8.29091 47.4467L7.63129 47.4853L7.58482 47.4908L7.51904 47.495L7.33195 47.4177L7.28367 47.4165L7.28186 47.4159L7.25772 47.4135L6.59568 47.3809L6.39351 47.3846H6.38325L6.30962 47.3797L6.24022 47.3695L4.83346 47.3242L4.271 47.3508L4.24686 47.3514L4.07365 47.2795L4.04408 47.2808L3.92097 47.2651L3.88838 47.2566L3.85036 47.2071L3.79725 47.1836L3.67112 47.1311L3.66871 47.1257L3.66508 47.1238L3.55887 46.8601L3.5293 46.7889L3.67112 46.4467L3.85217 46.3719L3.892 46.3206L3.91735 46.3133L4.00184 46.3025L4.01149 46.2983L4.26496 46.2814L4.29635 46.2391L4.49912 46.18L4.57094 46.1697L4.58542 46.1619L4.64396 46.154H4.64758L4.64819 46.1534L4.83044 46.1299L4.83587 46.1244L4.94873 46.1148L5.23901 46.0768L5.24746 46.0762H5.24806L5.35971 46.0629L5.87208 45.9887H5.8745L5.82984 45.88L5.96864 45.5439L6.06279 45.5053L6.09478 45.454L6.2022 45.4008L6.35549 45.3646L6.36635 45.352L6.98554 45.2826L7.0984 45.0098L7.12616 44.9983L7.13762 44.9748L7.22151 44.9054L7.38144 44.848L7.41523 44.8028L7.78337 44.696L7.87148 44.6833L7.88657 44.6754L8.61741 44.6L8.68138 44.597H8.69465L10.3398 44.6326L11.3301 44.5089L11.3947 44.3453L11.7876 44.1576L12.3561 44.1166L12.3778 44.116L12.3784 44.1154L14.411 44.0424L16.0736 43.9187L16.0869 43.918L16.0875 43.9174L16.781 43.8806H16.793H16.7936L16.8751 43.8776H16.8932L17.0079 43.9253L18.0223 43.7738L18.3078 43.7237H18.309L18.5933 43.6706L18.6011 43.67L18.6017 43.6694L18.7671 43.6398L19.0567 43.5747L19.0948 43.5704L19.1026 43.5662L19.1781 43.5547L19.2595 43.5487L19.647 43.7092Z\" fill=\"black\"/>\n      <path d=\"M6.20245 42.2986L6.3322 42.3602L6.36841 42.4175L6.37505 42.4205L6.38531 42.4453L6.50239 42.6324L6.6593 42.7512L6.71301 42.9395L6.73775 43.1103L6.73715 43.123L6.73172 43.3831L6.9182 43.4821L7.01777 43.5231L7.02441 43.5382L7.03407 43.5436L7.28633 43.3578L7.34608 43.3378L7.36358 43.3083L7.64119 43.1604L7.74861 43.1339L7.76611 43.1103L7.88561 43.0771L8.05519 43.053L8.49092 43.2334L8.57782 43.4429L8.64602 43.4935L8.66774 43.5672L8.6943 43.7446L8.64662 43.9812L8.55127 44.2081L8.65507 44.2588L8.69007 44.3155L8.69913 44.3197L8.7112 44.3493L8.75163 44.4157L8.84517 44.4543L8.85845 44.4863L8.91337 44.5207L8.95561 44.6088L9.01476 44.8629L9.01113 44.9275L8.97674 45.234L8.95863 45.2684L8.93027 45.4048L8.81922 45.6571L8.76551 45.6921L8.72206 45.808L8.52049 46.0373L8.45591 46.0663L8.42815 46.1218L7.87474 46.531L7.82707 46.5473L7.81258 46.5714L7.60076 46.6915L7.48549 46.7223L7.46557 46.7476L7.11071 46.8478L6.18132 47.2926L6.16805 47.2956L6.16563 47.2998L6.06364 47.3457L5.81922 47.3988H5.80112L5.63516 47.3934L5.60921 47.3819L5.35875 47.3161L5.26883 47.2648L5.22417 47.2485L5.18434 47.257L4.91578 47.4091L4.91518 47.4097L4.74077 47.5098L4.46074 47.5853L4.4535 47.5847L4.30504 47.5829L4.28392 47.5738L4.07632 47.5092L3.78845 47.6873L3.43117 47.5394L3.30142 47.2262L3.2978 47.2268L3.20003 47.2177L3.00209 47.1815L2.94536 47.1133L2.67499 46.9788L2.5742 46.8472L2.51385 46.6674L2.46799 46.5768L2.44687 46.3511L2.44385 46.3004L2.44807 46.2365L2.50842 45.7591L2.51566 45.7524L2.53075 45.6637L2.71241 45.1278L2.73111 45.1145L2.74801 45.05L2.98157 44.6366L3.00329 44.6239L3.01717 44.5835L3.29116 44.2286L3.3147 44.2171L3.32677 44.1882L3.67619 43.8345L3.7124 43.8194L3.73232 43.7627L3.74499 43.7537L3.75646 43.7108L3.9188 43.4235L3.92785 43.4187L3.93268 43.4018L4.0908 43.1701L4.15598 43.1357L4.18917 43.0741L4.35393 42.9685L4.49032 42.9275L4.50118 42.9154L4.61403 42.9027L4.65266 42.9003L4.68826 42.9021L4.75284 42.9088L4.98398 43.1671L5.08175 42.9027L5.13123 42.8689L5.17831 42.7319L5.3153 42.5563L5.42333 42.5038L5.47281 42.4133L5.59291 42.3366L5.93208 42.2371L6.20245 42.2986ZM3.49092 45.9051L3.48609 45.9806L3.49997 45.9685L3.50118 45.8671L3.49092 45.9051Z\" fill=\"black\"/>\n      <path d=\"M22.1985 41.0762L22.1231 41.1516V41.1643L22.175 46.5336V46.5366V46.5445L22.1587 47.2095L22.1502 47.218L22.1261 47.2627L22.0899 47.6984L21.8654 47.9042L21.6409 47.6978L21.6046 47.2627L21.5799 47.2168L21.5721 47.2095L21.5558 46.5445V46.5366V46.5336L21.6077 41.1643V41.1516L21.5322 41.0762L21.8654 40.743L22.1985 41.0762Z\" fill=\"black\"/>\n      <path d=\"M17.3844 16.4306H17.3892H17.3934L17.601 16.5362L17.6064 16.5441L17.6245 16.5996L17.6433 16.6123L17.6511 16.6346L17.665 16.7118L17.7024 16.7487V16.7831L17.3693 17.1162L17.0361 16.7831V16.7487L17.1098 16.675L17.2105 16.4892L17.2311 16.4759L17.3421 16.4427L17.3693 16.4155L17.3844 16.4306Z\" fill=\"black\"/>\n      <path d=\"M19.5813 9.35056L19.6181 9.35539L19.8492 9.62093L19.8112 9.69999L19.7979 9.75611L19.7744 9.80439L19.7575 9.86715L19.7219 9.92871L19.7153 9.93233L19.7116 9.9444L19.6024 10.108L19.5644 10.1279L19.5433 10.1731L19.5064 10.2045L19.4781 10.2401L19.4304 10.3252L19.4238 10.3288L19.4201 10.3421L19.3115 10.5063L19.189 10.6897L19.0991 10.8587L19.0846 10.8672L19.0755 10.8961L18.9367 11.0886L18.8939 11.149L18.8172 11.3131L18.7744 11.3403L18.7406 11.4175L18.606 11.5437L18.5378 11.6191L18.3387 11.9172L18.3073 11.9341L18.2892 11.9758L18.1184 12.1369L17.9355 12.3312L17.6917 12.6499L17.4376 12.7748L17.1172 12.4544L17.1715 12.2757L17.4051 11.9275L17.4141 11.9233L17.4189 11.9088L17.6006 11.6771L17.6241 11.6656L17.6356 11.639L17.7883 11.4954L17.9886 11.2105L17.9995 11.2051L18.0055 11.1888L18.0967 11.0802L18.1124 11.0723L18.1202 11.0548L18.2312 10.9468L18.3097 10.8183L18.3501 10.735L18.3664 10.7247L18.3779 10.6879L18.5149 10.4942L18.5167 10.4936L18.5173 10.4912L18.6374 10.3264L18.772 10.1351L18.7883 10.1267L18.7973 10.1043L18.9102 9.97941L18.9609 9.89974L19.014 9.81586L19.0224 9.81103L19.0273 9.79655L19.0719 9.7368L19.18 9.5811L19.1812 9.57989L19.1824 9.57747L19.2234 9.52014L19.3025 9.47971L19.3381 9.42238L19.3616 9.41031L19.396 9.38918L19.5433 9.34814L19.5813 9.35056Z\" fill=\"black\"/>\n      <path d=\"M19.3676 9.28118L19.3754 9.28299L19.4671 9.29567L19.6126 9.31618L19.6579 9.34032L19.6669 9.34093L19.6922 9.34395L19.7405 9.34938L19.9101 9.51896L19.9065 9.52681L19.8999 9.59017L19.8884 9.64509L19.8757 9.65535L19.8564 9.7332L19.7961 9.84968L19.7924 9.85209L19.79 9.86054L19.7701 9.89494L19.819 10.0126L19.7556 10.2407L19.3036 10.9885L19.2052 11.1925L19.1793 11.2088L19.1606 11.2667L18.6844 11.9209L18.679 11.9233L18.6766 11.9312L18.6247 11.9975L18.6228 11.9987L18.6216 12.0018L18.3579 12.3313L18.3531 12.3331L18.3507 12.3397L18.0218 12.7278L18.02 12.7284L18.0193 12.7302L17.962 12.796L17.9542 12.808L17.9493 12.8111L17.9469 12.8189L17.9349 12.8358L17.9005 12.9016L17.5703 13.0995L17.1968 12.726L17.2155 12.6095L17.2463 12.5153V12.5147L17.2601 12.4725L17.2807 12.4574L17.2964 12.4284L17.3048 12.3934L17.5921 11.8261L17.6066 11.8177L17.6162 11.7863L17.8051 11.5075L18.7085 10.0422L18.7291 9.99633L18.7448 9.90098L18.7641 9.84364L18.8208 9.80321L18.8516 9.72958L18.8655 9.72355L18.9035 9.64268L19.2179 9.38197L19.3145 9.30049L19.3283 9.29506L19.3338 9.28541L19.3362 9.2836L19.347 9.27515L19.3676 9.28118Z\" fill=\"black\"/>\n      <path d=\"M9.91564 18.5975L9.95788 18.8733L9.95909 18.8884L9.9603 18.889L9.98202 19.0664L10.0249 19.169V19.1757L10.0164 19.8721V19.8733V19.9053L10.0134 20.4141V20.4201L10.0128 20.4581V20.4611L9.98564 21.6108V21.615L9.95909 22.4249H9.95849V22.434L9.95547 22.4973L9.95426 22.4991L9.95245 22.5263L9.88727 23.0984L9.88667 23.1214V23.122L9.88607 23.1346L9.86193 23.5915L9.86132 23.6277L9.84986 24.195L9.84261 24.9065L9.84201 24.9071L9.8408 24.9445L9.80761 25.3096L9.8058 25.3109L9.80339 25.344L9.79494 25.3941L9.74605 25.7224L9.73942 25.7725L9.73881 25.7731V25.7786L9.65613 26.3229H9.65553L9.64104 26.4171L9.64044 26.4177L9.63984 26.4237L9.45155 27.5016V27.5022L9.45094 27.5034L9.44068 27.5607L9.43887 27.5625L9.43767 27.5758L9.31153 28.137L9.30188 28.1835L9.2192 28.5963L9.20954 28.6458L9.16971 28.8643L9.1673 28.8655L9.16549 28.883L9.0647 29.3139L9.05505 29.3549L8.86374 30.2583L8.86012 30.2976L8.85589 30.3012L8.84865 30.3609L8.74002 30.7943L8.73036 30.8365L8.72916 30.8377L8.72855 30.8449L8.62173 31.2686L8.61751 31.294L8.55656 31.6693L8.55595 31.6699L8.55535 31.6772L8.5475 31.7176L8.48595 32.1069L8.48353 32.1093L8.48112 32.1322L8.41111 32.4424L8.4099 32.443L8.4087 32.4515L8.37309 32.5909L8.36525 32.5969L8.3574 32.6398L8.27774 32.8462L8.26748 32.8528L8.26446 32.8703L8.25722 32.8896L8.25601 32.8926L8.25481 32.8956L8.06229 33.3941L8.0466 33.4406L8.04358 33.4424L8.04177 33.4533L7.8915 33.8498L7.87641 33.8926H7.87581L7.74666 34.2638L7.74123 34.2879L7.73942 34.2891L7.73761 34.3006L7.67484 34.5203L7.6676 34.5257L7.66156 34.5577L7.5131 34.9312L7.5119 34.9325L7.51129 34.9367L7.49259 34.9801V34.9807L7.31455 35.3941L7.31153 35.3959L7.30972 35.4044L7.05806 35.9415L7.05082 35.9457L7.0466 35.9638L7.02125 36.0091L6.78408 36.4569L6.77321 36.4822L6.7714 36.4834L6.7702 36.4889L6.57949 36.9162V36.9168L6.56621 36.9469L6.5632 36.9487L6.56078 36.9578L6.53966 37.0013V37.0019L6.24274 37.6084L6.24153 37.609L6.24093 37.6126L6.22222 37.6488L6.21618 37.6524L6.21256 37.6663L5.91142 38.1865L5.90659 38.1889L5.90417 38.1986L5.7539 38.4358L5.74304 38.4539L5.5125 38.848L5.51129 38.8492L5.51069 38.8516L5.48896 38.8878L5.47207 38.8968L5.46241 38.9258L5.22765 39.2264L5.21256 39.2463L5.21196 39.2469L5.21135 39.2481L4.944 39.6041L4.93073 39.6102L4.92409 39.6277L4.90598 39.6482L4.89874 39.6518L4.89512 39.6603L4.40448 40.1714L4.39663 40.1751L4.39361 40.1829L4.06652 40.4967L4.04479 40.5058L4.03634 40.5233L3.76054 40.7381L3.53 40.9361L3.51854 40.9403L3.51431 40.9487L2.90719 41.4165L2.87762 41.4267L2.86857 41.4424L2.75571 41.5082L2.69054 41.5257L2.67907 41.5414L2.55414 41.5794L2.45517 41.5939L2.28679 41.5486L2.22644 41.5136L2.0804 41.2583L2.08824 41.2076L2.02246 41.1419L2.35559 40.8087L2.43284 40.886L2.48112 40.8552L3.03755 40.3694L3.27171 40.163L3.27593 40.1612L3.27714 40.1582L3.53362 39.9397L3.82753 39.6277L4.29162 39.1165L4.29464 39.1123L4.54932 38.7635L4.5632 38.743L4.57104 38.7387L4.57527 38.7267L4.79554 38.4406L4.80218 38.4297L5.02246 38.0375H5.02306L5.03634 38.0127L5.04298 38.0091L5.0466 37.9964L5.19446 37.7629L5.47327 37.2589L5.48595 37.2318H5.48655L5.77864 36.6265L5.78046 36.6247L5.78227 36.6198L5.79796 36.5885L5.80761 36.5667V36.5661L5.99349 36.1449L6.00858 36.1087L6.01642 36.1038L6.02186 36.0809L6.26627 35.6035L6.26688 35.6029L6.26748 35.6017L6.28679 35.5649L6.5288 35.0453L6.69898 34.6404L6.71467 34.6011L6.85408 34.2517L6.91383 34.0634L6.92167 34.0326L6.9265 34.029L6.93133 34.0007L7.06953 33.6029L7.07013 33.6017L7.08824 33.5504L7.08945 33.5498L7.09005 33.5468L7.23429 33.1648L7.24636 33.1238H7.24696V33.122L7.41232 32.574L7.42258 32.5661L7.4262 32.5444L7.43465 32.5166V32.516H7.43525L7.49259 32.3332L7.49922 32.3284L7.50526 32.2982L7.54811 32.195L7.61691 31.9391L7.67907 31.5758L7.68329 31.5408L7.6845 31.5396L7.6857 31.5245L7.74847 31.1443L7.75571 31.1026L7.75752 31.1014L7.75873 31.0857L7.85469 30.6386L7.86313 30.5969L7.944 30.1606L7.94642 30.1588L7.94823 30.1431L7.9615 30.0845L8.15342 29.1539L8.15402 29.1533V29.1491L8.16488 29.1014L8.25481 28.6802L8.29584 28.4666L8.3055 28.4134L8.3061 28.4128L8.38758 27.9946L8.39784 27.9427L8.39904 27.9415L8.40025 27.9325L8.52578 27.376L8.53362 27.3368L8.70019 26.2674L8.71286 26.1793L8.71347 26.1775L8.79433 25.6422L8.79977 25.5945L8.80037 25.5939L8.80097 25.5873L8.84624 25.2583L8.84865 25.23L8.86313 24.8908L8.86253 24.1896L8.85831 23.6241L8.8571 23.583V23.5734V23.5637L8.86675 23.0966L8.86736 23.0948L8.87038 23.0429L8.87641 22.9958L8.9434 22.4243L8.94521 22.3923L8.94642 21.5987L8.93978 20.4545L8.93917 20.4207V20.4141L8.93616 19.9053V19.8733V19.8655L8.93676 19.8347L8.97659 19.1377L9.02125 19.0423L9.04056 18.8872L9.04117 18.886L9.04237 18.8757L9.08522 18.5951L9.50043 18.2415L9.91564 18.5975Z\" fill=\"black\"/>\n      <path d=\"M12.434 17.0806L12.4859 17.0867L12.612 17.1537L12.8039 17.22L12.8401 17.275L12.8914 17.3021L12.9379 17.4234L13.0356 17.5731L13.1539 18.0317L13.16 18.08L13.1901 18.0559L13.2366 17.8972L13.3736 17.6811L13.4177 17.657L13.4436 17.593L13.8371 17.4162L13.8944 17.4138H13.918L14.3229 17.5815L14.3652 17.6835L14.4249 17.7197L14.5034 17.8688L14.5347 17.9949L14.5619 18.0432L14.583 18.1718L14.5866 18.2152L14.5891 18.22L14.6023 18.3896L14.6041 18.4355V18.4506L14.6005 18.5894L14.6862 18.5544L15.0314 18.6847L15.0405 18.701L15.0562 18.7071L15.0984 18.8097L15.1382 18.8851L15.2004 18.8591L15.5239 18.9931L15.5655 18.8917L15.5981 18.8694L15.6277 18.797L15.6651 18.7584L15.8836 18.6666L16.1732 18.8785L16.1895 18.9291L16.2046 19.0257L16.198 19.0891L16.1738 19.2068H16.1732V19.208L16.1419 19.3498L16.1322 19.4457L16.1316 19.4463V19.4512L16.1105 19.6171L16.0344 19.6841L16.0332 19.6956L16.0326 19.7173L16.134 19.759L16.2638 20.0716L16.2589 20.1337L16.2288 20.3486L16.0284 21.8972L16.0175 22.5242L16.0193 23.1724L16.023 23.418L16.0314 23.5996L16.0779 24.1313L16.0791 24.1669L15.7417 24.5043L15.7387 24.5127L15.7303 24.5164L15.6844 24.5622L15.6651 24.5435L15.4237 24.6431L15.3802 24.6256L15.4092 26.488V26.4958L15.408 26.5314L15.3977 26.6702L15.2976 26.8778L15.2565 26.9774L15.2481 26.9804L15.2445 26.9895L15.0326 27.0728L15.2445 30.4783V30.4807L15.4635 34.1036L15.4653 34.1452L15.2734 34.6081L15.175 34.6491L15.1787 35.0197V35.0263V35.0438L15.131 36.7909L15.1304 36.7915L15.1298 36.8102L15.0501 38.1711L15.0489 38.1736L15.0471 38.2055L14.9849 38.7493L14.9825 38.7535L14.9807 38.7783L14.918 39.1573L14.9174 39.1585L14.9168 39.1615L14.8661 39.4469L14.8582 39.4602L14.8516 39.5079L14.7936 39.7083L14.7055 39.774L14.5957 40.0124L14.4647 40.1235L14.0483 40.2774L13.5951 40.0897L13.5734 40.0372L13.5317 40.0166L13.4533 39.9092L13.3513 39.6008L13.3265 39.5459L13.3205 39.3244L13.2903 38.9973V38.9913L13.2897 38.9907L13.2137 38.0601L13.2119 38.0172L13.2131 37.9847L13.2457 37.4825L13.2372 36.9967L13.1913 36.4379L13.1901 36.4089L13.5335 36.0649L13.8437 36.3232L13.8655 35.6389L13.6754 35.5604L13.6005 35.3787L13.5384 35.3329L13.4738 35.1271L13.4726 35.1289L13.4213 35.1591L13.4002 35.2074L13.3959 35.2092L13.3772 35.2544L12.968 35.424L12.5583 35.2544L12.4647 35.0287L12.405 34.9816L12.2867 34.4958L12.2819 34.4596L12.277 34.4512L12.2107 34.0535L12.2095 34.0366L12.2076 34.0341L12.1328 33.4916L12.1322 33.4765L12.131 33.4741L12.0556 32.8012L12.0544 32.7873L12.0537 32.7861L11.9089 31.1699L11.9077 31.15L11.9071 31.1488L11.8757 30.5948L11.7466 30.5441L11.6693 30.5145L11.6681 30.5133L11.656 30.5085L11.6512 30.4982L11.6416 30.494L11.5921 30.3745L11.5607 30.31L11.4871 30.1705L11.4846 30.1512L11.4774 30.1361L11.4696 30.0342L11.4641 29.9883L11.4593 29.9201V29.9195L11.4587 29.8899L11.4273 29.462L11.4026 29.2804L11.2487 28.3938V28.3932L11.1738 28.01L11.1726 27.9998L11.1714 27.9973L11.0025 27.0619V27.0607L10.6536 25.1953L10.6512 25.1699L10.6488 25.1657L10.3507 23.0981L10.3483 23.0631L10.3458 23.0589L10.1974 21.4204L10.195 21.3733L10.1944 21.3721L10.1461 19.459V19.4427L10.1431 18.6473V18.6449L10.1443 18.6051L10.1624 18.2804L10.3078 17.9678L10.3694 17.8199L10.379 17.8157L10.3833 17.806L10.8721 17.6117L11.3748 17.8199L11.4424 17.9829L11.5221 18.0348L11.5257 18.0432L11.5353 17.9919L11.5504 17.9654L11.5655 17.8839L11.691 17.5447L11.7786 17.4844L11.8636 17.2925L11.9174 17.2442L12.3537 17.0752L12.434 17.0806Z\" fill=\"black\"/>\n      <path d=\"M11.4139 22.3635L11.4936 22.5554L11.5744 22.6109L11.6155 22.7184L11.6396 22.8475L11.6565 22.8789L11.671 22.9893L11.6764 23.0792V23.0877L11.6656 23.8976L11.665 23.8988L11.6607 23.97L11.6318 24.1921L11.6251 24.4999L11.6245 24.5011L11.6227 24.5409L11.6149 24.6284L11.7416 24.9344L11.7386 25.0014L11.6384 26.0515L11.636 26.0575L11.6324 26.0992L11.6245 26.145L11.6131 26.3991L11.6028 26.6477L11.6408 26.6296L11.9335 26.5639L12.4139 26.7624L12.4254 26.7896L12.4344 26.7938L12.4568 26.8481L12.5038 26.8735L12.5207 26.9L12.6288 27.2633L12.6263 27.3206L12.5926 27.7135L12.5907 27.7171L12.5889 27.7479L12.5533 27.9887L12.5491 27.9966L12.5449 28.0322L12.4894 28.2754L12.33 29.2591L12.3276 29.2639L12.3252 29.2838L12.1942 29.8934L12.1924 29.8946L12.1906 29.9066L12.1206 30.1897L12.1399 30.3707L12.1441 30.4468L12.1429 30.48L12.088 31.6218L12.0868 31.6242L12.085 31.6634L12.0277 32.183L12.4012 32.3375H12.4018V32.3381L12.4688 32.4993L12.5648 32.7298L12.5763 32.5826L12.6855 32.3569L12.7301 32.2482L12.7398 32.2446L12.7446 32.2349L12.8008 32.2126L12.7929 32.0533L12.671 30.9887L12.5829 30.5548L12.5503 30.4564L12.5292 30.4323L12.5099 30.4208L12.4749 30.419L12.1629 30.0865L12.496 29.7534L12.5159 29.754L12.6306 29.7612L12.6318 29.7624L12.6782 29.7672L12.837 29.801L12.8587 29.8288L12.9897 29.8759L13.1182 29.9827L13.161 30.0738L13.216 30.1082L13.3023 30.2893L13.3246 30.387L13.3355 30.3967L13.3542 30.5144L13.4224 30.0708L13.6203 28.8131L13.6432 28.6695L13.6438 28.6689L13.6445 28.6622L13.6692 28.524L13.7078 28.492L13.7977 28.2826L14.1182 28.1511L14.1417 28.1607L14.0735 26.9386L14.0542 26.661L14.0524 26.6188V26.6073L14.0651 25.9688L14.1828 25.6966L14.2353 25.5699L14.2383 25.5687L14.2395 25.5657L14.3336 25.527L14.3554 24.8523L14.3524 24.7093V24.7087L14.3505 24.6453L14.3355 24.276L14.3349 24.2488L14.5225 23.7956L14.9758 23.6079L15.4133 23.7805L15.4157 23.7859L15.4218 23.7884L15.4827 23.926L15.6149 24.2036L15.6354 24.4963L15.6372 24.5433V24.5584L15.6336 24.7099L15.633 24.7485L15.6903 26.6321L15.6988 26.8541L15.7458 27.0014L15.7597 27.0853L15.7694 27.1034L15.8871 28.0123L15.8895 28.0479L15.8907 28.0509L15.9697 29.4353L15.9709 29.4655V29.4667L15.9649 32.0696L15.977 33.0261L15.9951 33.3484L16.0065 33.3532L16.1381 33.6224L16.1574 33.6393L16.1725 33.7443L16.1779 33.8107V33.8113L16.1846 34.617V34.6212L16.184 34.6435L16.1834 34.6502L16.2178 34.6677L16.2751 34.7437L16.3361 34.926L16.403 35.046L16.4459 35.3267L16.4507 35.381L16.4531 35.3864L16.5153 36.3068L16.5165 36.349V36.3496L16.5237 37.6803V37.6839V37.7014L16.4399 40.7678V40.7684L16.365 43.2699L16.2407 43.5512L16.1864 43.6827L16.1822 43.6845L16.1798 43.6888L15.7543 43.8614L15.3391 43.6894L15.3343 43.7558L15.3336 43.7564V43.763L15.2842 44.3218L15.283 44.3237L15.2817 44.3406L15.2323 44.7521L15.2274 44.7612L15.222 44.8125L15.0681 45.5186L14.9945 45.6369L14.9462 45.7811L14.8816 45.8668L14.8406 45.8873L14.8195 45.938L14.3312 46.1402L14.2848 46.139L14.225 46.1348L13.776 45.9211L13.7452 45.8427L13.6945 45.8143L13.6438 45.7328L13.6028 45.5898L13.5551 45.5113L13.5099 45.2893L13.4972 45.1649L13.4954 45.1613L13.4887 44.702L13.4881 44.6912L13.4887 44.6652L13.5268 43.7419L13.5129 43.7606L13.0826 43.8982L12.6897 43.7352L12.5859 43.6984L12.5811 43.6906L12.5594 43.6815L12.5449 43.6459L12.5135 43.6314L12.4912 43.6043L12.4332 43.4444L12.3397 43.2886L12.3192 43.1873L12.3071 43.0726V43.0756L12.2081 43.5795L12.2033 43.5874L12.2003 43.6139L11.974 44.5023L11.8599 44.6761L11.8104 44.8028L11.7591 44.8282L11.7223 44.8849L11.4791 44.9682L11.3493 45.0334L11.3149 45.0364L11.2443 45.04L10.7996 44.8855L10.7742 44.8451L10.738 44.8306L10.6891 44.7123L10.5485 44.492L10.5238 44.3906L10.5026 44.218L10.5032 44.1951L10.5262 43.4745L10.5268 43.4727L10.5286 43.4335L10.5799 42.8922L10.5455 42.941L10.3228 43.0141L10.3101 43.0617L10.181 43.2567L10.1381 43.3593L10.1031 43.3737L10.0766 43.4136L9.6698 43.5536L9.20993 43.3683L9.20692 43.3617L9.20088 43.3593L9.13993 43.2126L9.06449 43.0436L9.06268 43.0442L8.59497 42.8505L8.40124 42.3828L8.40788 42.2893L8.41874 42.215L8.40185 41.7642V41.7383L8.40426 41.6797L8.48453 40.7588L8.47004 40.7527L8.31253 40.3731L8.27451 40.2802V40.253L8.28235 40.075L8.27994 39.8958L8.26123 39.2048V39.183L8.27089 39.0593L8.6185 36.9084L8.62092 36.903L8.62333 36.8813L8.69032 36.5548L8.67885 36.5276L8.54427 36.2174L8.54125 36.0986V36.0823L8.54186 36.0515L8.5829 35.1559L8.5841 35.1541L8.58531 35.1245L8.72955 33.6357L8.73075 33.6333L8.73196 33.6164L8.94439 32.0207L8.94801 32.0135L8.95224 31.976L9.19485 30.833L9.20329 29.3852L9.2051 29.3351L9.35538 27.3273L9.35719 27.3231L9.3596 27.2862L9.6698 24.9386L9.67221 24.9344L9.67402 24.9127L9.96733 23.2162L9.98241 23.1891L9.9975 23.0998L10.1423 22.684L10.4073 22.3327L10.5063 22.3013L10.5322 22.2609L10.6191 22.2217L10.9148 22.1565L11.4139 22.3635Z\" fill=\"black\"/>\n      <path d=\"M16.6812 18.7508L16.6824 18.7533L16.6848 18.7539L16.7271 18.8565L16.817 19.0653L16.8297 19.7062V19.7158V19.7315L16.8327 20.265V20.2765L16.8689 20.8866V20.8927V20.8933L16.916 21.88L16.9166 21.9041V21.9349V21.9397L16.9135 22.2101L16.9111 22.6169V22.6507L16.9105 22.6615L16.8924 23.3531L16.8985 24.46V24.463V24.504V24.5046L16.8979 24.8462L16.9256 25.4201L16.9274 25.437L16.928 25.4479L16.9286 25.4485L16.9407 25.6084L17.0391 26.4702L17.0415 26.507L17.0421 26.5088L17.0656 27.1123L17.0662 27.1317V27.1455L17.1411 27.81L17.1417 27.8172V27.8178L17.1477 27.8776L17.1483 27.889L17.1489 27.8896L17.2708 29.4256L17.272 29.4636V29.4738L17.2919 29.6633L17.4084 30.265V30.2656L17.4175 30.3109L17.4181 30.3193L17.4193 30.3199L17.6383 31.5125L17.7108 31.7635L17.7162 31.8039L17.7186 31.8052L17.721 31.8154L17.7228 31.8172L17.7246 31.8275L17.7271 31.8365L17.7349 31.8933L17.7397 31.8975L17.8103 32.3972L17.8797 32.7345L17.8852 32.752L17.89 32.7816L17.8948 32.7852L18.0119 33.256L18.0125 33.2578V33.2584L18.1893 33.9621L18.2702 34.1842L18.2775 34.2246L18.2841 34.2294L18.4253 34.7931L18.4283 34.8178L18.4313 34.8202L18.4368 34.8468L18.6166 35.4491L18.6172 35.4527H18.6178L18.7126 35.7714L18.8369 36.0405L18.8387 36.0496L18.8417 36.0514L19.3251 37.1715L19.3287 37.1878L19.333 37.1908L19.4555 37.5137L19.4911 37.5764L19.4953 37.5915L19.5013 37.5951L19.7397 38.0665V38.0689H19.7409L20.1954 38.9705L20.3004 39.1129L20.9455 39.8516L20.9564 39.8806L20.9751 39.8902L21.1121 40.1021L21.3819 40.4328L21.4169 40.4515L21.5508 40.4799L21.6154 40.4153L21.9485 40.7484L21.6154 41.0816L21.5484 41.0146L21.54 41.0152L21.5394 41.0158L21.3287 41.026L21.3137 41.0266L21.2135 41.0091L21.0771 40.9596L21.0554 40.9283L20.9745 40.8963L20.6045 40.5511L20.5852 40.5064L20.552 40.4889L20.4199 40.2861L19.7639 39.5764L19.7596 39.5656L19.7512 39.5619L19.6094 39.3912L19.5943 39.3489L19.5714 39.3356L19.0668 38.4286L19.0638 38.4171L19.059 38.4147L18.8278 37.9603L18.7838 37.8933L18.7663 37.8371L18.747 37.8239L18.607 37.4805L18.1091 36.3779V36.3773L17.9733 36.0822L17.9654 36.0484L17.957 36.0423L17.8411 35.7044V35.7038L17.6202 35.0979L17.6124 35.0532L17.6052 35.0472L17.5943 35.0025V35.0019L17.4543 34.46L17.3734 34.2355L17.3674 34.2004L17.3613 34.1962L17.173 33.4762V33.4726L17.1724 33.472L17.0511 33.0031L17.0415 32.9699L17.0391 32.9548L17.0367 32.953L16.9431 32.5843L16.9389 32.5541L16.9359 32.5511L16.849 32.0719L16.8484 32.0701L16.8459 32.055L16.8435 32.0447V32.0417L16.8423 32.0339L16.8369 32.0297L16.8297 31.9989L16.8291 31.9959V31.9953L16.7645 31.7189L16.7633 31.7068L16.7615 31.7056L16.5122 30.5004L16.5032 30.463L16.5014 30.4443L16.4989 30.4425L16.38 29.8215L16.3758 29.7798L16.3734 29.778L16.3505 29.5463L16.3481 29.498V29.4859L16.2044 27.9772L16.1984 27.9247L16.1978 27.9198V27.9192L16.1181 27.2288L16.1151 27.1727V27.1492L16.0711 26.5656L15.9998 25.6935L15.9986 25.6748V25.6742L15.9908 25.507V25.4847L15.9926 25.4394V25.4388L15.9745 24.8728V24.8583L15.9739 24.5046V24.504V24.4714L15.9323 23.367V23.3483V23.3423L15.9407 22.6464V22.6163V22.6139V22.6084L15.9449 22.2059L15.9425 21.9403V21.9349V21.9144L15.9003 20.9379L15.8683 20.3181L15.8677 20.2922V20.2886V20.2644L15.8713 19.7315V19.7158L15.8719 19.6857L15.9117 19.0448L15.9304 19.0279L16.0439 18.7539L16.3644 18.6211L16.6812 18.7508Z\" fill=\"black\"/>\n      <path d=\"M19.2025 9.5964L19.2278 9.59037L19.2882 9.58252L19.5356 9.82996L19.3491 10.0695L19.3232 10.0762L19.2664 10.1064L19.2501 10.11L19.2471 10.1154L19.2145 10.1299L19.2007 10.148L19.1584 10.1613L19.1113 10.1685L19.095 10.1733L19.0208 10.1836L18.7462 9.90902L18.7517 9.90298L18.751 9.90177L18.7559 9.87462L18.7251 9.84384L18.9605 9.52519L19.0027 9.51252L19.1029 9.49683L19.2025 9.5964Z\" fill=\"black\"/>\n      <path d=\"M19.2459 9.24644L19.372 9.28265L19.375 9.28326L19.5326 9.30559L19.6122 9.31645L19.6273 9.3243L19.7571 9.45405L19.541 9.76606L19.5 9.78115L19.232 10.0865L19.2163 10.0938L19.2091 10.1101L19.0787 10.2314L19.0534 10.241L19.0437 10.2597L18.9882 10.2996L18.8627 10.4154L18.3485 11.104L18.3117 11.1227L18.293 11.1632L18.2658 11.1861L18.2338 11.2301L18.1481 11.3985L18.1373 11.4052L18.13 11.4293L18.1222 11.4414L18.1119 11.4619L18.0793 11.4818L18.0558 11.5403L17.9073 11.6973L17.8753 11.7105L17.8621 11.7371L17.7377 11.8294L17.5839 11.999L17.57 12.005L17.5573 12.0352L17.3853 12.206L17.3539 12.2187L17.3418 12.2422L16.9496 12.5204L16.9122 12.5621L16.9007 12.5802L16.8367 12.6906L16.8192 12.7401L16.7546 12.7854L16.7221 12.8499L16.7088 12.859L16.6007 12.894L16.5495 12.9302L16.2676 12.6918L16.2543 12.6152L16.2495 12.5615L16.2761 12.4365L16.3443 12.2839L16.3527 12.2778L16.3593 12.2555L16.3865 12.2084L16.4022 12.1994L16.4125 12.171L16.4861 12.0793L16.5132 12.0666L16.5265 12.0382L16.9134 11.7051L17.0697 11.5591L17.0757 11.544L17.2495 11.3466L17.2749 11.3352L17.2857 11.311L17.4131 11.2042L17.5157 11.0932L17.5181 11.0853L17.5229 11.0763L17.6026 10.8958L17.611 10.8904L17.617 10.8674L17.6798 10.7552L17.7033 10.7413L17.719 10.6991L17.7697 10.6399L17.7752 10.6375L17.7776 10.6315L18.3714 9.97849L18.512 9.81192L18.5241 9.80649L18.5295 9.79322L18.5929 9.72925L18.6345 9.71174L18.6502 9.68278L18.7764 9.6007L19.0648 9.33697L19.0775 9.31343L19.1964 9.24343L19.2024 9.23438L19.2459 9.24644Z\" fill=\"black\"/>\n      <path d=\"M19.3614 9.27932L19.3753 9.28355L19.6119 9.31674L19.6577 9.34028L19.677 9.34269L19.8394 9.36079L19.846 9.3614L19.852 9.3626L19.8937 9.36683L19.8357 9.42477L19.8164 9.4646L19.8044 9.47244L19.7959 9.4996L19.7277 9.59676L19.4936 9.95403L19.3071 10.2841L19.3035 10.286L19.3017 10.2938L19.1508 10.5364L19.1115 10.6251L19.0784 10.7591L19.0633 10.7712L19.0421 10.846L18.5672 11.6348L18.5533 11.6426L18.5443 11.668L18.2051 12.0953L18.1991 12.0983L18.196 12.1061L18.0343 12.2926L18.0198 12.2992L18.0132 12.3149L17.8478 12.473L17.5394 12.8104L17.4652 12.9021L17.2256 13.0162L16.916 12.7066L16.9317 12.61L16.9721 12.4875L17.0029 12.4652L17.0373 12.3747L17.3529 12.0144L17.3626 12.0096L17.3674 11.9987L17.5237 11.8412L17.6674 11.6631L17.6764 11.6589L17.6806 11.6475L18.0271 11.2685L18.47 10.5443L18.5093 10.423L18.5105 10.4217L18.5117 10.4157L18.5618 10.2745L18.5811 10.2606L18.5992 10.2021L18.7736 9.9474L18.9939 9.62814L19.0029 9.62332L19.0071 9.61004L19.2854 9.26725L19.2902 9.26484L19.2926 9.26001L19.3614 9.27932Z\" fill=\"black\"/>\n      <path d=\"M16.065 14.1489L16.4229 14.1845L16.8043 14.2008L16.8097 14.2032L16.887 14.2123L17.03 14.2443L17.1495 14.2575L17.3541 14.2611L17.3559 14.2618L17.4235 14.2672L17.447 14.2708L17.4488 14.2738L17.4742 14.2768L17.9642 14.3915L17.9721 14.3927V14.3939L17.9817 14.3957L17.9829 14.3969L18.001 14.3987L18.3837 14.4899L18.3885 14.4965L18.4253 14.5025L18.9129 14.6703L18.9202 14.6715L18.9214 14.6727L18.9383 14.6788L18.9564 14.7041L19.0741 14.7391L19.2262 14.8405L19.2346 14.8556L19.2587 14.864L19.5701 15.1127L19.6196 15.2153L19.6939 15.2587L19.7415 15.345V15.3456L19.881 15.5931L19.9021 15.6721L19.922 15.6872L19.9799 15.8677L19.9938 15.957L20.001 15.963L20.0801 16.6341L20.0831 16.6933L20.0735 16.7916L20.0469 16.919L20.0354 16.9286L20.0198 17.0053L19.9196 17.24L19.8991 17.2533L19.8834 17.307L19.6758 17.6299L19.6643 17.6365L19.6577 17.6564L19.2135 18.2467L19.205 18.2509L19.2008 18.263L19.0837 18.4036L19.0433 18.4223L19.0246 18.4621L18.7506 18.6902L18.6498 18.727L18.6233 18.7657L18.3867 18.858L17.9914 19.0324L17.8592 19.0602L17.8508 19.0698L17.4356 19.1139L17.0572 19.1658L17.0047 19.1694L17.0029 19.1706L14.8918 19.2298L14.8435 19.231L14.8254 19.2316H14.4688H14.4682L14.4277 19.2304L14.406 19.2286L12.8526 19.2225L12.8146 19.2231L12.549 19.2286H12.543L12.4989 19.2292H12.4923L12.4555 19.228L11.9944 19.1966L11.9878 19.1936L11.9244 19.1869L11.575 19.1163L11.5563 19.1145L11.5539 19.1133L11.5388 19.1121L11.1356 19.0517L11.126 19.0511L10.1018 19.0451L10.1006 19.0445L10.0143 19.0372L9.98174 19.0318L9.55144 18.9944L9.54118 18.989L9.47057 18.9805L9.44885 18.9745L9.22736 18.9322L9.1996 18.8978L9.05718 18.8477L8.83569 18.9135L8.73974 18.928L8.73732 18.9304L8.36134 18.9467L8.34203 18.9473L8.30341 18.9455L8.06442 18.9232L8.0614 18.9202L8.0101 18.9141L7.96726 18.9039L7.83207 18.9015V18.9009L7.81397 18.9003L7.45911 18.8773L7.4573 18.8761L7.41385 18.8719L7.21167 18.8363L7.21107 18.8357L7.20141 18.8345L7.01674 18.7958L7.01433 18.7934L6.99743 18.791L6.92561 18.7723L6.8888 18.7675L6.8882 18.7669L6.87915 18.7657L6.85621 18.7621L6.85199 18.7566L6.80491 18.75L6.67335 18.7102L6.65042 18.6794L6.5442 18.6444L6.40842 18.5418L6.40057 18.5261L6.37945 18.5182L6.30703 18.4525L6.08132 18.2786L6.07951 18.2744L6.07408 18.2726L5.9582 18.1785L5.90691 18.1404L5.84294 18.0125L5.76629 17.9618L5.73672 17.8918L5.72525 17.8393L5.7156 17.8315L5.55989 17.2455L5.54541 17.1356V17.1242L5.56653 16.3517L5.57015 16.3487L5.60274 16.1942L5.68361 16.0137L5.70775 15.998L5.72646 15.9407L6.22254 15.266L6.30884 15.2225L6.34746 15.1561L6.82483 14.8918L6.84052 14.8876L6.84414 14.8815L7.03968 14.7868L7.08132 14.7765L7.08916 14.7663L7.57981 14.6051L7.61119 14.5997L7.61481 14.5949L7.81819 14.5478L7.89363 14.5388L7.89484 14.5376L8.09882 14.5309L8.35048 14.5025L8.80552 14.4156L8.81035 14.415H8.81095L9.21047 14.3414H9.21107L9.4054 14.3046L9.42592 14.2998L9.46695 14.2955L9.46937 14.2925L9.49834 14.2895L9.52308 14.2877L9.52368 14.2871L10.0288 14.2587L10.0391 14.2569L10.0674 14.2545L10.0686 14.2533L10.403 14.2201L10.4446 14.2177L10.4627 14.2183L10.7102 14.2292L10.7114 14.2304L10.7536 14.2334L10.7753 14.2364L11.0258 14.2455L11.5641 14.2376L11.6009 14.2364H11.6118L12.1694 14.2328L12.2014 14.2322H12.2147L12.2636 14.2346L12.549 14.2666L12.7904 14.2793L12.9166 14.2762L12.9238 14.2756H12.9528L13.6746 14.263H13.683L13.7035 14.2636L14.094 14.231L14.3644 14.199L14.3969 14.1972L14.3982 14.196L14.6402 14.1845L14.6613 14.1839H14.6752L15.1296 14.1543H15.1302L15.1815 14.1495H15.1833L15.4042 14.1507L15.9872 14.1465H16.0131H16.0185L16.065 14.1489ZM10.173 15.0632L10.17 15.0638L10.0843 15.0741L10.0837 15.0753L9.57679 15.0861L9.57377 15.0873H9.57196L9.37643 15.1314L9.33056 15.1368L9.32815 15.1392L8.93104 15.1815L8.46876 15.2539L8.44825 15.2557L8.44764 15.2569L8.16762 15.2865L8.13865 15.2883H8.13805L7.95639 15.2943L7.8019 15.3306L7.34203 15.4796L7.18633 15.549L6.81759 15.7868L6.42169 16.3674L6.39635 16.4398L6.38005 17.0807L6.51282 17.5285L6.51825 17.5315L6.52791 17.5448L6.60938 17.6094L6.84354 17.7952L6.84656 17.8019L6.85501 17.8049L6.93527 17.8737L6.98536 17.9129L6.98717 17.9135L6.99924 17.9129H7.01131L7.13925 17.9322L7.2159 17.9558L7.37945 17.9896L7.54722 18.0234L7.87311 18.0463L7.87371 18.0469L7.88216 18.0475L8.0614 18.0644L8.06442 18.068L8.12115 18.0747L8.18572 18.0904L8.38005 18.1175L8.7337 18.1332L8.86225 18.1362L9.07951 17.919L9.15615 17.954L9.23702 17.9721L9.32332 17.9642L9.35651 17.9654L9.54299 17.9781L9.58946 17.9721L9.59188 17.9715L10.0354 17.966L10.0801 17.9642L10.1055 17.9636H10.1127L11.1555 17.9781H11.1561L11.1845 17.9793L11.234 17.9823L11.2376 17.9841L11.2726 17.9866L11.6721 18.0439L11.6909 18.0451L11.6951 18.0469L11.7464 18.0511L12.0964 18.1085L12.514 18.1362L12.5436 18.1368H12.5484L12.8152 18.1423L12.855 18.1429H12.8671L14.4138 18.1845L14.4259 18.1833L14.4682 18.1815H14.4688H14.8254L14.8429 18.1821L14.8888 18.1839L16.9745 18.208L17.3438 18.1809H17.3462L17.6951 18.1549L18.0379 18.0149L18.0439 18.0137L18.0445 18.0119L18.2195 17.9425L18.4138 17.7783L18.4971 17.6878L18.8894 17.1242L19.0608 16.8284L19.1139 16.7162L19.0258 16.1223L18.9986 16.0228L18.9021 15.8502L18.8924 15.8375L18.6601 15.6359L18.5925 15.5919L18.1163 15.4144L17.7711 15.3149L17.7603 15.3137L17.2871 15.1996L17.0982 15.1911L17.097 15.1905L17.0765 15.1899L16.9063 15.1742L16.9039 15.1706L16.8496 15.1652L16.721 15.1362L16.3674 15.1205L16.365 15.1199L16.3324 15.1175L15.9872 15.0759L15.4181 15.0723L15.2262 15.0849L15.1743 15.0885L15.1718 15.0898L14.7023 15.1006H14.6915H14.6884H14.6709L14.4513 15.1085L14.1863 15.135L14.1743 15.1356V15.1362L13.747 15.1694H13.7367L13.7361 15.17L13.7102 15.1712L13.683 15.1724H13.6746L12.9528 15.1598L12.9232 15.1592H12.9172L12.7723 15.1555L12.7518 15.1543L12.4796 15.1344L12.479 15.1338H12.4718L12.1875 15.1067L12.1634 15.106L12.1586 15.1054L11.5985 15.0819L11.5635 15.0807L11.0149 15.0729L11.0143 15.0723L10.9866 15.071L10.7005 15.0469L10.6999 15.0457L10.6746 15.0439L10.6583 15.0415L10.4597 15.0391L10.173 15.0632Z\" fill=\"black\"/>\n      <path d=\"M16.8033 15.5587L17.3881 15.604L17.408 15.613L17.4677 15.6239L17.4907 15.6209L17.5015 15.6215L17.787 15.6269L17.8093 15.6245L17.8322 15.6251L17.9668 15.6305L18.0676 15.6323L18.0712 15.6341L18.0839 15.6353L18.1418 15.6378L18.1533 15.6432L18.175 15.6456L18.2668 15.6661L18.3168 15.6758L18.3253 15.6788L18.5027 15.7186L18.5275 15.7494L18.6826 15.7971L18.8286 15.8954L18.8998 16.03L18.9517 16.062L18.9596 16.065L18.9602 16.0674L19.0024 16.0928L19.0537 16.1936L19.073 16.2732L19.1026 16.3595L19.1316 16.5291L19.1237 16.619L19.0881 16.8188L19.0736 16.8303L19.0694 16.852L19.0531 16.8942L19.0332 16.9703L19.0326 16.9715L19.032 17.0168L19.0284 17.0252L18.9928 17.2026L18.9216 17.3716L18.8872 17.3945L18.857 17.4808L18.7803 17.5786L18.691 17.6221L18.6506 17.6927L18.4949 17.7856L18.4164 17.8079L18.4013 17.8291L18.1473 17.9136L18.038 17.9317L18.0332 17.9365L17.889 17.9473L17.7972 18.018L17.7381 18.0379L17.7206 18.0656L17.5033 18.1737L17.3657 18.2062L17.3549 18.2189L17.0893 18.2521L17.0308 18.2557L16.9747 18.2521L16.688 18.2165L16.6838 18.2117L16.6192 18.202L16.4231 18.1453L16.3965 18.1091L16.2704 18.065L16.1358 17.9576L16.0646 17.8085L15.9789 17.7723L15.8896 17.68L15.8799 17.6559L15.8395 17.6414L15.7544 17.5183L15.6114 17.4247L15.5751 17.3414L15.5401 17.1773L15.5438 17.126L15.5522 17.0596L15.5015 17.0373L15.4267 16.957L15.3422 16.7422L15.3187 16.721L15.3042 16.5895L15.3018 16.5358L15.3669 16.2956L15.4587 16.1393L15.5021 16.1151L15.5293 16.0475L15.6789 15.8924L15.79 15.846L15.828 15.7838L16.0604 15.6691L16.2064 15.6347L16.248 15.6136L16.691 15.5611L16.7598 15.5569L16.8033 15.5587Z\" fill=\"black\"/>\n      <path d=\"M13.7613 14.7618L14.9049 14.8216L14.9061 14.8222L14.9224 14.8228L16.3787 14.9471L16.9085 14.9381H16.9182L17.0033 14.9447L17.136 14.9652L17.1487 14.9725L17.1994 14.9797L17.2706 14.9996L17.5911 14.9888L17.6695 14.9803L17.6768 14.9797L17.7552 14.9743L17.8687 14.9851L18.0057 15.0123L18.3847 15.0787L18.4106 15.0823L18.4378 15.0551L18.5603 15.0968L18.582 15.0956H18.5851L18.7981 15.0968L19.0564 15.2054L19.1765 15.2549L19.1771 15.2555L19.1777 15.2561L19.3346 15.6369L19.1765 16.0189L18.7945 16.177H18.7806L18.5669 16.1716L18.5657 16.171L18.5235 16.1686L18.48 16.1638L18.2706 16.1529L18.27 16.1523L18.2561 16.1517L17.9182 16.1239L17.8446 16.1348L17.7552 16.1414L17.6798 16.1366L17.6671 16.1354L17.5863 16.1263L17.4505 16.1197L17.4468 16.1233L17.3068 16.1776L17.2694 16.2308L17.2139 16.2513L17.264 16.2645L17.2652 16.2664L17.2724 16.2676L17.4535 16.3231L17.471 16.3472L17.5531 16.375L17.6255 16.4293L17.7516 16.6828L17.6623 16.8687L17.6593 16.8777L17.6581 16.8837L17.6569 16.8856L17.6454 16.9206L17.6333 16.929L17.6321 16.9314L17.5887 16.9664L17.5742 16.9719L17.5295 17.0032L17.4432 17.1263L17.2845 17.1843H17.2827L17.3605 17.3726L17.2187 17.7142L17.0902 17.7673L17.0522 17.8228L16.7637 17.935L16.7498 17.9375L16.6919 17.97L16.6164 18.0823L16.2845 18.2163L16.2718 18.2187L16.2073 18.2567L16.1053 18.2845L16.0878 18.3074L15.6689 18.4233L15.611 18.4311L15.6068 18.4359L15.2326 18.4884L15.1656 18.4933H15.1608L14.5772 18.4872L14.5766 18.4866L14.544 18.4854L14.2736 18.4631L13.914 18.5337L13.8421 18.541L13.8373 18.5428L13.2139 18.5717L13.1898 18.5723H13.1723L12.4957 18.5488L12.4897 18.5464L12.3925 18.5343L12.2302 18.4945L12.1873 18.4396L11.9912 18.3575L11.9399 18.3056L11.8409 18.0642L11.7474 18.06L11.745 18.0588L11.707 18.0563L11.3292 18.0093L11.2845 17.9857L11.1517 17.9525L11.0745 17.9115L11.0425 17.8572L11.0081 17.8391L11.0051 17.8306L10.5332 17.8168L10.5283 17.8143L10.433 17.8035L10.2972 17.7709L10.2561 17.7184L10.0612 17.6375L10.0178 17.5337L9.98035 17.5241L9.91758 17.4432L9.8512 17.413L9.84577 17.3997L9.72205 17.3484L9.70817 17.3146L9.67196 17.2941L9.64661 17.2519L9.57178 16.9851L9.58988 16.8493L9.59833 16.8174L9.62368 16.798L9.65446 16.6888L9.67558 16.6544L9.71843 16.6303L9.72205 16.6212L9.76973 16.6019L9.82223 16.5723L9.89525 16.4559L10.165 16.3261L10.2525 16.3062L10.2658 16.2893L10.6237 16.1957L10.6273 16.1626L10.6376 16.1173L10.7009 16.0672L10.7631 15.9163L10.8741 15.8705L10.9526 15.7564L11.2423 15.6454L11.3793 15.62L11.3992 15.6104L12.0666 15.5627L12.1004 15.4758L12.1119 15.4703L12.1167 15.4589L12.2248 15.4142L12.4384 15.308L13.0817 15.2483L13.1813 14.9791L13.2024 14.9676L13.2109 14.9477L13.3195 14.9024L13.5307 14.7854L13.6418 14.7685L13.7317 14.7612L13.7613 14.7618Z\" fill=\"black\"/>\n      <path d=\"M19.2172 16.4847L19.2365 16.4926L19.4435 16.801L19.1104 17.1341L18.9867 17.1099L18.9674 17.1027L18.9444 17.0689L18.9167 17.0617L18.7435 17.1347L18.7012 17.1431L18.6958 17.151L18.4828 17.2059L18.4122 17.2421L18.4321 17.2656L18.6439 17.3532L18.7773 17.6754L18.7555 17.8142L18.7441 17.8516L18.6898 17.8909L18.6481 17.9935L18.6228 18.0049L18.5914 18.0689L18.481 18.1552L18.2015 18.2518H18.1985L17.8075 18.2494L17.8068 18.2487L17.7749 18.2475L17.2094 18.2029L16.9294 18.1993L16.7568 18.2445L16.6373 18.2602L16.5208 18.2119L16.4779 18.2204L16.3838 18.23L16.1919 18.2306H16.1913L16.1877 18.23H16.1321L16.1309 18.2294L16.0525 18.2222L15.828 18.1818L15.799 18.1462L15.6089 18.0749L15.5256 18.0019L15.5196 17.988L15.5045 17.982L15.3735 17.6652L15.4647 17.3942L15.49 17.361L15.5015 17.355L15.5045 17.3489L15.5703 17.3218L15.6524 17.2807L15.691 17.2258L15.7851 17.1914L15.8008 17.1884L15.8032 17.1854L15.8853 17.1594L15.9891 17.1437L16.009 17.1443L16.1032 17.1498L16.2371 17.2922H16.3349L16.5685 17.2433L16.5721 17.2427L16.8992 17.1745L17.0012 17.1637H17.0078L17.0664 17.1643L17.0694 17.16L17.245 17.1136L17.4248 17.0031L17.5522 16.9011L17.5721 16.8945L17.5793 16.8818L17.8153 16.7225L17.8998 16.6959L17.9167 16.6742L18.2631 16.5692L18.2915 16.565L18.2945 16.5614L18.5437 16.5095L18.6131 16.5022L18.656 16.5046L18.8775 16.5336L18.8919 16.533L18.9963 16.5058L19.0561 16.4986L19.0935 16.4612L19.2172 16.4847Z\" fill=\"black\"/>\n      <path d=\"M10.8341 15.0663L12.1093 15.1296V15.1302H12.1165L13.3954 15.2178L13.3966 15.2196L13.4322 15.2226L13.5969 15.2509L13.8745 15.5829L13.5951 15.9148L13.434 15.9432L13.3857 15.9474L13.3845 15.9486L12.1057 16.0017L12.0918 16.0023L10.9518 16.0162L10.6929 16.0361L10.1328 16.123H10.1322L10.0302 16.1405L9.95118 16.1677L9.80212 16.193L9.48226 16.0602L9.3501 15.7404L9.48226 15.4211L9.59995 15.3723L9.63495 15.3204L9.94394 15.1972L9.99584 15.187L10.0025 15.1779L10.2662 15.1097L10.3507 15.0989L10.3537 15.0958L10.7768 15.0669L10.8106 15.0657L10.8341 15.0663Z\" fill=\"black\"/>\n      <path d=\"M12.5761 14.8807L13.2182 14.9025L13.2254 14.9097L13.4523 14.9972L13.4873 15.028L13.5917 15.2621L13.5996 15.27L13.5923 15.2772L13.5115 15.4879L13.4801 15.5229L13.3413 15.5838L13.3063 15.6303L12.6925 15.8053L12.6696 15.8089L12.6672 15.8119L11.809 16.0123L11.803 16.0129L11.8024 16.0135L11.2049 16.1499L11.1693 16.1541L11.1615 16.1577L10.6925 16.2314L10.6509 16.235L10.6461 16.2374L10.153 16.2778L10.1041 16.2796L10.0154 16.273L9.83073 16.244L9.81383 16.2241L9.76555 16.2114L9.67262 16.2084L9.60261 16.2163L9.45717 16.2374L9.41794 16.2404L9.15723 15.9797L9.2218 15.8089L9.37026 15.6375L9.4457 15.5428L9.4463 15.5416L9.44691 15.541L9.48372 15.4951L9.56761 15.4547L9.64968 15.3092L9.80478 15.2157L9.95988 15.1716L10.0245 15.1366L10.5133 15.0684L10.5193 15.0678L10.5205 15.0672L10.9913 15.0044H10.9919L11.5948 14.9169L11.6563 14.9121L11.6593 14.9109L12.5429 14.8807L12.5598 14.8801L12.5761 14.8807Z\" fill=\"black\"/>\n      <path d=\"M9.57046 14.8662L10.2084 14.8795L10.2102 14.8807L10.2778 14.8861L10.5656 14.935L10.5723 14.9423L10.6374 14.9537L10.7364 14.9887L10.9603 14.961L11.0207 14.9567L11.0527 14.9579L11.7461 15.0056L11.7467 15.0062L11.7654 15.0074L12.2476 15.0654L12.3514 14.9773L12.6845 15.3104L12.6785 15.3713L12.6598 15.4727L12.5113 15.5952L12.3942 15.7359L12.2862 15.7558L12.2639 15.7582L12.2627 15.7594L11.7678 15.8191H11.7648L11.1329 15.894L11.0738 15.9163L11.0303 15.9791L10.9983 15.9954L10.9808 16.0346L10.9114 16.098L10.8632 16.1167L10.8469 16.1438L10.6067 16.2748L10.588 16.2796L10.5843 16.2856L10.3158 16.4075L10.2681 16.4178L10.2609 16.4269L9.68935 16.5741L9.67728 16.5759L9.67607 16.5771L9.37251 16.6453L9.34897 16.6483L9.34656 16.6508L9.215 16.6713L9.15102 16.6767L9.09249 16.6182L9.04903 16.6369L8.9048 16.6665L8.90178 16.6695L8.75875 16.6737H8.74668L8.67788 16.6677L8.34958 16.6109L8.34415 16.6049L8.29043 16.5958L8.10275 16.5325L8.07559 16.4945L7.96816 16.4534L7.91687 16.4082L7.78591 16.1173L7.77806 16.1094L7.77686 16.0587V16.0479L7.78651 15.9579L7.8191 15.8113L7.8535 15.7835L7.90963 15.6296L8.0774 15.4305L8.19991 15.3738L8.24396 15.3056L8.40993 15.2313L8.49743 15.2126L8.49864 15.212L8.5089 15.1993L8.55115 15.1903L8.56563 15.1686L8.97179 15.0014L9.043 14.9869L9.05265 14.9748L9.43045 14.8819L9.55959 14.8662H9.57046Z\" fill=\"black\"/>\n      <path d=\"M8.6829 14.9846L9.09147 14.9888H9.09208L9.1313 14.9913L9.60686 15.0395L9.61048 15.0432L9.67083 15.0516L9.89232 15.1108L9.93879 15.1717L10.0975 15.2514L10.1337 15.299L10.2037 15.5091L10.1748 15.5416L10.1253 15.7022L10.1108 15.7233L10.0613 15.7499L10.0347 15.8012L10.0106 15.8187L9.81386 15.8832L9.79636 15.8657H9.78972H9.78671L9.5616 15.8639H9.49763L9.52358 15.9961L9.50125 16.1276L9.49642 16.1415L9.5103 16.1578L9.66902 16.2061L9.73843 16.2526L9.75774 16.2888L9.80662 16.3087L9.84283 16.3974H9.84343L10.1567 16.5181L10.1977 16.5785L10.2949 16.6195L10.7191 16.6382L10.7288 16.6424L10.8416 16.6593L10.9563 16.6937L11.0148 16.7728L11.0619 16.7939L11.0752 16.8271L11.1838 16.8724L11.2285 16.9798L11.2924 17.0263L11.3075 17.0721L11.322 17.1651L11.3582 17.1874L11.4373 17.3286L11.4862 17.3491L11.4988 17.3799L11.5531 17.4161L11.5882 17.5L11.6262 17.6871L11.6153 17.7903L11.5966 17.8736L11.5495 17.911L11.4717 18.0999L11.3926 18.1783L11.2864 18.2224L11.0794 18.3135L10.6582 18.3256L10.6437 18.3262L10.6026 18.3244L10.0522 18.2749L9.82412 18.2858L9.79998 18.2864L9.76075 18.2846L9.07699 18.229L9.06854 18.2248L9.00517 18.2176L8.51996 18.1011L8.51151 18.0908L7.97983 18.0311L7.90741 18.0317L7.72394 18.0383L7.70463 18.0389L7.53505 18.0094L7.49461 18.01L7.48496 18.0106L7.44814 18.0094L7.35762 18.0027L7.3546 18.0015L7.32684 17.9997L7.27916 17.9937L7.26468 17.9858L7.19829 17.9762L7.03837 17.9297L6.97017 17.8374L6.75532 17.7281L6.6829 17.6298L6.57548 17.5809L6.46866 17.5537L6.44935 17.5507L6.30391 17.4644L6.1826 17.4179L6.12708 17.369L6.12105 17.3546L6.10536 17.3479L5.94482 16.9599L6.0275 16.669L6.05466 16.6261L6.09087 16.6062L6.10536 16.5718L6.26951 16.5036L6.34374 16.4022L6.46444 16.363H6.46504L6.86335 16.229L7.02811 16.1633L7.01423 16.1023L7.00216 15.9997L7.00879 15.9231L7.02931 15.803L7.07096 15.768L7.16088 15.5573L7.21821 15.5018L7.40831 15.4252L7.47651 15.2767L7.5091 15.249L7.5278 15.2417L7.53505 15.2278L7.61109 15.1711L7.74144 15.1276L7.76558 15.0969L8.0794 15.0136L8.18019 15.0003L8.182 14.9985L8.6654 14.9846H8.67868H8.6829Z\" fill=\"black\"/>\n      <path d=\"M7.38786 15.319L7.67754 15.4348L7.82539 15.4336H7.8272L7.93402 15.4505L8.00343 15.4722L8.07766 15.5742L8.15611 15.6062L8.15973 15.6092L8.1881 15.6774L8.23094 15.71L8.24241 15.7505L8.24965 15.803L8.29129 15.8573L8.38604 16.1355L8.38182 16.1989L8.36734 16.3039L8.34501 16.3232L8.53813 16.3334L8.53994 16.3352L8.59848 16.3407L8.74754 16.369L8.78194 16.4107L8.97989 16.4928L9.11145 16.8114L9.07766 16.8935L9.16396 16.9031L9.16577 16.9043L9.1887 16.9062L9.44277 16.949L9.4476 16.955L9.4989 16.9623L9.57796 16.9864L9.61598 17.0383L9.76444 17.0999L9.89962 17.4252L9.85557 17.5344L9.96721 17.8096L9.83324 18.1391L9.83022 18.1403L9.82841 18.1439L9.7228 18.188L9.50855 18.2821L9.28948 18.2888H9.275L9.18327 18.2803L8.69081 18.1844L7.97989 18.1005L7.97868 18.0987L7.95333 18.0963L7.05593 17.9351L7.04084 17.917L6.99196 17.9128L6.97808 17.9062L6.88695 17.8923L6.72702 17.8422L6.68538 17.7855L6.52545 17.7191L6.4301 17.4897L6.40355 17.4716L6.37398 17.4022L6.3432 17.3594L6.25146 17.0757L6.32087 16.8259L6.35949 16.7619L6.37458 16.7535L6.37337 16.7517L6.26655 16.4584L6.26716 16.433L6.2744 16.3015L6.28345 16.293L6.34139 16.089L6.41984 15.9611L6.49528 15.9188L6.53933 15.8325L6.62986 15.7674L6.73064 15.5887L6.77832 15.561L6.8097 15.4861L6.87126 15.4246L7.20982 15.2852L7.38786 15.319Z\" fill=\"black\"/>\n      <path d=\"M12.8251 12.7434L12.8589 12.7446L13.3242 12.7573H13.326L13.361 12.7579L14.0339 12.7488H14.0399H14.0429H14.0791H14.7496H14.7774H14.7798L15.4388 12.7531L15.4799 12.7537H15.4805H15.4823L16.1715 12.7627H16.1805L16.2348 12.7645L16.8033 12.773H16.8082L16.8257 12.7736L16.8263 12.7742L16.845 12.7748L17.1395 12.7977L17.1419 12.8001L17.1938 12.8068L17.3634 12.8466L17.4093 12.849H17.4141L17.4696 12.8526L17.641 12.8376L17.7442 12.8152L18.0164 13.088L18.0025 13.1743L17.9868 13.2202L17.8377 13.327L17.7677 13.4127L17.5354 13.4598L17.4943 13.464L17.4925 13.4652L17.4153 13.4706H17.4087L17.3628 13.473L17.1962 13.5129L17.1407 13.5195L17.1383 13.5219L16.8462 13.5449L16.8257 13.5461H16.8251L16.8088 13.5467H16.8033L16.2342 13.5551L16.1811 13.5569H16.1715V13.5575L15.4823 13.566H15.4799L15.4388 13.5666H15.4382L14.7798 13.5708H14.7774H14.7496H14.0791H14.0447L13.367 13.5817L13.3266 13.5835H13.3127L13.2813 13.5823L12.8371 13.5485L12.8257 13.5491H12.8142L11.1896 13.5587L10.9065 13.5811L10.8812 13.5823V13.5829L10.1866 13.5956L10.0031 13.604L9.82929 13.6161L9.80395 13.6167H9.7961L9.41831 13.6088L9.41771 13.6082L9.37426 13.6052L9.20588 13.5805L9.08277 13.5949L9.04535 13.5974L9.04414 13.5968L9.01819 13.6233L8.98077 13.5859L8.94275 13.5793L8.91801 13.5702L8.80817 13.4133L8.68506 13.2902L8.78222 13.193L8.85525 13.056L8.87456 13.0427L8.91439 13.0307L8.92404 13.0156L8.98802 12.9878L9.01819 12.957L9.03026 12.9691L9.07673 12.9486L9.15579 12.9317L9.16303 12.9239L9.37245 12.8931L9.41831 12.8901L9.41891 12.8895L9.76955 12.8822L9.91922 12.8575L9.93189 12.8563L9.9331 12.8557L10.122 12.8303L10.154 12.8285L10.1546 12.8273L10.8438 12.7929L11.1292 12.7633L11.1679 12.7609L12.807 12.7434H12.8118H12.8251Z\" fill=\"black\"/>\n      <path d=\"M7.4213 9.48336L7.51786 9.51475L7.53536 9.53889L7.61261 9.56484L7.74296 9.66441L7.8003 9.78149L7.85883 9.82253L8.01756 10.251L8.10687 10.4647L8.24749 10.6777L8.26016 10.7193L8.27646 10.7296L8.38991 10.9879L8.39776 11.0247L8.40561 11.0307L8.52812 11.4447L8.63192 11.7429L8.63554 11.7628L8.63916 11.7658L8.78521 12.2921L8.85099 12.4411L8.94031 12.6119L9.00609 12.7278L9.01635 12.767L9.02781 12.7749L9.04351 12.8165L9.0604 12.9112L9.07127 12.9221V12.9601L9.05075 12.9806L9.03868 13.0386L9.00911 13.1092L8.76529 13.2697L8.76288 13.2679L8.73813 13.2927L8.63675 13.1919L8.53053 13.1273L8.51182 13.0911L8.50337 13.0814L8.4901 13.0446L8.48466 13.0392L8.46716 13.0289L8.45871 13.0138L8.405 12.9601V12.9221L8.40742 12.9197L8.40017 12.9064L8.3006 12.7308L8.29637 12.7151L8.29034 12.7115L8.20524 12.5365L8.19861 12.5081L8.19136 12.5027L8.00126 11.9704V11.9698L7.89022 11.6644L7.88841 11.6535L7.88599 11.6517L7.75383 11.2486L7.66149 11.0325L7.51786 10.8225L7.50518 10.7815L7.48829 10.7706L7.37543 10.5244L7.37181 10.5081L7.36698 10.5045L7.21249 10.1098L7.14369 10.0084L7.12256 9.94021L7.10325 9.92633L7.07308 9.834L7.05859 9.74589L7.335 9.46948L7.4213 9.48336Z\" fill=\"black\"/>\n      <path d=\"M16.2034 10.9822L16.3018 10.9985L16.3368 11.0408L16.5613 11.1337L16.5981 11.2218L16.6524 11.2357L16.7278 11.2761L16.7556 11.3232L16.8335 11.3552L16.9699 11.6853L16.9674 11.733L16.9686 11.7366L16.9886 11.7559L17.0097 11.7758L17.0489 11.7885L17.0568 11.7939L17.0803 11.8392L17.2704 12.013L17.2716 12.0257L17.2734 12.0559L17.2167 12.2339L17.1956 12.2635L17.195 12.2647H17.1944L17.1787 12.2876L17.1117 12.322L17.0827 12.4071L17.0773 12.4149L17.0779 12.4367L16.685 12.8295L16.6319 12.8259L16.0779 12.7505L16.0761 12.7487L16.0652 12.7475L16.058 12.7553L15.8304 12.7897L15.6597 12.8531L15.5703 12.8694L15.5468 12.8826L15.3664 12.9092L15.2855 12.9152L15.2595 12.9146L14.8329 12.8935L14.8196 12.8875L14.6868 12.8651L14.446 12.7819L14.2541 12.832L14.1944 12.8398L14.1901 12.844L13.6536 12.908L13.5981 12.9116L13.5788 12.911L13.1467 12.8923H13.1461L13.1352 12.8917L12.6669 12.8585L12.6645 12.8555L12.6053 12.8495L12.1159 12.7408L11.9427 12.7734L11.8709 12.7801L11.8655 12.7825L10.1986 12.8657L10.1799 12.8664H10.1793L10.1388 12.867L10.1268 12.8676L10.0978 12.8664L9.52749 12.838L9.42128 12.7891L9.31928 12.7801L9.31325 12.777L9.2698 12.7734L9.01331 12.7257L8.97227 12.6762L8.73147 12.5767L8.57275 12.1934L8.59629 12.0353L8.64397 11.879L8.69949 11.838L8.76587 11.6708L9.12435 11.503L9.51602 11.4795L9.54379 11.4789L9.71277 11.5278L9.75561 11.5308L9.76829 11.5441L9.78398 11.5489L9.83769 11.5827L9.84976 11.6056L9.86002 11.6099L9.88476 11.669V11.6696L9.90226 11.6883L10.1334 11.6907H10.1382L10.1738 11.6913H10.2873L10.3983 11.6352L10.4309 11.5936L10.6959 11.5266L10.8395 11.5085L10.8419 11.5073L11.2945 11.503L11.3012 11.4861L11.6259 11.3353L12.7659 11.2707L12.7954 11.2701H12.8021L13.8268 11.2834L13.9391 11.2785L15.7924 11.0154H15.7979L15.7985 11.0148L16.0549 10.9804L16.1225 10.9756L16.2034 10.9822Z\" fill=\"black\"/>\n      <path d=\"M8.35686 9.22666L8.41178 9.25925L8.42928 9.29002L8.4492 9.29847L8.45403 9.30994L8.5005 9.32925L8.6381 9.66057L8.57956 9.80179L8.58197 9.80903L8.588 9.85188L8.59404 9.8555L8.66948 9.96896L8.67612 9.99069L8.68698 9.99672L8.79078 10.1802L8.91027 10.3703L8.91208 10.3775L8.95131 10.3142L8.95192 10.3136L8.90967 10.2713L9.2428 9.93818H9.2597L9.36411 10.0426L9.46067 10.08L9.47334 10.0909L9.48782 10.1247L9.49084 10.1259L9.52102 10.1488L9.53369 10.1748L9.53731 10.1772L9.56266 10.2297L9.56447 10.2381L9.56869 10.2472L9.59283 10.2713L9.58499 10.2798L9.59826 10.3075L9.64111 10.3419L9.68396 10.5501L9.68879 10.5978L9.6906 10.5996L9.69905 10.7372L9.7769 11.1518L9.82759 11.2701L9.83846 11.3208L9.84691 11.3268L9.88975 11.5157L9.89217 11.5369L9.89398 11.5387L9.90726 11.6238L9.91208 11.6775L9.57895 12.0106L9.47877 11.937L9.41782 11.9979L9.44256 12.1192L9.4486 12.1826L9.45041 12.1844L9.46067 12.4198L9.46127 12.4391L9.04727 12.8531L8.64172 12.5218L8.47032 11.6859L8.35143 11.3624L8.11546 10.8114L8.01347 10.6238L8.01287 10.6213H8.01227L7.90907 10.4306L7.90484 10.4125L7.8113 10.3546L7.74069 10.211L7.72138 10.1307L7.70689 10.1186L7.68577 10.0323L7.67189 9.92129L7.69784 9.85852L7.67431 9.79395L7.64956 9.65454L7.64111 9.63342L7.77931 9.29847L8.11426 9.15967L8.35686 9.22666Z\" fill=\"black\"/>\n      <path d=\"M18.0895 9.4591L18.2175 9.46574L18.448 9.57316L18.5572 9.61842L18.5603 9.62506L18.5675 9.62868L18.7105 9.98837L18.5916 10.3203L18.1825 10.8182L18.1499 10.8339L18.1342 10.8689L17.8499 11.1284L17.7908 11.1513L17.7703 11.1875L17.7027 11.2274L17.3822 11.5213L17.3472 11.5351L17.3345 11.5593L17.0853 11.7271L16.9863 11.7578L16.9682 11.7814L16.8807 11.8055L16.7781 11.8194L16.7582 11.8115L16.5959 11.8737L16.2887 11.7464L16.1613 11.4392L16.1957 11.3559L16.2392 11.208L16.2893 11.129L16.2947 11.126L16.3949 11.0252L16.4027 11.0101L16.4275 10.9926L16.5971 10.8224L16.7208 10.6661L16.5627 10.7005L16.4486 10.7132L16.3726 10.6818L16.1879 10.6685L14.8143 10.6269L13.9622 10.6257H13.9018H13.9L13.8101 10.6178L13.623 10.5858L13.5216 10.5937L13.2235 10.6528L13.1957 10.6552L13.1939 10.6577L13.1137 10.6685L13.0497 10.6727L13.0183 10.6721L12.8276 10.6589L12.8161 10.6468L12.614 10.5828L12.5681 10.5502L12.4058 10.2352L12.6037 9.89784L12.6496 9.8725L12.7142 9.855L12.7262 9.8387L12.9036 9.78016L12.9549 9.77171L12.9604 9.76507L13.0286 9.7518L13.3327 9.67032L13.3412 9.66912L13.3424 9.66791L13.5234 9.62204L13.5603 9.61782L13.5633 9.6136L13.8071 9.57195L13.9 9.56351H13.9012H13.9622L14.8216 9.5623H14.8228L14.8487 9.5629L16.209 9.62929L16.4758 9.60997L16.5174 9.60816L16.5826 9.63532L17.0418 9.53816L17.1058 9.53152L17.1131 9.5279L18.0189 9.4597L18.0606 9.4585L18.0895 9.4591Z\" fill=\"black\"/>\n      <path d=\"M12.4206 9.91235L13.493 9.93227L15.3137 9.94132L15.3373 9.94193L16.0271 9.98236L16.0289 9.98417L16.0904 9.99141L16.2878 10.0379L16.5406 10.3595L16.2854 10.6818L16.0929 10.7271L16.0651 10.7307L16.0633 10.7331L15.3843 10.8405L15.3687 10.8417L15.3674 10.843L13.5606 11.0705L13.5026 11.0741L13.5008 11.0747L12.4248 11.1019H12.4091H12.3952L12.0452 11.0934L11.4954 11.1525L11.3898 11.1682L11.3379 11.1725L11.3343 11.1737L10.8219 11.1984L10.6976 11.2069L10.6728 11.2075H10.6722L10.2914 11.2141H10.283L10.2027 11.2075L10.0289 11.1785L9.68066 10.7645L9.88525 10.4036L10.0325 10.3155L10.187 10.2726L10.2045 10.2521L10.5775 10.1906L10.6113 10.1882L10.6155 10.1857L10.7314 10.1749L11.2238 10.1L11.2323 10.0994L11.2341 10.0988L11.3481 10.0825L11.9251 9.98477L11.9293 9.98417L11.9299 9.98357L12.3077 9.9208L12.4091 9.91235H12.4206Z\" fill=\"black\"/>\n      <path d=\"M11.3207 9.26669L11.9544 9.34213L11.9562 9.34394L11.9809 9.34635L12.3587 9.41455L13.2229 9.493L13.2259 9.49602L13.2803 9.50205L13.3937 9.5274L13.4299 9.57266L13.6098 9.64689L13.6635 9.77785L13.7661 9.77966H13.7727L14.0159 9.78691L14.0171 9.78811L14.0865 9.79536L14.13 9.80441L14.4142 10.1581L15.1028 10.1188L15.1221 10.1182H15.1227L16.3219 10.0905H16.3352L16.7281 10.2534L16.891 10.6463L16.7818 10.9094L16.8222 11.0066L16.6882 11.3681L16.6677 11.3795L16.6593 11.3989L16.5549 11.4423L16.3521 11.5552L16.1469 11.5871L16.0944 11.5914L16.0902 11.5932L15.655 11.6173L15.6255 11.6179H15.6188L15.232 11.6131L15.1415 11.633L15.0853 11.6397L15.0769 11.6439L14.6309 11.6897L14.576 11.6928L14.55 11.6922L14.0123 11.665H14.0117L14.0008 11.6644L13.9049 11.6572L13.8198 11.6922L13.5573 11.8014L13.5446 11.8008L12.6418 11.7791L12.6405 11.7785L12.6061 11.7766L12.0093 11.7199L12.0968 11.8092L11.955 12.0573L11.8554 12.1164L11.783 12.1774L11.795 12.2069L11.6659 12.5582L11.6442 12.5702L11.6357 12.5908L11.5355 12.6324L11.3412 12.7422L11.2483 12.7579L11.1559 12.7658L11.1511 12.7652L11.0274 12.7935L10.7625 12.9209L10.6611 12.9861L10.3774 13.0699L10.3569 13.0693L10.2205 13.0639L10.2163 13.0621L10.1499 13.0561L9.47217 12.9263L9.32432 12.9541L9.18672 12.9348L9.10163 12.9106L9.08292 12.9088L8.96946 12.8853L8.93446 12.8412L8.71961 12.7465L8.5802 12.4025L8.71056 12.0681L8.72082 12.0627L8.72504 12.053L8.82764 12.0108L8.86445 11.9927L8.96161 11.7549L8.96403 11.7537L8.96523 11.7513L9.08956 11.7L9.34182 11.5914L9.60072 11.5865H9.60857L9.62727 11.5757L9.72444 11.4996L9.68219 11.4073L9.66952 11.1623L9.61279 11.1062V11.1056L9.5283 10.9028L9.44864 10.8563L9.42389 10.8129L9.35872 10.7851L9.3044 10.7296L9.22836 10.5419L8.9429 10.4266L8.77574 10.3651L8.75341 10.3331L8.66167 10.3017L8.55063 10.216L8.48424 10.0814L8.41182 10.0325L8.38708 9.97278L8.35449 9.80561L8.48304 9.49602L8.48424 9.49542L8.49269 9.4749L8.72625 9.37834L8.75099 9.34997L8.94834 9.32764L9.00205 9.32463L9.04309 9.32644L9.07386 9.32945H9.10525L9.16379 9.33307L9.65262 9.39705L9.65443 9.39886L9.67193 9.40006L9.72685 9.41032L9.83186 9.42541L9.84815 9.41093L10.1143 9.31074L10.1227 9.3023L11.2495 9.26367H11.2658L11.3207 9.26669Z\" fill=\"black\"/>\n      <path d=\"M14.2563 8.95264L14.9377 8.95626H14.9642H14.9763L15.5702 8.97738L15.5714 8.97859L15.6202 8.98281L15.7265 9.00273L15.7277 9.00454L15.7403 9.00574L15.7572 9.00997L16.1827 9.08118L16.4368 9.11196L16.721 9.14153L16.7216 9.14274L16.7331 9.14334L16.7591 9.14696H16.7603L16.7802 9.14998L16.8967 9.16386H17.0499H17.0536L17.3384 9.16688V9.16748L17.3939 9.17171L17.4265 9.17714L17.4271 9.17835L17.4356 9.17895L17.712 9.23447L17.8683 9.23628H17.8936L17.9099 9.23689L18.5418 9.26585L18.5424 9.26646L18.5671 9.26766L18.5732 9.26827H18.5756L18.89 9.27128L19.2594 9.25016L19.3752 9.28335L19.4615 9.29542L19.5961 9.31413L19.6112 9.31655H19.6124L19.6251 9.32319L19.6577 9.34008L19.7114 9.34612L19.7548 9.35095L19.8043 9.35698L19.9938 9.58993L19.744 9.91341L19.6263 9.94358L19.6124 9.94539L19.6106 9.9472L19.5961 9.95083L19.5696 9.95384L19.5671 9.95565L19.5454 9.95927L19.5098 9.96169L19.5092 9.96229L18.9166 9.99066L18.8985 9.99126L18.8864 9.99066L18.5665 9.9804H18.5521L18.5062 9.97738L18.4923 9.97557L17.8846 9.94358H17.8683L17.6782 9.946H17.674L17.6046 9.93936L17.3221 9.88263L17.0536 9.88565H17.0499L17.0361 9.88504L16.8604 9.87841L16.8598 9.8778L16.8327 9.8766L16.6866 9.85909L16.68 9.85125L16.6691 9.84883L16.6571 9.84823L16.642 9.84582L16.3626 9.82228V9.82168L16.3547 9.82107L16.0892 9.7915L16.0868 9.78848L16.0487 9.78426L15.607 9.68046L15.6064 9.67925L15.6009 9.67865L15.5714 9.6708L15.5708 9.6702H15.5683L15.5038 9.65209L14.9564 9.62735H14.9371H14.9353L14.2714 9.62373L14.2606 9.62494L14.2268 9.62675H14.2262L13.712 9.63157H13.709H13.7084L13.6534 9.63097H13.6528L12.9667 9.62856H12.9455L12.715 9.64123L12.2835 9.68227H12.2775V9.68287L12.234 9.68589L12.2111 9.6871H12.2105L11.8303 9.69192H11.8285H11.7874L11.1706 9.71124L11.1477 9.71305L11.1163 9.71486L10.6287 9.71546L10.4422 9.739H10.4398L10.397 9.74443L10.3559 9.74684L9.92019 9.74865L9.87915 9.74926H9.87795L9.87493 9.74865L9.31307 9.74383H9.25815H9.25513L8.27445 9.72874H8.27384L7.64982 9.71787L7.60154 9.72874L7.59853 9.72934L7.56594 9.76193L7.53999 9.73598L7.52792 9.73719L7.21289 9.42216L7.52792 9.10653H7.55508L7.56594 9.09567L7.5768 9.10653H7.61422L8.27324 9.09446H8.27928H8.28109L9.26057 9.09989H9.31307L9.87493 9.09506H9.87795H9.87915H9.91235L10.3161 9.07756L10.3354 9.07394L10.3843 9.06972L10.3855 9.06851L10.5943 9.06006H10.5997L11.0934 9.04739L11.1127 9.04497L11.1495 9.04316L11.7808 9.04195H11.7814H11.7838H11.823L12.1906 9.03351L12.2219 9.03109L12.6534 8.98462L12.6715 8.98342L12.6722 8.98281L12.9184 8.96893H12.9353L12.9359 8.96833H12.9667L13.6528 8.96591H13.6534L13.7053 8.96531L14.2008 8.95626L14.2141 8.95505L14.2545 8.95264H14.2563Z\" fill=\"black\"/>\n      <g className=\"animate\">\n        <path d=\"M13.7972 1.59981L14.0108 1.62757L14.0344 1.74586L14.1279 2.20754L14.1581 2.2522L14.1738 2.27573L14.207 2.32522L14.2118 2.34212L14.0947 2.3729L14.0832 2.38557L13.799 2.42299L13.7429 2.42661H13.7314L12.5618 2.39523L12.414 2.39885H12.4049L12.0181 2.0114L12.0754 1.95407L12.1303 1.78629L12.1406 1.77241L12.274 1.70482L12.289 1.6837L12.2963 1.68128L12.3343 1.67465L12.3753 1.65413L12.4049 1.62456H12.4134L12.5618 1.62757L13.7308 1.59619H13.7429L13.7972 1.59981Z\" fill=\"#FFC114\"/>\n        <path d=\"M12.2061 1.82925L12.2441 1.83891L12.2538 1.84494L12.2978 1.92099L12.4451 2.06824V2.09902L12.3811 2.16299L12.3775 2.17808L12.3654 2.20523L12.2942 2.24989L12.1119 2.43215L11.7788 2.09902V2.06824L12.1119 1.73511L12.2061 1.82925Z\" fill=\"#FFC114\"/>\n        <path d=\"M12.3486 2.12415V2.14467L12.2991 2.19415L12.3365 2.25752L12.357 2.27683L12.3661 2.44038L12.3667 2.45668V2.4609L12.3612 2.83869V2.84714L12.3594 2.88576L12.3588 2.88637L12.3576 2.90749L12.3558 2.92499L12.3323 3.17062L12.316 3.89059V3.89783L12.2882 4.50737V4.52668V4.52849L12.2876 4.54177L12.2611 5.13803V5.15734L12.2562 5.5303V5.53815L12.2496 5.6854L12.2526 5.92378L12.2532 5.93887L12.2755 6.25812L12.2942 6.34985L12.3003 6.40839L12.3009 6.409L12.3081 7.15251V7.15613L12.3015 7.2195L12.2502 7.46995L12.2472 7.47237L12.2442 7.49409L12.2309 7.53875L11.9436 7.75118L11.6431 7.45064V7.44822L11.6437 7.41383V7.41322V7.40115H11.6443L11.6461 7.36856L11.6757 7.13018L11.7016 6.42952L11.6883 6.34684L11.6847 6.30097L11.6817 5.95456V5.95215V5.94611L11.6823 5.92318L11.6853 5.67756V5.6679L11.6926 5.51884L11.6944 5.15492V5.13501L11.6938 5.12897V5.12837L11.695 4.52789V4.52668V4.49952V4.49168L11.7149 3.8749L11.733 3.14527L11.7348 3.11872L11.765 2.8568L11.7668 2.85499L11.7692 2.83024L11.7716 2.82059L11.7734 2.8049L11.7951 2.43917L11.8018 2.31727L11.7988 2.30882V2.30701L11.7656 2.22795L11.6823 2.14467V2.12415L12.0154 1.79102L12.3486 2.12415Z\" fill=\"#FFC114\"/>\n        <path d=\"M14.1097 2.1193L14.1278 2.20741L14.2074 2.32509L14.231 2.41381L14.3414 2.52425L14.4676 2.71073L14.4983 3.1543L14.4989 3.17965L14.4971 3.21586L14.482 3.3607L14.4754 3.36613L14.4591 3.44941L14.4344 3.51097L14.4096 3.66848L14.432 4.01369L14.4326 4.03722L14.432 4.05654L14.4259 4.16335L14.4235 4.16637L14.4132 4.2394L14.3692 4.39087L14.3607 4.6546V4.66064L14.3444 4.98713L14.3294 5.41381V5.41743L14.2913 6.24181L14.2925 6.39812L14.3233 6.85014L14.3493 6.9817L14.3565 7.05231L14.3541 7.09636L14.3408 7.20017L14.3143 7.48019L14.3076 7.48623L14.2865 7.57977L14.2624 7.63288L14.0137 7.78979L13.7947 7.67995L13.7615 7.63589L13.712 7.48985L13.6999 7.47898L13.6734 7.19836L13.6607 7.09818L13.6577 7.05231V7.04386L13.6613 6.89299L13.6534 6.41622L13.6528 6.41079L13.654 6.38303L13.6685 6.21888L13.6848 5.3957L13.6854 5.38242L13.7114 4.96179L13.715 4.64374L13.7126 4.34199V4.33897L13.715 4.29552L13.7391 4.1187L13.7397 4.03421V4.0336L13.7403 4.01489L13.7651 3.63107L13.7657 3.63046L13.7675 3.60874L13.7995 3.37699L13.8001 3.37337L13.8103 3.30699L13.8043 3.20077L13.8037 3.17965L13.8043 3.15551L13.8538 2.44398L13.8502 2.4132L13.849 2.38062L13.8508 2.34742L13.858 2.27802L13.8013 2.2231L13.7947 2.06619L13.7941 2.0511L14.0457 1.80005L14.1097 2.1193Z\" fill=\"#FFC114\"/>\n        <path d=\"M12.0767 7.12422L12.1648 7.11456L12.2076 7.11154L12.3374 7.13508L12.3657 7.14534L12.7785 7.13327H12.7912L12.86 7.1393L12.9626 7.1568L13.7882 7.17793L13.79 7.17974L13.8998 7.19905L14.0507 7.25397L14.0688 7.28052L14.14 7.30647L14.1684 7.33001L14.2668 7.54063L14.1684 7.75125L14.1406 7.77479L14.0314 7.81462L14.0121 7.83876L13.86 7.87376L13.7978 7.881L13.7966 7.88282L12.9668 7.92385L12.8624 7.94196L12.7912 7.94799L12.7158 7.94075L12.2764 7.85868L12.2125 7.85928H12.2076L12.131 7.85143L11.9228 7.80798L11.9222 7.80677L11.889 7.81221L11.8654 7.78867L11.8594 7.78746L11.8153 7.76815L11.7604 7.68366L11.5933 7.51649L11.685 7.30225L11.7254 7.26423L11.7556 7.23405L11.9023 7.1737L11.9107 7.16344L11.9342 7.16043L11.9385 7.15862L11.9578 7.13749L11.994 7.13327L12.0399 7.0874L12.0767 7.12422Z\" fill=\"#FFC114\"/>\n        <path d=\"M12.8585 2.14184L12.9322 2.15994L12.9539 2.15511L13.0299 2.14667L13.0999 2.15391L13.2424 2.18348L13.2677 2.21546L13.4071 2.27219L13.4717 2.33496L13.4801 2.35548L13.5821 2.31927L13.8084 2.40014L13.8157 2.40617L13.9491 2.68921V2.69525L14.0468 2.76887L14.0529 2.7906L14.0661 2.88475L14.039 2.9119L14.0378 2.93182L14.0263 3.00303L14.0239 3.00545L14.0215 3.02778L13.969 3.23659L13.9533 3.34884L13.9521 3.39832L13.9515 3.39953L13.943 3.47135L13.9243 3.5492L13.8972 3.73568L13.8543 4.16115L13.8519 4.23417L13.8344 5.04166L13.5411 5.32832L13.4946 5.28245L13.4451 5.33073L13.1398 5.0314L13.1295 4.58058L13.1078 4.2903L13.1066 4.26374L13.1102 4.21546L13.1554 3.8944L13.1331 3.87207L13.1416 3.89621L13.0118 4.21064L12.6974 4.34099L12.383 4.21064L12.3612 4.15813L12.3244 4.13822L12.3057 4.10925L12.278 4.01571L12.2538 3.9976L12.1905 3.7912L12.1736 3.68318L12.1711 3.68076L12.1494 3.15632V3.13822L12.15 3.11227L12.1705 2.78517L12.1748 2.78094L12.1917 2.67895L12.2574 2.48161L12.2949 2.45445L12.3353 2.34522L12.395 2.27581L12.6775 2.14606L12.6902 2.13279L12.7451 2.13037H12.7626L12.8585 2.14184Z\" fill=\"#FFC114\"/>\n        <path d=\"M13.1031 2.77829L13.1695 2.84528L13.2003 2.92071L13.2353 2.94425L13.2552 2.99072L13.2697 3.06133L13.2769 3.06736L13.2974 3.20617L13.301 3.25566L13.3004 3.27255L13.2842 3.57793L13.2854 3.59362L13.2872 3.59482L13.3976 4.32264L13.4006 4.36067L13.4018 4.36127L13.4055 4.42645H13.4827H13.4833L13.8068 4.55982L13.8738 4.62681L13.9142 4.72337L14.0108 4.94003L14.0301 5.48137V5.49887L14.0277 5.54775L13.9643 6.13496L13.9613 6.13737L13.9577 6.17599L13.916 6.37636L13.9293 6.47955L13.9287 6.4874L13.9637 6.64069L13.9522 6.75113L13.9486 6.77104L13.9208 6.79277L13.8774 6.96537L13.8394 7.1253L13.7911 7.16272L13.6994 7.3673L13.3493 7.50852L12.9993 7.3673L12.9975 7.36308L12.9933 7.36066L12.9468 7.24902L12.9142 7.1766L12.8164 7.1778L12.7983 7.18565L12.7887 7.20738L12.4097 7.36006L12.0228 7.19953L11.8623 6.81208L11.8744 6.69862L11.9142 6.50973L11.9438 6.36308L11.948 6.35946L11.9649 6.2466L12.0174 6.07943L12.0343 6.06736L12.0784 5.90563L12.0995 5.88933L12.1013 5.8845V5.60629L12.0868 5.50128L12.085 5.50007L12.0735 4.88631V4.87787L12.0808 4.79941L12.091 4.74147L12.0916 4.73665L12.1828 4.05952L12.4362 3.83864L12.4447 3.74872L12.4477 3.7463L12.4537 3.69742L12.5014 3.49525L12.5485 3.45843L12.6215 3.29669L12.6396 3.2804L12.6547 3.20195L12.5328 3.01184L12.8659 2.67871L13.1031 2.77829Z\" fill=\"#FFC114\"/>\n        <path d=\"M14.7887 3.46935L14.8708 3.47116H14.8714L14.8841 3.47177L15.0012 3.47901V3.47961H15.0096L15.4236 3.51824L15.4242 3.51884L15.4303 3.51944L15.8551 3.56953L16.0845 3.82904L15.8455 4.08915L15.4218 4.12596L15.3977 4.12717L14.9915 4.13139L14.9052 4.13682L14.8473 4.14829L14.7936 4.15312L14.7924 4.15433L14.4701 4.16579L14.458 4.1664H14.4568L13.9529 4.16459L13.9456 4.16881L13.7857 4.21528L13.7676 4.21468L13.761 4.21407L13.7169 4.25813L13.3838 3.925L13.5274 3.78197L13.5884 3.67515L13.6077 3.66368L13.659 3.6498L13.6686 3.63652L13.6741 3.63471L13.7169 3.59186L13.7399 3.6148L13.7827 3.60212L13.8171 3.58583L13.9191 3.56229L13.9245 3.55626L14.4224 3.51401L14.7326 3.47237L14.7803 3.46875L14.7887 3.46935Z\" fill=\"#FFC114\"/>\n        <path d=\"M16.2018 3.86951L16.1101 3.96064L16.1276 4.10246L16.1306 4.14712L16.13 4.17126L16.1192 4.333L16.1174 4.33481L16.1131 4.37585L16.098 4.45249L16.1017 4.48508L16.1089 4.53457L16.1131 4.59311L16.0914 4.66553L16.0896 4.68785L16.0594 4.86347L16.0504 4.87072L16.0365 4.94012L16.0057 5.01435L15.9804 5.07832L15.7009 5.26842L15.4197 5.07651L15.3944 5.01012H15.3938L15.3654 4.94253L15.3364 4.7989L15.337 4.77597L15.3461 4.63414L15.3431 4.59311L15.3467 4.53698L15.3563 4.47422L15.3594 4.4718L15.363 4.44042L15.3865 4.34567L15.3938 4.34024L15.4016 4.30101L15.4239 4.24549L15.4215 4.15677V4.14712L15.4239 4.10367L15.4463 3.92684L15.4583 3.91537L15.4927 3.79407L15.5205 3.74941L15.6279 3.68967L15.6732 3.62509L15.6961 3.61604L15.7969 3.59793L15.8066 3.59854L15.8687 3.53638L16.2018 3.86951Z\" fill=\"#FFC114\"/>\n        <path d=\"M15.5657 4.69204L15.6267 4.7035L15.6424 4.72221L15.7438 4.75782L15.7661 4.77592L15.8433 4.93826L15.8633 4.95818L15.8506 4.97206L15.8307 5.05836L15.818 5.08552L15.7655 5.11871L15.7269 5.19173L15.681 5.22312L15.6357 5.26476L15.5579 5.29554L15.5349 5.32933L15.4088 5.38123L15.2863 5.40598L15.2821 5.4102L15.136 5.41805L14.7419 5.44279L14.7172 5.44339L14.6991 5.44279L14.5766 5.43736L13.2712 5.45426H13.2658L13.1197 5.42468L13.0739 5.40477L12.888 5.12173L12.8608 5.08853L12.8747 5.07224L13.0021 4.81455L13.0389 4.78618L13.1403 4.75178L13.1409 4.75118L13.1451 4.74997H13.1457L13.2501 4.71436L13.2555 4.70954L14.5687 4.67212L14.6979 4.66608H14.7009L15.098 4.64919H15.1149L15.1348 4.64979L15.2833 4.65764L15.2839 4.65824L15.3201 4.66126L15.4318 4.67876L15.4921 4.61841L15.5657 4.69204Z\" fill=\"#FFC114\"/>\n        <path d=\"M12.2617 3.32616L12.3468 3.3497L12.5604 3.63214L12.3443 3.91518L12.2635 3.93751L12.2472 3.93992L12.2454 3.94173L11.6038 4.08235H11.6032L11.0697 4.20124L11.0076 4.20848L11.0058 4.21089L10.8205 4.22236L10.7952 4.22357L10.6732 4.20305L10.5749 4.17046L10.5302 4.1077L10.3425 4.07149L10.1597 3.84819L10.3299 3.62791L10.5284 3.57601L10.5314 3.57541L10.5773 3.51144L10.6702 3.48006L10.704 3.47462L10.7076 3.46919L10.8869 3.42695L10.9309 3.42212L10.9334 3.4191L11.4771 3.35392L11.5012 3.35272L11.5019 3.35211L11.8965 3.32978L11.9008 3.32496L11.9303 3.32194L11.9684 3.31953L11.9744 3.32556L12.1591 3.3153L12.1778 3.3147L12.2617 3.32616Z\" fill=\"#FFC114\"/>\n        <path d=\"M10.3194 3.45575L10.533 3.54989L10.5711 3.59153L10.6139 3.70318L10.6447 3.72611L10.6688 3.81603L10.6773 3.88061L10.6797 3.88302L10.6936 4.09727L10.6948 4.12141L10.6942 4.1383L10.6845 4.3278L10.705 4.63438L10.7497 4.76594L10.7654 4.86069L10.7684 4.86431L10.7799 5.0508L10.7805 5.07494L10.6875 5.32599L10.6652 5.35194L10.3671 5.48894L10.3453 5.46661L10.3417 5.46721L10.2983 5.47023L9.96514 5.13649L9.97721 5.09908L9.97359 5.09545L9.98264 5.08157L10.0164 4.97536L10.0267 4.86975L10.0255 4.71284L10.0026 4.35315V4.34772V4.34711L9.9923 4.13951L9.99169 4.12141L9.9923 4.09847L10.0062 3.88604L10.0086 3.84078L10.0068 3.83293L10.0032 3.80578L9.94824 3.75086L10.1142 3.58489L10.2071 3.4648L10.2259 3.45997L10.2415 3.45816L10.2814 3.41772L10.3194 3.45575Z\" fill=\"#FFC114\"/>\n        <path d=\"M10.2606 4.95849L10.2998 4.95427L10.3361 4.95246H10.3463L10.4507 4.95548L10.7676 4.93013L10.7989 4.92832H10.8001L11.1604 4.92953L11.161 4.93013L11.2154 4.93375L11.8092 5.01945L11.8183 5.03031L11.9196 5.05264L12.2304 5.19688L12.2691 5.25783L12.2775 5.25964L12.3071 5.27473L12.3186 5.27231L12.3342 5.28801L12.3505 5.29645L12.3638 5.31697L12.5437 5.49742L12.5346 5.55958L12.534 5.56199L12.5346 5.5626L12.534 5.5638L12.5147 5.63019L12.4091 5.70925L12.2848 5.85409L12.2624 5.85771L12.216 5.86133L12.2015 5.86073L12.1333 5.85771L12.0916 5.85892H12.082L12.0446 5.8565L11.7036 5.81969L11.7024 5.81788L11.677 5.81607L11.0977 5.71046L10.7597 5.6664L10.4507 5.64105L10.3469 5.64407L10.3361 5.64467L10.053 5.49742L9.98784 5.40508L9.96913 5.34594L9.95163 5.33327L9.94197 5.30611L9.85205 5.21619L10.1852 4.88306L10.2606 4.95849Z\" fill=\"#FFC114\"/>\n        <path d=\"M11.6965 3.5774L11.9523 3.63171L11.9668 3.65042L12.0773 3.67818L12.1859 3.73672L12.2143 3.7844L12.2921 3.81638L12.4297 4.14831L12.4291 4.16822L12.4267 4.22314L12.3802 4.2678L12.3724 4.28651L12.3856 4.28591L12.42 4.28772L12.8238 4.32453L12.8316 4.33358L12.9584 4.36678L13.0223 4.40178L13.175 4.66249L13.1992 4.68663L12.9397 4.94614L12.8751 5.01312H12.8727L12.866 5.01976L12.86 5.01373L12.8069 5.01554L12.5468 5.03063L12.4701 5.11391L12.4213 5.11813L12.3856 5.11934L12.3663 5.11874L11.8395 5.09339L11.8389 5.09279L11.8165 5.09158L11.4689 5.05477L11.4677 5.05356L11.449 5.05235L11.1587 5.00588L10.7966 4.96786L10.4526 4.58343L10.6047 4.43135L10.4828 4.30944L10.6077 4.01313L10.653 3.96907L10.9252 3.85803L10.9366 3.84596L11.0465 3.84113L11.0887 3.73914L11.2637 3.66672L11.2981 3.62326L11.4864 3.57981L11.5969 3.56714L11.6965 3.5774Z\" fill=\"#FFC114\"/>\n        <path d=\"M14.3015 3.39561L14.6135 3.47045L14.6352 3.49761L14.7638 3.53864L14.8229 3.57968L14.8404 3.58089H14.8441L15.144 3.60684L15.1657 3.63038L15.4258 3.7384L15.5592 4.06067L15.5381 4.11016L15.6141 4.29423L15.6485 4.30811L15.7988 4.67081L15.7572 4.87359L15.733 4.92971L15.7161 4.94118L15.7028 4.98704L15.6775 5.02989L15.6733 5.03231L15.6322 5.13128L15.2925 5.2719L15.2611 5.25922L15.2563 5.26043L15.1609 5.27129L15.1585 5.2725L15.0565 5.27371L14.9014 5.33828L14.864 5.33707L14.4506 5.3063H14.45L14.4458 5.30569L14.313 5.29423L13.9841 5.2725L13.9792 5.27009L13.9304 5.26586L13.3075 5.14939L13.2738 5.10835L13.077 5.02688L12.9467 4.71185L12.9949 4.59477L12.7662 4.52416L12.4844 4.13913L12.8875 3.73539L12.9642 3.74323L13.1675 3.78246L13.3263 3.80056L13.3305 3.80539L13.3914 3.81444L13.5139 3.84945L13.6727 3.88083L13.7457 3.88023L13.7209 3.841L13.8477 3.53502L13.8791 3.52235L13.8821 3.5145L13.9104 3.50304L13.9273 3.47226L13.9623 3.45114L14.1983 3.38354L14.3015 3.39561Z\" fill=\"#FFC114\"/>\n        <path d=\"M15.6597 3.33935L15.7092 3.35262L15.7195 3.35564L15.7213 3.35625L15.749 3.36952L15.8166 3.40211L15.8625 3.42384L15.8667 3.42625L16.1685 3.44737L16.2053 3.44979L16.2837 3.52824L16.2119 3.60851L16.2179 3.66222L16.2041 3.763L16.1842 3.83542L16.166 3.92535L16.1938 4.13778L16.2071 4.19692L16.2173 4.28624V4.30374L16.2004 4.6755L16.1968 4.76119L16.2186 4.87948L16.2119 4.95492L16.1823 5.1239L16.0749 5.21382L15.9253 5.43108L15.924 5.43289L15.9144 5.44677L15.8872 5.45703L15.845 5.48539L15.6386 5.54755L15.2656 5.17459L15.2819 5.06536L15.3115 4.9694L15.3405 4.94828L15.3477 4.84749L15.3495 4.84629L15.3519 4.81189L15.3628 4.74369L15.3646 4.74188L15.3676 4.71955L15.396 4.5904L15.4237 4.32366V4.32305L15.4074 4.2114L15.4068 4.2108L15.4038 3.91629V3.91267L15.4159 3.81792L15.4557 3.66282L15.4714 3.58497L15.4726 3.58376L15.4732 3.57652L15.4937 3.48902L15.5559 3.44013L15.6175 3.32788L15.6597 3.33935Z\" fill=\"#FFC114\"/>\n        <path d=\"M16.0668 4.94544L16.0034 5.0088L15.9757 5.11864L15.9479 5.16813L15.9238 5.18261L15.9075 5.22425L15.8604 5.27615L15.7258 5.3353L15.7162 5.35099L15.6878 5.36487L15.6739 5.36849L15.6685 5.37453L15.6232 5.37996L15.6112 5.38297L15.6021 5.39444L15.2195 5.46807L15.1483 5.47531L15.1477 5.47591L15.0197 5.47833L14.6414 5.4904L14.2841 5.52902L14.2714 5.53023H14.2708L14.0825 5.54592L14.0493 5.54713L13.9455 5.53325L13.7663 5.48376L13.5225 5.16149L13.5563 5.11442L13.5768 5.02329L13.5985 4.97863L13.6939 4.91949L13.7458 4.84586L13.9159 4.78551L13.963 4.77706L13.9684 4.77103L14.1519 4.7318L14.1706 4.72999L14.1718 4.72818L14.5418 4.66662L14.6118 4.66058H14.6178L15.0155 4.66602H15.0173L15.1483 4.66843L15.1489 4.66903L15.2032 4.67326L15.5925 4.73482L15.6009 4.74507L15.7337 4.6123L16.0668 4.94544Z\" fill=\"#FFC114\"/>\n      </g>\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <rect width=\"1500\" height=\"1000\" fill=\"white\" transform=\"translate(-846 -590)\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\nexport default ChessSketch"},"relativePath":"sketches/chess.jsx"},{"fields":{"contents":"import React from 'react'\n\nconst Keyboard = () => (\n  <svg className=\"sketch keyboard\" width=\"77\" height=\"72\" viewBox=\"0 0 77 72\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0)\">\n      <path d=\"M686.106 -258H-814.011V742.078H686.106V-258Z\" fill=\"white\"/>\n      <path d=\"M30.2695 11.7579L29.9364 12.0911H29.9122L29.5791 11.7579L29.9122 11.4248H29.9364L30.2695 11.7579Z\" fill=\"black\"/>\n      <path d=\"M30.4202 11.3586L30.4335 11.3526L30.6695 11.5886L30.6652 11.6043L30.6978 11.6368L30.6387 11.696L30.6332 11.7141L30.6055 11.7587L30.5403 11.795L30.3647 11.97H30.3375L30.0044 11.6368L30.3375 11.3037H30.3647L30.4202 11.3586Z\" fill=\"black\"/>\n      <path d=\"M30.5524 11.3846L30.6381 11.4709L30.6387 11.4721L30.5488 11.3828L30.5524 11.3846Z\" fill=\"black\"/>\n      <path d=\"M31.3059 11.589V11.6059L31.1611 11.7507L31.1448 11.79L31.1381 11.7972L31.0989 11.8129L30.9728 11.939L30.6396 11.6059V11.589L30.9728 11.2559L31.3059 11.589Z\" fill=\"black\"/>\n      <path d=\"M29.6098 11.2456L29.6581 11.2462L29.6587 11.2468L29.7034 11.2504L29.7861 11.2625L29.7891 11.2667L29.8301 11.2728L30.0027 11.3241L30.013 11.3373L30.0673 11.3518L30.0866 11.3627L30.2948 11.3524L30.3866 11.3307L30.4071 11.3283L30.4089 11.3265L30.5911 11.2957L30.6418 11.2915L30.6424 11.2909L30.8718 11.2866H30.8784L30.9707 11.2993L31.08 11.3295L31.3063 11.6306L31.3455 11.6699L31.2984 11.7163L31.2978 11.7224L31.2864 11.7634L31.1482 11.8666L31.0124 12.003L30.9701 11.9608L30.9321 11.9668L30.8784 11.971L30.8718 11.9704L30.6611 11.9668L30.5042 11.9813L30.3926 11.9988L30.3787 12L30.3781 12.0006L30.048 12.0392L30.0076 12.0416L29.838 11.9958L29.7752 11.9595L29.7149 11.9439L29.7052 11.9451L29.6678 11.9481L29.5622 11.9843L29.4089 12.0579L29.2459 12.0953L29.1222 12.0742L29.0341 12.0434L29.0136 12.0139L28.9309 11.9843L28.9134 11.9698L28.8995 11.9402L28.8802 11.9463L28.6654 12.0887L28.5911 12.1116L28.5761 12.1321L28.462 12.169L28.3473 12.1871L28.284 12.1816L28.1536 12.1587L28.1446 12.1478L28.0631 12.1297L28.0353 12.1171L27.9943 12.1159L27.8917 12.1376L27.6925 12.1889L27.6853 12.1895L27.5803 12.3796L27.5688 12.4037L27.5646 12.414L27.5519 12.423L27.5423 12.4598L27.4891 12.5504L27.3377 12.9221L27.3298 12.9414L27.2465 13.3029L27.2441 13.3054L27.2417 13.321L27.1083 13.7863L27.0323 14.2166L27.0299 14.2191L27.0275 14.239L26.9701 14.4767H26.9695L26.8929 14.799L26.8869 14.8407L26.8856 14.8419L26.885 14.8509L26.8519 15.0416L26.8368 15.2245L26.8356 15.3675V15.3705L26.8344 15.4085V15.4188L26.8205 15.7278V15.7284L26.8199 15.7411L26.7885 16.1189L26.7818 16.3512L26.78 16.9535L26.7788 16.9837L26.7613 17.1967L26.7662 17.8582V17.8612L26.7571 17.9451L26.7559 17.9511L26.7287 19.1901V19.1907L26.7263 19.2281L26.6919 19.5136L26.6835 19.7676L26.6823 19.7688L26.678 19.8201L26.6074 20.2359L26.605 20.2384L26.6026 20.2583L26.5936 20.598V20.5986L26.593 20.6174L26.5706 20.9143L26.567 20.9173L26.5567 20.9909L26.4698 21.2993L26.4656 21.318L26.4179 21.598L26.4053 22.1448L26.4047 22.1454L26.4004 22.1997L26.3033 22.7972L26.3045 22.8141L26.3039 22.831L26.2755 23.5522L26.2743 23.5528L26.2719 23.592L26.2477 23.7719L26.2121 24.2245L26.2103 24.2257L26.2079 24.2571L26.2025 24.2903L26.1765 24.5455L26.1886 25.5836V25.589V25.592L26.188 25.6318L26.1952 26.1002V26.1068V26.1092L26.188 27.4804L26.2055 27.5902L26.22 27.621L26.2254 27.6439L26.2321 27.6481L26.3033 27.8298L26.3093 27.8612L26.3159 27.8654L26.4879 28.4514L26.5278 28.4997L26.6672 28.659L26.6744 28.6777L26.6883 28.6849L26.7897 28.8213L26.9931 29.0609L27.013 29.0845L27.1385 29.1418L27.1518 29.1629L27.2013 29.1786L27.2471 29.2112L27.3491 29.2287L27.5525 29.2613L27.5616 29.2715L27.6497 29.2903L28.3473 29.598L28.3509 29.6035L28.3654 29.6065L28.628 29.7405L28.7275 29.7785L28.9448 29.8008L28.9454 29.8014H28.9472L29.2701 29.8382L29.2852 29.8551L29.4541 29.9076L29.506 29.9438L29.5097 29.9505L29.5205 29.9547L29.6026 30.0181L29.6605 30.1358L29.7076 30.1708L29.7106 30.181L29.7215 30.2571L29.7112 30.3313L29.707 30.3458L29.6593 30.3808L29.602 30.4967L29.5211 30.5588L29.3799 30.6071L29.3594 30.6324L29.3015 30.6433L29.2218 30.6511H29.2079L28.8844 30.6397L28.8838 30.6391L28.8585 30.6379L28.5857 30.6113L28.5785 30.6035L28.4662 30.5805L28.293 30.5087L28.2846 30.4954L28.2477 30.4858L27.9901 30.3367L27.3467 30.041L27.2127 30.0042L27.0564 29.9921L27.0444 29.9795L26.8543 29.9185L26.7595 29.8503L26.5875 29.7634L26.5471 29.6976L26.4535 29.6511L26.3962 29.5757L26.182 29.3591L26.1554 29.2939L26.1162 29.2709L26.0474 29.1472L25.9351 29.0187L25.8374 28.9143L25.7831 28.7767L25.7438 28.7465L25.564 28.0911L25.5133 27.9451L25.506 27.9318L25.5018 27.9143L25.4958 27.9107L25.4765 27.8684L25.459 27.7887L25.4481 27.7797L25.4107 27.5872L25.4047 27.5262L25.4028 27.525L25.3479 26.1243L25.3473 26.1128L25.3407 25.6397V25.6367V25.5944L25.3184 24.5347V24.5256L25.322 24.4689L25.3612 24.1762V24.1756L25.3618 24.1726L25.366 24.14L25.4035 23.6988L25.4113 23.5184L25.4306 22.8014H25.4312L25.4318 22.7791L25.4348 22.7399L25.4385 22.7368L25.4469 22.6687L25.5972 22.0808L25.6038 21.5534L25.6044 21.5528L25.6111 21.4816L25.6732 21.1575L25.6762 21.1551L25.6786 21.1352L25.6901 21.0911L25.6925 21.0893L25.6949 21.0748L25.7788 20.8044L25.7993 20.5679L25.8036 20.2028V20.2021L25.8054 20.1714L25.809 20.1285L25.812 20.1261L25.8175 20.0754L25.905 19.6964L25.9213 19.4556L25.9225 19.455L25.9237 19.4339L25.9599 19.1527L25.9858 17.9396L25.9774 17.8612V17.8582L25.9822 17.1792V17.1786L25.984 17.1436L26.0057 16.9197L26.0438 16.3277L26.0504 16.0875L26.051 16.076L26.0727 15.7073L26.0601 15.42L26.0595 15.4085V15.4079L26.0589 15.3705V15.3669L26.0576 15.2094V15.2064V15.2015L26.0601 14.9849L26.0619 14.9553L26.08 14.7435L26.0824 14.7417L26.0872 14.6976L26.0999 14.6367L26.1017 14.6355L26.1035 14.6204L26.1934 14.2758L26.1965 14.2734L26.1989 14.2583L26.264 14.0519L26.3383 13.627L26.3407 13.6246L26.3437 13.6023L26.4656 13.1104L26.4692 13.1074L26.4729 13.0863L26.596 12.7043L26.6008 12.7012L26.6044 12.6825L26.6255 12.6288H26.6261V12.6282L26.7885 12.2317L26.8048 12.2209L26.8175 12.1756L26.8706 12.0911L26.8917 12.0446L26.9038 12.0368L26.9128 12.0054L27.0486 11.7827L27.0685 11.7477L27.0926 11.7338L27.1077 11.6922L27.1349 11.6602L27.1452 11.6554L27.15 11.6433L27.2544 11.5347L27.3799 11.481L27.4137 11.4345L27.4614 11.4188L27.4964 11.4134L27.5006 11.4079L27.7112 11.3603L27.7915 11.3512L27.7927 11.35L27.94 11.347L27.9496 11.3464L27.9623 11.347L28.0009 11.3482L28.0015 11.3488L28.0341 11.3506L28.1723 11.3675L28.1844 11.3814L28.3202 11.4194L28.3576 11.4423L28.5398 11.3283L28.6557 11.2945L28.669 11.2788L28.8265 11.2516L28.8856 11.2468L28.9333 11.2498L29.086 11.2716L29.1023 11.2903L29.2266 11.3325L29.2852 11.309L29.3455 11.2969L29.3528 11.2885L29.5314 11.2528L29.6026 11.2456H29.6098Z\" fill=\"black\"/>\n      <path d=\"M32.3724 33.3651L32.2583 33.6156L32.204 33.6632L31.9843 33.7459L31.9373 33.6995L31.9077 33.729L31.8956 33.7296L31.9023 33.7357L31.8775 33.7296H31.8636H31.8606L31.8552 33.7242L31.8461 33.7218L31.6814 33.5625L31.676 33.545L31.6265 33.4955L31.6434 33.408L31.6687 33.3446L31.6886 33.3313L31.7653 33.1623L31.8196 33.1147L32.0393 33.032L32.3724 33.3651Z\" fill=\"black\"/>\n      <path d=\"M33.2053 32.8509L33.4153 32.8594L33.4171 32.8618L33.4974 32.8733L33.6682 32.9222L33.6845 32.9439L33.7702 32.971L34.0611 33.172L34.1262 33.2016L34.1407 33.201H34.1516L34.2258 33.2004L34.3356 33.0748L34.5861 32.9614L34.9192 33.2945L34.8565 33.4888L34.6827 33.7315L34.6271 33.7598L34.5988 33.8129L34.4799 33.8962L34.3489 33.9372L34.3314 33.9584L34.2294 33.9777L34.154 33.9849L34.0393 33.968L33.9385 33.9372L33.9229 33.9161L33.8444 33.8926L33.6833 33.7864L33.6809 33.7809L33.6724 33.7785L33.4099 33.589L33.3568 33.5739L33.2741 33.5776L33.1486 33.7091L32.8541 33.8353L32.7008 33.8051L32.644 33.7821L32.6114 33.7333L32.5076 33.6898L32.5016 33.6838L32.2246 33.7097H32.2234L31.9108 33.7393L31.8697 33.7417L31.8064 33.7369L31.6465 33.7121L31.4395 33.6989L31.3761 33.7079L31.253 33.7671L31.0701 33.8087L31.0092 33.8045L30.8728 33.784L30.8227 33.8401L30.8003 33.8503L30.7901 33.8727L30.7454 33.9119L30.7394 33.9143L30.7207 33.9451L30.6434 34.166L30.606 34.3609L30.6012 34.3651L30.5946 34.4044L30.5565 34.5232L30.4207 36.0386V36.0392L30.4201 36.0435L30.3634 36.5842L30.3894 37.0489L30.4213 37.3663L30.4238 37.4176V37.4297L30.3936 38.6222L30.4274 38.9686L30.4298 39.0115V39.0121L30.4304 39.0869V39.0911V39.1008L30.3809 41.5564H30.3803L30.3773 41.6017L30.3646 41.7001L30.3574 41.7061L30.3423 41.7906L30.2494 42.0447H30.2487L30.1504 42.3241L29.8323 42.5474L29.4938 42.21L29.4932 41.9083V41.9071L29.4944 41.8751L29.5167 41.6065L29.5233 41.5311L29.4944 39.0972V39.0911V39.0875L29.495 39.0211L29.4841 38.653L29.4395 37.4363V37.4176L29.4419 37.3681L29.4745 37.041L29.5161 36.5371L29.5179 36.5359L29.5197 36.5069L29.6096 35.9415L29.8052 34.3971L29.8082 34.3947L29.8118 34.3609L29.8504 34.1955L29.8577 34.1901L29.8655 34.1467L29.9428 33.9457L30.0327 33.6681L30.0399 33.6633L30.046 33.6349L30.1045 33.5033L30.1202 33.4647L30.1462 33.4472L30.1685 33.3802L30.2053 33.3313L30.2162 33.3259L30.221 33.3114L30.367 33.1412L30.4914 33.0845L30.5312 33.0272L30.6543 32.9807L30.7991 32.9541H30.81L30.9102 32.9566V32.9572L30.9367 32.9584L31.0061 32.9644L31.0955 32.9276L31.189 32.9089L31.1974 32.8998L31.3628 32.8757L31.4238 32.8715L31.4497 32.8721L31.7189 32.8896H31.7237L31.8836 32.9022L32.1793 32.898L32.5523 32.892H32.5589L32.6368 32.8998L32.7696 32.9264L32.7901 32.9517L32.8396 32.9674L32.8746 32.9475L32.9241 32.9342L32.9343 32.9197L33.0635 32.8733L33.1902 32.8503L33.2053 32.8509Z\" fill=\"black\"/>\n      <path d=\"M30.4705 41.8116L30.1373 42.1448L29.8042 41.8116L30.1373 41.4785L30.4705 41.8116Z\" fill=\"black\"/>\n      <path d=\"M30.4553 41.7462L30.1222 42.0793L29.7891 41.7462L30.1222 41.4131L30.4553 41.7462Z\" fill=\"black\"/>\n      <path d=\"M52.1468 32.7371L52.8909 32.7377V32.7383L52.9241 32.7389L53.3731 32.7709L53.3761 32.7739L53.4455 32.7823L54.25 32.9754L54.2615 32.9905L54.3417 33.0104L54.457 33.0702L54.5789 33.0895L54.8794 33.0708L54.9036 33.0702H54.9042H55.2741L55.3496 33.078L55.6211 33.1342L55.6507 33.171L55.6821 33.174L55.8046 33.1843L55.8837 33.1692L55.9706 33.0823L56.3037 33.4154L56.2379 33.4812L56.2331 33.4932L56.2144 33.5693L56.1999 33.5964L56.1909 33.6025L56.186 33.6145L56.1721 33.629L56.1003 33.6604L56.0551 33.7286L56.0297 33.7395L55.912 33.763L55.8022 33.7425L55.7835 33.7346L55.6374 33.7262L55.6368 33.725H55.635L55.6193 33.7449L55.352 33.8004L55.3037 33.8059L55.3019 33.8077L54.9338 33.8348L54.9187 33.8354V33.836L54.5759 33.8493H54.5608L54.5288 33.8481L54.3001 33.8288L54.2989 33.827L54.2711 33.8252L54.0798 33.7932L53.3146 33.6779L52.9108 33.6948H52.9L52.2222 33.7081L52.0207 33.7684L52.0044 33.7709L52.0026 33.7739L51.3568 33.9459L50.6224 34.2681L50.5409 34.3261L50.5186 34.3502L50.4685 34.448L50.4648 34.4576L50.3454 34.7612L50.2778 35.0617L50.2959 35.7202L50.3049 36.0032L50.3055 36.0189V36.0225L50.2995 36.7564V36.757L50.2989 36.7727L50.2941 36.8831L50.2603 37.6502L50.2548 37.6556L50.2126 37.8252L50.1341 37.9742L50.0521 38.0237L50.0026 38.1076L49.9923 38.113L49.8444 38.1511L49.6984 38.1136L49.6851 38.1064L49.635 38.0213L49.5542 37.9724L49.4775 37.827L49.4304 37.6405L49.4286 37.6381L49.4154 36.8759L49.4105 36.7739V36.7648L49.3912 36.0557L49.3562 35.8004L49.3544 35.7684L49.3532 35.766L49.3049 35.0479L49.3037 35.0141L49.3134 34.9163L49.3954 34.5144L49.4069 34.5053L49.4214 34.4311L49.5566 34.0986L49.5626 34.0805L49.5741 34.072L49.5837 34.031L49.6731 33.8487L49.7038 33.8294L49.7268 33.7636L49.8221 33.6423L49.9054 33.6019L49.9434 33.5325L50.1124 33.4244L50.1721 33.4063L50.1866 33.3846L51.0014 33.037L51.0527 33.0261L51.0605 33.0159L51.734 32.8209L51.76 32.8173L51.763 32.8131L52.0327 32.7503L52.1462 32.7371H52.1468Z\" fill=\"black\"/>\n      <path d=\"M49.9363 36.1543L49.9827 36.1875L50.0395 36.2973L50.0733 36.3251L50.098 36.4373L50.101 36.4621L50.1028 36.4639L50.1022 36.4657V36.476L50.1034 36.4862L50.104 36.4868L50.1065 36.6093V36.6148L50.0992 36.6625L50.1059 36.6697L50.0992 36.6787L50.098 36.7131L50.0974 36.7138L50.0968 36.7319L50.0769 36.9708L50.063 37.2249L50.0546 37.4428V37.4458L50.0407 37.7391L50.0401 37.7397L50.0389 37.762L50.0099 38.0336L50.0473 38.9678L50.0479 38.9847V38.992L50.0431 39.2503L50.0461 39.5647L50.133 40.2165L50.1342 40.2382L50.1348 40.2388L50.1638 40.6154L50.165 40.6437L50.1722 42.8248V42.8266L50.1686 42.8767L50.139 43.1018L50.1378 43.759L50.1475 44.2243V44.2328V44.2388L50.1324 45.2134H50.1318L50.1294 45.2551L49.964 46.593V46.6389L49.9646 46.6981L49.993 47.648L50.0002 47.6733L50.0612 47.7518L50.1264 47.8224L50.1795 47.96L50.2211 47.9914L50.296 48.2454L50.302 48.2853L50.3068 48.2889L50.3448 48.4838L50.55 48.5291L50.5549 48.5357L50.5965 48.543L50.8301 48.6244L50.8439 48.6437L50.9091 48.6618L51.1004 48.7777L51.1234 48.8181L51.1843 48.8435L51.3322 48.9908L51.3412 49.0125L51.3599 49.0215L51.4348 49.1108L51.5868 49.1277L52.1028 49.1012L52.1258 49.1006L52.2459 49.1181L52.5199 49.1978L52.7196 49.2509L52.9242 49.5182L52.7178 49.7862L52.5271 49.8363L52.2766 49.9286L52.168 49.9485L52.1626 49.9545L51.6128 50.0016L51.5893 50.0028V50.0034L51.3195 50.0125L51.3026 50.0131L51.2266 50.0064L51.0811 49.9817L51.0365 49.9292L50.7963 49.8145L50.6375 49.619L50.6339 49.6081L50.6267 49.6045L50.5355 49.4838L50.4631 49.4259L50.3279 49.3764L50.0147 49.307L49.9966 49.2847L49.8795 49.2509L49.7763 49.1857L49.7432 49.1247L49.6695 49.0897L49.6013 49.004L49.5422 48.8363L49.5126 48.8115L49.445 48.4579V48.4573L49.3998 48.24L49.3829 48.2002L49.299 48.0577L49.2766 47.9769L49.2579 47.963L49.2169 47.8181L49.2024 47.7156L49.2012 47.7143L49.1831 46.7131V46.7059V46.7017L49.1837 46.6389V46.5695V46.5683L49.1861 46.5224L49.3454 45.1778L49.3708 44.2231L49.3804 43.7572L49.3859 43.0734V43.0638L49.3943 42.8163L49.4287 40.6612L49.3919 40.3124L49.2972 39.6468L49.296 39.6262L49.2948 39.6256L49.2646 39.2853L49.2634 39.2563H49.2628L49.2579 38.9926V38.9883L49.2489 38.0342L49.2314 37.7445L49.2302 37.7192L49.241 37.6256L49.3092 37.3378L49.3129 37.3348L49.3159 37.3148L49.3768 37.1193L49.4203 36.9129V36.7288L49.3678 36.6763L49.4179 36.6262L49.4167 36.5731V36.5653L49.4161 36.4657V36.4639L49.5295 36.3498L49.5398 36.3106L49.55 36.2913L49.5543 36.2774L49.5597 36.2732L49.5621 36.2696L49.5778 36.2599L49.6689 36.1929L49.7269 36.1229L49.7588 36.1163L49.8041 36.1121L49.9363 36.1543Z\" fill=\"black\"/>\n      <path d=\"M67.809 45.7669L67.8748 45.8882L67.8772 45.8972L67.8808 45.8991L67.9936 46.1248L68.0371 46.1918L68.0944 46.2581L68.1349 46.3692L68.1699 46.3945L68.2387 46.613L68.2429 46.6396L68.2471 46.6426L68.2966 46.8459L68.3099 46.9552L68.3093 46.9823L68.2719 47.5919H68.2713V47.6003L68.2314 48.0801L68.2538 48.6595V48.6764L68.2544 49.0119V49.0554V49.0578L68.2387 49.1743L68.1186 49.6136L68.1137 49.6172L68.1089 49.6438L68.0274 49.8683L67.9755 49.9045L67.923 50.027L67.7269 50.2153L67.6834 50.2328L67.6672 50.263L67.6376 50.2829H67.637L67.4988 50.3752L67.4813 50.3806L67.4764 50.3891L67.3274 50.4766L67.2139 50.5074L67.1982 50.5267L66.8126 50.6088L66.7541 50.6148L66.7516 50.6172L66.7239 50.6196L66.1029 50.7246L66.0715 50.7277L66.0697 50.7295L66.0305 50.7331L65.6068 50.782L65.6056 50.7826L65.2658 50.8236L65.2097 50.8266H65.1958L65.165 50.826L64.5965 50.8333L64.5628 50.8375L64.5241 50.8405L64.5235 50.8411L63.7281 50.8773L63.6032 50.9105L63.5235 50.9214L63.5133 50.9262L63.1717 50.954L63.1312 50.9558L63.0745 50.9522L62.8669 50.928V50.9274L62.8573 50.9262L62.1789 50.9329H62.1759H62.1252L61.5368 50.9371H61.5332H61.4849L61.4185 50.9329L60.6684 50.8315L60.6587 50.8303L59.8935 50.8351H59.8911L59.8331 50.8357H59.8319H59.8247L59.1246 50.8254L59.0649 50.826L58.6128 50.8369H58.6002L58.5446 50.8339L58.1174 50.7868L58.1035 50.7796L58.0329 50.7699L57.9846 50.7554L57.7215 50.6836L57.3877 50.6619L57.3425 50.6613L56.8446 50.6679H56.8373L56.7909 50.6661L56.5597 50.6444L56.5555 50.6426L56.5259 50.6402L56.5054 50.6371L55.9949 50.6039L55.9448 50.6033L55.2646 50.6009H55.264L55.185 50.5943L55.0293 50.5677L55.0232 50.5671L54.5537 50.5563L54.1343 50.5677H54.121L54.08 50.5659L53.678 50.5315L53.6738 50.5273L53.5972 50.5176L53.322 50.4428L53.3177 50.4374L53.29 50.4325L53.0359 50.3414L52.6943 50.3058L52.2966 50.2768L52.2906 50.2696L52.1608 50.2437L51.8717 50.123L51.5175 50.0656L51.2043 50.024L51.2007 50.0198L51.1524 50.0131L51.0516 49.9854L51.0413 49.9721L50.9816 49.9576L50.6762 49.8019L50.302 49.6154L50.2972 49.6076L50.2785 49.6021L50.2001 49.5551L50.0371 49.2636L50.0407 49.2123L50.0431 49.1954L50.0606 49.1803L50.1023 49.0542L50.1445 48.9962L50.3823 48.8761L50.398 48.8894L50.3986 48.8888L50.4843 48.8864H50.4915L50.5278 48.8888L50.6255 48.9033L50.6358 48.9154L50.7305 48.9449L50.7939 48.989L50.8198 49.0391L50.9677 49.0819L50.9756 49.0934L51.0238 49.1042L51.3268 49.2491L51.3606 49.2642L51.6044 49.295L51.9967 49.3034L51.9985 49.3046L52.1011 49.3191L52.4016 49.4042L52.7565 49.4205V49.4211L52.7788 49.4223L53.1819 49.4621L53.1862 49.4663L53.2501 49.4748L53.5513 49.5545L53.7752 49.6003L54.1361 49.6124L54.5573 49.6239L55.0456 49.619H55.0504L55.086 49.6208L55.1162 49.6227L55.2725 49.6275L55.9454 49.6251L56.0075 49.6239H56.0142L56.025 49.6245L56.5748 49.6365L56.5772 49.6377L56.634 49.642L56.6581 49.645L56.8555 49.6564L57.3425 49.6631L57.4016 49.6625H57.4064L57.4511 49.6643L57.8506 49.6999L57.8591 49.7041L57.9188 49.7114L58.22 49.7826L58.2357 49.7844L58.6316 49.8236L59.0655 49.8339L59.1294 49.8345L59.8337 49.8387H59.8917H59.8929L60.6786 49.8435H60.6792L60.7148 49.8453L60.7613 49.849L60.7637 49.8502L60.7854 49.8514L61.5181 49.9497H61.5332H61.5368L62.1252 49.954H62.1759H62.1886L62.8989 49.9745L62.9025 49.9763L62.9822 49.9841L62.9858 49.9854L63.1192 49.9914L63.4246 49.9612L63.602 49.9413L63.6563 49.9383L63.675 49.9389L63.6961 49.9395L64.4849 49.9485L64.5217 49.9455L64.5549 49.9437L64.5561 49.9431L65.1572 49.931L65.1765 49.9304L65.4976 49.8918L65.5121 49.8912L65.5127 49.8906L65.9436 49.8514L65.9544 49.8508L65.955 49.8502L65.9786 49.849L66.6038 49.7554L66.64 49.7524L66.6412 49.7512L66.6708 49.7488L66.9629 49.7029L67.0365 49.6595L67.1638 49.5762L67.2538 49.4893L67.287 49.3831L67.3793 48.9763V48.6957L67.3292 48.1103L67.3274 48.0698L67.328 48.0523L67.3473 47.5436L67.3479 47.5418L67.3497 47.5122L67.4155 46.9045L67.4161 46.9039L67.4173 46.8912L67.4384 46.7446L67.4101 46.581L67.4046 46.5182V46.5176L67.4034 46.444L67.3853 46.3644V46.3638L67.3244 46.1012L67.3165 46.0324V46.0264L67.3195 45.8864L67.5803 45.6311L67.809 45.7669Z\" fill=\"black\"/>\n      <path d=\"M63.879 32.9697L64.0643 32.9824L64.1229 32.9854L64.1247 32.9866L64.1434 32.9872L64.9883 33.0735L64.9943 33.0765L65.0329 33.0802L65.0891 33.0916L65.6787 33.199L65.6829 33.2045L65.7221 33.2099L65.7626 33.2214L65.7632 33.222L65.7674 33.2226L66.1579 33.3421L66.1687 33.3566L66.2273 33.3704L66.5688 33.5406L66.5827 33.5636L66.6328 33.5799L66.8199 33.7156L66.832 33.7398L66.8646 33.7525L67.1983 34.0645L67.2037 34.0771L67.2164 34.0826L67.2786 34.1471L67.281 34.1538L67.287 34.1568L67.3063 34.1779V34.1785H67.3069L67.5447 34.441L67.6002 34.5865L67.6461 34.6197L67.701 34.8013L67.7137 34.8852L67.7197 34.8907L67.7583 35.2407L67.8042 35.4537L67.8151 35.5557L67.8096 35.6269L67.7777 35.84L67.7734 35.843L67.7686 35.8834L67.5513 36.7392L67.4892 37.0283L67.5043 37.0512L67.4765 37.0856L67.4723 37.1061L67.4367 37.1351L67.2176 37.4036L67.1554 37.4163L67.0764 37.4247L67.0758 37.4241L67.0728 37.426L66.669 37.0826L66.6081 36.706L66.6014 36.6263L66.6165 36.5068L66.835 35.6541L66.8567 35.5503L66.8296 35.4048L66.8259 35.3692L66.8241 35.3674L66.7873 35.0337L66.774 34.989L66.6268 34.8231L66.5646 34.77L66.5622 34.7645L66.5568 34.7627L66.2255 34.464L66.0987 34.3596L65.8555 34.2401L65.5489 34.1671H65.5465L65.5453 34.1665L65.5387 34.1646L65.5097 34.1622L64.9086 34.0657V34.0651L64.905 34.0645L64.8736 34.059L64.0583 33.9963L64.0022 33.9932H64.0016L63.9895 33.9926L63.8229 33.9794L63.4536 33.977L63.1126 34.0156L63.0529 34.0186H63.0492H62.9931L62.086 34.0313H62.0788H62.0673L62.0257 34.0301L61.6443 34.0313H61.6431H61.6376L61.5857 34.0307H60.9026L60.873 34.0301L60.5767 34.0126L58.6727 34.0192L58.2146 34.024H58.2098H57.8048L57.7541 34.0216L57.3383 33.9764L57.1174 33.9926H57.1168L56.7511 34.021L56.7179 34.0228H56.7119L56.3377 34.0174L56.2894 34.0138L56.0981 33.9884L56.0915 33.9806L56.0076 33.9655L55.864 33.9112L55.7167 33.8955L55.3956 33.9009L55.1265 33.9251L55.0921 33.9269L54.9822 33.91L54.9068 33.8864L54.666 33.5563L54.6757 33.5448L54.6733 33.5424L54.7535 33.3264L54.7928 33.2817L54.8754 33.2443L54.9032 33.2033L54.9255 33.1936L55.0299 33.1731L55.0462 33.1797L55.0474 33.1785L55.0492 33.1809L55.0818 33.1936L55.0897 33.193V33.1924L55.3612 33.1912L55.7022 33.1634L55.7294 33.1622L55.9491 33.1598H55.9527H55.9551L56.1579 33.161V33.1616L56.22 33.1665L56.3775 33.1912L56.6998 33.193L57.0444 33.1616L57.2979 33.1339H57.2997L57.7517 33.0844L57.8048 33.0814H58.2098H58.2146L58.6678 33.0862L60.5664 33.0524L60.8603 33.0289L60.9026 33.027H61.5857L61.637 33.0264H61.6431H61.6443L62.0257 33.0276L62.0637 33.0264L62.9702 32.992L62.9871 32.9914L63.042 32.9908L63.4083 32.9782H63.4156H63.4162L63.8338 32.9691L63.8453 32.9685L63.879 32.9697Z\" fill=\"black\"/>\n      <path d=\"M67.4665 36.1828L67.4731 36.2184L67.4786 36.2806L67.4605 36.3747L67.5232 36.6722L67.5281 36.7181L67.5293 36.7199L67.5655 37.359V37.3711L67.5914 38.633L67.6047 38.9662L67.7127 39.5365L67.7157 39.5678L67.7182 39.5697L67.7737 40.1128L67.7755 40.1496H67.7761L67.7833 41.0368L67.834 41.598L68.0567 42.9263L68.0622 42.9927V42.9945L68.0585 43.77L68.0567 43.8056L68.0223 44.1575L68.0133 44.2637L67.9921 44.7006L68.0199 45.2558L68.0271 45.3451L68.0344 45.4363L68.0809 45.9402L68.0827 45.98V45.983L68.0742 47.2558V47.2576L68.0724 47.4399H68.0718L68.0712 47.461L67.9988 48.5847L67.6294 48.9299L67.452 48.7543L67.2794 48.6161L67.2704 48.5745L67.2589 48.563L67.2583 48.5057L67.2547 48.4707L67.2583 48.4671L67.248 47.4387V47.4345V47.4242L67.2529 47.248L67.251 45.9867L67.2372 45.4888L67.2311 45.4055V45.4031L67.2251 45.3083L67.2239 45.2842L67.2191 44.7042V44.7012V44.691L67.2305 44.2275H67.2311L67.2323 44.2003L67.2438 44.082L67.2444 44.0766L67.2824 43.7447L67.2854 43.0187L67.1032 41.697L67.1014 41.6765L67.1008 41.6753L67.0513 41.0869L67.0501 41.0633V41.0627L67.0302 40.1725L66.9855 39.6511L66.895 39.0633L66.892 39.0205L66.8908 39.0193L66.8787 38.6566L66.8781 38.6433L66.8787 38.6324L66.9179 37.3705L66.9258 36.7495L66.8944 36.4363L66.8642 36.3783L66.8177 36.3397L66.8117 36.3041L66.8057 36.2426L67.1388 35.9094L67.4665 36.1828Z\" fill=\"black\"/>\n      <path d=\"M39.9925 14.0537L40.0969 14.1322L40.1294 14.198L40.1928 14.2306L40.2876 14.3609L40.3389 14.5184L40.3721 14.545L40.4161 14.7309L40.4203 14.7659L40.424 14.7689L40.529 15.4062L40.532 15.4418L40.5344 15.446L40.5724 15.8582L40.5742 15.8974L40.5748 15.898L40.5839 16.3748V16.385L40.5833 16.4068L40.5109 18.1605L40.5103 18.1618L40.5091 18.1877L40.3214 20.1382L40.3196 20.1412L40.3183 20.1624L40.0383 22.0465L40.0371 22.0477L40.0365 22.0573L39.7329 23.7707L39.7311 23.7725L39.7293 23.7894L39.4046 25.2342L39.4004 25.2378L39.3968 25.2643L39.185 25.9692L39.1675 25.9819L39.15 26.0531L38.9387 26.4581L38.8923 26.4864L38.8591 26.5685L38.7577 26.6735L38.6623 26.714L38.6285 26.7689L38.5247 26.822L38.3045 26.8745L38.1904 26.8612L38.1132 26.8419L38.0842 26.8051L37.9297 26.7502L37.7438 26.5999L37.7064 26.5208L37.643 26.4858L37.4439 26.1672L37.4306 26.1219L37.4137 26.1111L36.8669 24.8835L36.8663 24.8817V24.8811L36.5597 24.1949L36.0281 23.1829L35.4783 22.2843L35.2043 21.9439L35.0522 21.8365L35.0504 21.8377L34.9665 21.9891L34.8543 22.3024L34.6919 23.0073V23.0079L34.6913 23.0085L34.5489 23.6035L34.5435 23.6077L34.5386 23.6373L34.3491 24.1786L34.3437 24.1829L34.3395 24.2028L34.1566 24.621L34.1433 24.6301L34.1331 24.6663L34.0552 24.7942L33.9846 24.8334L33.943 24.9137L33.8681 24.9674L33.6261 25.0453L33.5827 25.0429L33.5024 25.0344L33.4783 25.0085L33.252 24.9125L33.086 24.7429L33.0498 24.6542L33.0057 24.6258L32.7203 24.0048L32.7118 23.9644L32.7022 23.9578L32.4384 23.143L32.4348 23.1201L32.4312 23.1171L31.9967 21.4394L31.9937 21.4146L31.9906 21.4116L31.1482 17.1123L31.1476 17.1038L31.1464 17.1026L31.0552 16.5896L30.7583 16.2927V16.2873L30.7655 15.8823L30.7667 15.8811L30.7849 15.7761L30.8446 15.6083L30.8621 15.542L30.8506 15.4732L30.8476 15.4333L30.8434 15.408L31.2049 15.0465L31.4264 15.1225L31.4867 15.1696L31.5495 15.2981L31.611 15.3416L31.6792 15.5281L31.6889 15.5854L31.6967 15.5914L31.9611 16.9481V16.9493V16.9499L32.8114 21.2432L33.2139 22.9047L33.471 23.679L33.6092 23.9662L33.6467 23.8974L33.8217 23.3971L33.9828 22.8298L34.15 22.1135L34.1542 22.1105L34.1572 22.0881L34.2755 21.72L34.2924 21.7073L34.3099 21.6446L34.4553 21.4019L34.5115 21.3706L34.5459 21.3018L34.7155 21.1714L34.8893 21.1123L34.9031 21.0966L35.0154 21.0851L35.0528 21.0833L35.1349 21.093L35.2574 21.1207L35.2743 21.1424L35.3799 21.175L35.6672 21.373L35.6907 21.4182L35.742 21.4424L36.0655 21.8389L36.0763 21.8697L36.0938 21.8799L36.6629 22.8075L36.666 22.8178L36.6708 22.8202L37.2447 23.8353L37.2483 23.8503L37.255 23.8546L37.5941 24.5341L37.5947 24.5347L38.1904 25.6892L38.2067 25.7091L38.2411 25.6337L38.4662 24.9885L38.7921 23.5878L39.0812 21.9035L39.293 20.0308L39.474 18.1038L39.5374 16.3857L39.5199 15.9294L39.5042 15.5414L39.4324 15.0453L39.2459 14.8588L39.2477 14.822L39.2906 14.3754L39.3129 14.3555L39.4004 14.1346L39.43 14.1026L39.7384 13.9692L39.9925 14.0537Z\" fill=\"black\"/>\n      <path d=\"M18.3439 35.1366L18.3427 35.1638L18.3361 35.2476L18.3143 35.2676L18.3107 35.2808L18.251 35.4058L17.9902 36.3695L17.6752 37.6453L17.324 39.203L16.8702 41.1601L16.8683 41.1619L16.8665 41.1728L15.8249 45.0165L15.4513 46.4812L15.3155 47.008L15.1647 47.5802L15.0409 48.034L15.0325 48.0406L15.0234 48.0841L14.8599 48.477L14.7615 48.7232L14.7591 48.725L14.7573 48.7322L14.5491 49.206L14.2516 49.3979L14.219 49.3967L14.1822 49.3931L13.9058 49.0859L13.9136 49.0159L13.9275 48.9567L13.9552 48.8107L13.9577 48.8089L13.9601 48.7914L14.0198 48.5741L14.0253 48.5699L14.0301 48.5446L14.0874 48.4094L14.1212 48.2482L14.1942 47.8373L14.1991 47.8336L14.2045 47.7944L14.3355 47.3472L14.4851 46.7841H14.4857V46.7823L14.6324 46.2561L15.024 44.7944L16.0337 40.9477L16.5117 39.0056L16.8852 37.4498L16.8883 37.448L16.8907 37.4317L17.2667 36.1619L17.2709 36.1589L17.2745 36.1396L17.636 35.1734L17.6378 35.1722L17.639 35.1668L17.7036 35.0087L18.0108 34.8035L18.3439 35.1366Z\" fill=\"black\"/>\n      <path d=\"M18.0803 35.3373V35.3481L18.0695 35.6608V35.6614V35.668L18.0556 35.9106L18.0918 36.1599L18.2777 36.5624L18.644 37.3119L18.6458 37.3204L18.6488 37.3216L19.3435 38.8195L19.3501 38.8503L19.3585 38.8563L19.7412 39.8919L19.7454 39.9142L19.7496 39.9178L20.096 41.0361L20.0984 41.0518L20.1009 41.0536L20.2879 41.7392L20.2916 41.7652L20.2946 41.7676L20.5541 42.9915L20.5547 42.9969L20.5553 42.9975L20.9228 44.8002L20.924 44.8153L20.9252 44.8165L21.195 46.4387L21.3694 47.289L21.3724 47.3174L21.3742 47.3192L21.3863 47.4356L21.3875 47.4574L21.3881 47.4586L21.3845 47.5002L21.3839 47.5063L21.1395 47.7102L20.9663 47.6402L20.8818 47.5576L20.8407 47.461L20.8069 47.4356L20.5456 46.601L20.542 46.5763L20.5384 46.5732L20.1715 44.9679V44.9661L19.7593 43.1792L19.4201 41.9879L19.4183 41.9776L19.4171 41.9764L19.236 41.2932L18.8975 40.1955L18.5058 39.1816V39.181L17.8818 37.6602L17.8757 37.6282L17.8685 37.6227L17.6187 36.8207L17.6114 36.7742L17.6066 36.77L17.5281 36.2932L17.4666 35.9836V35.983L17.4111 35.7199L17.4038 35.6493V35.6384L17.4141 35.3258L17.7472 35.0042L18.0803 35.3373Z\" fill=\"black\"/>\n      <path d=\"M16.4282 42.1102L17.7993 42.1754L17.8017 42.1766L17.8367 42.179L19.0317 42.3257L19.0341 42.3287L19.0757 42.3341L19.2441 42.377L19.2634 42.3703L19.369 42.3534L19.7021 42.6866L19.369 43.0197L19.2658 43.0034L19.2471 42.9974L19.0884 43.0426L19.0311 43.0505L19.0274 43.0547L17.8361 43.1947L17.7812 43.1977L17.7806 43.1983L16.4336 43.2146L15.8953 43.2695L15.8361 43.2732L15.7909 43.2714L15.5911 43.2551L15.2278 43.3233L15.1433 43.3311L15.1125 43.3305L14.9128 43.3166L14.5947 42.9744L14.678 42.7511L14.809 42.5997L14.9351 42.5417L14.9779 42.479L15.3684 42.3208L15.5869 42.2134L15.7571 42.1736L15.7915 42.1567L16.3557 42.1114L16.4022 42.1096L16.4282 42.1102Z\" fill=\"black\"/>\n      <path d=\"M40.7593 35.4189L41.4105 35.428L41.4117 35.4292L41.562 35.4582L41.6953 35.5113L41.9343 35.8655L41.6422 36.2373L41.5903 36.25L41.0568 36.4564L40.9343 36.4799L40.8178 36.3634L40.1745 36.495H40.1739L36.947 37.1703L36.4298 37.3489V37.3495L36.0731 37.4829L36.0061 37.5318L35.8619 37.711L35.845 37.7527L35.8263 37.8402L35.8408 38.122L35.8812 38.2596L35.9585 38.4395L36.3025 39.0683L36.5855 39.4467L36.921 39.807L37.5451 40.3085L38.0846 40.6308L38.6971 40.9017L40.0218 41.3182L40.0248 41.3218L40.0423 41.3248L40.8957 41.6447L40.9041 41.6567L40.9428 41.6664L41.5867 42.0055L41.5988 42.0261L41.6392 42.0393L41.915 42.2457L41.9361 42.2874L41.9832 42.3091L42.1908 42.5505L42.2089 42.6L42.2379 42.6163L42.3767 42.8541L42.4002 42.941L42.4207 42.9561L42.5692 43.4624L42.5789 43.5288L42.5843 43.5336L42.6157 43.7786L42.6199 43.8366L42.6181 43.8758L42.5716 44.3948L42.5674 44.399L42.5565 44.4763L42.4105 44.9772L42.3888 44.9935L42.3646 45.0828L42.195 45.3707L42.1703 45.3845L42.1558 45.4268L41.9506 45.6809L41.909 45.7008L41.8891 45.7448L41.3187 46.2379L41.2765 46.2536L41.262 46.2807L40.5849 46.7225L40.5318 46.7382L40.5179 46.7599L39.816 47.0912L39.7617 47.1039L39.7515 47.1172L39.3562 47.2494L39.3405 47.2524L39.3381 47.2554L38.9868 47.3622L38.9554 47.367L38.9518 47.3719L38.5795 47.4612L38.5529 47.4648L38.5463 47.4684L38.2246 47.5282L38.1667 47.5336L38.1606 47.5366L37.877 47.5577H37.8764L37.5463 47.5837L37.527 47.5849H37.5257L36.9301 47.6127L36.9041 47.6133L36.8619 47.6115L36.6356 47.594L36.1105 47.5921H36.1099L36.0743 47.5909L35.8897 47.5771L35.4907 47.574L35.4889 47.5734L35.3574 47.5529L35.2343 47.5143L35.1244 47.4883L35.116 47.4781L35.0592 47.466L34.9072 47.3978L34.708 47.0882L35.0448 46.7485L35.1673 46.7472L35.227 46.7328L35.3344 46.6935L35.4395 46.6742L35.4461 46.667L35.8426 46.6247L36.0206 46.5927L36.0737 46.5879L36.0786 46.5855L36.6054 46.5511L36.8287 46.5209L36.8758 46.5179L36.8788 46.5167L37.4594 46.4895L37.7593 46.4576L38.0218 46.4141L38.0315 46.4129L38.0333 46.4123L38.3441 46.3646L38.6917 46.2904L39.0146 46.2023L39.3737 46.0743L40.0436 45.7816L40.6869 45.4165L41.2186 44.9886L41.399 44.804L41.5451 44.6018L41.7098 44.2445L41.737 43.8541L41.7122 43.6893L41.5746 43.253L41.4835 43.0774L41.335 42.8861L41.1546 42.7201L40.5855 42.4479L39.7448 42.1932V42.1926L38.393 41.7714L38.3875 41.7647L38.3574 41.7587L37.6857 41.4811L37.6766 41.4672L37.6374 41.457L37.0339 41.1172L37.0152 41.0846L36.9579 41.0629L36.3025 40.4944L36.2928 40.4739L36.2705 40.4642L35.8915 40.0647L35.8818 40.0399L35.8619 40.0303L35.536 39.6127L35.5209 39.5692L35.498 39.5559L35.116 38.8854L35.0973 38.8179L35.0786 38.804L34.9983 38.5746L34.9953 38.5584L34.9923 38.5559L34.9265 38.3441L34.9138 38.262L34.9078 38.2566L34.8601 37.8595L34.8565 37.7998L34.8613 37.734L34.8885 37.5384L34.8939 37.5336L34.9023 37.4727L34.947 37.3163L34.9711 37.2982L34.9989 37.1987L35.195 36.8746L35.2668 36.8348L35.3103 36.7424L35.4835 36.6012L35.5312 36.5843L35.5463 36.5565L35.9404 36.3194L36.0508 36.288L36.0713 36.2608L36.6296 36.09L36.6863 36.0816L36.7008 36.0731L39.9796 35.5004L40.011 35.498L40.0158 35.4956L40.6996 35.422L40.7527 35.4189H40.7593Z\" fill=\"black\"/>\n      <path d=\"M34.8145 46.842L34.8235 46.833L34.9291 46.7696L34.9388 46.7666L34.8145 46.842Z\" fill=\"black\"/>\n      <path d=\"M45.6781 19.9891L45.6993 19.9915L45.7204 20.0157L45.9014 20.0977L45.9551 20.1587L45.9992 20.2752L46.03 20.2993L46.0583 20.4061L46.0716 20.5045V20.5142L46.0674 20.6735L46.062 21.0694V21.0718L46.0559 21.3947H46.0553L46.0541 21.4218L46.0276 21.7133L46.0046 21.9831L46.004 21.9837L46.0022 22.0036L45.9944 22.0609L45.9919 22.0627L45.9889 22.0905L45.9503 22.2679L45.8658 22.8889L45.8592 23.4031L45.8628 23.5347L45.9563 23.7628L45.9582 23.7731L45.9612 23.7755L46.0547 24.0235L46.0764 24.14L46.0819 24.1448L46.1139 24.586L46.1151 24.6174V24.6198L46.1145 24.6711V24.7151L46.1139 24.7375L46.0994 24.9891L46.0964 24.9915L46.0849 25.073L45.9696 25.4948L45.9648 25.4985L45.9606 25.522L45.9497 25.5528L45.9135 25.7308L45.8857 26.1418L45.8845 26.1424L45.8833 26.1671L45.8043 26.7537L45.7958 27.4604L45.7982 27.4761L45.8018 27.5298L45.8025 27.5305L45.8061 27.6946V27.7043L45.8049 27.7411L45.7542 28.341L45.753 28.3422L45.7512 28.3669L45.7385 28.4508L45.7288 28.8032L45.7264 28.8056L45.7089 28.9161L45.6407 29.1225L45.6238 29.2154L45.6256 29.2444L45.6105 29.3524L45.5617 29.5238L45.5405 29.5395L45.5158 29.6246L45.4385 29.7459L45.4198 29.7556L45.409 29.7851L45.2937 29.9227L45.1875 30.07L45.1283 30.1008L45.0988 30.1581L44.9569 30.2571L44.9539 30.2583L44.9533 30.2601L44.9437 30.2667L44.6214 30.5443L44.5948 30.554L44.5858 30.5715L44.5629 30.5878L44.555 30.5896L44.5532 30.5938L44.5363 30.6047L44.5091 30.6125L44.5025 30.6246L44.1591 30.802L44.1477 30.8093L44.0958 30.8244L44.0837 30.8413L43.9775 30.8835L43.8924 30.8998L43.8851 30.9082L43.7089 30.9336H43.7059V30.9342L43.4796 30.9662L43.4748 30.9722L43.2732 31.0338L43.2231 31.0416L43.2189 31.047L42.8869 31.1032L42.8604 31.1056L42.8586 31.1068L42.8266 31.1104H42.8242L42.3939 31.1551L42.3891 31.1563L42.3275 31.175L42.24 31.1883L42.2364 31.1925L41.7783 31.2263L41.7463 31.2275H41.7439H41.7137L41.0197 31.2257H40.9871H40.9847H40.9763L40.3897 31.2136L40.3553 31.2142H40.3516L39.7125 31.2166L39.6926 31.2184L39.6504 31.2203H39.6498L39.1808 31.2196H39.1344H39.1326H39.1223L38.4464 31.2034L38.4458 31.2027L38.4204 31.2015L38.409 31.2009L37.6099 31.219L37.5997 31.2196H37.5719H37.1471H37.1464H37.0825L36.4591 31.2215H36.4573H36.453H36.4023L35.8356 31.2178H35.7837L35.2484 31.2209L35.1935 31.2221H35.1845H35.1808L34.3999 31.2154L34.3685 31.2148L33.8091 31.2172L33.7596 31.2196H33.7409H33.724L33.1609 31.1979H33.1265H33.1235H33.1072L32.3184 31.1677L32.2913 31.1683H32.2792H32.2684L31.9352 31.1593H31.9346L31.9153 31.1587L31.5031 31.1273L31.5025 31.1267H31.4983L31.042 31.0857L31.0414 31.0851L31.0294 31.0845L30.7705 31.0519L30.6389 31.0495L30.6383 31.0483L30.5629 31.0404L30.2653 30.977L30.2635 30.9746L30.2484 30.9728L29.8006 30.8533L29.5816 30.8123L29.4343 30.7887L29.3758 30.7875V30.7869L29.3221 30.7821L29.2774 30.7737L29.1283 30.5932L29.0113 30.49L28.9962 30.3723L28.9932 30.3283L29.3263 29.9951L29.4892 30.143L29.6522 30.1478H29.6528L29.6673 30.1484L29.9063 30.1665L29.9129 30.1671L30.3885 30.2142V30.2148H30.3909L30.6926 30.248L30.6993 30.2553L30.7976 30.2746L30.8658 30.3023L31.0674 30.2963H31.0789H31.0909L31.5484 30.3102H31.552L31.9636 30.3271L32.2931 30.3391L32.3311 30.3397L33.1296 30.3572H33.1664L33.7337 30.3488H33.7409L33.7584 30.3494L33.8091 30.3512L34.3685 30.3542L34.3999 30.3536L35.1808 30.347H35.1845H35.1929L35.2484 30.3482L35.7837 30.3512H35.8356L36.4023 30.3476H36.453L36.4573 30.347H36.4585L37.0825 30.3494H37.1464H37.1471H37.5719H37.5997H37.6093L38.409 30.3681L38.4186 30.3675L38.4566 30.3657H38.4681L39.1392 30.3832L39.1808 30.3838L39.6498 30.3826H39.6504L39.6908 30.385L39.7125 30.3868L40.3516 30.3892H40.3553L40.3963 30.3898H40.4023L40.9913 30.4049H41.0197L41.7137 30.4031H41.733L42.1446 30.3784L42.1827 30.3687H42.1839L42.2225 30.3591L42.2768 30.3524L42.2798 30.3488L42.7379 30.3005H42.7433V30.2999L42.753 30.2993L43.0529 30.2323L43.2478 30.181L43.3124 30.1726L43.316 30.169L43.3559 30.1653H43.3565L43.6057 30.1394L43.7355 30.1231L43.8006 30.1002L43.8049 30.0983L44.103 29.9487L44.1036 29.9475L44.1265 29.9306L44.1295 29.9294L44.1308 29.9276L44.4904 29.665L44.5104 29.6584L44.5134 29.653L44.5267 29.6427L44.5279 29.6403L44.5339 29.6373L44.6063 29.5817L44.6781 29.481L44.7729 29.3259L44.7735 29.3253L44.8193 29.2516L44.8411 29.1738L44.8447 29.1309L44.8694 28.9638L44.8743 28.9601L44.8803 28.9155L44.9322 28.7368L44.9286 28.4218L44.9262 28.3156V28.3047V28.3011L44.9304 27.7006V27.6952L44.934 27.5298L44.9346 27.5292L44.9382 27.4779L44.9431 27.4466L44.9805 26.7018L44.9817 26.7006L44.9841 26.6632L45.0704 26.0772L45.0813 25.6626L45.0825 25.6608L45.0921 25.5775L45.1477 25.3422L45.1537 25.3379L45.1591 25.3047L45.1754 25.2565L45.2762 24.901L45.281 24.7091V24.6711L45.2804 24.6361L45.2478 24.2414L45.1996 24.0386L45.0927 23.7694L45.0722 23.6656L45.0656 23.659L45.0445 23.449L45.0426 23.4116H45.042L45.0354 22.863V22.8576L45.0408 22.7906L45.1458 22.1496L45.1573 21.9722L45.1579 21.9716L45.1591 21.9541L45.1652 21.8974L45.1658 21.8962L45.167 21.8859L45.2056 21.6137L45.208 21.6113L45.211 21.5854L45.2641 21.3428L45.2647 21.0633L45.2659 21.035L45.2949 20.6367L45.2967 20.6349L45.3003 20.5944L45.3305 20.4333L45.3311 20.4327V20.4303L45.3468 20.3524V20.3053H45.3474L45.3547 20.2366L45.3595 20.2154L45.6461 19.9873L45.6781 19.9891Z\" fill=\"black\"/>\n      <path d=\"M42.7071 10.8635L42.7524 10.8641V10.8647L42.7777 10.8653L43.3589 10.9076L43.3625 10.9118L43.4512 10.9245L43.5816 10.9625L43.5852 10.9673L43.6063 10.9709L43.6371 10.9824L43.794 11.041L44.0903 11.0959L44.0952 11.1013L44.1392 11.1079L44.3185 11.1641L44.3505 11.2081L44.4814 11.2594L44.6625 11.4248L44.788 11.5147L44.9847 11.6426L45.0228 11.7139L45.0982 11.7525L45.2104 11.9112L45.2394 12.0011L45.2672 12.0204L45.4024 12.4151L45.4742 12.5461L45.5037 12.6601L45.5188 12.6728L45.5454 12.8249L45.5508 12.8913L45.5514 12.8919L45.5647 14.1846V14.187L45.5725 15.7658L45.6069 15.9848L45.6106 16.0325L45.6118 16.0337L45.6317 16.5889L45.6806 16.84L45.6854 16.8877L45.6872 16.8895L45.7989 18.2962L45.9244 18.601L45.954 18.7507L45.9576 18.7537L45.9654 18.986V19.0011L45.9636 19.041L45.9437 19.2594L45.9407 19.2618L45.9359 19.3089L45.8809 19.5654L45.9171 20.0325L45.9334 20.1906L45.9359 20.2395L45.9268 20.3306L45.8725 20.598L45.8707 20.5992L45.8695 20.6094L45.762 21.0627L45.7578 21.2003L45.7614 21.2129L45.7741 21.2214L45.7898 21.2576L45.7904 21.2582L45.7916 21.2618L45.8103 21.3047L45.8158 21.3306L45.8755 21.5014L45.6993 21.6776L45.6763 21.7332L45.6208 21.7561L45.4862 21.8913L45.4156 21.8846L45.368 21.8762L45.2823 21.8641L45.2159 21.7875L44.9359 21.6155L44.884 21.5141L44.8345 21.3089L44.8333 21.3053L44.8314 21.0035V21.0011L44.8477 20.8786L44.9793 20.3946L45.0252 20.1773L45.0324 20.0663L45.0125 19.5539L45.0119 19.5364L45.0185 19.4622L45.0747 19.1393L45.0753 19.1387L45.0759 19.1339L45.1072 18.9715L45.1012 18.8629L44.9793 18.5606L44.9546 18.4332L44.9485 18.4272L44.8453 16.9534V16.9426L44.8447 16.942L44.8314 16.6541V16.6432L44.8188 16.0868L44.7814 15.8684L44.7753 15.8026H44.7747L44.756 14.1942V14.1912L44.7488 12.9335L44.7409 12.8925L44.6836 12.8038L44.6685 12.7519L44.6498 12.7392L44.4953 12.3741L44.4657 12.3355L44.3311 12.2642L44.3251 12.2546L44.304 12.2486L44.1416 12.1454L44.1241 12.1134L44.0759 12.0941L43.9467 11.9716L43.8972 11.9547L43.6003 11.9052L43.5943 11.8985L43.5369 11.8895L43.3372 11.8237L43.3342 11.8201L43.3203 11.8177L43.3076 11.8128L43.2442 11.7941L42.7331 11.7585H42.7077L42.7011 11.7591H42.6987L42.1326 11.7561V11.7555H42.1193L41.2316 11.8327L41.1917 11.834H41.1821H41.1767L40.6504 11.916L40.6474 11.9166H40.6468L40.6045 11.9233L40.5472 11.9281L40.546 11.9287L40.0795 11.939L39.9081 11.9818L39.8278 11.9915L39.8248 11.9945L39.5339 12.0114L39.5074 12.012L39.3855 11.9945L39.2642 11.9583L39.0849 11.9806L39.0626 11.9824L39.062 11.983L38.7276 12.0078L38.6945 12.009L38.6263 12.0035L38.4241 11.9709L38.4187 11.9703L38.3535 11.9679H38.3505L37.8701 11.9462L37.7289 11.9408L37.3849 12.0373L37.3794 12.0379L37.3788 12.0391L37.3046 12.0591L37.1923 12.0747H37.1887L36.4168 12.0681H36.4132L36.3686 12.0669H36.3559L36.1718 12.0572L35.9678 12.0983L35.9292 12.1025L35.9274 12.1043L35.689 12.1285L35.6486 12.1303H35.6432L35.5852 12.1297L35.4012 12.1309H35.3987L35.3299 12.1248L35.1248 12.088L35.1157 12.0778L35.036 12.0603L34.884 11.9927L34.855 11.9878L34.5792 12.0645L34.5448 12.0693L34.5418 12.0729L34.482 12.0838L34.441 12.0874L34.4398 12.0892L34.2485 12.1019L34.2219 12.1031L34.1573 12.0971L33.9274 12.0566L33.9165 12.044L33.8248 12.021L33.6764 11.9432L33.5846 11.9233L33.5243 11.9275L33.1211 12.0174L33.1048 12.0192L33.1036 12.021L33.03 12.0343L32.9745 12.0391L32.9739 12.0397L32.5623 12.0482H32.555L32.4881 12.0416L32.1748 11.9812L31.54 11.9462L31.5394 11.9456L31.5146 11.9438L31.4295 11.9323L30.8598 11.9257L30.8592 11.9251L30.8345 11.9239L30.5357 11.8973L30.4712 11.9197L30.2865 12.0114L30.1501 12.044L30.1465 12.0476L30.0608 12.0512H30.0475L30.0324 12.0506L29.8556 12.2274L29.5225 11.8943L29.6305 11.7863L29.651 11.7163L29.683 11.665L29.7047 11.6209L29.7071 11.6082L29.7168 11.5817L29.727 11.5751L29.7385 11.5509L29.925 11.435L29.9347 11.4212L29.966 11.4097L29.9823 11.3994H29.9829L29.9926 11.3928L30.0065 11.3946L30.0101 11.3934L30.2117 11.3083L30.3185 11.2866L30.3221 11.2818L30.4772 11.2727L30.4923 11.2721L30.8586 11.2667L30.8634 11.2661H31.4319L31.5128 11.2552L31.5605 11.2522H31.5701L32.2292 11.2703L32.2304 11.2715L32.2937 11.2781L32.5907 11.3421L32.9316 11.3373L32.9757 11.3294H32.9763L33.4078 11.2474L33.4742 11.2407H33.4754L33.575 11.2413H33.5798L33.6245 11.2419L33.6257 11.2431L33.7005 11.2522L33.8773 11.2962L33.8779 11.2974L33.884 11.298L34.0578 11.3463L34.2189 11.3614L34.345 11.3475L34.3758 11.3391H34.3764L34.7029 11.2431L34.8121 11.2274L34.8797 11.2335L34.8852 11.2341L35.0155 11.2407L35.0191 11.2437L35.1235 11.2612L35.2992 11.3228L35.4446 11.3505L35.5925 11.3572L35.6263 11.3566L35.8363 11.3355L36.0735 11.2932L36.0994 11.2908L36.1012 11.2896L36.3305 11.2642L36.3686 11.2624V11.2618L36.412 11.2612L37.1706 11.2413L37.2074 11.2383L37.5599 11.1544L37.5695 11.1532L37.5701 11.152L37.5985 11.146L37.6552 11.1399L37.657 11.1375L37.8574 11.123L37.8888 11.1218L37.9171 11.1224L38.3939 11.1556L38.4693 11.1592L38.4706 11.1604L38.4947 11.1617H38.4953L38.6794 11.1556H38.683V11.155L39.0185 11.146H39.0306H39.0354L39.2792 11.1484L39.2998 11.149L39.3167 11.1502L39.482 11.152L39.7289 11.12L39.928 11.0802L39.9612 11.0772L39.963 11.0748L39.9986 11.0705L40.0499 11.0675L40.0505 11.0669L40.5019 11.0645L40.508 11.0633L41.0596 10.9559L41.135 10.948L41.1374 10.9468L41.1682 10.9462L42.068 10.8696L42.0916 10.8684L42.0922 10.8677L42.1187 10.8671L42.1326 10.8665L42.6987 10.8635H42.7011H42.7071Z\" fill=\"black\"/>\n      <path d=\"M9.72766 32.409L9.98536 32.4657L10.1055 32.4548L10.1157 32.4542H10.1163L10.2569 32.4446L10.2829 32.4434L10.3535 32.4506L10.5985 32.4977L11.1091 32.5067L11.1097 32.5073L11.1513 32.5097L11.3529 32.5375L11.3589 32.5453L11.4332 32.5598L11.6317 32.6413L11.6395 32.6534L11.6739 32.6624L11.8773 32.7837L12.2883 32.8133L12.2889 32.8139L12.3004 32.8145L12.4464 32.8314L12.4525 32.838L12.5315 32.8537L12.7343 32.9406L12.7868 32.8881L13.1199 33.2213V33.2623L12.7868 33.5954L12.7729 33.5816L12.7699 33.5852L12.6661 33.5671L12.575 33.5345L12.5744 33.5333L12.5714 33.5327L12.3269 33.4391L12.2437 33.4252L11.785 33.4385L11.7747 33.4391L11.6202 33.4005L11.3535 33.2593L11.2412 33.211L11.1157 33.2152H11.1024H11.1L10.5575 33.211L10.5243 33.2092L10.3149 33.1881L10.2473 33.2068L10.1827 33.2152L10.1791 33.2195L9.99924 33.237L9.96061 33.2388L9.8725 33.2285L9.63714 33.1736L9.5454 33.1911L9.51221 33.1941L9.5104 33.1965L9.41746 33.2062L9.39332 33.2074L9.39272 33.208L8.98777 33.2273L8.82603 33.278L8.65524 33.4156L8.62386 33.4596L8.50497 33.6751L8.41867 33.8857L8.32392 34.2345L8.27021 34.7892L8.27745 35.1513V35.1591V35.1772L8.24848 35.7698L8.24064 37.0794L8.30038 37.2907L8.31064 37.3655L8.31366 37.3679L8.33358 37.7155L8.3728 38.0607L8.57618 39.6618L8.5792 39.6998V39.7004L8.613 40.9099V40.9153L8.6136 40.9599L8.64438 41.587L8.64498 41.6039L8.64559 41.6552V41.6582L8.648 43.4077V43.4083V43.4114V43.4699L8.65162 43.9883V43.9913V43.9925V44.0475V44.0523L8.63714 45.0318L8.64559 45.8501L8.6486 45.896L8.65041 45.9292L8.64921 45.9605L8.61722 46.3933L8.60274 46.7095L8.60213 46.7101L8.60032 46.7342L8.59731 46.7644L8.55929 47.2007L8.55868 47.2019L8.55747 47.2201L8.50738 47.5689L8.47842 48.1585L8.46936 48.4216L8.47057 48.4403L8.46876 48.4741L8.45247 48.6715L8.45066 48.6727L8.44884 48.701L8.40358 48.9799L8.40479 48.9937V48.9992L8.40539 48.9998L8.406 49.007L8.43979 49.31L8.52066 49.3782L8.53937 49.4192L8.5792 49.4379L8.88578 49.8145L8.95699 49.8942L8.96604 49.9165L8.98234 49.9249L9.17365 50.1766L9.2853 50.2201L9.30038 50.243L9.36737 50.2623L9.62386 50.4234L9.82482 50.5218L10.0276 50.5447L10.3764 50.5834L10.3879 50.596L10.537 50.6328L10.6631 50.6986L10.6915 50.7451L10.7711 50.7783L10.9033 51.0981L10.9015 51.1398L10.8978 51.1784L10.8538 51.2188L10.7711 51.4186L10.5188 51.5224L10.4579 51.5785L10.3975 51.5405L10.2835 51.5188L10.2431 51.5025L9.98717 51.5109H9.97087L9.92078 51.5085L9.63352 51.4783L9.62386 51.4675L9.48143 51.4361L9.17546 51.2943L9.17123 51.2882L9.15554 51.284L8.86828 51.1325L8.64559 51.0227L8.58584 50.9249L8.4585 50.8567L8.22253 50.5043L8.1646 50.4379L8.15253 50.4065L8.1308 50.3951L7.89664 50.0553L7.82965 50.0094L7.80732 49.966L7.75241 49.9418L7.72827 49.9159L7.68119 49.794L7.63533 49.762L7.59731 49.6564L7.5792 49.5538L7.57256 49.5478L7.5611 49.4234L7.55868 49.38V49.3758L7.5623 49.0432L7.56351 49.0131L7.56472 48.998V48.9955L7.57136 48.9261L7.57377 48.9237L7.5786 48.8785L7.64317 48.5737L7.65886 48.4017L7.65947 48.3981L7.66067 48.3824L7.66188 48.3818L7.66369 48.3631L7.70473 48.1006L7.73551 47.5103L7.73792 47.5079L7.74516 47.4427L7.8206 47.1229L7.82301 46.7457L7.82181 46.736L7.8206 46.7095L7.82 46.7089L7.80491 46.3878V46.3685V46.3667L7.80672 45.9274L7.81396 45.8513L7.81879 45.8236L7.83991 45.0239L7.84595 44.0456V43.9925V43.9913V43.9883L7.85017 43.4699L7.84957 43.4114V43.4108L7.83871 41.6618V41.6588V41.6552V41.6135L7.81577 40.9889L7.81517 40.9732V40.9672L7.81638 40.9165L7.82905 39.7282L7.6649 38.1404V38.1374L7.6299 37.7819L7.62869 37.7656H7.62808L7.60877 37.4228L7.57437 37.1718L7.57256 37.1422L7.57196 37.1416L7.50195 35.7795V35.7596V35.7391L7.53454 35.1452L7.54239 34.7668L7.54359 34.7445L7.59429 34.1356L7.59791 34.1326L7.60636 34.0704L7.7174 33.6666L7.72102 33.6642L7.72344 33.6467L7.81336 33.3878L7.82483 33.3794L7.83569 33.3371L7.97208 33.08L7.97268 33.0794L7.97329 33.0782L8.03605 32.963L8.08976 32.9316L8.12537 32.8543L8.39031 32.6329L8.47962 32.6003L8.50256 32.5671L8.77473 32.4639L8.89725 32.4409L8.90087 32.4379L9.35591 32.418L9.37401 32.4174L9.41565 32.4198L9.45971 32.4246L9.58222 32.4047L9.64498 32.3999L9.72766 32.409Z\" fill=\"black\"/>\n      <path d=\"M23.2332 32.6263L23.5211 32.6456H23.5217L23.7812 32.6644L24.0854 32.6438L24.1198 32.6426L24.3189 32.6849L24.4879 32.7591L24.4933 32.7676L24.5157 32.773L24.5374 32.7845L24.5808 32.782H24.5899V32.7814L25.4046 32.7501L25.427 32.7494L25.4909 32.7531L25.9369 32.8068L25.9472 32.8122L25.9985 32.8182L26.3793 32.913L26.3871 32.9233L26.4451 32.9347L26.7643 33.0639L26.7909 33.1037L26.8904 33.1393L27.4179 33.566L27.4233 33.5781L27.4384 33.5835L27.5543 33.6885L27.6008 33.7935L27.6653 33.8327L27.7933 34.0826L27.8096 34.1478L27.8253 34.1592L27.9122 34.4284L27.9134 34.4344L27.9146 34.435L27.9242 34.4658L27.9297 34.4996L27.9345 34.5038L27.9773 34.6831L27.987 34.767L27.99 34.7736L28.025 35.458L28.0256 35.4809L28.0262 35.5038L28.0305 35.8762V35.8822L28.028 35.9257L28.0045 36.1978L28.0039 36.2099V36.2105L28.0027 36.2395L27.9761 36.6106L27.9755 36.6118V36.6215L27.8518 37.8701L27.8494 37.9076L27.8488 37.9094L27.8476 37.9293L27.8053 38.2926L27.8066 38.4724V38.4755V38.4773L27.8059 38.5183L27.8096 38.8243L27.8434 39.3662L27.844 39.3759V39.3765L27.8603 39.7416V39.7543L27.8609 39.7549L27.8663 40.0234L27.9629 40.3632L27.9641 40.3717L27.9659 40.3723L27.9779 40.4175L27.9894 40.5014L27.9948 40.5123L28.016 40.7838L28.0172 40.8249V40.846L27.9906 41.4694L27.9912 41.4966L28.0027 41.8653L28.0033 41.881L28.0015 41.9202L27.9731 42.2805L27.9176 43.219L27.9164 43.2636L27.92 43.5871V43.5925V43.6034L27.9049 44.2793V44.2841L27.8929 44.6179V44.6185L27.8922 44.6306L27.8476 45.3234V45.362V45.3626L27.847 45.3813L27.8379 45.5539L27.8367 45.5551L27.8325 45.604L27.751 46.0838L27.748 46.0862L27.745 46.1115L27.7263 46.1876V46.1894L27.6539 46.47L27.6207 46.779L27.5869 47.1725L27.5857 47.1737L27.5839 47.1978L27.573 47.2691L27.5519 47.4048L27.5464 47.4097L27.5392 47.4598L27.4209 47.8478L27.3455 48.3529L27.3443 48.3541L27.3431 48.368L27.3364 48.4006L27.3268 48.5062L27.3225 48.5099L27.3129 48.5793L27.2103 48.9414L27.1964 48.9516L27.1819 49.0126L27.095 49.1815L27.086 49.2027L26.8663 49.7205L26.8397 49.7374L26.818 49.8025L26.774 49.8623L26.7613 49.8804L26.7547 49.884L26.751 49.8949L26.5808 50.1194L26.2839 50.5907L26.2278 50.6215L26.1952 50.6903L26.0184 50.8327L25.9538 50.8551L25.9357 50.884L25.7975 50.948L25.7444 50.9595L25.7359 50.9709L25.7046 50.98L25.6913 50.9812L25.6901 50.9836L25.5965 51.0065L25.5863 51.0077L25.5851 51.0095L25.2145 51.0922L24.9013 51.2425L24.8325 51.2582L24.8228 51.2709L24.6303 51.3191L24.5742 51.3258L24.5712 51.3294L24.5386 51.3324L24.5344 51.333L24.2658 51.3584L24.1204 51.3795H24.1174L24.048 51.394L24.0443 51.3976L23.4076 51.4248H23.407L23.3189 51.4411L23.29 51.4441L23.2881 51.4459L22.9448 51.4845L22.8953 51.4875L22.8633 51.4857L22.6394 51.5014L22.398 51.5382L22.3328 51.543H22.3262L22.299 51.5424H22.1928H22.1922L22.1131 51.5352L21.9526 51.5044L21.4607 51.502L21.4529 51.5026L21.4101 51.505H21.4052L21.0467 51.5008L20.8349 51.5099L20.8235 51.5117L20.7553 51.5183L20.7522 51.5195L20.4064 51.528H20.395H20.3926H20.3678L19.7565 51.5406H19.7468H19.745H19.7082L19.2248 51.5412L18.7933 51.5461L18.7728 51.5479L18.7396 51.5497L18.739 51.5503L18.3757 51.5587H18.3642H18.3606H18.3057L18.305 51.5581H18.2972L17.5048 51.5364L17.4789 51.5376H17.4626H17.4499L16.6026 51.5147L16.5911 51.5153L16.5084 51.5183L16.1729 51.598L16.1216 51.604L16.118 51.6076L16.0516 51.6155L16.0069 51.6185L16.0051 51.6191L15.8512 51.6227H15.8398L15.8144 51.6221L15.4433 51.6016H15.4426L15.4276 51.6004L15.0293 51.5636L14.646 51.6263L14.6165 51.6287L14.6152 51.6299L14.5549 51.636L14.5108 51.6384L13.3847 51.6426L13.1119 51.6764L13.063 51.68H13.0618L12.5018 51.6891L12.0679 51.7156L12.0395 51.7162L11.9834 51.7126L11.8054 51.6903L11.7993 51.6831L11.7178 51.6686L11.6098 51.6299L11.567 51.6173L11.4101 51.6167L11.1337 51.6348L11.1065 51.636L10.9822 51.6155L10.6352 51.4978L10.4221 51.499L10.3159 51.4996H10.3141L10.0087 51.1936L10.0142 51.1864L10.0111 51.1834L10.0407 51.123L10.0226 51.1049L10.0214 51.1055L10.022 51.1043L9.9502 51.0325L10.2833 50.6994L10.436 50.852L10.6219 50.8146L10.6913 50.808L10.7353 50.8104L11.1168 50.8593L11.3654 50.8412L11.5839 50.8194L11.6243 50.8176L11.7311 50.8321L11.7939 50.8496L11.8398 50.8508L11.981 50.8327L12.0317 50.8291H12.0323L12.4698 50.8219L13.025 50.7905L13.3201 50.7669L13.3449 50.7657L14.4752 50.7362L14.5127 50.7313L14.5235 50.7307L14.5241 50.7301L14.9629 50.6849L14.9798 50.6837L14.9804 50.6831L15.0232 50.68L15.0546 50.6788L15.0721 50.6794L15.4831 50.6957L15.8295 50.7024L15.9375 50.6951L15.9773 50.6879L15.9973 50.6861L15.9985 50.6849L16.3829 50.6312L16.4179 50.6287L16.4191 50.6275L16.5483 50.6191L16.5772 50.6185H16.5851L16.6128 50.6191H16.614L17.4722 50.6372H17.4776L17.5151 50.6384L18.3111 50.6505L18.3594 50.6499L18.7082 50.645L18.7353 50.6432L18.7691 50.642H18.774L19.2248 50.6468L19.7082 50.6474H19.7408L20.3533 50.6336L20.3618 50.633H20.3907L20.7347 50.6281H20.7414L20.8204 50.6348L20.8343 50.6378L21.0467 50.6468L21.3805 50.6426L21.3847 50.642L21.4408 50.6384L21.4656 50.639L22.0184 50.671L22.0196 50.6722L22.057 50.6746L22.2248 50.7006H22.299H22.3063L22.5452 50.674L22.5603 50.6728L22.5609 50.6722L22.8265 50.6511L22.8422 50.6493L22.8675 50.6474L22.8681 50.6468L23.2097 50.6245L23.302 50.6161L23.3256 50.6137L23.3648 50.6118V50.6112L23.9894 50.6052L23.9924 50.6046L23.9991 50.5974L24.1548 50.572L24.1771 50.5702L24.1783 50.569L24.4541 50.5406L24.4577 50.54L24.4644 50.5394L24.5965 50.5074L24.8832 50.3765L24.888 50.3753L24.8886 50.3735L24.9242 50.3578L24.9918 50.3433L25.0003 50.3324L25.4094 50.2401L25.4861 50.2208L25.5356 50.1972L25.6165 50.1127L25.9164 49.665L25.9273 49.6595L25.9327 49.6426L26.0999 49.4284L26.1131 49.3964L26.1149 49.3952L26.1161 49.3898L26.3491 48.8713L26.3642 48.8388L26.3648 48.8376L26.4354 48.6867L26.5223 48.362L26.5489 48.2534L26.5543 48.2268L26.6171 47.706L26.6207 47.7024L26.6279 47.6511L26.7414 47.2274L26.7432 47.2262L26.745 47.2166L26.7758 47.1152L26.7794 47.0922L26.8041 46.7338L26.7891 46.4133L26.7884 46.3916L26.7993 46.2956L26.8705 45.9794L26.876 45.9752L26.8808 45.9426L26.8947 45.9009L26.9659 45.4948L26.9641 45.3644V45.362V45.3107V45.3077V45.2932L26.9876 44.5859V44.5847L26.9882 44.5708L27.0087 44.2672L26.9683 43.6245L26.9671 43.5974L26.9641 43.2685L26.9623 43.2111V43.1984V43.1924L26.9749 42.2377L26.9755 42.2371L26.9785 42.1816L27.022 41.8418L27.0329 41.4954L27.0335 41.4694L27.0075 40.8472L27.0069 40.8249V40.8231L27.0075 40.6215L26.8965 40.2395L26.882 40.1393L26.8766 40.1284L26.856 39.7977L26.8548 39.7651L26.8554 39.7428L26.8705 39.4048L26.8319 38.8798L26.8307 38.8424V38.837L26.8337 38.5183V38.4773V38.4755L26.8367 38.4248L26.8585 38.2147L26.8591 38.2141L26.8597 38.2051L26.9085 37.8231L26.9122 37.7875V37.7869L27.0268 36.5479L27.0341 36.2021L27.0335 36.1791V36.1737L27.0341 36.1592L27.0425 35.872L27.0461 35.5038V35.4924L27.0226 34.8774L26.9876 34.7573L26.9864 34.7519L26.9858 34.7513L26.9804 34.7319L26.9067 34.5292L26.8331 34.4127L26.7818 34.3735L26.7776 34.365L26.7667 34.3614L26.3147 33.9884L26.1023 33.9148L25.7975 33.8412L25.4143 33.8219L24.6122 33.8243H24.6104L24.544 33.8201L24.3582 33.7965L24.3382 33.7736L24.1367 33.7102L24.0353 33.6396L23.9798 33.6131L23.745 33.5829L23.4988 33.5775L23.2344 33.595L23.2006 33.5962L23.1089 33.5871L23.0184 33.5702L22.8838 33.572L22.5139 33.6613L22.4082 33.6746L22.2556 33.6469L22.1306 33.6004L21.9098 33.5491L21.9055 33.5437L21.8754 33.5382L21.8168 33.5159L21.6605 33.286L21.8186 33.0548L21.8735 33.0337L21.882 33.0325L21.8838 33.0301L22.0516 32.9715L22.1143 32.9148L22.2453 32.8641L22.2767 32.8213L22.6877 32.6915L22.7486 32.6819L22.754 32.6752L22.9816 32.6384L23.0359 32.6336L23.0395 32.6324L23.1783 32.6257H23.2006L23.2332 32.6263Z\" fill=\"black\"/>\n      <path d=\"M17.494 32.5803L18.1705 32.5845H18.2369H18.2381H18.2418L18.6606 32.5876H18.6612L18.7125 32.5882H18.7131L18.73 32.5888L19.395 32.6202L19.4415 32.6183L19.9032 32.5936L19.9243 32.593L19.9249 32.5924H19.9726H19.9774H19.9841L20.7421 32.6033H20.7801L20.7867 32.6039L21.3757 32.6123L21.4397 32.6117H21.4421L21.4753 32.6129L21.8127 32.6383L21.8211 32.6473L21.9816 32.6865L22.1663 32.7813L22.1748 32.7952L22.2043 32.8042L22.2912 32.8622L22.3655 32.8869L22.488 32.8887L22.5857 32.8778L22.7988 32.8133L22.8302 32.8084L22.8332 32.8048L22.9056 32.7909L23.0118 32.7692L23.0643 32.7638L23.3166 33.016L23.2502 33.1862L23.1802 33.2629L23.1386 33.3148L23.0824 33.3413L23.0583 33.3848L22.8404 33.5188L22.8072 33.5278L22.7994 33.5405L22.6606 33.6027L22.5429 33.628L22.5363 33.6352L22.3329 33.6521L22.2997 33.6539L22.2756 33.6527L22.0975 33.6419L22.0933 33.6371L21.9816 33.6171L21.94 33.6014L21.9388 33.5996L21.9322 33.5978L21.832 33.5574L21.7107 33.5236L21.4343 33.5157H21.3757L20.7867 33.5242H20.7801H20.739H20.733L19.972 33.5151L19.9316 33.5145L19.4723 33.5242H19.4626L19.4427 33.5236L19.3788 33.5206L18.7052 33.5055H18.6678L18.2581 33.5224H18.2381H18.2369H18.1687H18.1633L17.4874 33.5133H17.4651L16.8489 33.5737L16.8012 33.5761L16.7789 33.5755L16.243 33.5501L15.8996 33.5387L15.7089 33.5453L15.3166 33.5658L15.2918 33.5664H15.29L14.9575 33.5652L14.9497 33.5646L14.6334 33.558H14.6322L14.599 33.5562L14.0758 33.5067L12.7107 33.4518L12.7089 33.4506L12.6401 33.4421L12.5266 33.4156L12.2538 33.3727L12.0203 33.3594L12.0197 33.3588L11.9943 33.357L11.8785 33.3413L11.6021 33.0227L11.6322 32.8875L11.6358 32.8785L11.7215 32.8247L11.7777 32.733L11.794 32.724L11.9201 32.6938L11.9255 32.695L11.9889 32.6316L12.1452 32.6877L12.2997 32.692L12.3142 32.6926L12.5948 32.7119L12.6974 32.704L12.7113 32.7034L14.0848 32.6485L14.6159 32.6183L14.6437 32.6177L14.6745 32.6183L14.9901 32.6395L15.2973 32.657L15.6533 32.6449L15.838 32.6214L15.8815 32.6183L15.8839 32.6171L16.246 32.6051H16.2629L16.2943 32.6057L16.7946 32.6395L17.3969 32.5821L17.4427 32.5803H17.4904H17.494Z\" fill=\"black\"/>\n      <path d=\"M30.3815 40.538V40.5995L30.3199 40.6611L30.3435 40.7365L30.3556 40.8138L30.358 40.8162L30.3773 41.1741L30.3779 41.1934V41.2012L30.3694 41.5458L30.364 42.0274L30.361 42.0684L30.2874 42.6237L30.2723 42.7474L30.2819 42.8264L30.3097 42.9755L30.3121 43.0033L30.3139 43.0045L30.3465 43.2978L30.3489 43.34L30.3483 43.3479L30.3362 43.952L30.3399 44.197L30.3417 44.2489L30.3423 44.2664V44.2724L30.3302 45.0413V45.0437L30.3163 45.6243H30.3157L30.3151 45.6442L30.2843 46.0546L30.2825 46.0558L30.2807 46.0841L30.2047 46.5706L30.198 46.576L30.1932 46.6031L30.1914 46.8089L30.218 47.1553V47.1559L30.2469 47.5187L30.2481 47.5464L30.256 48.0914L30.2566 48.0974L30.256 48.1034L30.2518 48.4016V48.4136L30.2674 48.6665L30.2946 48.8783L30.2976 48.9242L30.2982 48.9248L30.3024 49.1897L30.3314 49.2042L30.3628 49.2567L30.4461 49.2941L30.6374 49.5096L30.647 49.5349L30.6652 49.544L30.8015 49.7383L30.8257 49.7667L30.8571 49.7818L31.1419 49.9139L31.1522 49.9302L31.1914 49.9417L31.3912 50.0745L31.4044 50.0992L31.44 50.1131L31.6163 50.2779L31.7937 50.3062L31.9265 50.3207L32.0592 50.3141H32.0719L32.329 50.5705L32.198 50.7944L32.0635 50.8705L31.9947 50.8886L31.985 50.9013L31.8251 50.9387L31.7744 50.9447L31.7726 50.9471L31.5457 50.9628L31.5336 50.9634H31.533L31.4419 50.967L31.4274 50.9677L31.2222 50.9043L30.956 50.7244L30.8082 50.6285L30.5541 50.553L30.5469 50.5428L30.5022 50.5331L30.3894 50.4812L30.3109 50.3575L30.189 50.2791L30.1377 50.1686L30.0405 50.0129L29.918 49.8928L29.7641 49.8222L29.7086 49.7347L29.5933 49.6713L29.5656 49.6267L29.5046 49.4179L29.5028 49.4161V49.4028V49.3973V49.3907L29.5094 48.9677L29.4732 48.7878L29.4672 48.7317L29.4654 48.7299L29.4479 48.4535L29.4467 48.4269V48.4245L29.4473 48.3973V48.3967V48.3871L29.4563 48.0986L29.437 47.5675V47.5524L29.4382 47.5199L29.4642 47.1916L29.4274 46.8663L29.4262 46.8355L29.4256 46.8349L29.4171 46.5989L29.4147 46.5862L29.4062 46.506L29.4111 46.4438L29.4865 45.9646L29.5342 45.585L29.5469 45.0328L29.5354 44.273V44.2664V44.2501L29.5378 44.191L29.5481 43.9345L29.5487 43.9339L29.5493 43.9145L29.6024 43.3412L29.577 43.0835V43.0829L29.5595 42.9212L29.5571 42.8808L29.5601 42.8373L29.5746 42.7118L29.5873 42.547L29.5891 42.5458L29.5909 42.518L29.679 41.987L29.7002 41.5289L29.7056 41.1873V41.1753L29.7249 40.815L29.7279 40.8126L29.7388 40.7383L29.7665 40.6508L29.7152 40.5995V40.538L30.0484 40.2048L30.3815 40.538Z\" fill=\"black\"/>\n      <path d=\"M30.5771 49.4883L30.6333 49.5094L30.7087 49.5764L30.7232 49.5866L30.7322 49.5897L30.7359 49.5945L30.7588 49.5987L31.0008 49.6904L31.0062 49.6989L31.0328 49.7049L31.3291 49.8528L31.3979 49.8739L31.5669 49.8775L31.5862 49.8787L31.8288 49.895L31.8306 49.8975L31.8831 49.9029L32.235 49.9741L32.5663 49.9916L33.3001 50.0194L33.3038 50.023L33.4359 50.0471L33.7129 50.1527L33.7739 50.1437L34.1239 50.4937L33.9905 50.7689L33.9223 50.822L33.8348 50.8528L33.8143 50.8812L33.7159 50.9156L33.582 50.9385L33.4957 50.9288L33.2331 50.8715L32.5379 50.8588H32.5283L32.1601 50.8437L32.1577 50.8413L32.0678 50.8293L31.7033 50.7333L31.5047 50.6959L31.3019 50.6814L31.2953 50.6742L31.1613 50.6446L31.0129 50.5758L31.0068 50.5667L30.9839 50.5607L30.6996 50.3965L30.4878 50.3199L30.4589 50.2783L30.3544 50.236L30.3019 50.1853L30.3007 50.1823L30.2977 50.1811L30.2271 50.1111L30.1993 50.0441L30.1607 50.0206L30.1088 49.9198L30.0708 49.7629L30.1155 49.7182L30.1191 49.6965L30.0931 49.6705L30.1354 49.6283L30.1372 49.6229L30.1511 49.6126L30.4263 49.3374L30.5771 49.4883Z\" fill=\"black\"/>\n      <path d=\"M33.9537 50.2281L33.9821 50.2486L33.9839 50.2505L33.9507 50.2263L33.9537 50.2281Z\" fill=\"black\"/>\n      <path d=\"M47.4936 47.9792V47.9834L47.4924 48.0564L47.5135 48.2858L47.5153 48.2906L47.5449 48.4427V48.4548L47.5358 48.733L47.5352 48.7342L47.5286 48.7987L47.4646 49.1156L47.4586 49.1204L47.452 49.1627L47.4333 49.217L47.4284 49.2206L47.4242 49.2405L47.3632 49.3835L47.2371 49.7402L47.2365 49.7408L47.2359 49.7432L47.1532 49.9671L47.1472 49.9713L47.1424 49.9925L47.0005 50.2978L46.9758 50.3135L46.9571 50.3685L46.8183 50.5477L46.7682 50.5724L46.7441 50.6201L46.6191 50.7124L46.592 50.7215L46.5835 50.736L46.5721 50.7426L46.499 50.7625L46.4864 50.7794L46.362 50.8156L45.9486 50.9496L45.8762 50.9611L45.8708 50.9671L45.636 50.9955L45.5859 50.9985H45.5799L45.216 51.0251L45.2003 51.0287L45.1931 51.0299L45.1925 51.0311L45.0905 51.0564L44.8569 51.1307L44.7652 51.1452L44.761 51.1494L44.4435 51.1729L44.4127 51.1735H44.3928L44.3874 51.1729L43.7048 51.2598L43.6831 51.2653L43.6022 51.2743L43.601 51.2761L43.1062 51.2936L43.0899 51.296L43.0832 51.2966V51.2972L42.9993 51.3099H42.9969L42.4308 51.3956L42.3699 51.3998L42.3693 51.4004L42.3216 51.401L41.7157 51.4089H41.7103H41.706L41.6523 51.4083L41.1056 51.4065L41.0205 51.4161L41.0005 51.4155L40.7628 51.4053L40.7622 51.4041L40.7247 51.4016L40.4465 51.3636L40.2576 51.3672L40.2456 51.3691L40.2329 51.3697L40.2323 51.3709L40.2244 51.3715L40.0295 51.4185L39.9299 51.4306L39.9269 51.4318L39.5709 51.4379H39.563L39.534 51.4372L39.4809 51.4336L39.4803 51.433L39.4568 51.4312L39.2293 51.4041L39.0174 51.4354L38.9993 51.4366L38.9981 51.4379L38.942 51.4439L38.9311 51.4445L38.9305 51.4451L38.5932 51.4753L38.5509 51.4771L38.487 51.4723L38.1864 51.43L38.1774 51.4197L38.0772 51.3998L37.8786 51.3165L37.633 51.3226H37.6276L37.1303 51.3292H37.1243L37.0585 51.3244L36.7241 51.2749L36.7103 51.2586L36.5751 51.2236L36.4743 51.1663L36.2745 51.1783H36.2619L35.8442 51.191H35.831L35.7809 51.188L35.388 51.1421L35.382 51.1349L35.2926 51.1186L35.0416 51.0263L35.0325 51.0226L34.9342 51.0414L34.9136 51.0438L34.9118 51.045L34.5636 51.0945L34.5039 51.0987L34.4821 51.0981L34.1424 51.0806L34.1375 51.0764L34.009 51.0504L33.831 50.9774L33.7326 50.9677L33.5105 51.0094L33.464 51.0142L33.4622 51.0154L33.0826 51.0389L33.0597 51.0395L33.0102 51.0359L32.7996 51.007L32.7948 51.0009L32.732 50.9901L32.5497 50.9261L32.5431 50.917L32.5105 50.9092L32.3777 50.8422L32.3331 50.8289L32.2926 50.8452L32.2709 50.873L32.2468 50.8784L32.178 50.8869L31.8877 50.5966L31.8913 50.5495L31.8992 50.5024L31.913 50.4904L31.942 50.3914L31.9824 50.3286L32.0229 50.3069L32.0349 50.2671L32.353 50.0335L32.4677 50.1488L32.5099 50.1482H32.5105L32.7018 50.2037L32.8135 50.2737L32.9167 50.3033L33.0609 50.3165L33.3614 50.2918L33.5793 50.2121L33.7145 50.188L33.7392 50.1886L33.9535 50.2025L33.9565 50.2055L34.0343 50.2164L34.2226 50.2701L34.4701 50.2719L34.7797 50.2188L34.7972 50.217L34.7984 50.2158L35.0096 50.1874L35.0663 50.1838L35.1677 50.1965L35.2957 50.229L35.2981 50.2321L35.3156 50.2351L35.5286 50.3021L35.8575 50.3383L36.245 50.3431L36.5328 50.3334L36.5479 50.3328L36.6336 50.3419L36.7483 50.366L36.7525 50.3715L36.7869 50.3769L36.8853 50.4083L37.1508 50.4397H37.6125L37.9257 50.427H37.9438L38.044 50.4385L38.0911 50.4493L38.0959 50.4548L38.1297 50.4602L38.3518 50.5344L38.5648 50.5586L38.8503 50.5429L38.8901 50.538H38.8919L39.1641 50.503L39.2232 50.4994L39.2546 50.5006L39.5449 50.5211L39.5781 50.5235L39.8925 50.5223L40.0959 50.4982L40.114 50.4976L40.1152 50.4964L40.1514 50.494L40.1635 50.4934V50.4928L40.2003 50.491L40.2214 50.4904H40.222L40.4689 50.4885H40.4719L40.5268 50.4922L40.8213 50.5296L41.0398 50.5386L41.0416 50.5404L41.1074 50.5477L41.6523 50.5459H41.706H41.7103H41.7157L42.3222 50.5537H42.3379L42.872 50.4795L42.9474 50.4668L42.9583 50.4656L42.9595 50.465L43.0018 50.459L43.0512 50.4554L43.0518 50.4541L43.5316 50.4397L43.5334 50.4391L43.5926 50.4324L43.595 50.4294L44.3355 50.366L44.3512 50.3648H44.3518L44.3916 50.3624L44.6644 50.3473L44.8696 50.2888L44.8889 50.2858L44.8913 50.2828L45.0018 50.2568L45.0482 50.2514L45.0512 50.2484L45.1043 50.2423L45.1134 50.2417L45.5268 50.2031L45.5546 50.2019L45.7561 50.1735L46.1629 50.0914L46.2118 50.0764L46.2383 50.0546L46.3204 49.9376L46.4489 49.6744L46.5262 49.4861L46.6318 49.1295L46.636 49.1258L46.6396 49.1053L46.6952 48.9569L46.7 48.9424L46.7428 48.6883L46.741 48.4451V48.4427L46.7869 48.2568L46.8014 48.229L46.8853 47.9701L46.8877 47.9683L46.8901 47.9569L46.9227 47.8712L47.1979 47.6841L47.4936 47.9792Z\" fill=\"black\"/>\n      <path d=\"M44.6553 32.9001L44.7935 32.905L44.8146 32.9038L44.8399 32.9032H44.8484L45.3288 32.9122L45.33 32.9134L45.4175 32.9237L45.5249 32.949L45.6342 32.9629L45.6354 32.9647L45.6589 32.9665L45.6993 32.9744L45.7138 32.9919L45.8255 33.0215L45.9256 33.0788L45.9631 33.144L46.0457 33.185L46.126 33.2906L46.1701 33.421L46.1984 33.4433L46.2401 33.6195L46.2407 33.6225L46.2413 33.6231L46.2757 33.7692L46.3294 33.8392L46.5883 34.0673L46.6535 34.2134L46.7042 34.2514L46.7476 34.3998L46.7621 34.5012L46.7633 34.5024L46.7711 34.8591V34.8676L46.7609 34.9563L46.6818 35.2924L46.6776 35.2954L46.674 35.319L46.6185 35.491L46.7168 35.66L46.4591 35.9176L46.441 35.917L46.301 35.9074L46.2974 35.9038L46.2232 35.8905L46.1785 35.8748L46.0958 35.7559L45.9908 35.6799L45.9781 35.6418L45.9745 35.6219L45.9715 35.6195L45.9438 35.5127L45.9317 35.4234L45.9323 35.4035L45.9456 35.1814L45.9468 35.1802L45.9504 35.1403L46.0011 34.8452L45.9866 34.5857L45.785 34.4222L45.7645 34.3787L45.7223 34.3576L45.5925 34.191L45.5521 34.0727L45.5219 34.0498L45.4603 33.8241L45.4597 33.8187L45.4585 33.8181L45.4483 33.7776L45.3909 33.7698L45.3897 33.7686L45.3759 33.7674L45.2715 33.7481L44.8514 33.7263L44.8448 33.7269L44.8134 33.7288L44.8128 33.7294L44.6613 33.7342L44.3855 33.7511L44.1435 33.7855L44.1308 33.7885L44.0373 33.7982H44.0361L43.8931 33.7976L43.5189 33.8392H43.5183L43.1972 33.8778L43.1483 33.8808L42.6088 33.9472L42.5889 33.9484L42.5883 33.949L42.5448 33.9527L42.5261 33.9533L42.5255 33.9539L42.499 33.9551L42.1194 33.9895L42.0288 34.0021L42.0252 34.0039L41.5943 34.0112L41.5696 34.0136L41.5334 34.0148L40.9552 34.019L40.7199 34.0402L40.7102 34.0426L40.6402 34.0504L40.6378 34.0528L40.324 34.074L40.292 34.0752H40.2805L39.8961 34.0649H39.8949H39.8846L39.6879 34.0836L39.6438 34.086H39.6342L39.1604 34.0758L39.1115 34.0764H39.1085L39.1037 34.0758L38.7518 34.0721L38.4489 34.1053L38.4121 34.1071L38.4109 34.1077L38.3427 34.1096H38.33H38.3197L37.5448 34.0915L37.543 34.0902L37.4537 34.0794L37.167 34.0082V34.0076H37.164L37.1616 34.007L37.0433 33.9979L36.8001 34.0082L36.4181 34.0299L36.3922 34.0311L36.2998 34.0208L35.7464 33.9001L35.5829 33.8851L35.2841 33.972L35.2751 33.9732L35.2739 33.975L35.0645 34.0311L34.9655 34.0444H34.9619L34.7078 34.042L34.7066 34.0408L34.537 33.9979L34.1954 33.8163L34.1182 33.7921L34.0596 33.7849L33.8442 33.8163L33.5629 33.8664L33.5086 33.8712V33.8718L33.2069 33.876H33.2021L33.1001 33.8597L33.0089 33.8307L32.9697 33.7758L32.849 33.7155L32.8146 33.6702L32.7494 33.4753L32.7518 33.4403L32.7422 33.4306L32.7543 33.4192L32.7651 33.3479L32.7754 33.3389L32.7971 33.2526L32.8261 33.1971L33.0687 33.0522L33.3119 33.1989L33.3209 33.2158L33.4736 33.2212L33.7168 33.1663L33.7368 33.1639L33.738 33.1621L33.9999 33.1186L34.0138 33.1174L34.0144 33.1168L34.1477 33.0999L34.1936 33.0969L34.2709 33.1053L34.4151 33.1379L34.4229 33.1476L34.4809 33.1603L34.7893 33.2991L34.9178 33.2979L35.0699 33.2598L35.4103 33.1355L35.5056 33.118L35.511 33.1126L35.7712 33.0896L35.8092 33.0878L35.8635 33.0915L36.4338 33.1681L36.8013 33.1892L37.0681 33.2007L37.2449 33.2073L37.2467 33.2097L37.3378 33.2224L37.3439 33.2236L37.5714 33.249L38.3071 33.2254L38.365 33.2212L38.3988 33.22H38.4103L38.7343 33.2285L39.1037 33.2242H39.1085H39.1109H39.1604L39.6142 33.2146L39.8182 33.191L39.8568 33.1892L39.8575 33.1886L39.8919 33.1874L40.2684 33.1705L40.5442 33.153L40.6094 33.1446L40.613 33.1403L40.8967 33.118L40.9311 33.1168L41.5104 33.1138L41.5322 33.112L41.5648 33.1108L41.5654 33.1102L41.9963 33.1047L42.0174 33.1029H42.0216V33.1023L42.4223 33.0721L42.4428 33.0691L42.4742 33.0673L42.4754 33.0661L42.5098 33.0631L43.0632 32.9973L43.1182 32.9937H43.1224L43.4253 32.9659L43.8188 32.9225L43.8677 32.9195L44.0361 32.9189H44.0373L44.0771 32.9231L44.3059 32.9038L44.3396 32.9026L44.6378 32.9001H44.6414H44.6553Z\" fill=\"black\"/>\n      <path d=\"M46.5531 34.1857L46.5905 34.2328L46.6617 34.4398L46.3292 34.7723L46.0672 34.6456L46.0298 34.5979L45.958 34.3915L46.2911 34.0583L46.5531 34.1857Z\" fill=\"black\"/>\n      <path d=\"M46.6637 34.215L46.6051 34.3109L46.6021 34.3369L46.5786 34.4304L46.5713 34.5469L46.5719 34.5559L46.6136 34.6302L46.6238 34.6706L46.6353 34.6791L46.7602 35.0249L46.7844 35.1619V35.1794L46.7783 35.3127L46.7765 35.3145L46.7717 35.367L46.7711 35.3701L46.7964 35.7581L46.8544 36.2198L46.9702 36.664L46.9751 36.7014L46.9787 36.7044L47.0433 37.1293L47.0451 37.1576L47.0463 37.1588L47.1127 38.0587L47.176 38.4389V38.4395L47.2515 38.8547L47.2551 38.8957L47.2569 38.8975L47.3197 39.8643L47.3468 40.0436L47.3559 40.0955L47.3577 40.1166L47.3589 40.1178L47.4048 40.5427L47.4066 40.5753H47.4072L47.409 40.702V40.708V40.7122L47.4084 40.775L47.4096 43.1184V43.1733V43.1739L47.409 43.1975L47.3903 43.4769L47.3879 43.4787L47.3806 43.5354L47.3197 43.7841L47.2804 44.1069L47.2798 44.9512L47.2786 44.982L47.2551 45.2373L47.2503 45.2892L47.2509 45.9687L47.2521 46.0261V46.0345L47.2509 46.0629L47.2503 46.0762L47.2533 48.3532V48.355L47.2521 48.5753L47.2527 48.638V48.6416V48.6543L47.2321 49.2101L47.214 49.2276L47.0499 49.5022L47.0342 49.5107L46.8688 49.5529L46.5236 49.2077L46.5393 49.1775L46.5333 48.6459V48.6416V48.638L46.5339 48.5753L46.5327 48.3556V48.3532V48.3495L46.5568 46.0743L46.5556 46.0641L46.5544 46.0345V46.0267L46.5562 45.9645L46.5707 45.2657L46.5725 45.2373L46.5798 45.1679L46.6027 44.9301L46.622 44.0786L46.6226 44.078L46.6232 44.0581L46.6546 43.6929L46.6552 43.6923L46.6564 43.6778L46.6926 43.4087L46.7192 43.1552V43.1184L46.721 40.775L46.7204 40.7122V40.708V40.7026L46.7216 40.6036L46.663 40.2126L46.654 40.1637L46.6534 40.1558L46.6528 40.1552L46.6202 39.9621L46.6178 39.9319L46.6166 39.9307L46.5375 38.9609L46.4784 38.5541L46.4096 38.1661L46.406 38.1323L46.4048 38.1305L46.3299 37.2361L46.249 36.8366L46.243 36.7774L46.2412 36.7762L46.2213 36.3109L46.1483 35.8408L46.0819 35.4419L46.0764 35.4383L46.0251 35.3188L45.9932 35.1619L45.9938 35.1401L46.0137 34.7696L46.0173 34.7666L46.0318 34.6815L46.0644 34.5885L46.0632 34.5578L46.0547 34.4304L46.0324 34.3387L46.0306 34.3266L45.9974 34.215L46.3305 33.8818L46.6637 34.215Z\" fill=\"black\"/>\n      <path d=\"M40.2141 36.4445L39.9226 36.7746L39.6926 36.8041L39.5955 36.8247L39.5581 36.8289L39.5557 36.8307L38.2503 36.9556L37.9751 37.0111L37.9087 37.0775L37.6836 36.8524V36.8186L37.7289 36.6834L37.7494 36.6551L37.8598 36.6002L37.8846 36.57L38.167 36.5133L39.4368 36.1777L39.4537 36.1759L39.4549 36.1735L39.5659 36.15L39.5937 36.1469L39.5955 36.1451L39.8375 36.1143L39.8809 36.1113L40.2141 36.4445Z\" fill=\"black\"/>\n      <g className=\"animate\">\n        <path d=\"M56.4312 35.7539L56.4517 36.031L56.4529 36.0563V36.066L56.4493 36.1848L56.497 36.3689L56.5 36.3943L56.503 36.3961L56.6104 37.0285L56.7251 37.445L56.7293 37.4727L56.7323 37.4757L56.9272 38.4896V38.4908L57.2996 40.3979L57.3026 40.4262L57.3044 40.4281L57.4457 41.5258L57.4481 41.5626L57.4487 41.5632L57.5036 42.8016L57.5042 42.8197L57.506 43.9205V43.9217L57.5054 43.9453L57.4529 44.8487L57.4523 44.8499L57.4505 44.8758L57.3678 45.5349L57.3642 45.5379L57.3594 45.5795L57.1644 46.3912L57.1457 46.4063L57.1204 46.5023L57.0938 46.55L57.0504 46.5753L57.0214 46.6447L56.7064 46.7751L56.3913 46.6447L56.3322 46.5023L56.2658 46.3405L56.2646 46.3393L56.261 46.3291L56.3026 46.1921L56.3056 46.1691L56.3262 46.0937L56.3268 46.0249L56.3292 45.9887L56.369 45.6954L56.4535 45.6224L56.5175 45.3852L56.6201 44.7733L56.6822 43.906L56.6834 42.8348L56.5965 41.6218L56.4722 40.5403L56.1415 38.6381L56.1397 38.62L56.1385 38.6194L56.0045 37.5946L56.0015 37.553V37.5524L55.993 37.1215L55.9007 36.4938L55.9001 36.4872H55.8995L55.876 36.308L55.8265 36.215L55.7945 36.0877L55.7878 36.081L55.7673 35.8046L55.7661 35.7787L56.0992 35.4456L56.4312 35.7539Z\" fill=\"black\"/>\n        <path d=\"M57.3215 35.2563L57.8526 35.3402L57.8574 35.3456L57.9087 35.3528L58.5412 35.5399L58.5448 35.5448L58.5677 35.549L60.2732 36.182L60.2774 36.1875L60.2967 36.1917L61.2286 36.6021L61.2364 36.6142L61.2702 36.6232L61.7427 36.8936L61.7645 36.9316L61.8278 36.9563L62.1785 37.2774L62.1893 37.3015L62.2129 37.3124L62.5273 37.6709L62.54 37.7053L62.5629 37.718L62.8188 38.1042L62.8278 38.1338L62.8411 38.1422L63.0523 38.5448L63.0644 38.593L63.0777 38.6027L63.2292 39.0324L63.2376 39.0813L63.2442 39.0867L63.3523 39.5954L63.3565 39.6365L63.3595 39.6389L63.4205 40.1947L63.4229 40.2346H63.4235L63.4331 40.7318V40.7409L63.4319 40.7753L63.3861 41.3492L63.3843 41.351L63.3812 41.389L63.2768 41.975L63.2738 41.9775L63.2702 42.0046L63.1199 42.5864L63.1139 42.5912L63.1079 42.625L62.8779 43.2484L62.8665 43.2563L62.8574 43.2949L62.2853 44.4132L62.2726 44.421L62.2642 44.4488L61.6257 45.444L61.6094 45.453L61.6003 45.4796L60.9715 46.2714L60.9461 46.284L60.9334 46.3136L60.403 46.8326L60.3571 46.8513L60.3402 46.8845L59.8701 47.2068L59.7916 47.2315L59.7735 47.2581L59.3462 47.4247L59.2376 47.4458L59.2298 47.4542L59.0445 47.4766L59.0366 47.4772H59.036L58.8622 47.4959L58.8146 47.4983H58.8055L58.4724 47.491L58.4712 47.4898L58.3529 47.4711L58.2111 47.4265L58.2056 47.4192L58.1754 47.4126L58.0312 47.3498L58.0185 47.3299L57.9678 47.3136L57.8321 47.2189L57.8103 47.1778L57.7627 47.1555L57.5321 46.8845L57.4476 46.654L57.8025 46.2985L58.0505 46.3993L58.2672 46.6105L58.3197 46.6383L58.3631 46.6479L58.4482 46.6413L58.4639 46.6407L58.4645 46.6401L58.7602 46.628L58.8743 46.6039L59.0149 46.5574L59.3776 46.4084L59.7753 46.1301L60.2684 45.6642L60.8749 44.9262L61.4941 43.9775L62.0481 42.9026L62.2768 42.3287L62.4301 41.7982L62.5243 41.2593L62.5653 40.7198L62.575 40.2545L62.5369 39.7439L62.438 39.2883L62.3004 38.9099L62.1163 38.5592L61.8785 38.2406L61.5925 37.963L61.2352 37.7324L60.8037 37.4711L59.9171 37.0674L58.2509 36.4198L57.6709 36.237L57.2171 36.1615L56.8634 36.1682L56.6438 36.208L56.4458 36.307L56.4313 36.3178L56.4144 36.3233L56.3287 36.3975L56.3197 36.421L55.9986 36.6401L55.6975 36.4633L55.6776 36.4271L55.6299 36.2472L55.6311 36.2231L55.6371 36.1314L55.6474 36.1223L55.7017 35.9443L55.8399 35.7391L55.9244 35.6944L55.9672 35.6178L56.2799 35.4271L56.3649 35.4029L56.3812 35.3818L56.6848 35.2895L56.7958 35.2726L56.7989 35.2696L57.2298 35.2508L57.2503 35.2502L57.3215 35.2563Z\" fill=\"black\"/>\n      </g>\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <rect width=\"1500\" height=\"1000\" fill=\"white\" transform=\"translate(-814 -258)\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n\nexport default Keyboard"},"relativePath":"sketches/keyboard.jsx"},{"fields":{"contents":"import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { Link } from \"gatsby\"\n\nimport favicon from \"../images/favicon.ico\"\nimport backArrow from \"../images/handwriting/back_arrow.svg\"\n\nimport \"../css/base_layout.scss\"\n\nconst BaseLayout = ({ children, home, draft }) => {\n  return (\n    <div id=\"page-container\">\n      <Helmet>\n        <title>cselig</title>\n        <link rel=\"icon\" href={favicon} />\n      </Helmet>\n      {!home &&\n        <Link to={draft ? \"/drafts\" : \"/\"}>\n          <img className=\"back-button\" src={backArrow} alt=\"back\" />\n        </Link>\n      }\n      <>{ children }</>\n    </div>\n  )\n}\n\nexport default BaseLayout\n"},"relativePath":"components/base_layout.js"},{"fields":{"contents":"import React from \"react\"\nimport Highlight, {defaultProps} from \"prism-react-renderer\"\nimport theme from \"prism-react-renderer/themes/github\"\n\nimport '../css/code_block.scss'\n\nimport Prism from \"prism-react-renderer/prism\"\nimport vsDark from 'prism-react-renderer/themes/vsDark'\n\n// prism-react-renderer supports a small subset of languages that Prism does\n(typeof global !== 'undefined' ? global : window).Prism = Prism;\n[\"ruby\", \"clojure\"].forEach((lang) => require(`../../node_modules/prismjs/components/prism-${lang}`))\n\nconst CodeBlock = ({ language, code }) => {\n  defaultProps.theme = theme\n  return (\n    <Highlight {...defaultProps} code={code} language={language} theme={vsDark}>\n      {({className, style, tokens, getLineProps, getTokenProps}) => (\n        <pre className={className}>\n          {/* don't render blank last lines (which are always present in markdown code blocks) */}\n          {tokens.filter((line, i) => !(i === (tokens.length - 1) && line.length === 1 && line[0].empty)).map((line, i) => (\n            <div key={i} {...getLineProps({line, key: i})}>\n              {line.map((token, key) => (\n                <span key={key} {...getTokenProps({token, key})} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  )\n}\n\nexport default CodeBlock\n"},"relativePath":"components/code_block.js"},{"fields":{"contents":"import React from 'react'\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport CodeBlock from './code_block'\n\nfunction CodeBlockFromFile({ filePath }) {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile {\n        nodes {\n          fields {\n            contents\n          }\n          relativePath\n        }\n      }\n    }\n  `)\n\n  // we only need one file, but non-page queries cannot take parameters\n  // https://github.com/gatsbyjs/gatsby/issues/9047\n  const nodes = data.allFile.nodes.filter((node) => filePath === node.relativePath)\n  if (nodes.length !== 1) {\n    console.warn(\"Trouble locating file.\")\n  }\n  const node = nodes[0]\n\n  const ext = node.relativePath.split(\".\").pop()\n\n  return <CodeBlock code={node.fields.contents} language={ext} />\n}\n\nexport default CodeBlockFromFile\n"},"relativePath":"components/code_block_from_file.js"},{"fields":{"contents":"import React from \"react\"\n\n// for accessibility/avoiding linter warnings\n// see https://medium.com/@seanmcp/%EF%B8%8F-how-to-use-emojis-in-react-d23bbf608bf7\nconst Emoji = props => (\n  <span\n      className=\"emoji\"\n      role=\"img\"\n      aria-label={props.label ? props.label : \"\"}\n      aria-hidden={props.label ? \"false\" : \"true\"}\n  >\n      {props.symbol}\n  </span>\n);\n\nexport default Emoji;\n"},"relativePath":"components/emoji.js"},{"fields":{"contents":"import React from \"react\"\n\nimport ExpandableCodeBlockMulti from \"./expandable_code_block_multi.js\"\n\nconst ExpandableCodeBlock = ({ filePath }) => {\n  return <ExpandableCodeBlockMulti filePaths={[filePath]} />\n}\n\nexport default ExpandableCodeBlock\n"},"relativePath":"components/expandable_code_block.js"},{"fields":{"contents":"import React, { useState } from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport FileNameCodeBlock from \"./file_name_code_block.js\"\n\nimport \"../css/expandable_code_block.scss\"\n\nconst ExpandableCodeBlockMulti = ({ filePaths }) => {\n  const [expanded, setExpanded] = useState(false)\n\n  const data = useStaticQuery(graphql`\n    query {\n      allFile {\n        nodes {\n          fields {\n            contents\n          }\n          relativePath\n        }\n      }\n    }\n  `)\n\n  // we only need one file, but non-page queries cannot take parameters\n  // https://github.com/gatsbyjs/gatsby/issues/9047\n  const nodes = data.allFile.nodes.filter((node) => filePaths.includes(node.relativePath))\n  if (nodes.length !== filePaths.length) {\n    console.warn(\"Trouble locating file(s).\")\n  }\n\n  return (\n    <div className={`expandable-code-block ${expanded ? \"expanded\" : \"\"}`}>\n      <p className=\"button\" onClick={() => setExpanded(!expanded)} aria-hidden=\"true\">\n        click for code\n      </p>\n      {nodes.map((node) => {\n        const fileName = node.relativePath.split(\"/\").pop()\n        return <FileNameCodeBlock code={node.fields.contents} fileName={fileName} key={node.relativePath} />\n      })}\n    </div>\n  )\n}\n\nexport default ExpandableCodeBlockMulti\n"},"relativePath":"components/expandable_code_block_multi.js"},{"fields":{"contents":"import React from \"react\"\nimport CodeBlock from \"./code_block.js\"\n\nconst FileNameCodeBlock = ({ code, fileName }) => {\n  code = `# ${fileName}\\n` + code\n  const ext = fileName.split(\".\").pop()\n  return <CodeBlock code={code} language={ext} />\n}\n\nexport default FileNameCodeBlock\n"},"relativePath":"components/file_name_code_block.js"},{"fields":{"contents":"import React from \"react\"\nimport { Link } from \"gatsby\"\nimport SocialLinks from \"./social_links\"\n\nimport \"../css/header.scss\"\n\nconst Header = () => (\n  <div className=\"header\">\n    <Link to=\"/\" className=\"back-button\">\n      <h3>back to blog</h3>\n    </Link>\n    <SocialLinks size=\"32\" />\n  </div>\n)\n\nexport default Header"},"relativePath":"components/header.js"},{"fields":{"contents":"import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default Image\n"},"relativePath":"components/image.js"},{"fields":{"contents":"import React from \"react\"\nimport CodeBlock from \"./code_block.js\"\n\nconst MarkdownCodeBlock = ({ children, className }) => {\n  const language = className ? className.replace(/language-/, '') : \"javascript\"\n  return <CodeBlock code={children} language={language} />\n}\n\nexport default MarkdownCodeBlock\n"},"relativePath":"components/markdown_code_block.js"},{"fields":{"contents":"import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport \"../css/social_links.scss\"\n\nconst SocialLinks = ({ size }) => {\n  const data = useStaticQuery(graphql`\n  query {\n    allImageSharp {\n      edges {\n        node {\n          id\n          fluid {\n            ...GatsbyImageSharpFluid\n            originalName\n          }\n        }\n      }\n    }\n  }`)\n\n  const email = data.allImageSharp.edges.filter(({node}) => node.fluid.originalName === \"email.png\")[0]\n  const linkedin = data.allImageSharp.edges.filter(({node}) => node.fluid.originalName === \"linkedin.png\")[0]\n\n  const dimensions = {\"width\": size + \"px\", \"height\": size + \"px\"}\n\n  return (\n    <div className=\"social-links\">\n      <a href=\"https://github.com/cselig/\" target=\"_blank\" className=\"social-link\" rel=\"noopener noreferrer\">\n        <svg height={size} width={size} viewBox=\"0 0 16 16\">\n          <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"></path>\n        </svg>\n      </a>\n\n      <a href=\"mailto:seligchristian@gmail.com\" target=\"_blank\" className=\"social-link\" style={dimensions} rel=\"noopener noreferrer\">\n        <Img fluid={email.node.fluid} quality=\"100\"/>\n      </a>\n\n      <a href=\"https://www.linkedin.com/in/c-selig/\" target=\"_blank\" className=\"social-link\" style={dimensions} rel=\"noopener noreferrer\">\n        <Img fluid={linkedin.node.fluid}/>\n      </a>\n    </div>\n  )\n}\n\nexport default SocialLinks"},"relativePath":"components/social_links.js"},{"fields":{"contents":"@import './main.scss';\n\nbody {\n  height: 100vh;\n  width: 100vw;\n}\n\n#page-not-found {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 200px;\n  height: 200px;\n  margin-left: -100px;\n  margin-top: -100px;\n\n  * { margin: 0 }\n\n  h1 {\n    font-size: 82px;\n  }\n\n  a {\n    @include link();\n    p { font-size: 28px; }\n  }\n}"},"relativePath":"css/404.scss"},{"fields":{"contents":"#page-container {\n  position: relative;\n}\n\n.back-button {\n  height: 20px;\n  position: absolute;\n  top: 10px;\n  left: 0;\n  cursor: pointer;\n  color: black;\n}\n"},"relativePath":"css/base_layout.scss"},{"fields":{"contents":"pre.prism-code {\n  padding: 10px;\n  background: #1e1e1e;\n  border-radius: 5px;\n  overflow-x: scroll;\n  font-family: Menlo, monospace;\n  font-size: 14px;\n}\n"},"relativePath":"css/code_block.scss"},{"fields":{"contents":".expandable-code-block {\n\n  .button {\n    font-family: Menlo;\n    cursor: pointer;\n    text-align: center;\n    font-size: 1.2em;\n  }\n\n  pre {\n    overflow-y: scroll;\n    max-height: 0;\n    padding: 0;\n    transition: max-height 500ms;\n  }\n\n  &.expanded {\n    pre {\n      max-height: 90vh;\n    }\n  }\n}"},"relativePath":"css/expandable_code_block.scss"},{"fields":{"contents":".header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0 3px 5px 0 lightgrey;\n  width: 100vw;\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  .back-button {\n    margin: 15px;\n    text-decoration: none;\n\n    h3 {\n      font-size: 32px;\n      color: black;\n      opacity: 0.6;\n      transition: opacity 300ms;\n\n      &:hover {\n        opacity: 1;\n      }\n    }\n  }\n\n  .social-links {\n    font-size: 3px;\n    margin: 15px;\n  }\n\n}"},"relativePath":"css/header.scss"},{"fields":{"contents":"body {\n  font-family: Avenir, \"Helvetica Neue\", \"Lucida Grande\", sans-serif;\n  padding: 20px 20px 60px;\n  max-width: 680px;\n  margin: 0 auto;\n}\n\np {\n  font-size: 16px;\n}\n\n@mixin link {\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  background-image: url('../images/handwriting/highlight.svg');\n  background-repeat: no-repeat;\n  background-position: 50% 50%;\n  background-size: cover;\n}\n\np a {\n  @include link();\n}\n\n@mixin wipe-right-start { clip-path: polygon(0 0, 0 0, 0 100%, 0 100%); }\n@mixin wipe-left-start { clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%); }\n@mixin wipe-down-start { clip-path: polygon(0 0, 100% 0, 100% 0, 0 0); }\n@mixin wipe-up-start { clip-path: polygon(0 100%, 100% 100%, 100% 100%, 0 100%); }\n@mixin wipe-end { clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%); }\n@mixin cursor-start { transform:translate(0, 0) }\n@mixin cursor-end { transform:translate(-20px, -10px) }\n@keyframes wipe-right {\n  0%   { @include wipe-right-start() }\n  50%  { @include wipe-right-start() }\n  100% { @include wipe-end() }\n}\n@keyframes wipe-left {\n  0%   { @include wipe-left-start() }\n  50%  { @include wipe-left-start() }\n  100% { @include wipe-end() }\n}\n@keyframes wipe-down {\n  0%   { @include wipe-down-start() }\n  50%  { @include wipe-down-start() }\n  100% { @include wipe-end() }\n}\n@keyframes wipe-up {\n  0%   { @include wipe-up-start() }\n  50%  { @include wipe-up-start() }\n  100% { @include wipe-end() }\n}\n@keyframes spin {\n  0%   { transform:rotate(0); }\n  50%  { transform:rotate(0); }\n  100% { transform:rotate(360deg); }\n}\n@keyframes cursor-animation {\n  0%   { @include cursor-start() }\n  50%  { @include cursor-start() }\n  100% { @include cursor-end() }\n}\n@keyframes move-up {\n  0%   { transform:translate(0,0); }\n  50% { transform:translate(0,-10px); }\n  100% { transform:translate(0,0); }\n}\n\n#page-container {\n  #about {\n    .title-container {\n      text-align: center;\n\n      .title {\n        height: 100px;\n      }\n    }\n  }\n\n  #index {\n    .site-title-container {\n      text-align: center;\n\n      .site-title {\n        height: 120px;\n      }\n    }\n\n    .description {\n      line-height: 150%;\n      margin-bottom: 30px;\n    }\n\n    .posts-container {\n      // Only do hover effects for mouse devices.\n      @media (pointer: fine) {\n        &:hover {\n          .post {\n            opacity: 0.3;\n          }\n        }\n\n        .post:hover {\n          opacity: 1;\n        }\n\n        .sketch.cursor .animate {\n          @include cursor-end();\n        }\n\n        .post:hover .sketch {\n          .animate {\n            animation-duration: 600ms;\n          }\n\n          &.chess .animate {\n            animation-name: spin;\n            transform-origin: 50% 15%;\n          }\n          &.connected-components .animate { animation-name: wipe-up; }\n          &.ski-graphs .animate { animation-name: wipe-right; }\n          &.cryptograms .animate { animation-name: wipe-down; }\n          &.music-note .animate { animation-name: wipe-down; }\n          &.pipes .animate { animation-name: wipe-down; }\n          &.d3 .animate { animation-name: wipe-up; }\n          &.keyboard .animate { animation-name: wipe-right; }\n          &.cursor .animate { animation-name: cursor-animation; }\n          &.categories .animate { animation-name: move-up; }\n        }\n      }\n\n      .post {\n        display: flex;\n        align-items: center;\n        padding: 10px 0;\n        color: black;\n        text-decoration: none;\n        transition: opacity 350ms;\n\n        .sketch {\n          width: 100px;\n          height: 100px;\n          margin-right: 10px;\n        }\n\n        .title-container {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n\n          .title {\n            font-size: 32px;\n            margin: 0;\n          }\n\n          .date {\n            font-size: 14px;\n            color: gray;\n            margin: 0;\n            white-space: nowrap;\n          }\n        }\n\n        @media (max-width: 700px) {\n          padding: 15px 0;\n        }\n      }\n    }\n  }\n}\n"},"relativePath":"css/main.scss"},{"fields":{"contents":".post-body {\n  padding-bottom: 1em;\n\n  h2, h3, h4 {\n    margin-bottom: 0;\n  }\n\n  .title-container {\n    text-align: center;\n    padding: 0 50px; // width of back arrow\n\n    .title {\n      font-size: 36px;\n    }\n  }\n\n  .gatsby-resp-image-wrapper {\n    pointer-events: none;\n  }\n\n  &#chocolate-chip-cookies {\n    .gatsby-resp-image-wrapper {\n      height: 300px;\n      width: 300px;\n    }\n  }\n\n  &#chord-data {\n    #chord-picker {\n      $transition-time: 300ms;\n\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      margin-top: 5em;\n      min-height: 750px;\n\n      .controls {\n        .button {\n          font-size: 30px;\n          margin: 4px;\n          cursor: pointer;\n          transition: opacity $transition-time;\n\n          &.enabled {\n            opacity: 1;\n          }\n\n          &.disabled {\n            opacity: 0.3;\n          }\n        }\n      }\n\n      .first-chord-picker, .next-chord-picker {\n        .chords {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          transition: height $transition-time;\n          overflow: hidden;\n\n          .chord {\n            cursor: pointer;\n            margin: 0.5em;\n          }\n        }\n      }\n\n      .progression-display {\n        display: flex;\n        opacity: 1;\n\n        .progression-chord {\n          margin: 1em;\n          padding: 0.5em;\n          border: 1px solid black;\n          border-radius: 0.5em;\n          width: 3em;\n          text-align: center;\n          transition: opacity $transition-time;\n\n          &:not(.selected) {\n            opacity: 0.3;\n          }\n        }\n      }\n\n      .text {\n        font-weight: 400;\n        height: 2em;\n        margin: 0.5em;\n        transition: opacity $transition-time;\n\n        &.clickable {\n          cursor: pointer;\n        }\n\n        &.enter {\n          opacity: 0;\n        }\n\n        &.enter-active, &.enter-done {\n          opacity: 1;\n        }\n\n        &.exit-active, &.exit-done {\n          opacity: 0;\n        }\n\n        p {\n          font-size: 1.5em;\n          margin: 0;\n        }\n      }\n\n      .MIDISounds {\n        display: none;\n      }\n    }\n  }\n\n  &#wiki-link-graph {\n    .gatsby-resp-image-wrapper {\n      // height: 300px;\n    }\n  }\n\n  &#d3 {\n    .canvas {\n      display: flex;\n      justify-content: center;\n      margin: 20px 0;\n    }\n  }\n\n  &#three-js {\n    .canvas {\n      width: 400px;\n      height: 400px;\n      margin: 20px auto;\n    }\n\n    .container {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n\n      button {\n        margin: 10px 0;\n        font-size: 12px;\n      }\n    }\n\n    &#sine-wave-container .selectors {\n      display: flex;\n\n      .selector {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin: 0 20px;\n      }\n    }\n  }\n\n  &#cryptograms {\n    .cryptogram, .solution {\n      display: flex;\n      justify-content: center;\n\n      p {\n        font-family: Courier, monospace;\n        margin: 0;\n      }\n    }\n\n    .solution {\n      p {\n        background-color: black;\n        transition: background-color 200ms linear;\n\n        &:hover {\n          background-color: white;\n        }\n      }\n    }\n  }\n\n  &#ski-graphs {\n    #ski-graph {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n\n      .text {\n        font-size: 20px;\n\n        &.reset-button {\n          font-weight: 700;\n          cursor: pointer;\n        }\n      }\n\n      svg {\n        border: solid 3px lightgrey;\n\n        g.node {\n          circle {\n            cursor: pointer;\n\n            &.selected {\n              fill: red !important;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  &#graph-builder {\n    .graph-ui-container {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n\n      .editor-panel {\n        display: flex;\n        flex-direction: column;\n        width: 75%;\n\n        .edit-container, .algorithm-container {\n          height: 70px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        hr {\n          width: 100%;\n        }\n\n        .start-button, .edit-button {\n          font-size: 1.5em;\n          font-weight: 500;\n          cursor: pointer;\n          text-align: center;\n        }\n\n        button[name=toggle-edit] {\n          height: 21px;\n        }\n\n        .steps {\n          width: 320px;\n        }\n\n        .graph-editor {\n          display: flex;\n          align-items: center;\n\n          .add-modes {\n            display: flex;\n            align-items: center;\n\n            p {\n              margin: 5px;\n            }\n\n            .add-mode {\n              cursor: pointer;\n\n              &.selected {\n                font-weight: 700;\n              }\n            }\n          }\n\n          button {\n            margin-left: 5px;\n            height: fit-content;\n          }\n        }\n      }\n\n      .graph-container {\n        svg {\n          border: 3px solid grey;\n          margin: 5px;\n        }\n      }\n    }\n  }\n\n  &#one-d-chess {\n    $dark-square-color: #D18B47;\n    $light-square-color: #FFCE9E;\n\n    .chess-ui {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n\n      .control-panel {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin-bottom: 10px;\n\n        .reset {\n          margin-bottom: 10px;\n          height: 50px;\n          cursor: pointer;\n\n          // These styles should probably be with the component\n          .underline {\n            clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);\n            transition: clip-path 300ms;\n          }\n\n          &:hover .underline {\n            clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\n          }\n        }\n      }\n\n      svg.board {\n        border: 1px solid $dark-square-color;\n        border-radius: 5px;\n\n        .square {\n          &.dark {\n            fill: $dark-square-color;\n          }\n\n          &.light {\n            fill: $light-square-color;\n          }\n        }\n\n        .legal-move-dot {\n          fill: grey;\n        }\n      }\n\n      .game-state-display {\n        height: 75px;\n      }\n\n      .debug-panel {\n        width: 400px;\n      }\n    }\n\n    #unlockable-text {\n      opacity: 0;\n      transition: opacity 2s linear;\n\n      &.hidden {\n        display: none;\n      }\n\n      &.visible {\n        opacity: 1;\n      }\n    }\n  }\n}\n"},"relativePath":"css/posts.scss"},{"fields":{"contents":"#resume {\n  margin: auto;\n  padding-bottom: 50px;\n}\n"},"relativePath":"css/resume.scss"},{"fields":{"contents":"$grey: lightgrey;\n$darkgrey: #757575;\n\n/* Only uncomment when printing resume – these styles bleed over to the rest of\n   the site for some reason */\nbody {\n  // padding: 0;\n  // margin: 0;\n  // position: relative;\n}\n\n#resume-formatted {\n  padding: 60px 80px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 850px;\n}\n\nh1 {\n  font-size: 40px;\n}\n\nh2 {\n  font-size: 28px;\n}\n\nh3 {\n  font-size: 24px;\n  margin: 0;\n}\n\np, ul {\n  font-size: 16px;\n}\n\n#header {\n  text-align: center;\n\n  h1 {\n    margin: 5px;\n  }\n\n  p {\n    margin: 0;\n    color: $grey;\n    font-weight: 500;\n  }\n}\n\n.section {\n  margin: 0;\n  margin-bottom: 24px;\n\n  h2 {\n    margin: 0;\n  }\n\n  hr {\n    margin: 0;\n    border: none;\n    border-top: 1px solid grey;\n  }\n\n  .list {\n    margin: 0 16px;\n    margin-top: 8px;\n\n    .experience {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      margin: 0;\n      padding: 10px 0;\n\n      .header {\n        display: flex;\n        justify-content: space-between;\n        margin-bottom: 8px;\n\n        h3 {\n          margin: 0;\n          margin-bottom: 0px;\n\n          .position {\n            color: $grey;\n            font-size: 20px;\n          }\n        }\n\n        .summary {\n          margin: 0;\n          color: $darkgrey;\n        }\n      }\n\n      .body {\n        ul {\n          margin: 0;\n          padding: 0 15px;\n        }\n      }\n\n\n      .info {\n        text-align: right;\n        color: $grey;\n        font-weight: 500;\n\n        p {\n          font-size: 14px;\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n\n#skills {\n  p {\n    margin: 4px;\n  }\n}\n\n#education {\n  p {\n    font-size: 16px;\n  }\n\n  h4 {\n    margin: 0;\n    margin-bottom: 4px;\n    font-weight: 400;\n  }\n\n  ul {\n    margin: 0;\n\n    li {\n      .detail {\n        color: $grey;\n      }\n    }\n  }\n}"},"relativePath":"css/resume_formatted.scss"},{"fields":{"contents":".social-links {\n  display: flex;\n  width: fit-content;\n\n  .social-link {\n    margin: 1em;\n    opacity: 0.8;\n    transition: opacity 300ms;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n}"},"relativePath":"css/social_links.scss"},{"fields":{"contents":"import * as d3 from \"d3\"\n\n// Assumptions:\n//  - Graph representation has format:\n//     nodes: [{x, y}]\n//     edges: [{start, end}]\n//  - SVG has hierarchy:\n//    - svg\n//      - g.edges\n//        - g.edge\n//          - path, text, etc.\n//      - g.nodes\n//        - g.node\n//          - circle, text, etc.\n\n// TODO: these functions should probably all take objects as params\n\n///// RENDERING /////\n\n// call this first\nexport function setUpSvg(svg) {\n  if (svg.select(\"defs\").size() === 0) appendSvgDefsD3(svg)\n  if (svg.select(\"g.edges\").size() === 0) svg.append(\"g\").attr(\"class\", \"edges\")\n  if (svg.select(\"g.nodes\").size() === 0) svg.append(\"g\").attr(\"class\", \"nodes\")\n}\n\nexport function appendSvgDefsD3(svg) {\n  // direction marker\n  svg.append(\"defs\").append(\"marker\")\n    .attr(\"id\", \"triangle\")\n    .attr(\"refY\", 1.75) // fudge factor to make svg scaling work\n    .attr(\"markerWidth\", 15)\n    .attr(\"markerHeight\", 15)\n    .attr(\"orient\", \"auto\")\n    .append(\"path\")\n      .attr(\"d\", \"M 0 0 12 6 0 12 3 6\")\n      .style(\"fill\", \"black\")\n      .style(\"transform\", \"scale(0.3)\")\n}\n\n// TODO:\n//  - need to apply same things to update and enter groups\nexport function renderNodesD3({ svg, nodeData, opts }) {\n  const defaultOpts = {\n    onClick: () => {},\n    radius: 7,\n    mouseoverRadius: 9,\n    textFn: (_, i) => i,\n    fill: \"black\",\n  }\n  opts = {...defaultOpts, ...opts}\n\n  let nodes = svg.select(\"g.nodes\").selectAll(\"g.node\")\n    .data(nodeData)\n\n  let nodesEnter = nodes.enter().append(\"g\")\n    .attr(\"class\", \"node\")\n\n  nodesEnter.append(\"circle\")\n    .attr(\"r\", opts.radius)\n\n  nodes.merge(nodesEnter)\n    .style(\"transform\", (d) => `translate(${d.x}px,${d.y}px)`)\n    .select(\"circle\")\n      .style(\"fill\", opts.fill)\n      .on(\"mouseover\", (_, i, elems) => d3.select(elems[i]).style(\"fill\", \"green\").attr(\"r\", opts.mouseoverRadius))\n      .on(\"mouseout\",  (_, i, elems) => d3.select(elems[i]).style(\"fill\", \"black\").attr(\"r\", opts.radius))\n      .on(\"click\", opts.onClick)\n\n  // nodesEnter.append(\"text\")\n  //   .text(opts.textFn)\n  //   .attr(\"x\", 10)\n\n  nodes.exit().remove()\n\n  return nodes\n}\n\n// node data is passed because we need position\nexport function renderEdgesD3({ svg, edgeData, nodeData, directed, opts }) {\n  const defaultOpts = {\n    strokeFn: () => \"grey\",\n    strokeWidth: 5,\n  }\n  opts = {...defaultOpts, ...opts}\n\n  let edges = svg.select(\"g.edges\").selectAll(\"g.edge\")\n    .data(edgeData)\n\n  let enter = edges.enter().append(\"g\")\n    .attr(\"class\", \"edge\")\n\n  enter.append(\"path\")\n\n  edges.merge(enter).select(\"path\")\n    .attr(\"d\", (d) => generatePathFromEdge(d, nodeData))\n    .attr(\"stroke\", opts.strokeFn)\n    .attr(\"stroke-width\", opts.strokeWidth)\n\n  if (directed) enter.attr(\"marker-mid\", \"url(#triangle)\")\n\n  edges.exit().remove()\n\n  return edges\n}\n\n\n///// HELPERS /////\n\nexport function scaleNodeData(nodes, svgWidth, svgHeight) {\n  return nodes.map(({ x, y }) => ({ x: x*svgWidth, y: y*svgHeight }))\n}\n\n// generate an svg path from d.start to d.end, adding a point\n// in the middle so we can put a marker there.\nexport function generatePath(x1, y1, x2, y2) {\n  return d3.line()(\n    [\n      [x1, y1],\n      [(x1 + x2) / 2, (y1 + y2) / 2],\n      [x2, y2],\n    ]\n  )\n}\n\nexport function generatePartialPath(x1, y1, x2, y2, fraction) {\n  return generatePath(x1, y1, x1 + (x2 - x1) * fraction, y1 + (y2 - y1) * fraction)\n}\n\nexport function generatePathFromEdge(edge, nodes) {\n  const x1 = nodes[edge.start].x,\n        y1 = nodes[edge.start].y,\n        x2 = nodes[edge.end].x,\n        y2 = nodes[edge.end].y\n  return generatePath(x1, y1, x2, y2)\n}\n"},"relativePath":"js/graphs.js"},{"fields":{"contents":"import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport \"../css/404.scss\"\n\nconst PageNotFound = () => (\n  <div id=\"page-not-found\">\n    <h1 className=\"four-oh-four\">404</h1>\n    <Link to=\"/\">\n      <p className=\"link\">Home</p>\n    </Link>\n  </div>\n)\n\nexport default PageNotFound"},"relativePath":"pages/404.js"},{"fields":{"contents":"import React from 'react'\nimport BaseLayout from \"../components/base_layout\"\nimport about from \"../images/about.svg\"\n\nfunction About() {\n  return (\n    <BaseLayout>\n      <div id=\"about\">\n        <div className=\"title-container\">\n            <img className=\"title\" src={about} alt=\"About\" />\n          </div>\n        <p>\n          My name is Christian Selig and I'm a software engineer based in the Bay Area.\n        </p>\n        <p>\n          I currently work at Google building software tools for silicon chip development.\n        </p>\n        <p>\n          Previously I worked for Cisco on <a href=\"https://www.cisco.com/c/dam/en/us/solutions/collaboration/people-insights-whitepaper.pdf\">People Insights</a>.{' '}\n          I did end-to-end feature development including front end (React, ClojureScript, D3) and backend (Rails, Postgres, C++) work.\n        </p>\n        <p>\n          Out of college I worked for a data science consultancy called Cascade Data Labs doing data analysis, engineering, and modeling.\n          I have a Bachelors degree in Chemical Engineering from the University of Washington.\n        </p>\n        <p>\n          I've done a little bit of open source development for a Python data quality library\n          called Great Expectations – you can read about my contributions <a href=\"https://greatexpectations.io/blog/great-expectations-now-supports-execution-in-spark\">here</a>.\n        </p>\n        <p>\n          Finally, I'm a cellist and I love playing chamber music with my friends. I also play electric bass\n          in an indie rock band called <a href=\"https://open.spotify.com/artist/3Uuudd2od8XP5vpOk7LDHw?si=P3-Ykr8nT_yQ0_KJsYdjLQ\">The Lamps</a>!\n        </p>\n        <p>\n          You can connect with me on: <a href=\"https://github.com/cselig\">GitHub</a> | <a href=\"https://www.linkedin.com/in/c-selig/\">LinkedIn</a>\n        </p>\n      </div>\n    </BaseLayout>\n  )\n}\n\nexport default About"},"relativePath":"pages/about.js"},{"fields":{"contents":"import React from \"react\";\nimport { Link, graphql } from \"gatsby\"\n\nimport BaseLayout from \"../components/base_layout\"\n\nfunction Drafts({ data }) {\n  const drafts = data.allMdx.edges.filter(({ node }) => node.frontmatter.draft)\n  return (\n    <BaseLayout>\n      <div style={{textAlign: 'center'}}>\n      <h1>Drafts</h1>\n      {\n        drafts.map(({ node }) => (\n          <Link to={`/drafts/${node.fields.slug}`} key={node.id}>\n            <p>{`${node.frontmatter.title} (${node.frontmatter.date})`}</p>\n          </Link>\n        ))\n      }\n      </div>\n    </BaseLayout>\n  )\n}\n\nexport default Drafts\n\nexport const query = graphql`\n  query {\n    allMdx {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          id\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            draft\n          }\n        }\n      }\n    }\n  }\n`"},"relativePath":"pages/drafts.jsx"},{"fields":{"contents":"import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport codeSketches from \"../images/code_sketches.svg\"\n\nimport BaseLayout from \"../components/base_layout\"\n\nimport \"../css/main.scss\"\n\nimport ConnectedComponentsSketch from \"../images/sketches/connected_components.jsx\"\nimport CryptogramsSketch from \"../images/sketches/cryptograms.jsx\"\nimport PipesSketch from \"../images/sketches/pipes.jsx\"\nimport ChessSketch from \"../images/sketches/chess.jsx\"\nimport MusicNote from \"../images/sketches/music_note.jsx\"\nimport SkiGraphsSketch from \"../images/sketches/ski_graphs.jsx\"\nimport D3Sketch from \"../images/sketches/d3.jsx\"\nimport KeyboardSketch from \"../images/sketches/keyboard.jsx\"\nimport CursorSketch from \"../images/sketches/cursor.jsx\"\nimport PianoSketch from \"../images/sketches/piano.jsx\"\nimport CompilerSketch from \"../images/sketches/compiler.jsx\"\nimport BinarySearchSketch from \"../images/sketches/binary_search\"\nimport GuitarSketch from \"../images/sketches/guitar\";\nimport HeirarchicalCategoriesSketch from \"../images/sketches/heirarchical_categories\";\n\nfunction sketchForSlug(slug) {\n  switch (slug) {\n    case \"graph-builder\":\n      return <ConnectedComponentsSketch />\n    case \"cryptograms\":\n      return <CryptogramsSketch />\n    case \"three-js\":\n      return <PipesSketch />\n    case \"one-d-chess\":\n      return <ChessSketch />\n    case \"chord-data\":\n      return <MusicNote />\n    case \"ski-graphs\":\n      return <SkiGraphsSketch />\n    case \"d3\":\n      return <D3Sketch />\n    case \"keyboard-frequencies\":\n      return <KeyboardSketch />\n    case \"fitts-law\":\n      return <CursorSketch />\n    case \"musical-typing\":\n      return <PianoSketch />\n    case \"compiler\":\n      return <CompilerSketch />\n    case \"visual-bin-search\":\n      return <BinarySearchSketch />\n    case \"band-parts\":\n      return <GuitarSketch />\n    case \"heirarchical-search\":\n      return <HeirarchicalCategoriesSketch />\n  }\n}\n\nconst BlogSection = ({ posts }) => {\n  posts = posts.filter(({ node }) => !node.frontmatter.draft)\n\n  return (\n    <div className=\"posts-container\">\n      {posts.map(({ node }) => (\n        <Link to={`/blog/${node.fields.slug}`} className=\"post\" key={node.id}>\n          {sketchForSlug(node.fields.slug)}\n          <div className=\"title-container\">\n            <h3 className=\"title\">{node.frontmatter.title}</h3>\n            <p className=\"date\">{node.frontmatter.date}</p>\n          </div>\n        </Link>\n      ))}\n    </div>\n  )\n}\n\nconst IndexPage = ({ data }) => {\n  let posts = data.allMdx.edges\n  posts.sort((p1, p2) => (\n    Date.parse(p2.node.frontmatter.date) - Date.parse(p1.node.frontmatter.date)\n  ))\n  return (\n    <BaseLayout home>\n      <div id=\"index\">\n        <div className=\"site-title-container\">\n          <img className=\"site-title\" src={codeSketches} alt=\"Code Sketches\" />\n        </div>\n\n        <div className=\"description\">\n          <p>\n            Hi, my name is Christian.\n            You can learn more about me <Link to=\"/about\">here</Link>.\n          </p>\n          <p>\n            This is my collection of code sketches: bite-sized visualizations,{' '}\n            puzzles, prototypes, explorations, toys, and tools.\n          </p>\n          <p>\n            I hope you enjoy!\n          </p>\n        </div>\n        <BlogSection posts={posts}/>\n      </div>\n    </BaseLayout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    allMdx {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          id\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            excerpt\n            topic\n            draft\n          }\n        }\n      }\n    }\n  }\n`"},"relativePath":"pages/index.js"},{"fields":{"contents":"import React from \"react\"\n\nimport \"../css/resume_formatted.scss\"\n\nfunction Resume() {\n  return (\n    <div id=\"resume-formatted\">\n      <div id=\"header\">\n        <h1>Christian Selig</h1>\n        <p>seligchristian@gmail.com</p>\n        {/* <p>(360) 953-0490</p> */}\n        <p>cselig.github.io</p>\n      </div>\n\n      <div className=\"section\">\n        <h2>Experience</h2>\n        <hr />\n\n        <div className=\"list\">\n          <div className=\"experience\">\n            <div class=\"header\">\n              <div>\n                <h3>Google <span className=\"position\">Software Engineer, gChips</span></h3>\n                {/* <p class=\"summary\">Worked in the interconnect group of gChips, which designs SoC's for Pixel devices</p> */}\n              </div>\n              <div className=\"info\">\n                <p>Aug 2022 - Present</p>\n                <p>Mountain View, CA</p>\n              </div>\n            </div>\n\n            <div className=\"body\">\n              <ul>\n                <li>Learned hardware concepts quickly to become an effective contributor.</li>\n                <li>Built a Python placement engine for structured standard-cell placements. Used this engine\n                  on several modules to produce double-digit power savings as compared to standard PnR tools.\n                </li>\n                <li>Prototyped a series of UIs for physical layout input.</li>\n              </ul>\n            </div>\n\n          </div>\n\n          <div className=\"experience\">\n            <div className=\"header\">\n              <h3>Manara <span className=\"position\">Software Engineer</span></h3>\n              <div className=\"info\">\n                <p>Jan 2022 – Feb 2022</p>\n                <p>Mountain View, CA</p>\n              </div>\n            </div>\n\n            <div className=\"body\">\n              <ul>\n                <li>Completed a contract to build a redesigned marketing website for a YC-backed startup.</li>\n                {/* <li><b>Technologies used:</b> React, NextJS, TailwindCSS</li> */}\n              </ul>\n            </div>\n\n\n          </div>\n\n          <div className=\"experience\">\n            <div className=\"header\">\n              <h3>Cisco Systems <span className=\"position\">Software Engineer, Full Stack</span></h3>\n              <div className=\"info\">\n                <p>Nov 2019 – Nov 2021</p>\n                <p>San Jose, CA</p>\n              </div>\n            </div>\n\n            <div className=\"body\">\n              <ul>\n                {/* <li>Integrated acquired startup's \"digital chief of staff\" product into Webex</li> */}\n                <li>Worked directly with internal users to improve web tools for efficient moderation of news feeds.</li>\n                <li>Rewrote a large C++ data serialization system, improving maintainability and code velocity.</li>\n                {/* <li>Responded to and debugged issues in production using application and system logs</li> */}\n                {/* <li><b>Technologies used:</b> Ruby, C++, ClojureScript, React, Rails, PostgreSQL, Redis, D3.js</li> */}\n              </ul>\n            </div>\n\n          </div>\n\n          <div className=\"experience\">\n            <div className=\"header\">\n              <h3>Cascade Data Labs <span className=\"position\">Data Scientist</span></h3>\n              <div className=\"info\">\n                <p>Oct 2017 – May 2019</p>\n                <p>Portland, OR</p>\n              </div>\n            </div>\n\n            <div className=\"body\">\n              <ul>\n                {/* <li>Worked with clients to identify, scope, and implement projects unlocking data analysis</li> */}\n                <li>Contributed to writing libraries for data pipeline creation and monitoring.</li>\n                <li>Designed and implemented a system for data quality monitoring that was able to catch several major data bugs before stakeholders.</li>\n                {/* <li><b>Technologies used:</b> Python, SQL, Spark, Airflow, Tableau</li> */}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"section\">\n        <h2>Community Contributions</h2>\n        <hr />\n\n        <div className=\"list\">\n          <div className=\"experience\">\n            <div className=\"header\">\n              <h3>Manara <span className=\"position\">Volunteer</span></h3>\n              <div className=\"info\">\n                <p>Nov 2021 – Present</p>\n              </div>\n            </div>\n\n            <div className=\"body\">\n              {/* <ul>\n                <li>Manara is a </li>\n                <li>Have consistently received great feedback from interviewees.</li>\n              </ul> */}\n              Manara is an organization that helps train and place underemployed tech talent in the Middle East.\n              I volunteer by giving mock coding interviews. I find this work very rewarding and have been\n              consistently been given great feedback from my interviewees on the quality of my interviews.\n            </div>\n          </div>\n\n          <div className=\"experience\">\n            <div className=\"header\">\n              <h3>Great Expectations <span className=\"position\">Open Source Contributor</span></h3>\n              <div className=\"info\">\n                <p>2019</p>\n              </div>\n            </div>\n\n            <div className=\"body\">\n              <ul>\n                {/* <li>Built a PySpark back-end to enable working with large datasets</li> */}\n                {/* <li>Designed and implemented a caching layer to improve performance</li> */}\n                {/* <li>Proactively worked with library creators to pitch these features and get approval for designs</li> */}\n                {/* <li>Please see this{' '}\n                  <a href=\"https://greatexpectations.io/blog/great-expectations-now-supports-executions-in-spark-a-blog-with-much-clapping/\">article</a>\n                  {' '}highlighting my contributions\n                </li> */}\n              </ul>\n              <p>\n                Great Expectations is an OS library for data quality assertions. During my time at Cascade Data Labs\n                I implemented a PySpark backend so we could integrate GE into our stack. I also completed a major\n                refactor of the codebase and introduced a metrics caching layer for performance.\n                {/* Please see this <a href=\"https://greatexpectations.io/blog/great-expectations-now-supports-executions-in-spark-a-blog-with-much-clapping/\">article</a>\n                {' '}for more details. */}\n              </p>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <div className=\"section\" id=\"education\">\n        <h2>Education</h2>\n        <hr />\n\n        <div className=\"list\">\n          <p>\n            I earned a <b>B.S. in Chemical Engineering</b> from the{' '}\n            <b>University of Washington</b> in 2017 with a GPA of 3.69\n          </p>\n\n          {/* <h4>Computer Science Coursework:</h4>\n          <ul>\n            <li>Compilers <span className=\"detail\">Stanford CS 143 through edX, 2022</span></li> */}\n            {/* <li>Introduction to AI <span className=\"detail\">UW CSE 415, 2017</span></li> */}\n            {/* <li>Data Structures and Algorithms <span className=\"detail\">UW CSE 373, 2016</span></li>\n          </ul> */}\n\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Resume\n"},"relativePath":"pages/resume-formatted.jsx"},{"fields":{"contents":"import React from \"react\"\n\nimport \"../css/resume.scss\"\n\nfunction Resume() {\n  return (\n    <div id=\"resume\">\n      {/* EXPERIENCE */}\n      <h2>Experience</h2>\n\n      <h3>Google, Software Engineer</h3>\n      <h4>Mountain View, CA | 2022-Present</h4>\n      <ul>\n        <li>Worked in the interconnect group of gChips, which designs SoC's for Pixel devices.</li>\n        <li>Learned hardware concepts quickly to become an effective contributor.</li>\n        <li>Built a Python placement engine for structured standard-cell placements. Used this engine\n          on several modules to produce double-digit power savings as compared to standard PnR tools.\n        </li>\n      </ul>\n\n      <h3>Manara, Software Engineer</h3>\n      <h4>Mountain View, CA | 2022</h4>\n      <ul>\n        <li>Completed a contract to build a redesigned marketing website for a YC-backed startup</li>\n      </ul>\n\n      <h3>Cisco, Software Engineer</h3>\n      <h4>Los Altos, CA | 2019-2021</h4>\n      <ul>\n        <li>Rewrote a large C++ data serialization system, improving maintainability and code velocity.</li>\n        <li>Worked directly with internal users to build tools for efficient moderation of news feeds.</li>\n        <li>Responded to and debugged issues in production using application and system logs.</li>\n      </ul>\n\n      <h3>Cascade Data Labs, Data Analyst</h3>\n      <h4>Portland, OR | 2017-2019</h4>\n      <ul>\n        <li>Contributed to writing libraries for data pipeline creation and monitoring.</li>\n        <li>Designed and implemented a system for data quality monitoring that was able to catch several\n          major bugs before the data reached stakeholders.</li>\n        <li>Was promoted to Data Scientist after 1 year.</li>\n      </ul>\n\n      {/* COMMUNITY CONTRIBUTIONS */}\n      <h2>Community Contributions</h2>\n\n      <h3>Manara, Volunteer</h3>\n      <h4>2021-Present</h4>\n      <p>Manara is an organization that helps train and place underemployed tech talent in the Middle East.\n        I volunteer by giving mock coding interviews. I find this work very rewarding and have been\n        consistently been given great feedback from my interviewees on the quality of my interviews.\n      </p>\n\n      <h3>Great Expectations, Open Source Contributor</h3>\n      <h4>2019</h4>\n      <p>\n        Great Expectations is an OS library for data quality assertions. During my time at Cascade Data Labs\n        I implemented a PySpark backend so we could integrate GE into our stack. I also completed a major\n        refactor of the codebase and introduced a metrics caching layer for performance.\n        Please see this <a href=\"https://greatexpectations.io/blog/great-expectations-now-supports-executions-in-spark-a-blog-with-much-clapping/\">article</a>\n        {' '}for more details.\n      </p>\n\n    </div>\n  )\n}\n\nexport default Resume\n"},"relativePath":"pages/resume.jsx"},{"fields":{"contents":"import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n\nimport BaseLayout from \"../components/base_layout\"\nimport CodeBlockFromFile from \"../components/code_block_from_file\"\nimport MarkdownCodeBlock from \"../components/markdown_code_block\"\n\nimport \"../css/posts.scss\"\n\nconst components = {\n  pre: props => <div {...props} />,\n  code: MarkdownCodeBlock,\n  CodeBlockFromFile,\n}\n\nexport default function Post({ data }) {\n  const post = data.mdx\n  return (\n    <BaseLayout draft={post.frontmatter.draft}>\n      <div id={post.fields.slug} className=\"post-body\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">{post.frontmatter.title}</h1>\n        </div>\n        <MDXProvider components={components}>\n          <MDXRenderer>{post.body}</MDXRenderer>\n        </MDXProvider>\n      </div>\n    </BaseLayout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      body\n      frontmatter {\n        title\n        draft\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`"},"relativePath":"templates/post.js"}]}}}