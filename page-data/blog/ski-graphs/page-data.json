{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/ski-graphs",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Ski Graphs\",\n  \"date\": \"2021-01-28T00:00:00.000Z\",\n  \"excerpt\": \"Shredding the fresh powder and directed edges.\",\n  \"topic\": \"misc\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I recently went skiing, and the process of studying the trail map and picking\\nout routes got me thinking about how a ski resort is basically a big directed graph.\"), mdx(\"p\", null, \"This inspired me to make a little widget that would find shortest paths between two points in the resort. The result\\nis a simplified version of Heavenly that doesn't include the parts that were closed when I was there and\\nalso doesn't include advanced terrain that I can't ski down (yet). The grey edges are the chairlifts, and the other edges\\nare the runs color-coded by level.\"), mdx(\"p\", null, \"To find a path, click on a start and end node. You can check out the completed code\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/cselig/cselig.github.io/blob/develop/content/blog/ski_graphs/ski_graph.jsx\"\n  }, \"here\"), \".\"), mdx(SkiGraph, {\n    mdxType: \"SkiGraph\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Ski Graphs","draft":null},"fields":{"slug":"ski-graphs"}}},"pageContext":{"slug":"ski-graphs"}},
    "staticQueryHashes": ["2999498863"]}