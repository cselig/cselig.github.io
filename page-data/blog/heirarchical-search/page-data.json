{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/heirarchical-search",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Heirarchical Categories\",\n  \"date\": \"2023-08-12T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Heirarchical categories are a common data type to encouter on the web. For example on a\\njobs posting website you often see options for searching by job\\ncategory and location.\"), mdx(\"p\", null, \"Often the relevance of search results to a user follows the structure of these categories.\\nI might be particularly keen on UX engineering positions, but I also might be\\ninterested in UX design or research which are neighboring categories in the job type\\nheirarchy. On the other hand I'm probably not at all interested in marketing positions,\\na distant category in the job type heirarchy.\"), mdx(\"p\", null, \"Usually these fields are represented by drop-down menus, which do not reflect the\\nnested structure of the values.\\nAn alternate representation I thought of is a series of stacked chips.\"), mdx(Sketch, {\n    scale: 1.5,\n    mdxType: \"Sketch\"\n  }), mdx(\"p\", null, \"Here's an implementation of a job listing site with chip filters for location and\\njob category.\"), mdx(Component, {\n    mdxType: \"Component\"\n  }), mdx(\"p\", null, \"Now remember the user from above.\\nAs a second example imagine a user lives in Berlin and would like to find a new job there,\\nbut is open to relocacting within Germany.\\nI think this system allows both these users to browse results for their preferences more\\nefficiently and intuitively than a flat drop-down would.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Heirarchical Categories","draft":null},"fields":{"slug":"heirarchical-search"}}},"pageContext":{"slug":"heirarchical-search"}},
    "staticQueryHashes": ["2999498863"]}