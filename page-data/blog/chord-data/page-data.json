{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/chord-data",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Data-driven Chord Progressions\",\n  \"date\": \"2020-10-25T00:00:00.000Z\",\n  \"excerpt\": \"What makes a good chord progression?\",\n  \"topic\": \"music\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Whenever I listen to music I like trying to identify chord progressions and find common (or uncommon) patterns and changes.\\nI recently came across the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ddmal.music.mcgill.ca/research/The_McGill_Billboard_Project_(Chord_Analysis_Dataset)/\"\n  }, \"McGill Billboard dataset\"), \",\\nwhich is a set of Billboard Top 40 songs from the 60s, 70s, and 80s annotated with structure and chord information. This led me to build\\na little widget for creating 4-chord progressions.\"), mdx(\"h2\", null, \"Chord Bigrams\"), mdx(\"p\", null, \"The chord picker is based on chord bigrams, which are just pairs of chords that appear one after the other in a song. For example, if I have this 4-chord\\nprogression:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1maj\"), \" -> \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"5maj\"), \" -> \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"6min\"), \" -> \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4maj\")), mdx(\"p\", null, \"Then I can extract the following three chord bigrams:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"1maj\"), \" -> \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"5maj\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"5maj\"), \" -> \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"6min\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"6min\"), \" -> \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"4maj\"))), mdx(\"p\", null, \"If this progression repeated there would also be the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4maj\"), \" -> \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1maj\"), \" bigram.\"), mdx(\"h2\", null, \"Counting Bigrams\"), mdx(\"p\", null, \"In the widget, chords are sorted by the frequency of the chord bigram with that chord and the previous one. So if I chose \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1maj\"), \" as my\\nfirst chord, the list of possibilities for chord 2 would be sorted based on how often a chord is observed to come after \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1maj\"), \" in the dataset.\\n(This is true for all but the first chord, where a small set of \\\"seed\\\" chords are listed.)\"), mdx(\"p\", null, \"This means if you're picking chords at the top of the list, your progression will sound more conventional. If you're picking chords\\nnear the bottom of the list your progression could sound more distinctive, but it could also sound more disjointed.\"), mdx(\"p\", null, \"If you don't have a great ear for chord progressions I suggest first plugging the progression above (which appears in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.youtube.com/watch?v=HTYrkOZ5nCs\"\n  }, \"quite a few songs\"), \")\\ninto the widget below, hearing how it sounds, and then trying to modify it.\"), mdx(\"p\", null, \"You can check out the completed code \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/cselig/cselig.github.io/blob/develop/content/blog/chord_data/chord_picker.jsx\"\n  }, \"here\"), \".\"), mdx(ChordPicker, {\n    mdxType: \"ChordPicker\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Data-driven Chord Progressions","draft":null},"fields":{"slug":"chord-data"}}},"pageContext":{"slug":"chord-data"}},
    "staticQueryHashes": ["2999498863"]}