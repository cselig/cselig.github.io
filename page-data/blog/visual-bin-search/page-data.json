{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/visual-bin-search",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Visual Binary Search\",\n  \"date\": \"2022-02-18T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I volunteer for an organization called \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://manara.tech/\"\n  }, \"Manara\"), \", which helps CS graduates (primarily women) in the Middle\\nEast get high-paying jobs at big tech companies. I'm doing some question and answer sessions\\non common types of technical interview problems. In one of the recent sessions we\\ncovered some binary search questions. I find it useful to visualize these problems when I'm\\nsolving them myself, so I built something that shows the input data and solution code. The\\ngoal is to help the viewer understand how the solution algorithm works.\"), mdx(\"h2\", null, \"Peak Index in a Mountain Array\"), mdx(\"p\", null, \"A mountain array is one where the values increase for some first portion of the array, and\\nare decreasing in the second portion. The goal of this problem is to find the maximum value,\\nor \\\"peak\\\", of a mountain array.\"), mdx(\"p\", null, \"See the Leetcode question \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://leetcode.com/problems/peak-index-in-a-mountain-array/\"\n  }, \"here\"), \".\"), mdx(BitonicArrayMax, {\n    mdxType: \"BitonicArrayMax\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Visual Binary Search","draft":null},"fields":{"slug":"visual-bin-search"}}},"pageContext":{"slug":"visual-bin-search"}},
    "staticQueryHashes": ["2999498863"]}