---
layout: post
title: Messing Around with D3
date: 2020-03-18 00:00:00 -0800
categories: [blog]
---

I'm using some of my "shelter in place" free time to learn D3 and create some toy visualizations.

<!--excerpt-->

<script src="https://d3js.org/d3.v4.min.js"></script>
<script src="//d3js.org/d3-scale-chromatic.v0.3.min.js"></script>

### Some sort of bubble chart

I'm not sure what this chart would be called, but something like this could be used for visualizing a single variable.

<div id="bubble-chart" style="display:flex; justify-content:center;">
  <svg width="200" height="200"></svg>
</div>

<script>
let center_x = 100;
let center_y = 165;
let circleData = [50, 25, 15, 10];
let colors = d3["schemeCategory20c"];
let radius = d3.scaleSqrt()
  .domain([0, d3.max(circleData)])
  .range([0, 80]);

let svg = d3.select("#bubble-chart svg");

function handleMouseover(d, i) {
  d3.select(this).style("stroke", "black");
  svg.append("text")
    .attr("id", "tooltip")
    .attr("x", center_x - 65)
    .attr("y", center_y + 20)
    .text("Circle radius: " + d + "px");
}

function handleMouseout(d, i) {
  d3.select(this).style("stroke", "none");
  svg.select("#tooltip").remove();
}

svg.append("g")
  .selectAll("circle")
    .data(circleData)
  .enter().append("circle")
    .attr("cy", (d) => { return center_y - radius(d); })
    .attr("cx", center_x)
    .attr("r", radius)
    .style("fill", (d, i) => { return colors[i]; })
    .style("stroke-width", "3px")
    .on("mouseover", handleMouseover)
    .on("mouseout", handleMouseout);
</script>

```js
let center_x = 250;
let center_y = 175;
let circleData = [50, 25, 15, 10];
let colors = d3["schemeCategory20c"];
let radius = d3.scaleSqrt()
  .domain([0, d3.max(circleData)])
  .range([0, 80]);

let svg = d3.select("#bubble-chart svg");

function handleMouseover(d, i) {
  d3.select(this).style("stroke", "black");
  svg.append("text")
    .attr("id", "tooltip")
    .attr("x", center_x - 65)
    .attr("y", center_y + 20)
    .text("Circle radius: " + d + "px");
}

function handleMouseout(d, i) {
  d3.select(this).style("stroke", "none");
  svg.select("#tooltip").remove();
}

svg.append("g")
  .selectAll("circle")
    .data(circleData)
  .enter().append("circle")
    .attr("cy", (d) => { return center_y - radius(d); })
    .attr("cx", center_x)
    .attr("r", radius)
    .style("fill", (d, i) => { return colors[i]; })
    .style("stroke-width", "3px")
    .on("mouseover", handleMouseover)
    .on("mouseout", handleMouseout);
```

### To be continued...
